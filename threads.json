[
  {
    "info": {
      "name": "Replace relationship field `Edit` view to include image media within the drop down selection UI",
      "id": "1069998451263283271",
      "guildId": "967097582721572934",
      "createdAt": 1675177910391
    },
    "messages": [
      {
        "content": "Hi, I am new to Payload and starting to learn my way around the codebase. Enjoying it so far!<br><br>This post explains my scenario but basically asks &quot;Are there any existing examples of replacing the relationship field in <code>Edit</code> views with a custom component that can get me started?&quot;<br><br>I have followed the method in this thread to populate images within custom <code>Cell</code> components as pictured in the attachments.<br><a href=\"https://discordapp.com/channels/967097582721572934/1041362545501548624\">https://discordapp.com/channels/967097582721572934/1041362545501548624</a><br><br>I would like to create a similar component for relationship types in <code>Edit</code> view to replace the dropdown list item (last image attachment).<br><br>Am I correct in thinking that I will need to target changing the <code>SingleValue</code> component? Here in the source:<br><a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/select-components/SingleValue/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/select-components/SingleValue/index.tsx</a><br><br>Or are there multiple components that I will have to target? <br>For example, does the <code>SingleValue</code> component specify the selections only when the drop down <code>DocumentDrawer</code> is open but there is a different component I need to target for when it is closed?<br>If this is the scenario of Payload - I would have to target the <code>Relationship</code> component in addition to <code>SingleValue</code> ?<br><a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/index.tsx</a><br><br>And in my definition for the collection that makes use of this relationship - the field object will look something like this if my new component is called <code>ImageTitleRelationshipField</code> ?<br><br><pre><code class=\"hljs\">{\n    name: &quot;competitorOne&quot;,\n    type: &quot;relationship&quot;,\n    relationTo: [&quot;artworks&quot;],\n    admin: {\n        components: {\n            Cell: ImageTitleCell,\n            Field: ImageTitleRelationshipField\n        },\n    },\n},</code></pre><br>I guess I am asking - what is the best approach? and are there any existing examples of replacing the relationship field in <code>Edit</code> views with a custom component that can get me started?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1069998451263283271/1069998451552682074/artworks.png",
            "name": "artworks.png",
            "id": "1069998451552682074",
            "size": 62714,
            "url": "https://cdn.discordapp.com/attachments/1069998451263283271/1069998451552682074/artworks.png",
            "proxyURL": "https://media.discordapp.net/attachments/1069998451263283271/1069998451552682074/artworks.png",
            "height": 680,
            "width": 838,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1069998451263283271/1069998451984707675/polls.png",
            "name": "polls.png",
            "id": "1069998451984707675",
            "size": 61727,
            "url": "https://cdn.discordapp.com/attachments/1069998451263283271/1069998451984707675/polls.png",
            "proxyURL": "https://media.discordapp.net/attachments/1069998451263283271/1069998451984707675/polls.png",
            "height": 493,
            "width": 1090,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1069998451263283271/1069998452215390379/relationshipfield.png",
            "name": "relationshipfield.png",
            "id": "1069998452215390379",
            "size": 20043,
            "url": "https://cdn.discordapp.com/attachments/1069998451263283271/1069998452215390379/relationshipfield.png",
            "proxyURL": "https://media.discordapp.net/attachments/1069998451263283271/1069998452215390379/relationshipfield.png",
            "height": 304,
            "width": 750,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675177910391
      },
      {
        "content": "@jellygatorade sorry i don&#x27;t have the answer but i was wondering if i could see your ImageTitleCell and ImageTitleRelationshipField codes if possible? i&#x27;m trying to make a custom component to make my images look like those rather than appearing as filenames 😄",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196390182
      },
      {
        "content": "i made my own component but i can&#x27;t seem to locate the image&#x27;s url inside the props, i just get the element&#x27;s name",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196754519
      },
      {
        "content": "@minanaro_3776 See this message for a good starting point: <a href=\"https://discordapp.com/channels/967097582721572934/1041362545501548624/1041487440310964225\">https://discordapp.com/channels/967097582721572934/1041362545501548624/1041487440310964225</a><br><br>I have not yet started to create code for <code>ImageTitleRelationshipField</code> component yet because it&#x27;s what I opened this thread to ask about.",
        "fileAttachments": [],
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675196794715
      },
      {
        "content": "ohhh gotcha, thanks a lot, good luck! 😄",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196816424
      },
      {
        "content": "I don&#x27;t know of any examples of replacing this field. That field component is by far the most complex of all the fields, so swapping that one out would be pretty intense.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675226111370
      },
      {
        "content": "Thanks for your reply. I suppose that doesn&#x27;t surprise me. Looking at the <code>Relationship</code> field source code (<a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/index.tsx</a>) it doesn&#x27;t seem very maintainable in the long term to try swapping this whole field out with all its dependencies... If I am correct in my reading of the source what I am actually interested in is changing the usage of <code>props</code> within <code>ReactSelect</code> component...in my case for the <code>SingleValue</code> variant. <br><br>I&#x27;ll have to do more thinking about this caveat over the next week or so when I have the time. I&#x27;ll update this thread when I can. <br><br>For now I could categorize this potential issue in broader terms by saying: Without any concept of an attached featured image per collection item, content editors do not have a way of rapidly identifying a target item when attaching as a relationship via the existing <code>ReactSelect</code> UI if they are not sure about its name because the UI offers text only. Any alternative suggestions for working around this issue would be appreciated 🙂 .",
        "fileAttachments": [],
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675261333378
      },
      {
        "content": "Okay, so your goal is for admin users to rapidly scan the list view for image relationships? The only other workaround I can think of is to make a <code>ui</code> type field with a custom cell component and render anything helpful in it.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675264899546
      },
      {
        "content": "Thanks for thinking it though. My ideal scenario is for the dropdown list items of the <code>Relationship</code> field in the <code>Edit</code> view to appear similarly to the custom <code>Cell</code> component I successfully created for the <code>List</code> view, where a related image thumbnail appears before the title. (This successful <code>List</code> view for the Polls collection is shown as an attached image to the original post).<br><br>Is your suggested workaround to include a custom <code>UI</code> type component in the collection <code>Edit</code> view, adjacent to the <code>Relationship</code> field, that somehow listens for changes on the <code>Relationship</code> field and updates with a thumbnail image from the selected item?",
        "fileAttachments": [],
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675269813686
      },
      {
        "content": "Yes, correct.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675270393208
      },
      {
        "content": "Essentially, another field to augment the functionality instead of replacing the relationship field altogether",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675270412300
      },
      {
        "content": "I&#x27;d be happy to take a stab at that. Can you give an approach for the <code>UI</code> field to listen for changes on another field?",
        "fileAttachments": [],
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675270519924
      },
      {
        "content": "@jacobsfletch @Jarrod Can you assist here? I&#x27;m not as familiar with the React hooks we have available to accomplish this",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675270798608
      },
      {
        "content": "These docs would be a good start from the react side: <a href=\"https://payloadcms.com/docs/admin/hooks#useformfields\">https://payloadcms.com/docs/admin/hooks#useformfields</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675270856923
      },
      {
        "content": "<blockquote>make a ui type field with a custom component and render anything helpful in it.<br></blockquote>This is probably the way to go here",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675270998739
      },
      {
        "content": "To listen to changes on that field from within your custom component, fire the <code>useFormFields</code> hook like this:",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675271192767
      },
      {
        "content": "<pre><code class=\"hljs\">  const { value } = useFormFields(([fields, dispatch]) =&gt; fields.yourRelationshipField);</code></pre>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675271239393
      },
      {
        "content": "Awesome, thanks for your help! Hopefully I&#x27;ll be able to update this thread later with my usage.",
        "fileAttachments": [],
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675271539300
      },
      {
        "content": "Okay, thanks for all the help again. Here is a basic snippet to get anyone else started if searching in the future. The attached image shows how the custom <code>UI</code> component based on the code snippet looks next to the standard <code>Relationship</code> field...while using the <code>Row</code> field to parent both and with some additional CSS.<br><br><pre><code class=\"hljs\">import React, { useState, useEffect } from &quot;react&quot;;\nimport { useFormFields } from &quot;payload/components/forms&quot;;\n\nconst baseUrl = process.env.PAYLOAD_PUBLIC_SERVER_URL;\n\nconst ThumbnailListener = (props) =&gt; {\n  // value key holds current value of fields[props.label]\n  // I am using the label key in the UI field options (defined in the collection) to pass the name of the target relationship field via props\n  const { value } = useFormFields(([fields, dispatch]) =&gt; fields[props.label]);\n\n  const [fetchItem, setFetchItem] = useState();\n\n  useEffect(() =&gt; {\n    value &amp;&amp;\n      fetch(`${baseUrl}/api/${value.relationTo}/${value.value}/?depth=1`)\n        .then((data) =&gt; data.json())\n        .then((object) =&gt; setFetchItem(object));\n  }, [value]);\n\n  return (\n    &lt;&gt;\n      {fetchItem?.image?.sizes?.thumbnail?.url &amp;&amp; (\n        &lt;img\n          src={fetchItem.image.sizes.thumbnail.url}\n        &gt;&lt;/img&gt;\n      )}\n    &lt;/&gt;\n  );\n};</code></pre>",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1069998451263283271/1070457534432935997/relationship-field-with-ui-field.PNG",
            "name": "relationship-field-with-ui-field.PNG",
            "id": "1070457534432935997",
            "size": 28921,
            "url": "https://cdn.discordapp.com/attachments/1069998451263283271/1070457534432935997/relationship-field-with-ui-field.PNG",
            "proxyURL": "https://media.discordapp.net/attachments/1069998451263283271/1070457534432935997/relationship-field-with-ui-field.PNG",
            "height": 222,
            "width": 635,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675287364403
      },
      {
        "content": "BOOM! That&#x27;s great.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675346264388
      }
    ],
    "messageCount": 19
  },
  {
    "info": {
      "name": "Fill in default values on Doc creation",
      "id": "1072092158531739668",
      "guildId": "967097582721572934",
      "createdAt": 1675677089103
    },
    "messages": [
      {
        "content": "I have a collection of registrations. Within a registration I have a relationship field linking to the collection &quot;Participants&quot;. Now, If I get a registration, and the participant has not been created yet, I&#x27;d like to click on the plus button and have the values from the registration already filled into the appropriate fields. Is this possible to implement?",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1675677089103
      },
      {
        "content": "Could you instead use an afterChange hook to create the participant when a registration gets filled out?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675686677228
      },
      {
        "content": "Hmm that&#x27;s not an option unfortunately, because the application data does not 100% match the required data format for a participants. Also, there should be room for adjustments before creating the participant doc",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1675710485332
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Request new options for Select component on scroll",
      "id": "1080469637667495947",
      "guildId": "967097582721572934",
      "createdAt": 1677674435775
    },
    "messages": [
      {
        "content": "Hi @jmikrut<br>Does anyone know how request more options for Select input from payload/components/forms?<br>I&#x27;m trying to put a select input on custom page, and pass as options entries from collection, and I want options to load dynamically as user scrolls down <br>In relationship field payload loads new options when scrolled to the end of select, but I can&#x27;t find a prop for request function or callback when end is reached",
        "fileAttachments": [],
        "authorID": "351983077423185921",
        "authorName": "Ysione",
        "authorAvatar": "f612bad72951735200e85f09988732ec",
        "createdAtDate": 1677674435775
      },
      {
        "content": "hey there! ok so first thing you want to make sure of is that you don&#x27;t use the <code>type: &#x27;select&#x27;</code> field, because with that field, the options are created as an &quot;enum&quot; in GraphQL, db, etc. Meaning you need to know the options when you start the server, and they can&#x27;t change. Instead, you should use a <code>type: &#x27;text&#x27;</code> field, which will not be an <code>enum</code> and will accept any value at the database level. From there, you could just create a custom React component for your field that renders our internally used <code>select</code> field UI",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677682123602
      },
      {
        "content": "and if you re-use our built-in select field, that is just built on top of <code>react-select</code>, which has methods that you can pass to fire callbacks based on when the user scrolls to the bottom of the available options. You can look at our current <code>relationship</code> component to see how we wire it up. It&#x27;s fairly complex, but it can be done!",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677682160910
      },
      {
        "content": "According to types for select component Payload doesn&#x27;t have loadOptions prop as react-select does, is there a quick way to have react-select look an behave like payload select? I&#x27;m trying to keep everything in one style<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">SelectInputProps</span> = <span class=\"hljs-title class_\">Omit</span>&lt;<span class=\"hljs-title class_\">SelectField</span>, <span class=\"hljs-string\">&#x27;type&#x27;</span> | <span class=\"hljs-string\">&#x27;value&#x27;</span> | <span class=\"hljs-string\">&#x27;options&#x27;</span>&gt; &amp; {\n    showError?: <span class=\"hljs-built_in\">boolean</span>;\n    errorMessage?: <span class=\"hljs-built_in\">string</span>;\n    readOnly?: <span class=\"hljs-built_in\">boolean</span>;\n    <span class=\"hljs-attr\">path</span>: <span class=\"hljs-built_in\">string</span>;\n    required?: <span class=\"hljs-built_in\">boolean</span>;\n    value?: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">string</span>[];\n    description?: <span class=\"hljs-title class_\">Description</span>;\n    onChange?: <span class=\"hljs-function\">(<span class=\"hljs-params\">value: Option</span>) =&gt;</span> <span class=\"hljs-built_in\">void</span>;\n    style?: <span class=\"hljs-title class_\">React</span>.<span class=\"hljs-property\">CSSProperties</span>;\n    className?: <span class=\"hljs-built_in\">string</span>;\n    width?: <span class=\"hljs-built_in\">string</span>;\n    hasMany?: <span class=\"hljs-built_in\">boolean</span>;\n    isSortable?: <span class=\"hljs-built_in\">boolean</span>;\n    options?: <span class=\"hljs-title class_\">OptionObject</span>[];\n    isClearable?: <span class=\"hljs-built_in\">boolean</span>;\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "351983077423185921",
        "authorName": "Ysione",
        "authorAvatar": "f612bad72951735200e85f09988732ec",
        "createdAtDate": 1677754547344
      },
      {
        "content": "just render our built-in ReactSelect wrapper",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677781131308
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/elements/ReactSelect/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/elements/ReactSelect/index.tsx</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677781169292
      },
      {
        "content": "you will probably have to import this from <code>payload/dist</code> but it should work",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677781194011
      },
      {
        "content": "and if it does not have the prop you need exposed, feel free to PR to Payload to make sure that we pass what you need through to the underlying <code>react-select</code> library",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677781221667
      },
      {
        "content": "Import from <code>payload/dist</code> works, and it has the prop - onMenuScrollToBottom<br>Thank you for your time and help",
        "fileAttachments": [],
        "authorID": "351983077423185921",
        "authorName": "Ysione",
        "authorAvatar": "f612bad72951735200e85f09988732ec",
        "createdAtDate": 1677826166319
      },
      {
        "content": "beautiful! you are very welcome!",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677852014561
      }
    ],
    "messageCount": 9
  },
  {
    "info": {
      "name": "looking to preview a page in the demo version is that possible?",
      "id": "1075261284192374784",
      "guildId": "967097582721572934",
      "createdAt": 1676432667540
    },
    "messages": [
      {
        "content": "hi 🙂 I&#x27;m not a developer i&#x27;m a conent creator looking to replace our current CMS. i wrote a page in the in the demo version so see what elements are available and the editor looks very promising. i&#x27;d like to preview the page so i can see what the elements look like in real life (media slider, content columns etc) but for the life of me i cannot figure out how to preview a page. i can only publish or save drafts. is this maybe disabled for the demo account?",
        "fileAttachments": [],
        "authorID": "781884553366470677",
        "authorName": "Matzathfanboy",
        "authorAvatar": null,
        "createdAtDate": 1676432667540
      },
      {
        "content": "The Payload demo does not have a corresponding frontend (a website for presenting the content to a user) in order to do any sort of preview. It is API and Admin interface only. That being said, once a frontend is built by one of your developers, access control could be configured so certain users can view drafts on the live site. Hope that makes sense, let me know if you have more questions.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676471280986
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Regex validation or custom validation",
      "id": "1068781663842205737",
      "guildId": "967097582721572934",
      "createdAt": 1674887805663
    },
    "messages": [
      {
        "content": "How to add regex validator or custom validation?<br>should we use third party like Joi or Z ? or Payload extend any error validation library for field validation?",
        "fileAttachments": [],
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674887805663
      },
      {
        "content": "Also i need to show custom error message",
        "fileAttachments": [],
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674887900742
      },
      {
        "content": "Custom validation for a field is documented here: <a href=\"https://payloadcms.com/docs/fields/overview#validation\">https://payloadcms.com/docs/fields/overview#validation</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675438215985
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "stripe example for subscription?",
      "id": "1074791954522583171",
      "guildId": "967097582721572934",
      "createdAt": 1676320770627
    },
    "messages": [
      {
        "content": "Is there an example that handles user registration with subscription? I am thinking of using Payload for a project that requires membership payments to access certain content.",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676320770627
      },
      {
        "content": "@generator101 There is an official strip plugin for Payload <a href=\"https://github.com/payloadcms/plugin-stripe\">https://github.com/payloadcms/plugin-stripe</a>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676321082537
      },
      {
        "content": "Not sure if that helps",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676321087534
      },
      {
        "content": "would this work for membership setup or just selling a product?",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676321858204
      },
      {
        "content": "Looks like this demo is not working, UnhandledPromiseRejectionWarning: Error: Cannot find module &#x27;payload/errors&#x27;<br>Require stack:",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676325073626
      },
      {
        "content": "Hey @jacobsfletch can you take a look at this?",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1676325612784
      },
      {
        "content": "@generator101 we have an official e-commerce template <a href=\"https://github.com/payloadcms/template-ecommerce\">https://github.com/payloadcms/template-ecommerce</a> —but it&#x27;s for one-time payments for products and/or services. There is a SaaS template in the works that will be demonstrate how to handle recurring payments (subscriptions) so you can start selling access to your Payload software 💸",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676327320978
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Deployment to Azure or Simple NGINX web host",
      "id": "1072970073851056181",
      "guildId": "967097582721572934",
      "createdAt": 1675886400426
    },
    "messages": [
      {
        "content": "Hey all, I&#x27;m having some issues getting the payload server deployed. I have managed to deploy the CMS front end to our basic linux web host. But for some reason, I can&#x27;t get the API to work at all. I&#x27;ve also tried deploying to Azure web services. That threw out a lot of cors errors which I fixed inside azure but the cors errors still remain.<br><br>I&#x27;ve followed through the payload docs but can&#x27;t seem to make any sense of the deployment process.<br>When deploying, is there any certain folders that the files need to be placed in? Is there any other config I might be missing?<br>I am just deploying the build and server files manually via FTP so could very well be missing something.<br>Can someone help?",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1675886400426
      },
      {
        "content": "In order to deploy Payload, you&#x27;ll need both the dist and build directory after building.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676056144332
      },
      {
        "content": "<blockquote>I can&#x27;t get the API to work at all<br></blockquote>Providing more detail here would give more info in order to help. Are you able to hit the API at all? Receiving 5XX/4XX errors? Can you provide the cors errors? Do you have the <code>serverURL</code> property set in your config?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676056242508
      },
      {
        "content": "Hey Elliot, I managed to get it working on Friday. I had some ports all wrong which was causing the errors.",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676242449856
      },
      {
        "content": "@MRL Great to hear!",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676296889551
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "GraphQL Playground loads but reports 500, no server logs.",
      "id": "1070272506105188442",
      "guildId": "967097582721572934",
      "createdAt": 1675243250157
    },
    "messages": [
      {
        "content": "Hi Everyone,<br><br>I have deployed my CMS to a production environment and it is working perfectly, however I have 1 issue with my graphql playground.<br><br>I enabled the graphql playground in production in my <code>payload.config.ts</code> and I am able to load it up at <code>mydomain.tld/api/graphql-playground</code> but whenever I try and use it it reports a 500 error.<br><br>I have tried various things:<br>- Checked the server logs, nothing. I watched them live as I refreshed the page etc. Nothing logged.<br>- Copied the URL that the graphql playground is trying to connect to into my browser address bar. I get a JSON response asking me to provide a query string, as expected.<br>- Using Postman, made an empty POST request to the URL in the above step. Identical result.<br><br>Other info:<br>- The graphql schema does not load. It just shows a loading icon and then logs another 500 error to the browser console (I assume as it retries)<br>- The docs tab exhibits the same behaviour",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1070272506105188442/1070272506235195413/Screenshot_2023-02-01_at_09.13.31.png",
            "name": "Screenshot_2023-02-01_at_09.13.31.png",
            "id": "1070272506235195413",
            "size": 27729,
            "url": "https://cdn.discordapp.com/attachments/1070272506105188442/1070272506235195413/Screenshot_2023-02-01_at_09.13.31.png",
            "proxyURL": "https://media.discordapp.net/attachments/1070272506105188442/1070272506235195413/Screenshot_2023-02-01_at_09.13.31.png",
            "height": 222,
            "width": 1242,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1675243250157
      },
      {
        "content": "So, I pinpointed the issue. My steps:<br>- Grab the query that my playground was making,<br>- Post it to the endpoint using Postman<br><br>This actually gave me a decent error:<br><code>{&quot;errors&quot;:[{&quot;message&quot;:&quot;Type ContactForm_ContactForm must define one or more fields.&quot;}]}</code><br><br>Looking into my code, my ContactForm block was as so:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">contactForm</span>: <span class=\"hljs-title class_\">Block</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&#x27;contactForm&#x27;</span>,\n  <span class=\"hljs-attr\">fields</span>: [\n    <span class=\"hljs-title function_\">blockFields</span>({\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;contactForm&#x27;</span>,\n      <span class=\"hljs-attr\">fields</span>: [\n        {\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;ui&#x27;</span>,\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;contactForm&#x27;</span>,\n          <span class=\"hljs-attr\">admin</span>: {\n            <span class=\"hljs-attr\">components</span>: {\n              <span class=\"hljs-title class_\">Field</span>: <span class=\"hljs-title class_\">ContactFormLabel</span>,\n            },\n          },\n        },\n      ],\n    }),\n  ],\n}</code></pre><br><br>Note, the only field is the <code>ui</code> field, displaying a custom element. This block requires no fields as it gets it&#x27;s config from a global.<br><br><br>I updated the block as so, note the addition of a very basic text field. Rebuild and deployed and now my GQL Playground works.<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">contactForm</span>: <span class=\"hljs-title class_\">Block</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&#x27;contactForm&#x27;</span>,\n  <span class=\"hljs-attr\">fields</span>: [\n    <span class=\"hljs-title function_\">blockFields</span>({\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;contactForm&#x27;</span>,\n      <span class=\"hljs-attr\">fields</span>: [\n        { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;title&#x27;</span>, <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;text&#x27;</span>, <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span> },\n        {\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;ui&#x27;</span>,\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;contactForm&#x27;</span>,\n          <span class=\"hljs-attr\">admin</span>: {\n            <span class=\"hljs-attr\">components</span>: {\n              <span class=\"hljs-title class_\">Field</span>: <span class=\"hljs-title class_\">ContactFormLabel</span>,\n            },\n          },\n        },\n      ],\n    }),\n  ],\n}</code></pre><br><br>Is this intended behaviour? I would ideally like this block to contain no elements besides the <code>ui</code> element. Thanks",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1675246720956
      },
      {
        "content": "Maybe I&#x27;m just tired this morning I&#x27;ve just realised I&#x27;ve wrapped the whole lot in my custom BlockFields function. That will be the issue",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1675247134780
      },
      {
        "content": "What does your graphQL query look like?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675274030134
      },
      {
        "content": "If a block contains a UI field with no other data, maybe we shouldn&#x27;t generate a type for it. I&#x27;d have to dig a little on best practices here.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675277287027
      },
      {
        "content": "@Jarrod This is my bad completely, see in my contact form block, within the fields array, I wrap the fields in a custom blockFields function. With that function removed, the query performs perfectly.\\",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1675319687286
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Production deployment throws TypeError: Router.use() requires a middleware function",
      "id": "1070942828009627698",
      "guildId": "967097582721572934",
      "createdAt": 1675403067353
    },
    "messages": [
      {
        "content": "Everything was running well in production but after developing and locally testing some changes, deployment to production threw, out of nowhere, the following error: TypeError: Router.use() requires a middleware function<br><br>Full trace:<br><pre><code class=\"hljs\">error Command failed with exit code 1.\n at internal/main/run_main_module.js:17:47\n at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:75:12)\n at Function.Module._load (internal/modules/cjs/loader.js:790:12)\n at Module.load (internal/modules/cjs/loader.js:950:32)\n at Object.Module._extensions..js (internal/modules/cjs/loader.js:1114:10)\n at Module._compile (internal/modules/cjs/loader.js:1085:14)\n at Object.&lt;anonymous&gt; (/home/node/dist/server.js:51:8)\n at Function.use (/home/node/node_modules/express/lib/router/index.js:462:11)\nTypeError: Router.use() requires a middleware function\n\n ^\n throw new TypeError(&#x27;Router.use() requires a middleware function&#x27;)\n/home/node/node_modules/express/lib/router/index.js:462</code></pre><br><br>Because I didn&#x27;t make any fundamental changes and all works well locally, it&#x27;s quite a mystery where this opaque error comes from. <br><br>Has anybody had a similar problem in production?<br><br>The only place where Router.use() function is used is in server.ts file and that hasn&#x27;t changed in the recent update.<br><br>server.ts<br><pre><code class=\"hljs\">import payload from &#x27;payload&#x27;;\n...\nconst router = express.Router();\nrouter.use(payload.authenticate);\n...</code></pre>",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1675403067353
      },
      {
        "content": "Do you want to create a new Router? express.Router(); returns a New Router Object. Instead, you can add the middleware directly to express.<br><br><pre><code class=\"hljs\">const app = express();\nconst yourMiddleware = (req, res, next) =&gt; {\n    \n    next();\n};\n\napp.get(&quot;/&quot;, (_, res) =&gt; {    res.redirect(&quot;/admin&quot;);  });\napp.use(yourMiddleware);</code></pre>",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1675405120286
      },
      {
        "content": "No, I haven&#x27;t changed anything nor do I wish to change anything about this. It hasn&#x27;t changed but the server failed to build this with any further new build. Even when I restored everything back to previously working code, the server now just doesn&#x27;t run. Looks like a hosting provider issue?",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1675408157733
      },
      {
        "content": "Solved. Turns out it was the Payload npm package.<br>I was using the following version notation  <pre><code class=\"hljs\">&quot;payload&quot;: &quot;^1.4.1&quot;</code></pre> meaning all latest minor changes will be used.<br><br>Between now and 24 days ago since I last built a new image, something has changes in the way PayloadCMS works with Express and although it claims to be a <strong>minor</strong> change, it was a breaking change and something in the <strong>server.ts</strong> file related with express needs to be re-written. <br><br>I don&#x27;t have time to do it now, so I reverted to using a strict version (1.4.1) of payload and it works. As soon as I use anything modern, it breaks.",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1675573725304
      },
      {
        "content": "I want to have my own custom routes (e.g. health check, and others) and I also need to access payload authentication middleware inside them. <br>So I followed tutorials on this but this doesn&#x27;t work anymore in latest payload versions.<br><br>Here is my server.ts new router related code.<br><br><pre><code class=\"hljs\">  \n  const router = express.Router();\n  router.use(payload.authenticate);\n\n  router.post(&#x27;/transactions/process&#x27;, (req: any, res) =&gt; {\n    if (req.user) {\n      return res.send(`Authenticated successfully as ${req.user.email}.`);\n    }\n    return res.send(&#x27;Not authenticated&#x27;);\n  });\n\n  router.get(&#x27;/health&#x27;, (req: any, res) =&gt; {\n    res.send(&#x27;Healthy&#x27;)\n  });\n\n  app.use(&#x27;/custom&#x27;, router);\n  app.listen(3000);</code></pre>",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1675575643110
      },
      {
        "content": "It works if await payload.init is before payload.authenticate.<br><br><pre><code class=\"hljs\">const start = async () =&gt; {\n  const router = express.Router();\n  \n  await payload.init({...}); // Changed to async. Need to wrap code into an async function\n\n  router.use(payload.authenticate);\n\n  router.post(&#x27;/transactions/process&#x27;, (req: any, res) =&gt; {\n    if (req.user) {\n      return res.send(`Authenticated successfully as ${req.user.email}.`);\n    }\n    return res.send(&#x27;Not authenticated&#x27;);\n  });\n\n  router.get(&#x27;/health&#x27;, (req: any, res) =&gt; {\n    res.send(&#x27;Healthy&#x27;)\n  });\n\n  app.use(&#x27;/custom&#x27;, router);\n  app.listen(3000);\n}\n\nstart();</code></pre>",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1675588363664
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Hey there!",
      "id": "1075271142845194364",
      "guildId": "967097582721572934",
      "createdAt": 1676435018026
    },
    "messages": [
      {
        "content": "I&#x27;m trying to customize a bit some of my list views. Is there a way to have &quot;custom fields&quot; on the list view? <br>eg: I have a Post with 3 comments and want to have a field with that &quot;calculated amount&quot; without storing it on the DB. Just showing thay <code>comments.length</code> value.<br><br>And is it possible to set a default sorting sorting for my collections?",
        "fileAttachments": [],
        "authorID": "494333401264947218",
        "authorName": "nacho",
        "authorAvatar": null,
        "createdAtDate": 1676435018026
      },
      {
        "content": "It sounds like you&#x27;re looking for a <code>ui</code> type field with custom cell component<br><br>Docs for swapping the components: <a href=\"https://payloadcms.com/docs/admin/components#collections\">https://payloadcms.com/docs/admin/components#collections</a><br>Docs for a cell component: <a href=\"https://payloadcms.com/docs/admin/components#cell-component\">https://payloadcms.com/docs/admin/components#cell-component</a><br>Docs for <code>ui</code> fields: <a href=\"https://payloadcms.com/docs/fields/ui#ui-field\">https://payloadcms.com/docs/fields/ui#ui-field</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676471690217
      },
      {
        "content": "Thanks!",
        "fileAttachments": [],
        "authorID": "494333401264947218",
        "authorName": "nacho",
        "authorAvatar": null,
        "createdAtDate": 1676509445743
      },
      {
        "content": "Regarding to the other question.. Is it posible to define a custom sorting for each collection?",
        "fileAttachments": [],
        "authorID": "494333401264947218",
        "authorName": "nacho",
        "authorAvatar": null,
        "createdAtDate": 1676509482530
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Specify the name or path of upload",
      "id": "1077236038898044998",
      "guildId": "967097582721572934",
      "createdAt": 1676903485751
    },
    "messages": [
      {
        "content": "I have a 2 collections first is for products with preview image field (upload type) in it as well as field for other images of the product, second one to store those images - <strong>productMediaCollection</strong>. <br>I wanted on image upload (for example from <em>products</em> collection) to change the name or/and file path of it to fit product title like:<br><br><strong>productMediaCollection/someProduct/image_uuid.webp;</strong><br><br>or at least to change the name to something like this:<br><br><strong>productMediaCollection/productTitle_uuid.webp</strong><br><br>So is there a way to change default uploading name for example via <em>beforeValidate</em> hook, because i dont quite understand how to do it?<br>Or maybe it possible to provide some function to <em>staticDir</em> in <strong>productMediaCollection</strong> to make it conditional?<br><br>Thank for answers",
        "fileAttachments": [],
        "authorID": "215833081158959105",
        "authorName": "Daniq",
        "authorAvatar": "f25eb1ea60f9c5b561fe3bc6ab380049",
        "createdAtDate": 1676903485751
      },
      {
        "content": "There is a Github discussion on this topic: <a href=\"https://github.com/payloadcms/payload/discussions/1153\">https://github.com/payloadcms/payload/discussions/1153</a><br>You should be able to handle it in a <code>beforeOperation</code> similar to marked answer.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676913455813
      },
      {
        "content": "Thank, this solution might work, but if i create hook on <strong>productMediaCollection</strong> then i cant have an access to  information about product from which i created a media 😦<br>so i cant provide a product title or something like that into hook<br><br>So i media collection hook dont knows from where it was edited last time or something like that",
        "fileAttachments": [],
        "authorID": "215833081158959105",
        "authorName": "Daniq",
        "authorAvatar": "f25eb1ea60f9c5b561fe3bc6ab380049",
        "createdAtDate": 1676939180548
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Is it possible to modify an image upload before uploading? (generating and adding QR to image)",
      "id": "1070287657034338314",
      "guildId": "967097582721572934",
      "createdAt": 1675246862420
    },
    "messages": [
      {
        "content": "I have a Products collection with an image upload field. My plan is generating a QR code using the current element&#x27;s field data, for example product color, size, etc., and then adding the QR to the image the user wants to upload. I&#x27;m currently working with local files but I&#x27;ll eventually use S3 or its akin, I was wondering if what I&#x27;m describing is possible to do?<br><br>Thank you!",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675246862420
      },
      {
        "content": "I&#x27;m not 100% sure, but I would imagine you want to use the <code>beforeChange</code> hook on (<a href=\"https://payloadcms.com/docs/hooks/collections#beforechange\">https://payloadcms.com/docs/hooks/collections#beforechange</a>) on your media collection. First step would be to modify the image. Second step would be to upload to S3, as described in the &quot;ephemeral filesystems&quot; subsection of <a href=\"https://payloadcms.com/docs/production/deployment#file-storage\">https://payloadcms.com/docs/production/deployment#file-storage</a>",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675250669070
      },
      {
        "content": "On that hook, using the data argument, I&#x27;m only getting image metadata like width, mimetype, etc. No data stream or image buffer data that I can use and manipulate. Any ideas?",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279303722
      },
      {
        "content": "Hm, I haven&#x27;t used it myself. But the docs say<br><br><blockquote>Write an asynchronous <code>beforeChange</code> hook for all Collections that support Uploads, which takes any uploaded file from the Express <code>req</code> and sends it to an S3 bucket<br></blockquote><br>Can you find the file itself in the <code>req</code> object?",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675279425125
      },
      {
        "content": "Oh, the req object, let me try!",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279508173
      },
      {
        "content": "I found it, req.files.file. It gives me buffer data, I&#x27;m assuming all I have to do is replace that buffer and still return the data argument as if I changed nothing about the data argument and it will upload the image with my specified buffer? 😄",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279713764
      },
      {
        "content": "I guess ultimately, you want to take that buffer, modify it, then upload it to S3 manually. But for local files, I don&#x27;t know - I&#x27;ll be curious to hear whether replacing the buffer does what you want.",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675279803139
      },
      {
        "content": "If that doesn&#x27;t work, I would also try modifying the buffer in-place rather than replacing it.",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675279840014
      },
      {
        "content": "Let me know how it goes 🙂",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675279852638
      },
      {
        "content": "I wonder if the req.files.file happens regardless of local files or S3. 😄",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279898543
      },
      {
        "content": "Let me try, logically there should be no difference 😄",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279934250
      },
      {
        "content": "Yeah, I think it should still be there in the hook. It should just be a matter of whether it actually gets saved to disk afterwards.",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675279938136
      },
      {
        "content": "Because you still select a local file system image",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279941284
      },
      {
        "content": "only the place u upload it to is different",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279948043
      },
      {
        "content": "thanks a bunch @oliverevans96 ! i&#x27;ll try and let you know",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279968423
      },
      {
        "content": "You&#x27;re welcome! See also <a href=\"https://payloadcms.com/docs/upload/overview#disabling-local-upload-storage\">https://payloadcms.com/docs/upload/overview#disabling-local-upload-storage</a>",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675280001032
      },
      {
        "content": "hey! i tried replacing my uploaded image&#x27;s buffer but the image is the same as the original source rather than my modified version of the image 😄 i made a thread about it if ur curious <a href=\"https://discord.com/channels/967097582721572934/1070461370501447680\">https://discord.com/channels/967097582721572934/1070461370501447680</a>",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675290513124
      },
      {
        "content": "Interesting, thanks",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675290569263
      }
    ],
    "messageCount": 17
  },
  {
    "info": {
      "name": "How to run on local network? (I'm testing)",
      "id": "1072738989188063304",
      "guildId": "967097582721572934",
      "createdAt": 1675831305549
    },
    "messages": [
      {
        "content": "I tried to modify the server.ts file like following<br><br>app.listen(3000, &quot;192.168.56.1&quot;);<br><br>but didn&#x27;t work 😦",
        "fileAttachments": [],
        "authorID": "629766588492677131",
        "authorName": "LuisLopezlg",
        "authorAvatar": "34c04cc9816e77b82120e46fcb360d69",
        "createdAtDate": 1675831305549
      },
      {
        "content": "Never mind, I found the solution (I just read the docs actually sorry hehe) <br><br>I just edited the file payload.config.ts<br>first time didn&#x27;t work, but then it worked! c:",
        "fileAttachments": [],
        "authorID": "629766588492677131",
        "authorName": "LuisLopezlg",
        "authorAvatar": "34c04cc9816e77b82120e46fcb360d69",
        "createdAtDate": 1675832999030
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Is it possible to query a 3 nested collection?",
      "id": "1076804860969754695",
      "guildId": "967097582721572934",
      "createdAt": 1676800684922
    },
    "messages": [
      {
        "content": "I have these collections,<br><br>Location Group<br>Location<br>Post<br><br>Location Group has a value &quot;title&quot; string.<br>Location has a value &quot;group&quot; which relates to Location Group and &quot;title&quot; string.<br>Post has a value &quot;location&quot; which relates to Location.<br><br>When I&#x27;m trying to use dot notation on REST query on Post using location.locationGroup.title, it&#x27;s not working, but when I use location.title, its working.<br><br>PLEASE HELP",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676800684922
      },
      {
        "content": "@johnmadrigal_ can you paste in your configs? You may I can help you write a query for this, which would look something like this <code>?where[location.group.title][equals]=hello&amp;depth=3</code> (depth might be your missing piece)",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676901594479
      },
      {
        "content": "Hello Jacob, thanks for responding. I am using your sample work name &quot;website-cms&quot; and I also found the same issue with your code.<br><br>This is the repo code:<br><a href=\"https://github.com/payloadcms/website-cms/blob/main/src/collections/Posts.ts\">https://github.com/payloadcms/website-cms/blob/main/src/collections/Posts.ts</a><br><br>Can you create a Post record and create a query for &quot;author.photo.alt&quot;? Because in my end, even if I puth depth in the query, it still shows nothing.<br><br><a href=\"http://localhost:9000/api/posts?where[author.photo.alt][equals]=test&amp;depth=3\">http://localhost:9000/api/posts?where[author.photo.alt][equals]=test&amp;depth=3</a><br><br>I&#x27;m suspecting that it is not allowed to query the 2nd nested collection, which in your code, the photo inside author which is under post.<br><br>That is the exact issue i&#x27;m facing in my own payloadcms app.",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676931372619
      },
      {
        "content": "Thanks for the description! Very helpful. That query <em>should</em> look like this: <code>https://cms.payloadcms.com/api/posts?where[author.photo.alt][equals]=Write%20for%20the%20Community%20Blog%20Image</code> but it appears to be broken at the moment 😢",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676934708249
      },
      {
        "content": "Go ahead and pull an issue in our repo if you&#x27;d like. We&#x27;ll get this patched up.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676934881417
      },
      {
        "content": "Okay thanks, but is this working before? or we really don&#x27;t have feature like this?",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676958469738
      },
      {
        "content": "This was working before so once we fix the issue we&#x27;ll also write tests to prevent future regression.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676990423459
      },
      {
        "content": "Update: this was fixed with <a href=\"https://github.com/payloadcms/payload/pull/2199\">https://github.com/payloadcms/payload/pull/2199</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677596338031
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "build /admin/styles.css",
      "id": "1077593873221685369",
      "guildId": "967097582721572934",
      "createdAt": 1676988800102
    },
    "messages": [
      {
        "content": "how do I build the styles? I&#x27;m running build and serve and /admin/styles.css is not building!",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676988800102
      },
      {
        "content": "@ashermyers Is there any relevant information here? <a href=\"https://payloadcms.com/docs/admin/customizing-css#customizing-css-and-scss\">https://payloadcms.com/docs/admin/customizing-css#customizing-css-and-scss</a>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676988997585
      },
      {
        "content": "Have you defined a path for custom admin styles?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989006909
      },
      {
        "content": "I&#x27;m not trying to add custom styles, the existing admin/styles.css is not loading, I&#x27;m getting a 404 error<br>(Cannot GET /admin/styles.css)",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676989100567
      },
      {
        "content": "Hmmm",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989159883
      },
      {
        "content": "I&#x27;m running:<br>yarn copyfiles &amp;&amp; yarn build:payload &amp;&amp; yarn build:server<br>and <br>cross-env PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=production node dist/server.js",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676989190498
      },
      {
        "content": "Can we see your config",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989198865
      },
      {
        "content": "<pre><code class=\"hljs\">import { buildConfig } from &#x27;payload/config&#x27;;\nimport path from &#x27;path&#x27;;\n// import Examples from &#x27;./collections/Examples&#x27;;\nimport Users from &#x27;./collections/Users&#x27;;\n\nexport default buildConfig({\n  serverURL: &#x27;https://subdomain.example.org&#x27;,\n  admin: {\n    user: Users.slug,\n  },\n  collections: [\n    Users,\n    // Add Collections here\n    // Examples,\n  ],\n  typescript: {\n    outputFile: path.resolve(__dirname, &#x27;payload-types.ts&#x27;),\n  },\n  graphQL: {\n    schemaOutputFile: path.resolve(__dirname, &#x27;generated-schema.graphql&#x27;),\n  },\n});</code></pre>",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676989237835
      },
      {
        "content": "Also, this may be unrelated, but I&#x27;ve seen two suggestions regarding clearing the npm/yarn cache",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989238110
      },
      {
        "content": "Seems odd that I&#x27;d see two suggestions regarding 404&#x27;s on styles",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989253048
      },
      {
        "content": "nothing looks weird there",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989280353
      },
      {
        "content": "I don&#x27;t know if its something I&#x27;m doing since i&#x27;m just using the npx command and adding my mongodb config",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676989285771
      },
      {
        "content": "are any other assets returning a 404 status",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989360167
      },
      {
        "content": "or is it this one stylesheet from what you can tell",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989369034
      },
      {
        "content": "No, just this one stylesheet",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676989446918
      },
      {
        "content": "is the file in the out dist?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989555280
      },
      {
        "content": "or not created",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989561509
      },
      {
        "content": "gimme a sec. lemme check",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676989570465
      },
      {
        "content": "testing something rn",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676989744451
      },
      {
        "content": "ok no rush",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989793753
      },
      {
        "content": "im stuck at work all day",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989801289
      },
      {
        "content": "got it working by building the css on another machine and copying it over. Weird...",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676991401861
      }
    ],
    "messageCount": 21
  },
  {
    "info": {
      "name": "How to include upload drawer in custom field",
      "id": "1074535080149647410",
      "guildId": "967097582721572934",
      "createdAt": 1676259527004
    },
    "messages": [
      {
        "content": "I am create a custom rich text editor i want to use image picker (same like default rich text editor)",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1074535080149647410/1074535080418103387/image.png",
            "name": "image.png",
            "id": "1074535080418103387",
            "size": 155035,
            "url": "https://cdn.discordapp.com/attachments/1074535080149647410/1074535080418103387/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1074535080149647410/1074535080418103387/image.png",
            "height": 1418,
            "width": 1632,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "589480760898093201",
        "authorName": "Qasim Ali",
        "authorAvatar": "9ed1c88c715db6238e6e81ebdfbf34bb",
        "createdAtDate": 1676259527004
      },
      {
        "content": "There&#x27;s a  <code>useListDrawer</code> hook that returns the <code>ListDrawer</code> component which is used throughout our admin UI. There&#x27;s no documentation around this yet and it&#x27;s not exported top-level so you may have to dig around for it&#x27;s import path. The only parameters are an array of collection slugs that you&#x27;d like to render in that drawer. <a href=\"https://github.com/payloadcms/payload/blob/3ebe7b4a7e739c48f7b13fa5b57395581b5e8ed1/src/admin/components/elements/ListDrawer/index.tsx\">https://github.com/payloadcms/payload/blob/3ebe7b4a7e739c48f7b13fa5b57395581b5e8ed1/src/admin/components/elements/ListDrawer/index.tsx</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676267945790
      },
      {
        "content": "Thank you so much sir  😊",
        "fileAttachments": [],
        "authorID": "589480760898093201",
        "authorName": "Qasim Ali",
        "authorAvatar": "9ed1c88c715db6238e6e81ebdfbf34bb",
        "createdAtDate": 1676302212290
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Exposing group and block types when generating types",
      "id": "1075432369823158312",
      "guildId": "967097582721572934",
      "createdAt": 1676473457533
    },
    "messages": [
      {
        "content": "I want to write some generic mappings that maps from payload&#x27;s types to props for my frontend React components. Blocks and groups aren&#x27;t exposed at the top level, so I&#x27;m having to manually pick them out by unpacking arrays and extracting specific blocks. <br><br>Is it possible to expose these when generating types? Or is there a simpler way for me to define these types based on the generated typings?",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676473457533
      },
      {
        "content": "Hey @sam , have you seen how this is done in our website repo? This might be a pattern you would benefit from. <a href=\"https://github.com/payloadcms/website/blob/main/src/components/RenderBlocks/index.tsx\">https://github.com/payloadcms/website/blob/main/src/components/RenderBlocks/index.tsx</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677594308032
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Allow the user to have \"update\" rights only to the articles he has created",
      "id": "1079668069829451786",
      "guildId": "967097582721572934",
      "createdAt": 1677483327110
    },
    "messages": [
      {
        "content": "Hello everyone! I&#x27;d like to allow the user to have &quot;update&quot; rights only to the articles he has created. I have a simple function that checks if the user pseudonym is equal to the article field but seems I&#x27;m doing something wrong because the pseudonym field is undefined.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079668069829451786/1079668069988847676/image.png",
            "name": "image.png",
            "id": "1079668069988847676",
            "size": 19699,
            "url": "https://cdn.discordapp.com/attachments/1079668069829451786/1079668069988847676/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079668069829451786/1079668069988847676/image.png",
            "height": 231,
            "width": 641,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079668069829451786/1079668070307610705/image.png",
            "name": "image.png",
            "id": "1079668070307610705",
            "size": 9435,
            "url": "https://cdn.discordapp.com/attachments/1079668069829451786/1079668070307610705/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079668069829451786/1079668070307610705/image.png",
            "height": 138,
            "width": 361,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "d8380c176b4dc4be88b5f9cf6e32dd41",
        "createdAtDate": 1677483327110
      },
      {
        "content": "Perhaps it&#x27;s possible to somehow pass an article object to this function?",
        "fileAttachments": [],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "d8380c176b4dc4be88b5f9cf6e32dd41",
        "createdAtDate": 1677483477472
      },
      {
        "content": "Okay. Seems it doesn&#x27;t work because the article author is an object",
        "fileAttachments": [],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "d8380c176b4dc4be88b5f9cf6e32dd41",
        "createdAtDate": 1677484339868
      },
      {
        "content": "I&#x27;ve updated the code but it gives the same result",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079668069829451786/1079672390939852830/image.png",
            "name": "image.png",
            "id": "1079672390939852830",
            "size": 20200,
            "url": "https://cdn.discordapp.com/attachments/1079668069829451786/1079672390939852830/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079668069829451786/1079672390939852830/image.png",
            "height": 300,
            "width": 576,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "d8380c176b4dc4be88b5f9cf6e32dd41",
        "createdAtDate": 1677484357409
      },
      {
        "content": "You should take at look here <a href=\"https://github.com/payloadcms/website-cms/blob/main/src/access/isAdminOrSelf.ts\">https://github.com/payloadcms/website-cms/blob/main/src/access/isAdminOrSelf.ts</a>",
        "fileAttachments": [],
        "authorID": "122444319054495746",
        "authorName": "SKRY",
        "authorAvatar": "5b54bd085cab964c72bce21dcfe04638",
        "createdAtDate": 1677491701784
      },
      {
        "content": "This part is not working in my case because I have an object and need to compare a key.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079668069829451786/1079738856418574356/image.png",
            "name": "image.png",
            "id": "1079738856418574356",
            "size": 5675,
            "url": "https://cdn.discordapp.com/attachments/1079668069829451786/1079738856418574356/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079668069829451786/1079738856418574356/image.png",
            "height": 161,
            "width": 541,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079668069829451786/1079738856863178772/image.png",
            "name": "image.png",
            "id": "1079738856863178772",
            "size": 19207,
            "url": "https://cdn.discordapp.com/attachments/1079668069829451786/1079738856863178772/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079668069829451786/1079738856863178772/image.png",
            "height": 218,
            "width": 644,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "d8380c176b4dc4be88b5f9cf6e32dd41",
        "createdAtDate": 1677500204120
      },
      {
        "content": "hi @mihanc - you can access the full doc using <code>data</code>, take a look at this example:",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079668069829451786/1079899930136682646/Screen_Shot_2023-02-27_at_10.54.27_PM.png",
            "name": "Screen_Shot_2023-02-27_at_10.54.27_PM.png",
            "id": "1079899930136682646",
            "size": 407681,
            "url": "https://cdn.discordapp.com/attachments/1079668069829451786/1079899930136682646/Screen_Shot_2023-02-27_at_10.54.27_PM.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079668069829451786/1079899930136682646/Screen_Shot_2023-02-27_at_10.54.27_PM.png",
            "height": 1660,
            "width": 2688,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1677538606887
      },
      {
        "content": "Why the data can be undefined?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079668069829451786/1080459313690185799/image.png",
            "name": "image.png",
            "id": "1080459313690185799",
            "size": 12334,
            "url": "https://cdn.discordapp.com/attachments/1079668069829451786/1080459313690185799/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079668069829451786/1080459313690185799/image.png",
            "height": 103,
            "width": 593,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079668069829451786/1080459314059288576/image.png",
            "name": "image.png",
            "id": "1080459314059288576",
            "size": 12006,
            "url": "https://cdn.discordapp.com/attachments/1079668069829451786/1080459314059288576/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079668069829451786/1080459314059288576/image.png",
            "height": 114,
            "width": 594,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "d8380c176b4dc4be88b5f9cf6e32dd41",
        "createdAtDate": 1677671974416
      },
      {
        "content": "The afterRead hook runs when you save the doc - so if you hit save and check your console.log again you should see the data",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1677678775285
      },
      {
        "content": "Is there any way to access the data before the afterRead hook? I&#x27;d like to disable Save button if the user is not the author of this article.",
        "fileAttachments": [],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "d8380c176b4dc4be88b5f9cf6e32dd41",
        "createdAtDate": 1677679037616
      },
      {
        "content": "My apologies, you&#x27;re not using a hook I was mixing this up with another similar thread. However, I would suggest adding a collection hook then you can access the document data before saving with beforeValidate or beforeChange <a href=\"https://payloadcms.com/docs/hooks/collections\">https://payloadcms.com/docs/hooks/collections</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1677679750564
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "Hooks advice for an Orders collections",
      "id": "1076916607860875264",
      "guildId": "967097582721572934",
      "createdAt": 1676827327457
    },
    "messages": [
      {
        "content": "Hi @payloadcms team!<br><br>I have an orders collection with an order <code>status</code> which has various payment/shipping statuses associated with the state of the order.<br><br>I would like to create a couple of hooks to do the following:<br><br>1. When I set a status of <code>order_ready_to_dispatch</code> I would like to create a new tracking request with my chosen courier, then write the response of that to the order record (I have these fields ready).<br><br>2. When I set a status of <code>order_shipped</code> I would like to create an email with details of the order, including the tracking information.<br><br>I have the email templates working and fire these off when I receive a payment_intent of succeeded in my stripe webhook.<br><br>I have a couple of questions around hooks:<br><br>1. Which hook should I use for these two use-cases?<br><br>2. How to prevent these from firing again if an order is updated and status remains the same; ie the status is <code>order_shipped</code> and I want to update any field. I wouldn&#x27;t then want the email to sent again when I resave the record. Feels like I would need a log of events attached to the record ie every status changes writes a log? Or would an object of bools be better, allowing me to undo a state should something malfunction, thus then allowing the hook to fire again if needs be?<br><br>Advice here would be really welcome!<br><br>Thanks!",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676827327457
      },
      {
        "content": "@jakehopking would an <code>afterChange</code> hook work for you? In this hook you can check your order status and perform additional actions based on it. To prevent duplicative hooks compare its value with another hidden field that you maintain. Here&#x27;s a similar example to this: <a href=\"https://github.com/payloadcms/payload/discussions/1996#discussioncomment-4885826\">https://github.com/payloadcms/payload/discussions/1996#discussioncomment-4885826</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676902245365
      },
      {
        "content": "Thanks @jacobsfletch  - yeah that&#x27;s what I was thinking to do (although keep the checkboxes visible, so can toggle/re-fire the actions if ever needs be).<br><br>Do you have some good examples of <code>afterChange</code> hooks, or good examples of hooks in general? I&#x27;ve not written one yet and would like to see how to do correctly.",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676905997814
      },
      {
        "content": "PS Thanks for your work on the ecommerce boilerplate... it <em>really</em> helped me in getting my dynamic cart with payment_intents (and linking payload and stripe customers/orders together etc) working nicely.",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676906042253
      },
      {
        "content": "What if instead of making a request when a field value is updated, you make it a custom REST endpoint or GraphQL mutation which modifies the field value? You can add a button somewhere if you need to call it manually. That would make the action more explicit.",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1676913475618
      },
      {
        "content": "That would make it more explicit I agree. If I could have this button on the order itself (in payload) that would work well I think... and could use the endpoint in the future on a admin dashboard etc.",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676914160427
      },
      {
        "content": "Nice idea.",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676914163132
      },
      {
        "content": "Do you know if it&#x27;s easy to add a new button, which would then have access to the order item data (being inside the order collection record within payload).",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676914230394
      },
      {
        "content": "@Jesse Sivonen sorry, meant to @ you in my reply 🙂",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676914323581
      },
      {
        "content": "@jakehopking Adding button is also as simple as adding a field (<a href=\"https://payloadcms.com/docs/fields/ui\">https://payloadcms.com/docs/fields/ui</a>) though you need to create a component for it yourself. For that you probably need these React hooks (<a href=\"https://payloadcms.com/docs/admin/hooks\">https://payloadcms.com/docs/admin/hooks</a>).",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1676914681844
      },
      {
        "content": "Thanks for the info @Jesse Sivonen - I&#x27;ll take a look.",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676915054365
      },
      {
        "content": "@jacobsfletch do you have any examples in any of your public repos for the use of a ui field type and a custom component?",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676916000923
      },
      {
        "content": "It&#x27;s not possible to use the buttons that are already a part of the admin ui??",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676916027456
      },
      {
        "content": "There doesn&#x27;t seem to be a component library exported from Payload, but maybe you can use the same classes 🤷 There&#x27;s also SCSS variables and mixins that you can import if that&#x27;s any use: <a href=\"https://payloadcms.com/docs/admin/components#styling-custom-components\">https://payloadcms.com/docs/admin/components#styling-custom-components</a>",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1676916535899
      },
      {
        "content": "Looking at the <code>website-cms</code> repo, they are using the admin ui components in a customisation of slatejs to support videos... so I guess I could use these too:<br><pre><code class=\"hljs ts\"># ~<span class=\"hljs-regexp\">/payloadcms/</span>website-cms/src/fields/richText/video/<span class=\"hljs-title class_\">Button</span>/index.<span class=\"hljs-property\">tsx</span>\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ElementButton</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload/components/rich-text&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Form</span>, <span class=\"hljs-title class_\">Select</span>, <span class=\"hljs-title class_\">Text</span>, <span class=\"hljs-title class_\">Submit</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload/components/forms&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">MinimalTemplate</span>, <span class=\"hljs-title class_\">Button</span>, X } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload/components&#x27;</span>;</code></pre>",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676916773947
      },
      {
        "content": "This feels like a lot of work, whereas the hook method is straightforward. I think i&#x27;ll sleep on this!",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676916957394
      },
      {
        "content": "The SEO plugin has some pretty good examples of this that I often share, check it out: <a href=\"https://github.com/payloadcms/plugin-seo/blob/main/src/fields/MetaTitle.tsx\">https://github.com/payloadcms/plugin-seo/blob/main/src/fields/MetaTitle.tsx</a>. @Jesse Sivonen is right in that you create a field, assign your custom component to it, and use hooks within that component to interact with Payload state. <br><br><blockquote>There doesn&#x27;t seem to be a component library exported from Payload<br></blockquote><br>Exactly, our Payload component library is not very well exported, this is a roadmap item we plan on tackling relatively soon, here are the details: <a href=\"https://github.com/payloadcms/payload/discussions/293\">https://github.com/payloadcms/payload/discussions/293</a>.<br><br><blockquote>This feels like a lot of work, whereas the hook method is straightforward. I think i&#x27;ll sleep on this!<br></blockquote><br>This is 100% accurate. An <code>afterChange</code> hook is the best option here. This is where Payload shines.<br><br>Here&#x27;s a demo hook based on your description. You could also place this hook on your <em>field</em> directly instead of the collection itself. BUT you&#x27;ll need to add a second field to check the previous value against (here&#x27;s an example: <a href=\"https://github.com/payloadcms/payload/discussions/1996#discussioncomment-4885826\">https://github.com/payloadcms/payload/discussions/1996#discussioncomment-4885826</a>)<br><br><pre><code class=\"hljs ts\">{\n    <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&#x27;YOUR_COLLECTION&#x27;</span>,\n    <span class=\"hljs-attr\">hooks</span>: {\n        <span class=\"hljs-attr\">afterChange</span>: [\n            <span class=\"hljs-keyword\">async</span> ({ doc }) =&gt; {\n                <span class=\"hljs-keyword\">const</span> { orderStatus } = doc;\n                \n                <span class=\"hljs-keyword\">if</span> (orderStatus === <span class=\"hljs-string\">&#x27;order_ready_to_dispatch&#x27;</span>) {\n                    <span class=\"hljs-comment\">// Do something async, like update stock, etc</span>\n                }\n\n                <span class=\"hljs-keyword\">if</span> (orderStatus === <span class=\"hljs-string\">&#x27;order_shipped&#x27;</span>) {\n                    <span class=\"hljs-comment\">// Do something async, like send emails, etc</span>\n                }\n            }\n        ]\n    },\n    <span class=\"hljs-attr\">fields</span>: [\n        {\n            <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;orderStatus&#x27;</span>,\n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;select&#x27;</span>,\n            <span class=\"hljs-attr\">options</span>: [\n                { <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Ready To Ship&#x27;</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;order_ready_to_dispatch&#x27;</span> },\n                { <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Shipped&#x27;</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;order_shipped&#x27;</span> },\n            ]\n        }\n    ]\n}</code></pre><br>Hope this is helpful!",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676935804950
      },
      {
        "content": "@jacobsfletch Thanks a lot for your help here, really great!",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676940614336
      }
    ],
    "messageCount": 17
  },
  {
    "info": {
      "name": "Place custom fields in collection meta?",
      "id": "1072178378788057169",
      "guildId": "967097582721572934",
      "createdAt": 1675697645614
    },
    "messages": [
      {
        "content": "Do we have access to the <code>collection-edit__meta</code> as a custom <code>admin: { position: ... }}</code> ?<br><br>I&#x27;d like to add a custom &quot;Preview URL&quot; and &quot;Published URL&quot; link/label to the bottom right collection meta... <br><br>Currently, it looks like I can add this to the <code>sidebar</code> ... but I&#x27;d like to use the bottom right meta instead.<br><br>Also, is it possible to set a position weight for items in the sidebar, so that items can be placed above/below other items ... when using plugins to introduce fields to collections, it&#x27;s hard to keep the order of items synchronized.",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675697645614
      },
      {
        "content": "It would be nice to have more control on the meta like you&#x27;re saying. I would open a github discussion as a feature request. I think others would be interested in this as well. We have the <code>admin.position</code> property, it could be extended to push fields to meta I would think.<br><br>As for ordering fields, they just come in the order that they appear in the config. I&#x27;m unsure why you would need a <code>weight</code> property instead.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675699911796
      },
      {
        "content": "@dribbens if I modify the collection via a handful of plugins, and then also add fields to the collection config itself ... it becomes a pain to figure out where my field is going to be placed.<br><br>Say for example I have two plugins which automatically attach fields to every collection in the sidebar ... then in a specific collection I want to add a couple fields to the sidebar, but I want the first sidebar field on the top, and the second on the bottom ... with my plugins sidebar fields in the middle.<br><br>Plugin 1 - &quot;user history&quot;, which adds fields for &quot;Created By&quot; and &quot;Updated By&quot;<br>Plugin 2 - &quot;slugs&quot; which adds auto-generated slugs to my collections<br>Collection A - adds a relationship to my image uploads to the sidebar, and also adds a relationship to a Categories collection, and a Tags collection<br><br>I&#x27;d like to have the Category and Tags on the top, the Slug, the Featured Image, then Created By and Updated By<br><br>This is a bit of an acrobatic feat with the current &quot;in whatever order they were added&quot; solution - a simple weighting system would allow me to prioritize the sidebar items and they could then be sorted by this ... using a simple default of say 10 or 20 for fields that don&#x27;t explicitly specify the weight, allows for other fields to go before or after them easily",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675701223885
      },
      {
        "content": "I definitely see your point! I&#x27;m considering how we should go about this.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675981083824
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Trying to implement a custom SlateJS element following the custom-website-series.",
      "id": "1063517008911667260",
      "guildId": "967097582721572934",
      "createdAt": 1673632614115
    },
    "messages": [
      {
        "content": "I have everything set up the same, but I keep getting this error on the front-end. What is set up differently in the custom-website series that allows one to use useSlate in their elements/leaves?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1063517008911667260/1063517009180098681/image.png",
            "name": "image.png",
            "id": "1063517009180098681",
            "size": 44978,
            "url": "https://cdn.discordapp.com/attachments/1063517008911667260/1063517009180098681/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1063517008911667260/1063517009180098681/image.png",
            "height": 368,
            "width": 666,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1673632614115
      },
      {
        "content": "It is also used in the link element in the current build of payload",
        "fileAttachments": [],
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1673633130580
      },
      {
        "content": "you should be able to <code>useSlate</code> for sure",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675443021802
      },
      {
        "content": "do you have a local copy of Slate installed?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675443039190
      },
      {
        "content": "it must be on the same version otherwise your <code>useSlate</code> hook could be using a different copy of context vs. the internal one that Payload uses. You also might try and add a webpack alias to enforce that Webpack always uses the same copy of Slate, which would alleviate this even if you did have multiple copies installed",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675443077196
      },
      {
        "content": "Ok I will double check those and get back to you on that! Thanks for the tip",
        "fileAttachments": [],
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675484702924
      },
      {
        "content": "hey @blupandaman , wanted to ask what your solution was to this as I am getting the same error.<br><br>I am starting a project and using the PayloadCMS website repo as a starting point. The <code>useSlate</code> hook is called in the richText field in the video Button component and I am getting this error whenever the Rich Text Editor is rendered in the admin.<br><br>Edit: I believe this was caused by a <code>slate</code> version mismatch as pointed out by @jmikrut . I was able to resolve by uninstalling <code>slate</code> and <code>slate-react</code>. Thanks for the help!",
        "fileAttachments": [],
        "authorID": "674843534616166420",
        "authorName": "reepicheep05",
        "authorAvatar": null,
        "createdAtDate": 1676422222634
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "hooks on { Select } from 'payload/components/forms'",
      "id": "1073633812036198471",
      "guildId": "967097582721572934",
      "createdAt": 1676044647941
    },
    "messages": [
      {
        "content": "I have the following DOM element select:<br><pre><code class=\"hljs\">&lt;select title=&quot;select&quot; value={selectedOption} onChange={(e) =&gt; handleChange(e, path)}&gt;\n    {options.map((option, index) =&gt; &lt;option value={option}&gt;{option}&lt;/option&gt;)}\n  &lt;/select&gt;</code></pre><br><br>The above works as expected<br><br>I&#x27;m trying to use payload&#x27;s Select, as referenced in the subject title. I imagine hooks is the way to manage state, as onChange isn&#x27;t provided - but they aren&#x27;t ever triggered?<br><br><pre><code class=\"hljs\">&lt;Select name=&#x27;select&#x27; label=&quot;my select&quot; options={options} hooks={{\n    afterChange: [() =&gt; console.log(&#x27;afterChange&#x27;)],\n    beforeChange: [() =&gt; console.log(&#x27;beforeChange&#x27;)],\n    afterRead: [() =&gt; console.log(&#x27;afterRead&#x27;)],\n    beforeValidate: [() =&gt; console.log(&#x27;beforeValidate&#x27;)],\n  }} /&gt;</code></pre><br><br>Am I missing something? I would like to set a default value from <code>useFormFields</code> and update the selected value onChange (as achieved in the first example)",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676044647941
      },
      {
        "content": "AH!",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676049931344
      },
      {
        "content": "I linked the wrong import path in our last discussion. 1 min",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676049940381
      },
      {
        "content": "Ok so you will want to import the Select component like so <code>import SelectInput from &#x27;payload/dist/admin/components/forms/field-types/Select/Input&#x27;;</code> (see the component here: <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Select/Input.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Select/Input.tsx</a>)<br><br>This will give you the styled component - so it looks and feels like other payload select components. <br><br>What you need to do is implement similar functionality seen in this file in your custom Field component: <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Select/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Select/index.tsx</a><br><br>You can see how that file imports the <code>&lt;SelectInput /&gt;</code> which is the one you will import, all of the state management (getting and setting options for your custom select) will live in a file that then passes props (onChange, value, options, etc) down to the SelectInput component.<br><br>I hope this makes sense and steers you in the right direction!!",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676050440289
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "HTTP Cookie won't get set",
      "id": "1078662484812120154",
      "guildId": "967097582721572934",
      "createdAt": 1677243576959
    },
    "messages": [
      {
        "content": "Can someone send me a screenshot of a successful login request that sets an http only cookie? Right now I&#x27;m receiving the cookie but it won&#x27;t get set in the browser and I&#x27;m a bit stuck. 👀",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078662484812120154/1078662485499985920/Bildschirmfoto_2023-02-24_um_13.57.51.png",
            "name": "Bildschirmfoto_2023-02-24_um_13.57.51.png",
            "id": "1078662485499985920",
            "size": 23992,
            "url": "https://cdn.discordapp.com/attachments/1078662484812120154/1078662485499985920/Bildschirmfoto_2023-02-24_um_13.57.51.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078662484812120154/1078662485499985920/Bildschirmfoto_2023-02-24_um_13.57.51.png",
            "height": 95,
            "width": 1457,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677243576959
      },
      {
        "content": "@jmikrut I just found out that for cross-site requests the cookie needs to be set &quot;secure&quot;: &quot;true&quot; and &quot;same-site&quot;: &quot;none&quot;. That solved my issue. Would be good to have this option within the payload config to avoid patching the dependency. 🙌",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677247528425
      },
      {
        "content": "these two options are indeed configurable in the payload config already 👍",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677251775404
      },
      {
        "content": "<a href=\"https://payloadcms.com/docs/authentication/config#options\">https://payloadcms.com/docs/authentication/config#options</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677251812682
      },
      {
        "content": "check out the <code>cookies</code> option",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677251815616
      },
      {
        "content": "you can set <code>sameSite</code> as well as <code>secure</code> right in the config, based on ENV vars or whatever you need 👍",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677251826298
      },
      {
        "content": "Haha, oh no! Guess I was blind 😅",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677253219223
      },
      {
        "content": "I wanted to follow up on this real quick, because I&#x27;ve wasted countless hours on those cookie issues during my years in web dev.<br><br><strong>If you are using axios or sth similar, you need to set  withCredentials&quot;: true (or credentials: &#x27;include&#x27; in node fetch ). NOT ONLY ON THE REQUEST USING THE AUTH COOKIE, BUT ALSO ON THE REQUEST WHERE YOU WANT TO RETRIEVE THE AUTH COOKIE (e.g. login request). Otherwise, you&#x27;ll see the set-Cookie header in the response, but no cookie will be set</strong>",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1677780771739
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Select Field Limiting Records",
      "id": "1070373063700533389",
      "guildId": "967097582721572934",
      "createdAt": 1675267224956
    },
    "messages": [
      {
        "content": "Hi All,<br><br>New to payload<br><br>I have created a select field with multiple relationships. It is all working as expected except that I am getting a maximum of about 20 records back in the select field. There are a lot more records in the collection(s) .<br><br>How can i get payload to retrieve and display all the records from the mongo collection(s) in the select dropdown?<br><br>Please note that in the attached code/file, there are many relationships. I have tried this with a single relationship with the same outcome.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1070373063700533389/1070373064614879253/pages.tsx",
            "name": "pages.tsx",
            "id": "1070373064614879253",
            "size": 1220,
            "url": "https://cdn.discordapp.com/attachments/1070373063700533389/1070373064614879253/pages.tsx",
            "proxyURL": "https://media.discordapp.net/attachments/1070373063700533389/1070373064614879253/pages.tsx",
            "height": null,
            "width": null,
            "contentType": "text/plain; charset=utf-8",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "999829636890492948",
        "authorName": "raka",
        "authorAvatar": null,
        "createdAtDate": 1675267224956
      },
      {
        "content": "They should incrementally show if you scroll to the bottom of the select field, do they load in when you reach the bottom?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675271359898
      },
      {
        "content": "The reason for this is performance, it is not performant to load 1000 relationships on load, so instead we allow searching inside the field, or scrolling to the bottom to trigger another set of documents to load in",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675271417253
      },
      {
        "content": "facing same issue even after scroll to bottom its only loading 19 records",
        "fileAttachments": [],
        "authorID": "1045313947106029588",
        "authorName": "redhorse7422",
        "authorAvatar": null,
        "createdAtDate": 1675321605620
      },
      {
        "content": "Thank you Jarrod.<br><br>Seems to be an issue with my pc. I installed &amp; ran the project on a different pc and it worked as expected.",
        "fileAttachments": [],
        "authorID": "999829636890492948",
        "authorName": "raka",
        "authorAvatar": null,
        "createdAtDate": 1675333982887
      },
      {
        "content": "What browser / OS are you both on?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675338454100
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Using a React library custom component - ES Module not supported",
      "id": "1073208167246331944",
      "guildId": "967097582721572934",
      "createdAt": 1675943166315
    },
    "messages": [
      {
        "content": "I want to use a React library component (a local one in our monorepo, but I have the same issue using swiper/react) in a <code>type: &#x27;ui&#x27;</code> field. I have also been able to reproduce this with the create payload app CLI<br><br>If I have the import in code and run serve, I get the following error:<br><br><code>Error [ERR_REQUIRE_ESM]: require() of ES Module not supported</code><br><br>However, if I remove the import and run serve -- once webpack kicks in, I can re-introduce the import and it works as expected.<br><br>I think it&#x27;s related to my tsconfig, and possibly I need to exclude that import somehow when ts-node runs. Any ideas?",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675943166315
      },
      {
        "content": "This seems to work using material UI (<a href=\"https://mui.com/\">https://mui.com/</a>) -- could it be related to how the library is bundled/defined?",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675943281905
      },
      {
        "content": "Is the package you&#x27;re importing ESM only?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676056338543
      },
      {
        "content": "Yeah that was it in the end. The library stopped supporting CJS at a certain version. Downgrading it allowed me to use it in the payload admin panel.",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676281457406
      },
      {
        "content": "I was hoping to build out a live component preview within the admin panel, but I can&#x27;t get approval on downgrading this and another library to older versions. Is the payload team thinking of supporting ESM only libs?",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676281799505
      },
      {
        "content": "Since your Payload configuration file is loaded from the Payload source code (which are CJS), the error occurs when you try to import a ESM module (CJS can&#x27;t import ESM, while ESM can import both CJS (through dynamic imports) and ESM). Payload could provide both a ESM and CJS distribution which have been up for discussion. <br><br>In the meantime though, you can use a bundler and transpile the ESM-only library into CJS for you. For example Vite in &quot;library&quot; mode and build target as &quot;cjs&quot;.",
        "fileAttachments": [],
        "authorID": "397709884474261514",
        "authorName": "dsod",
        "authorAvatar": "fbb82213566f145908e03b5a89013a0c",
        "createdAtDate": 1676293025649
      },
      {
        "content": "Thanks for the tip. I&#x27;ll look into it! 😁",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676307032132
      },
      {
        "content": "@sam  any looks with getting your ESM package to output in CJS?",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1676433867448
      },
      {
        "content": "No I haven&#x27;t had chance to look at it yet, sorry!",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676462605834
      },
      {
        "content": "@sam can we check out your tsconfig?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676470030673
      },
      {
        "content": "oops this was answered",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676470054396
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "Cannot read properties of undefined (reading 'thumbnail')",
      "id": "1073556897413746698",
      "guildId": "967097582721572934",
      "createdAt": 1676026310066
    },
    "messages": [
      {
        "content": "Regarding imageSizes for the upload field type, my configuration is following <br><pre><code class=\"hljs\">upload: {\n        adminThumbnail: &#x27;card&#x27;,\n        staticURL: &#x27;/assets&#x27;,\n        staticDir: &#x27;assets&#x27;,\n        disableLocalStorage: true,\n        imageSizes: [\n            {\n                name: &#x27;thumbnail&#x27;,\n                width: 300,\n                height: null,\n                position: &#x27;centre&#x27;,\n            },\n        ],\n    },</code></pre><br>I add new entry to the collection, upload the image, but right after the upload when on this page <code>admin/collections/people-avatars/63e61ebc1b7ee8328d4ef20b</code> I get the following error <code>Cannot read properties of undefined (reading &#x27;thumbnail&#x27;)</code>. In the background if I call the api I see both original image and thumbnail image are generated and resized properly and I can access them both (they are stored in the S3). Grid view as well works fine and I see the image there correctly, but as soon as I try to open the edit/view window in the CMS I get the same error",
        "fileAttachments": [],
        "authorID": "1057285936951607326",
        "authorName": "gruja",
        "authorAvatar": null,
        "createdAtDate": 1676026310066
      },
      {
        "content": "i also have this problem, Elliot from the payload team told me it&#x27;s a cloud plugin bug that&#x27;s being worked on. happens in the latest version of payload",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1676026565858
      },
      {
        "content": "@gruja @minanaro_3776  A new version of the plugin-cloud-storage was released, give that a try. NOTE: there is an additional peer dependency that will need to be installed. Details in the release notes here: <a href=\"https://github.com/payloadcms/plugin-cloud-storage/releases/tag/v1.0.14\">https://github.com/payloadcms/plugin-cloud-storage/releases/tag/v1.0.14</a><br><br>Let me know if you run into any issues.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676057293855
      },
      {
        "content": "thanks a lot Elliot! will try",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1676057307435
      },
      {
        "content": "working perfectly @denolfe great work!",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1676106841271
      },
      {
        "content": "works great, thank you guys",
        "fileAttachments": [],
        "authorID": "1057285936951607326",
        "authorName": "gruja",
        "authorAvatar": null,
        "createdAtDate": 1676283546897
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Hosting Next.js App and Payload  separately on one server",
      "id": "1079024323777540168",
      "guildId": "967097582721572934",
      "createdAt": 1677329846091
    },
    "messages": [
      {
        "content": "Hello team,<br><br>I am following your advice on keeping Next app amd Payload on separate repos, but I am asking whether I will be able to make them work correctly if I host them together on one server?<br><br>Basically, my next app will be on <code>mydomain.com</code> and payload will be accessed through <code>mydomain.com/admin</code>. Would this work without developing them together in one repo?",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677329846091
      },
      {
        "content": "Yes",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1677334666313
      },
      {
        "content": "or you can host in subdomain. like. <code>sub.mydomain.com/admin</code>. thats how I&#x27;m doing",
        "fileAttachments": [],
        "authorID": "392021078035267586",
        "authorName": "minion",
        "authorAvatar": "7858d81f8fc24d03dff1172d61a4b74e",
        "createdAtDate": 1677336270440
      },
      {
        "content": "Thank you everyone!",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677336476873
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Cors issue when deploying to Ubuntu 20.04 VPS",
      "id": "1074094192575389836",
      "guildId": "967097582721572934",
      "createdAt": 1676154411215
    },
    "messages": [
      {
        "content": "I am trying to set up a payload cms on a Ubuntu VPS with nginx as reverse proxy.<br>I am getting to the &quot;first user registration&quot; loading page.<br>Currently set <pre><code class=\"hljs\">cors: &#x27;*&#x27;</code></pre>  as wildcard in the payload.config.ts and i still get a cors error (already tried to whitelist my_domain.com in every possible way - http/https/www etc.):<br><pre><code class=\"hljs\">Access to fetch at &#x27;http://localhost:3000/api/users/me&#x27; from origin &#x27;https://www.my_domain.com&#x27; has been blocked by CORS policy: No &#x27;Access-Control-Allow-Origin&#x27; header is present on the requested resource. If an opaque response serves your needs, set the request&#x27;s mode to &#x27;no-cors&#x27; to fetch the resource with CORS disabled.</code></pre><br>The network tab looks like in the image. In the first fetch there is the wildcard Access-Allow-Origin: &#x27;*&#x27; Header, in the second (failed) fetch there is none.<br><br>Do i need to set the header manually in the nginx config? I tried something, but that also didn&#x27;t work .<br><br>Currently on payload version 1.6.7",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1074094192575389836/1074094192743153735/image.png",
            "name": "image.png",
            "id": "1074094192743153735",
            "size": 35112,
            "url": "https://cdn.discordapp.com/attachments/1074094192575389836/1074094192743153735/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1074094192575389836/1074094192743153735/image.png",
            "height": 264,
            "width": 876,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1074094192575389836/1074094192952885378/image.png",
            "name": "image.png",
            "id": "1074094192952885378",
            "size": 34928,
            "url": "https://cdn.discordapp.com/attachments/1074094192575389836/1074094192952885378/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1074094192575389836/1074094192952885378/image.png",
            "height": 337,
            "width": 881,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1074094192575389836/1074094193179369562/image.png",
            "name": "image.png",
            "id": "1074094193179369562",
            "size": 35918,
            "url": "https://cdn.discordapp.com/attachments/1074094192575389836/1074094193179369562/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1074094192575389836/1074094193179369562/image.png",
            "height": 365,
            "width": 921,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "189202872800378881",
        "authorName": "bobbyZ",
        "authorAvatar": "f0988915755cddd9a231cf1afaafea65",
        "createdAtDate": 1676154411215
      },
      {
        "content": "Solved by deleting serverURL prop in the payload.config.ts file.",
        "fileAttachments": [],
        "authorID": "189202872800378881",
        "authorName": "bobbyZ",
        "authorAvatar": "f0988915755cddd9a231cf1afaafea65",
        "createdAtDate": 1676230654339
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Collection objects not showing",
      "id": "1073117141609496586",
      "guildId": "967097582721572934",
      "createdAt": 1675921464112
    },
    "messages": [
      {
        "content": "Hi guys, all of the docs under one collection are suddenly not showing up for me within the CMS<br><br>They still exist in the DB, and still return results as expected when queried via API<br><br>This occurred after establishing a relationship field within another collection, accidentally hitting &#x27;create new page&#x27; within that relationship field, then backing out of the create new page dialogue without doing anything<br><br>Restarting the server does not resolve the issue",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675921464112
      },
      {
        "content": "on v1.6.7",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675922516041
      },
      {
        "content": "creating a new item in the collection will show up just fine, it&#x27;s just the ones prior that don&#x27;t appear",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675922858743
      },
      {
        "content": "upon closer inspection the items that don&#x27;t show up are missing the _status value in the db - manually navigating to the item via collection and re-publishing will have it re-appear in the collection<br><br>so it seems i&#x27;ve solved this one myself 🙂",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675922924169
      },
      {
        "content": "but still a strange thing to occur",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675922930107
      },
      {
        "content": "Did you happen to upgrade from a &lt; 1.6.x version of payload?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675973690082
      },
      {
        "content": "You would need to run the migration script mentioned in the changelog if so 👍 <br><br><a href=\"https://github.com/payloadcms/payload/releases/tag/v1.6.1\">https://github.com/payloadcms/payload/releases/tag/v1.6.1</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675973714741
      },
      {
        "content": "strangely enough i just went from 1.6.4  to 1.6.7",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675990029967
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "How to customize dark / light mode branding",
      "id": "1075154495564173404",
      "guildId": "967097582721572934",
      "createdAt": 1676407207147
    },
    "messages": [
      {
        "content": "when white labeling using logo / icon, how can I tell the custom logo component what to render dark or light logo? is there a global parameter for knowing if we are working in light or dark mode ?",
        "fileAttachments": [],
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1676407207147
      },
      {
        "content": "Hey @Oron there is a local storage key <code>payload-theme</code> that&#x27;s value is light/dark that you can read from within your logo component",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1676410165966
      },
      {
        "content": "@damnstaychill but that only give me the user&#x27;s choice, could be auto and then it&#x27;s empty",
        "fileAttachments": [],
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1676410602107
      },
      {
        "content": "I need the actual &quot;real time&quot; theme that is used",
        "fileAttachments": [],
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1676410622998
      },
      {
        "content": "This should steer you in the right direction: <a href=\"https://discord.com/channels/967097582721572934/1065405847376769146/1065426167479402548\">https://discord.com/channels/967097582721572934/1065405847376769146/1065426167479402548</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676436653562
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "How to access relationship field full item data?",
      "id": "1074901824785625149",
      "guildId": "967097582721572934",
      "createdAt": 1676346965739
    },
    "messages": [
      {
        "content": "I must conditionally populate collection fields based on the selected relationship field. The relationship field only provides the ID of the selected item. As the admin fields don&#x27;t support async functions, there is no way to query more information about the selected item before updating other collection fields.<br><br>Is there some workaround to access the selected item data and based on that, alter other fields via admin config like condition?",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1676346965739
      },
      {
        "content": "Have you defined <code>maxDepth</code> on your relationship field? You should be able to return the full data from your relationship.<br><br>And then yes, you will be able to use hooks to populate the other fields in your collection.",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676914752076
      },
      {
        "content": "Bit more info here - yes, @KasparTr as you mentioned, conditional logic is not async intentionally. This is because those functions run VERY often, and should be heavily optimized. You could however have a &quot;virtual&quot; field with a custom React field component, that stores the data you need from the selected relationships. Your virtual field would simply fetch the relationship data, and return the relationship values that you need - but NOT store those values in the database. Rather, just show them. Then, that virtual field would be visible in the condition, which you could at that point use",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676926425089
      },
      {
        "content": "Hi @jmikrut, thanks for the extra info on this. Would it be possible to get an example of how you think this might work? I&#x27;m struggling to wrap my head around how to achieve this (maybe I&#x27;m thinking about it in a more complicated way than needs be, or maybe I just need more coffee 😆 )",
        "fileAttachments": [],
        "authorID": "93699784942034944",
        "authorName": "itsjxck",
        "authorAvatar": "2d16b59cd6bd3e7c108384738acef863",
        "createdAtDate": 1676975580946
      },
      {
        "content": "Hey @itsjxck checkout this demo of virtual fields, specifically look at the <code>nextEvent</code> field in the <code>Locations</code> collection - you would want to add something similar to this <a href=\"https://github.com/payloadcms/payload/tree/master/examples/virtual-fields\">https://github.com/payloadcms/payload/tree/master/examples/virtual-fields</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676977828525
      },
      {
        "content": "Thanks for the examples @jesschow, much appreciated! Unfortunately this didn&#x27;t seem to work for me as I needed the editor to dynamically update with this value during edit, and the hooks didn&#x27;t seem to run while actively editing the document. I did get a solution working, although it may not be the cleanest, by using a custom UI component:<br><pre><code class=\"hljs tsx\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span>, { useEffect } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { useField } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/components/forms&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">RelationshipField</span>, <span class=\"hljs-title class_\">UIField</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/types&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { useDocumentInfo } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/components/utilities&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">RelationExpansion</span>: <span class=\"hljs-title class_\">React</span>.<span class=\"hljs-property\">FC</span>&lt;<span class=\"hljs-title class_\">UIField</span>&gt; = <span class=\"hljs-function\">(<span class=\"hljs-params\">{ name }</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> refFieldName = name.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&quot;_&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>);\n\n  <span class=\"hljs-keyword\">const</span> {\n    <span class=\"hljs-attr\">collection</span>: { fields },\n  } = <span class=\"hljs-title function_\">useDocumentInfo</span>();\n\n  <span class=\"hljs-keyword\">const</span> relationField = fields.<span class=\"hljs-title function_\">find</span>(\n    <span class=\"hljs-function\">(<span class=\"hljs-params\">field</span>) =&gt;</span> field.<span class=\"hljs-property\">type</span> === <span class=\"hljs-string\">&quot;relationship&quot;</span> &amp;&amp; field.<span class=\"hljs-property\">name</span> === refFieldName\n  ) <span class=\"hljs-keyword\">as</span> <span class=\"hljs-title class_\">RelationshipField</span>;\n\n  <span class=\"hljs-keyword\">const</span> { <span class=\"hljs-attr\">value</span>: self, <span class=\"hljs-attr\">setValue</span>: setSelf } = <span class=\"hljs-title function_\">useField</span>({ <span class=\"hljs-attr\">path</span>: name });\n  <span class=\"hljs-keyword\">const</span> { <span class=\"hljs-attr\">value</span>: ref } = useField&lt;<span class=\"hljs-built_in\">string</span>&gt;({\n    <span class=\"hljs-attr\">path</span>: refFieldName,\n  });\n\n  <span class=\"hljs-title function_\">useEffect</span>(<span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (!ref) <span class=\"hljs-keyword\">return</span>;\n\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">getRelation</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) =&gt; {\n      <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">const</span> relationFetch = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(\n          <span class=\"hljs-string\">`/api/<span class=\"hljs-subst\">${relationField.relationTo}</span>/<span class=\"hljs-subst\">${ref}</span>`</span>\n        );\n\n        <span class=\"hljs-keyword\">const</span> relation = <span class=\"hljs-keyword\">await</span> relationFetch.<span class=\"hljs-title function_\">json</span>();\n\n        <span class=\"hljs-title function_\">setSelf</span>(relation);\n      } <span class=\"hljs-keyword\">catch</span> (error) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(error);\n      }\n    };\n\n    <span class=\"hljs-title function_\">getRelation</span>();\n  }, [ref]);\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">code</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">display:</span> &quot;<span class=\"hljs-attr\">none</span>&quot; }}&gt;</span>\n      {JSON.stringify({ relationField, ref, self })}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">code</span>&gt;</span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">RelationExpansion</span>;</code></pre>",
        "fileAttachments": [],
        "authorID": "93699784942034944",
        "authorName": "itsjxck",
        "authorAvatar": "2d16b59cd6bd3e7c108384738acef863",
        "createdAtDate": 1676979445751
      },
      {
        "content": "In my collection I can use this to expand the relation, using an underscore to prefix the name of the field i want to expand:<br><pre><code class=\"hljs ts\">    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;type&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;relationship&quot;</span>,\n      <span class=\"hljs-attr\">relationTo</span>: <span class=\"hljs-title class_\">ItemTypes</span>.<span class=\"hljs-property\">slug</span>,\n      <span class=\"hljs-attr\">hasMany</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;_type&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;ui&quot;</span>,\n      <span class=\"hljs-attr\">admin</span>: {\n        <span class=\"hljs-attr\">components</span>: {\n          <span class=\"hljs-title class_\">Field</span>: <span class=\"hljs-title class_\">RelationExpansion</span>,\n        },\n      },\n    },</code></pre>",
        "fileAttachments": [],
        "authorID": "93699784942034944",
        "authorName": "itsjxck",
        "authorAvatar": "2d16b59cd6bd3e7c108384738acef863",
        "createdAtDate": 1676979533541
      },
      {
        "content": "@KasparTr assuming you have a similar usecase to myself, this might also work for you; you can then use this field in conditionals:<br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">admin</span>: {\n  <span class=\"hljs-attr\">condition</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> data.<span class=\"hljs-property\">_type</span>?.&lt;field_on_relation&gt;,\n},</code></pre>",
        "fileAttachments": [],
        "authorID": "93699784942034944",
        "authorName": "itsjxck",
        "authorAvatar": "2d16b59cd6bd3e7c108384738acef863",
        "createdAtDate": 1676979702115
      },
      {
        "content": "@itsjxck love it, the custom component looks great 🙌",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676980014276
      },
      {
        "content": "This is great, very useful information. Will implement like this, thank you @jesschow and @itsjxck",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1677031394534
      }
    ],
    "messageCount": 9
  },
  {
    "info": {
      "name": "UI Fields",
      "id": "1079639829794529350",
      "guildId": "967097582721572934",
      "createdAt": 1677476594161
    },
    "messages": [
      {
        "content": "Is it possible to get data from context within UI type fields? <br><br>as an example : <br>i would like to display an Image from URL in the Admin panel which is stored in another field of the same collection entry",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677476594161
      },
      {
        "content": "Try with the useFormFields React hook 😄<br><br><a href=\"https://payloadcms.com/docs/admin/hooks\">https://payloadcms.com/docs/admin/hooks</a>",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1677482307942
      },
      {
        "content": "It&#x27;s a great way to get the state of a field without triggering any heavy duty rerenders",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1677482331968
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Admin UI filtering not working as expected",
      "id": "1078716992028151950",
      "guildId": "967097582721572934",
      "createdAt": 1677256572492
    },
    "messages": [
      {
        "content": "I&#x27;m seeing an issue when filtering in the Admin UI where it&#x27;s not finding a relationship with the &quot;is in&quot; query for certain relationships. It should find it, but it even goes so far as to display it the query is &quot;not in&quot; when clearly it should be there (see picture). This same filtering does work for other relationships, so I&#x27;m not sure if this is a Payload issue or an implementation issue on my part, but any insight would be appreciated!",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078716992028151950/1078716992187551825/is_not_in.png",
            "name": "is_not_in.png",
            "id": "1078716992187551825",
            "size": 287161,
            "url": "https://cdn.discordapp.com/attachments/1078716992028151950/1078716992187551825/is_not_in.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078716992028151950/1078716992187551825/is_not_in.png",
            "height": 1710,
            "width": 2600,
            "contentType": "image/png",
            "description": "Filtering by not in finds it when it shouldn't",
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078716992028151950/1078716992514703391/is_in.png",
            "name": "is_in.png",
            "id": "1078716992514703391",
            "size": 160618,
            "url": "https://cdn.discordapp.com/attachments/1078716992028151950/1078716992514703391/is_in.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078716992028151950/1078716992514703391/is_in.png",
            "height": 1222,
            "width": 2662,
            "contentType": "image/png",
            "description": "Filtering does not find relationship when it should",
            "ephemeral": false
          }
        ],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1677256572492
      },
      {
        "content": "Hi @TheDunco - In your case, in order for the <code>is in</code> operator to return your expected result - you would need to input the <strong>entire</strong> Stripes string value in the value input box.<br><br>E.g. <code>| Stripes | is in | Cust: (Hex/Star, IN/MM) High Leverage, (Hex) Precise Tip Geometry, (Hex) High-Performance Finish...</code><br><br>Does this make sense? Let me know!",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1677271931314
      },
      {
        "content": "That does make sense I suppose, thanks. This makes me think the &quot;is in&quot; operation is more like an &quot;equals&quot; operation, though, which is slightly confusing for polymorphic (many-to-many) relationships. Are there plans to implement more of a &quot;contains&quot; or &quot;includes&quot; query? Because members of my team would like the ability to query relationships in the manner I was initially expecting the &quot;is in&quot; to work.",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1677273297716
      },
      {
        "content": "And/or is there a method for getting this functionality with some fancy logic or something that&#x27;s currently implemented that I&#x27;m not aware of?",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1677273916973
      },
      {
        "content": "Yup! In the dropdown of the filter options, we have a <code>contains</code> operation which will do what you were initially expecting to happen",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1677274769028
      },
      {
        "content": "I&#x27;m not seeing that option for this many-to-many &quot;Stripes&quot; field.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078716992028151950/1078795967362514974/image.png",
            "name": "image.png",
            "id": "1078795967362514974",
            "size": 138686,
            "url": "https://cdn.discordapp.com/attachments/1078716992028151950/1078795967362514974/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078716992028151950/1078795967362514974/image.png",
            "height": 762,
            "width": 2580,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1677275401735
      },
      {
        "content": "Ahh - so right now - for  <code>array</code> fields, you won&#x27;t have access to the <code>contains</code> operation. You would use the <code>is in</code> operation. <br><br>Filtering on relationships can only be done by ID. If you want to filter on nested fields, you need to use the rest api. So a <em>contains</em> approach wouldn&#x27;t work in the UI",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1677277509000
      },
      {
        "content": "Ah, ok, that makes sense. We can get by filtering by ID. Thanks!",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1677283397730
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "How unstable is next-payload?",
      "id": "1079890412417859666",
      "guildId": "967097582721572934",
      "createdAt": 1677536337714
    },
    "messages": [
      {
        "content": "It&#x27;s currently at version 0.0.9, which seems like a long way off from 1.0 ... but I&#x27;d really like to use it. At the same time though, I don&#x27;t want to start totally bricking sites if I use it. I was wondering if I could get a feel from the team on just how unstable it is in its current state?",
        "fileAttachments": [],
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1677536337714
      },
      {
        "content": "The plan is for this to hit 1.0 in the next few weeks. No <em>huge</em> changes are planned, but no guarantees. I think the disclaimer at the top of the README is accurate in that you should expect breaking changes or bugs.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677591735902
      },
      {
        "content": "Ah okay, thank you @denolfe !",
        "fileAttachments": [],
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1677593976466
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "\"required\" and \"validate\" both prevent \"beforeValidate\"",
      "id": "1071412742273105950",
      "guildId": "967097582721572934",
      "createdAt": 1675515103644
    },
    "messages": [
      {
        "content": "If I have a field with a <code>beforeValidate</code> hook, when I set <code>required: true</code> or a custom <code>validate</code> function, failure to validate either (when editing in the admin area) means that the validation fails in the browser and so the <code>beforeValidate</code> hook is never fired.<br><br>With the <code>validate</code> function I can sort-of get around this by checking if the <code>payload</code> argument is undefined, but this is an odd behaviour anyway as logic would suggest that if there is a <code>beforeValidate</code> hook then it should fire before <code>required</code> or <code>validate</code> are checked.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675515103644
      },
      {
        "content": "this is all expected actually",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675519043686
      },
      {
        "content": "beforeValidate only runs on the server, but your validate function runs both on the client AND the server",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675519052809
      },
      {
        "content": "all hooks on fields and collections run in the server only",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675519084392
      },
      {
        "content": "BUT",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675519088462
      },
      {
        "content": "we are going to begin exposing more client-side hooks over time and those will all be keyed to <code>admin.hooks</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675519106319
      },
      {
        "content": "Ok, so is it possible to have a field that is both required and set using beforeValidate based on a selection in other fields?",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675521917503
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Problem trying to create a build for production with Docker Compose",
      "id": "1079527355367829527",
      "guildId": "967097582721572934",
      "createdAt": 1677449778168
    },
    "messages": [
      {
        "content": "Nobody, please? Can&#x27;t figure it out 😦<br><br>With these standard scripts:<br><pre><code class=\"hljs json\"><span class=\"hljs-attr\">&quot;scripts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;dev&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts nodemon&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;build:payload&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts payload build&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;build:server&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;tsc&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;build&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;yarn copyfiles &amp;&amp; yarn build:payload &amp;&amp; yarn build:server&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;serve&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;cross-env PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=production node dist/server.js&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;copyfiles&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;copyfiles -u 1 \\&quot;src/**/*.{html,css,scss,ttf,woff,woff2,eot,svg,jpg,png}\\&quot; dist/&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;generate:types&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts payload generate:types&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;generate:graphQLSchema&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts payload generate:graphQLSchema&quot;</span>\n<span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span></code></pre><br><br>This Dockerfile:<br><pre><code class=\"hljs docker\"><span class=\"hljs-keyword\">FROM</span> node:<span class=\"hljs-number\">18</span>-alpine as base\n\n<span class=\"hljs-keyword\">FROM</span> base as builder\n\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /app</span>\n\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> . .</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> yarn install</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> yarn build</span>\n\n<span class=\"hljs-keyword\">FROM</span> base as runtime\n\n<span class=\"hljs-keyword\">ENV</span> NODE_ENV=production\n\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /app</span>\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> package*.json  ./</span>\n\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> yarn install --production</span>\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> --from=builder /app ./dist</span>\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> --from=builder /app ./build</span>\n\n<span class=\"hljs-keyword\">EXPOSE</span> <span class=\"hljs-number\">3000</span>\n\n<span class=\"hljs-keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"hljs-string\">&quot;node&quot;</span>, <span class=\"hljs-string\">&quot;dist/server.js&quot;</span>]</span></code></pre><br><br>And this Compose file:<br><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&#x27;3&#x27;</span>\n\n<span class=\"hljs-attr\">services:</span>\n  <span class=\"hljs-attr\">payload:</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;3000:3000&quot;</span>\n    <span class=\"hljs-attr\">build:</span> <span class=\"hljs-string\">.</span>\n    <span class=\"hljs-attr\">depends_on:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">mongo</span>\n    <span class=\"hljs-attr\">environment:</span>\n      <span class=\"hljs-attr\">MONGODB_URI:</span> <span class=\"hljs-string\">mongodb://mongo:27017/payload</span>\n      <span class=\"hljs-attr\">PORT:</span> <span class=\"hljs-number\">3000</span>\n    <span class=\"hljs-attr\">networks:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">network</span>\n\n  <span class=\"hljs-attr\">mongo:</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">mongo:latest</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;27017:27017&quot;</span>\n    <span class=\"hljs-attr\">command:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--storageEngine=wiredTiger</span>\n    <span class=\"hljs-attr\">volumes:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">data:/data/db</span>\n    <span class=\"hljs-attr\">logging:</span>\n      <span class=\"hljs-attr\">driver:</span> <span class=\"hljs-string\">none</span>\n    <span class=\"hljs-attr\">networks:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">network</span>\n\n<span class=\"hljs-attr\">volumes:</span>\n  <span class=\"hljs-attr\">data:</span>\n\n\n<span class=\"hljs-attr\">networks:</span>\n  <span class=\"hljs-attr\">network:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">traefik-network</span></code></pre><br><br>I should be able to get it working. The Payload config is located at <code>src/payload.config.ts</code>, however this error occurs:<br><pre><code class=\"hljs\">#0 3.786 Error: Error: can&#x27;t find the configuration file located at /app/src/payload.config.ts.\n#0 3.786     at build (/app/node_modules/payload/dist/bin/build.js:35:15)</code></pre>",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1677449778168
      },
      {
        "content": "Both Dockerfile and Compose file are located at the root, I run the build with <code>docker compose up</code>, the Dockerfile uses Node as base, then the builder stage happens, where everything is copied and builded, but that&#x27;s where the error happens, and it doesn&#x27;t make any sense why that happens. I ignore everything in <code>dockerignore</code> that isn&#x27;t needed at first, like <code>node_modules, dist and build</code> folders",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1677449800787
      },
      {
        "content": "The build:payload script has a correct file path to the Payload config<br>Happens when running it in Docker on Linux and Windows",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1677449809687
      },
      {
        "content": "These are the contents of the image before build happens, everything looks OK",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079527355367829527/1079533958829715546/cmd_A6WCdHCiFk.png",
            "name": "cmd_A6WCdHCiFk.png",
            "id": "1079533958829715546",
            "size": 45317,
            "url": "https://cdn.discordapp.com/attachments/1079527355367829527/1079533958829715546/cmd_A6WCdHCiFk.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079527355367829527/1079533958829715546/cmd_A6WCdHCiFk.png",
            "height": 609,
            "width": 1692,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1677451352611
      },
      {
        "content": "These are the contents of the image before <code>yarn install</code> happens",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079527355367829527/1079534763293032501/cmd_EbN8sKGdkA.png",
            "name": "cmd_EbN8sKGdkA.png",
            "id": "1079534763293032501",
            "size": 4358,
            "url": "https://cdn.discordapp.com/attachments/1079527355367829527/1079534763293032501/cmd_EbN8sKGdkA.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079527355367829527/1079534763293032501/cmd_EbN8sKGdkA.png",
            "height": 53,
            "width": 1560,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1677451544414
      },
      {
        "content": "I&#x27;m done, the problem was that import for one utility had uppercase <code>URL</code> in it, while the correct path was <code>Url</code>. Because Windows doesn&#x27;t care about uppercase / lowercase, it worked just fine, but Linux doesn&#x27;t care and the build will then throw an error.<br><br>On the other hand, Payload reported a false positive (false error) about the config file because in this block:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> build = <span class=\"hljs-keyword\">async</span> (): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-built_in\">void</span>&gt; =&gt; {\n  <span class=\"hljs-keyword\">try</span> {\n    <span class=\"hljs-keyword\">const</span> config = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">loadConfig</span>();\n\n    <span class=\"hljs-keyword\">const</span> webpackProdConfig = <span class=\"hljs-title function_\">getWebpackProdConfig</span>(config);\n\n    <span class=\"hljs-title function_\">webpack</span>(webpackProdConfig, <span class=\"hljs-function\">(<span class=\"hljs-params\">err, stats</span>) =&gt;</span> { <span class=\"hljs-comment\">// Stats Object</span>\n      <span class=\"hljs-keyword\">if</span> (err || stats.<span class=\"hljs-title function_\">hasErrors</span>()) {\n        <span class=\"hljs-comment\">// Handle errors here</span>\n\n        <span class=\"hljs-keyword\">if</span> (stats) {\n          <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(stats.<span class=\"hljs-title function_\">toString</span>({\n            <span class=\"hljs-attr\">chunks</span>: <span class=\"hljs-literal\">false</span>,\n            <span class=\"hljs-attr\">colors</span>: <span class=\"hljs-literal\">true</span>,\n          }));\n        } <span class=\"hljs-keyword\">else</span> {\n          <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(err.<span class=\"hljs-property\">message</span>);\n        }\n      }\n    });\n  } <span class=\"hljs-keyword\">catch</span> (err) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(err);\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">`Error: can&#x27;t find the configuration file located at <span class=\"hljs-subst\">${rawConfigPath}</span>.`</span>);\n  }\n};</code></pre><br><br>It somehow catched the import error and throwed a new error with the message below which was misleading<br> <pre><code class=\"hljs\">throw new Error(`Error: can&#x27;t find the configuration file located at ${rawConfigPath}.`);</code></pre>",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1677453838929
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Is it possible to catch errors with Sentry?",
      "id": "1077585986873204747",
      "guildId": "967097582721572934",
      "createdAt": 1676986919850
    },
    "messages": [
      {
        "content": "<a href=\"https://sentry.io\">https://sentry.io</a>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1676986919850
      },
      {
        "content": "There is an undocummented <code>afterError</code> hook that you can use for the backend for this purpose.<br>In your config you can do this: <br><pre><code class=\"hljs\">buildConfig({\n // collections, etc.\n  hooks: { afterError (err, res) =&gt; { \n    // call your sentry code here\n  }\n});</code></pre><br>On the frontend I would probably set up the error boundary in a provider in <code>admin.components.providers</code> or your own <code>index.tsx</code>",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676998466926
      },
      {
        "content": "The afterError hook is called in an express middleware for REST, or in Payload&#x27;s GraphQL code. I don&#x27;t believe it gets called when using the local API.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676998573270
      },
      {
        "content": "It would be interesting to know which request triggered the error, otherwise Sentry won&#x27;t be able to track much. How about a breaking change that would change the <code>errorHandler</code> arguments to a single object with:<br><pre><code class=\"hljs ts\"><span class=\"hljs-title function_\">afterError</span>({\n  <span class=\"hljs-attr\">error</span>: <span class=\"hljs-title class_\">Error</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-title class_\">ErrorResponse</span>,\n  request?: <span class=\"hljs-title class_\">PayloadRequest</span>\n  response?: <span class=\"hljs-title class_\">ExpressResponse</span>\n}):\n  <span class=\"hljs-comment\">// Send this response if the error originated from HTTP request</span>\n  | <span class=\"hljs-title class_\">ErrorResponse</span>\n  <span class=\"hljs-comment\">// Don&#x27;t send a response, the handler take care of it</span>\n  | <span class=\"hljs-literal\">null</span></code></pre><br>This would cover both local API and HTTP contexts",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677071559527
      },
      {
        "content": "I&#x27;d agree, that would be way more helpful.<br>If I can remember back to why I did this 2 years ago this way it had to do with supporting both GraphQL and REST API with the same hook.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677102048409
      },
      {
        "content": "I&#x27;m sure there is room for improvement on this and adding some documentation and tests around this would be 💯",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677102112040
      },
      {
        "content": "Received my first errors 👌",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677134930123
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "i18n descriptions",
      "id": "1068190345130672169",
      "guildId": "967097582721572934",
      "createdAt": 1674746824296
    },
    "messages": [
      {
        "content": "Translating descriptions in the admin panel. How should we do this?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674746824296
      },
      {
        "content": "@Exo figured we could talk here so we are not talking over others in the other thread.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674746847957
      },
      {
        "content": "I had a thought",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674746853015
      },
      {
        "content": "Since descriptions can be react components, I am wondering if you could use the <code>useTranslation</code> hook inside a component to determine what language the user has set, and then display a description based on that. That might get you by for now!",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674747040626
      },
      {
        "content": "Oh that&#x27;s an awesome idea! I thought about maybe discussing a PR to support i18n objects for the descriptions in the payload configuration after my exams",
        "fileAttachments": [],
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1674812159852
      },
      {
        "content": "So it would be accessible to users who are not happy to write their own react code like that. But it seems to be quite a bit of work so I can&#x27;t get into it just yet",
        "fileAttachments": [],
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1674812205995
      },
      {
        "content": "Yep I still think supporting translations in descriptions would be beneficial - but yeah a bit of work. Just an alternative for now 🙂",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674823492506
      },
      {
        "content": "One thing I was wondering about: There are singular and plural labels, would it make more sense to order it s.t.<br>{en: singular, plural; es: singular, plural...}  or rather {singular: en, es... ; plural: en, es ..}?",
        "fileAttachments": [],
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1674908969308
      },
      {
        "content": "Hey @Exo following up here, another conversation sparked my memory of this convo. We were talking about translating input descriptions? So that when an editor changes their language from the account page, the description will show the translated version, right?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675436930018
      },
      {
        "content": "This is currently possible and I was mistaken the last time we talked. You can currently use an object as the description and the description will translate when an editor has a different language selected -- it is based <em>not the locale</em>, but the actual language they are viewing the admin panel in, which is ideal!<br><br>Just figured I would follow up and let you know, what you were looking for, was there the whole time 😅",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675437097794
      },
      {
        "content": "Oh wow that is even better then! I saw how payload automatically deduces the correct language for some parts of the UI since my coworker had all the buttons with spanish texts, but I was not sure it would work with descriptions too! Will check it out over the weekend! Thanks for letting me know 🙂 payload never fails to amaze me haha",
        "fileAttachments": [],
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1675437435913
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "Deployment in google cloud",
      "id": "1079171093622968352",
      "guildId": "967097582721572934",
      "createdAt": 1677364838749
    },
    "messages": [
      {
        "content": "Can you explain me how to deploy Payload in Google Cloud services?",
        "fileAttachments": [],
        "authorID": "898767999287320607",
        "authorName": "Porfirio",
        "authorAvatar": "d66ff8314c6b768bd32c2a3dd7e54771",
        "createdAtDate": 1677364838749
      },
      {
        "content": "Hi! Theres interesting conversation going on about Payload with Google Cloud - <a href=\"https://discord.com/channels/967097582721572934/1075750048924708865\">https://discord.com/channels/967097582721572934/1075750048924708865</a>. I thinks it&#x27;s what you looking for and could help you 🙂",
        "fileAttachments": [],
        "authorID": "393456218590674944",
        "authorName": "wlodar",
        "authorAvatar": "bbcdf0ffa334075be7108e88c53d9587",
        "createdAtDate": 1677368808384
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Access Local API in Custom View",
      "id": "1077971330068119662",
      "guildId": "967097582721572934",
      "createdAt": 1677078792827
    },
    "messages": [
      {
        "content": "I am trying to access Payload Local Api in my custom view that is overwriting the &quot;List&quot; view of one collection, if I import payload and I try to access payload.find I get <code>payload__WEBPACK_IMPORTED_MODULE_1__.default.find is not a function</code>",
        "fileAttachments": [],
        "authorID": "1077612284869885973",
        "authorName": "Enrico",
        "authorAvatar": null,
        "createdAtDate": 1677078792827
      },
      {
        "content": "You cannot access Local API from front-end if I understood correctly. You must use either REST or GraphQL. In admin panel there might be some ready-made way to access the REST API. Maybe using React hooks?",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1677079077807
      },
      {
        "content": "Now i understand, thank you",
        "fileAttachments": [],
        "authorID": "1077612284869885973",
        "authorName": "Enrico",
        "authorAvatar": null,
        "createdAtDate": 1677079258514
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Errors when attempting `payload` access",
      "id": "1042513404390285392",
      "guildId": "967097582721572934",
      "createdAt": 1668624964569
    },
    "messages": [
      {
        "content": "Similar to the Cell Component post below, I&#x27;m getting this error when trying to import payload and use the api within a cell component. Seems like the proposed solution of using the REST api can&#x27;t be the only way, must be missing something silly. Here&#x27;s the error:<br><br><code>VM536:1 Uncaught TypeError: payload__WEBPACK_IMPORTED_MODULE_1__.findByID is not a function</code><br><br>and the code throwing it:<br><pre><code class=\"hljs\">import React from &#x27;react&#x27;;\nimport payload from &#x27;payload&#x27;;\n  \n  \nconst SyndicationCell = (props) =&gt; {\n    const { field, colIndex, collection, cellData, rowData } = props;\n    const result = payload.findByID({\n        collection: &#x27;blogs&#x27;, // required\n        id: rowData.id, // required\n    })\n    return &lt;span&gt;{rowData.id}&lt;/span&gt;;\n  };\n  \nexport default SyndicationCell;</code></pre>",
        "fileAttachments": [],
        "authorID": "778799229988110337",
        "authorName": "seth",
        "authorAvatar": "db6ffc89f556a13d2ec8da4e72dc44dd",
        "createdAtDate": 1668624964569
      },
      {
        "content": "The error you&#x27;re seeing is because webpack cannot handle all the backend code that comes with Payload when doing that import.<br>This is not the right way for the frontend component to get the data you need.<br><br>You have 3 options for getting data in your component.<br>1) use the props on cell, which you&#x27;re already doing.<br>2) Use the relationship provider that wraps the table to get relational data (which looks like what you need to do)<br>3) do HTTP requests using <code>fetch</code> or a package like <code>axios</code> in your component or in a custom provider.<br><br>We haven&#x27;t documented that RelationshipProvder anywhere in the docs, but this might be a good thing to add since there isn&#x27;t a reason why you can&#x27;t use it in your custom cell components.<br><a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/RelationshipProvider/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/RelationshipProvider/index.tsx</a><br>Note that since you&#x27;re replacing the cell and normally that data is requested from the cell, you might also need to copy some parts of the relationship cell to get request the docs get loaded by the relationship provider: <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/Cell/field-types/Relationship/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/Cell/field-types/Relationship/index.tsx</a>",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1668626366517
      },
      {
        "content": "Yea I&#x27;m in a bit of a unique situation as I&#x27;m effectively creating a separate collection to act as a traditional M2M table with additional attributes on the relationship - but for UX reasons I&#x27;d like to manage that within one end of the M2M",
        "fileAttachments": [],
        "authorID": "778799229988110337",
        "authorName": "seth",
        "authorAvatar": "db6ffc89f556a13d2ec8da4e72dc44dd",
        "createdAtDate": 1668626554516
      },
      {
        "content": "(So that when viewing a blog post you can see all the &quot;sites&quot; it&#x27;s been syndicated to)",
        "fileAttachments": [],
        "authorID": "778799229988110337",
        "authorName": "seth",
        "authorAvatar": "db6ffc89f556a13d2ec8da4e72dc44dd",
        "createdAtDate": 1668626598280
      },
      {
        "content": "That is cool!",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1668626622807
      },
      {
        "content": "So you effectively have a collection acting as a join table?",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1668626637071
      },
      {
        "content": "So I suppose I could expose this data with a afterRead hook and a computed prop",
        "fileAttachments": [],
        "authorID": "778799229988110337",
        "authorName": "seth",
        "authorAvatar": "db6ffc89f556a13d2ec8da4e72dc44dd",
        "createdAtDate": 1668626639444
      },
      {
        "content": "I would just make another <code>fetch</code> request in your cell type then.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1668626665059
      },
      {
        "content": "The relationship provider won&#x27;t help since it is querying with depth 0 and you would need depth 1 to get the data you&#x27;re after",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1668626688391
      },
      {
        "content": "I&#x27;m gonna be trying to take this one step further allowing for creation of new relationships inline, perhaps with a modal",
        "fileAttachments": [],
        "authorID": "778799229988110337",
        "authorName": "seth",
        "authorAvatar": "db6ffc89f556a13d2ec8da4e72dc44dd",
        "createdAtDate": 1668626693667
      },
      {
        "content": "Hi, @seth. I&#x27;m also doing something similar that might require M2M relationship with additional attributes in payload (say, <code>Books</code> and <code>Tags</code>, with additional attributes)<br><br>How do you plan on creating new relationships inline? I&#x27;m trying to find a solution but i&#x27;m not sure what&#x27;s the most elegant way to do it.",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1668671282275
      },
      {
        "content": "@bombnp I think it&#x27;ll have to be a custom component",
        "fileAttachments": [],
        "authorID": "778799229988110337",
        "authorName": "seth",
        "authorAvatar": "db6ffc89f556a13d2ec8da4e72dc44dd",
        "createdAtDate": 1669665756217
      },
      {
        "content": "Necroing this thread to ask @dribbens if something like this would be preferred method of utilizing the <code>RelationshipProvider</code> in a custom <code>Cell</code> component. <br><br><pre><code class=\"hljs\">import { useListRelationships } from &quot;/node_modules/payload/dist/admin/components/views/collections/List/RelationshipProvider&quot;;\n\nconst ImageCell = (props) =&gt; {\n  const { field, colIndex, collection, cellData, rowData } = props;\n\n  const { getRelationships, documents } = useListRelationships();\n\n  useEffect(() =&gt; {\n    getRelationships([\n      {\n        value: cellData,\n        relationTo: field.relationTo,\n      },\n    ]);\n  }, [getRelationships]);\n\n  return (\n    &lt;&gt;\n      {documents?.[field.relationTo]?.[cellData]?.sizes?.thumbnail?.url &amp;&amp; (\n        &lt;img\n          src={documents[field.relationTo][cellData].sizes.thumbnail.url}\n          style={imageStyle}\n          height={size}\n          width={size}\n        &gt;&lt;/img&gt;\n      )}\n    &lt;/&gt;\n  );\n};</code></pre><br>It looks like <code>documents</code> object holds returned data on all relationships in the collection type, not just the <code>cellData</code> passed originally into <code>getRelationships()</code> ? Therefore the related data I am interested in must be accessed by accessing these keys on <code>documents</code>  -&gt; <code>documents[field.relationTo][cellData]</code> ... which is not what I expected having passed that information into <code>getRelationships()</code> originally.",
        "fileAttachments": [],
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675186575336
      },
      {
        "content": "@jellygatorade That is expected. The relationship provider is meant to reduce duplication of requests on the list view. It is written this way so that if you have multiple columns of redundant relationships being loaded in, it can be as efficient as possible by only accessing that data once from the DB. I don&#x27;t see a problem with what you have above, nice job!",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675271566451
      },
      {
        "content": "Great! Appreciate the insight. Thanks!",
        "fileAttachments": [],
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675276901924
      }
    ],
    "messageCount": 14
  },
  {
    "info": {
      "name": "Custom Graphql query: configuration",
      "id": "1072462099671957504",
      "guildId": "967097582721572934",
      "createdAt": 1675765289944
    },
    "messages": [
      {
        "content": "Morning, suffering from same issue. Try to setup a custom query for graphql and having issues retrieving docs. Try following this thread, but am not sure how to implement the BuildPaginatedListType<br>graphQL: {<br>    schemaOutputFile: path.resolve(__dirname, &#x27;generated-schema.graphql&#x27;),<br>    queries(GraphQL, payload) {<br>      return {<br>        PlacesByCityNameQuery: {<br>          type: buildPaginatedListType(&quot;PlacesByCityName&quot;,GraphQL.?)<br>          ,<br>          args: {<br>            name: {<br>              type: new GraphQL.GraphQLNonNull(GraphQL.GraphQLString),<br>            }<br><br>          },<br>          resolve: PlacesByCityName<br>        }<br>      }<br>    },<br>  },<br>I guess, my question would be what should I use for docType?",
        "fileAttachments": [],
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675765289944
      },
      {
        "content": "<a href=\"https://discord.com/channels/967097582721572934/1062719495946387486/1062719495946387486\">https://discord.com/channels/967097582721572934/1062719495946387486/1062719495946387486</a>",
        "fileAttachments": [],
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675786236270
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "duplicate page not working",
      "id": "1052475381531299890",
      "guildId": "967097582721572934",
      "createdAt": 1671000085004
    },
    "messages": [
      {
        "content": "[<br>        {<br>            id: &quot;67&quot;,<br>            category_code: &quot;eLearning&quot;,<br>            title: &quot;eLearning&quot;,<br>            slug: &quot;portfolio/oneclick-portfolio&quot;,<br>            description: &quot;eLearning&quot;,<br>            portfolio_type: &quot;1&quot;,<br>            portfolio_file_path: &quot;ddssdvddfdfgvfgefg&quot;,<br>            file_name: &quot;&quot;,<br>            status: &quot;1&quot;,<br>            created_by: &quot;Demo User 2&quot;<br>        },<br>]",
        "fileAttachments": [],
        "authorID": "1041992215632805888",
        "authorName": "Shubham27",
        "authorAvatar": null,
        "createdAtDate": 1671434752148
      },
      {
        "content": "@Shubham27 apologies for the delay - are you still experiencing this issue?",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1672910794427
      },
      {
        "content": "yes @jesschow",
        "fileAttachments": [],
        "authorID": "1041992215632805888",
        "authorName": "Shubham27",
        "authorAvatar": null,
        "createdAtDate": 1672914007959
      },
      {
        "content": "<a href=\"https://docs.google.com/document/d/1JYuIX7RXVhUslCm5oRXJKj7FY2ds7r-1VIAhkn28CCM/edit\">https://docs.google.com/document/d/1JYuIX7RXVhUslCm5oRXJKj7FY2ds7r-1VIAhkn28CCM/edit</a>",
        "fileAttachments": [],
        "authorID": "1041992215632805888",
        "authorName": "Shubham27",
        "authorAvatar": null,
        "createdAtDate": 1673330510910
      },
      {
        "content": "@jesschow here is the problem description that i am getting. hope it helps you understand issue that i am facing.",
        "fileAttachments": [],
        "authorID": "1041992215632805888",
        "authorName": "Shubham27",
        "authorAvatar": null,
        "createdAtDate": 1673330557263
      },
      {
        "content": "@Shubham27 The payload config is meant to be static. I think what you should instead do is create a custom field, possibly using the new <code>json</code> field type. You would render a custom select component that would fetch data from your endpoint and when the user submits, you add the data to the json field.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1673356279890
      },
      {
        "content": "@Jarrod can you share me small example of custom select field with dynamic options or any other reference that related to it.",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1674110151835
      },
      {
        "content": "Does this mean I can&#x27;t reference data from one source (i.e. text input) and present it in a dropdown? More info on my scenario: <a href=\"https://discord.com/channels/967097582721572934/1072241616917643454/1072241616917643454\">https://discord.com/channels/967097582721572934/1072241616917643454/1072241616917643454</a>",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675780837189
      },
      {
        "content": "Hiii @remy i&#x27;m want to render data in a select menu using custom select field",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1675944360888
      },
      {
        "content": "i tried from this <a href=\"https://payloadcms.com/docs/admin/components#fields:~:text=%7D%3B-,Field%20Component,-When%20writing%20your\">https://payloadcms.com/docs/admin/components#fields:~:text=%7D%3B-,Field%20Component,-When%20writing%20your</a> but it doesn&#x27;t store selected value in api",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1675944555308
      },
      {
        "content": "I managed to store the selected value with useFormFields - <a href=\"https://payloadcms.com/docs/admin/hooks#useformfields\">https://payloadcms.com/docs/admin/hooks#useformfields</a>. Hope that helps",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676047211568
      },
      {
        "content": "thanks @remy i&#x27;ll try it.",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676283924845
      },
      {
        "content": "hello @remy i tried but didn&#x27;t work",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676549765884
      },
      {
        "content": "this is the my code can you help me",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1052475381531299890/1075752910018859029/Screenshot_from_2023-02-16_17-46-57.png",
            "name": "Screenshot_from_2023-02-16_17-46-57.png",
            "id": "1075752910018859029",
            "size": 260774,
            "url": "https://cdn.discordapp.com/attachments/1052475381531299890/1075752910018859029/Screenshot_from_2023-02-16_17-46-57.png",
            "proxyURL": "https://media.discordapp.net/attachments/1052475381531299890/1075752910018859029/Screenshot_from_2023-02-16_17-46-57.png",
            "height": 768,
            "width": 1366,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1052475381531299890/1075752910270513312/Screenshot_from_2023-02-16_17-47-35.png",
            "name": "Screenshot_from_2023-02-16_17-47-35.png",
            "id": "1075752910270513312",
            "size": 191236,
            "url": "https://cdn.discordapp.com/attachments/1052475381531299890/1075752910270513312/Screenshot_from_2023-02-16_17-47-35.png",
            "proxyURL": "https://media.discordapp.net/attachments/1052475381531299890/1075752910270513312/Screenshot_from_2023-02-16_17-47-35.png",
            "height": 768,
            "width": 1366,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676549880375
      },
      {
        "content": "<code>useFormFields</code>, not <code>useField</code>",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676560484238
      },
      {
        "content": "<pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> { fields, dispatch } = <span class=\"hljs-title function_\">useFormFields</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">[fields, dispatch]</span>) =&gt;</span> ({ fields, dispatch }))\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;fields&#x27;</span>, <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(fields))</code></pre>",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676560605308
      },
      {
        "content": "hii @remy still not working it&#x27;s not storing selected value even it&#x27;s not create a field",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676617579321
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1052475381531299890/1076037009983934534/Screenshot_from_2023-02-17_12-36-29.png",
            "name": "Screenshot_from_2023-02-17_12-36-29.png",
            "id": "1076037009983934534",
            "size": 116866,
            "url": "https://cdn.discordapp.com/attachments/1052475381531299890/1076037009983934534/Screenshot_from_2023-02-17_12-36-29.png",
            "proxyURL": "https://media.discordapp.net/attachments/1052475381531299890/1076037009983934534/Screenshot_from_2023-02-17_12-36-29.png",
            "height": 768,
            "width": 1366,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676617615035
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1052475381531299890/1076037096550187068/CustomSelectMenu.tsx",
            "name": "CustomSelectMenu.tsx",
            "id": "1076037096550187068",
            "size": 993,
            "url": "https://cdn.discordapp.com/attachments/1052475381531299890/1076037096550187068/CustomSelectMenu.tsx",
            "proxyURL": "https://media.discordapp.net/attachments/1052475381531299890/1076037096550187068/CustomSelectMenu.tsx",
            "height": null,
            "width": null,
            "contentType": "text/plain; charset=utf-8",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676617635691
      },
      {
        "content": "Well the rest is just react:<br><pre><code class=\"hljs javascript\">  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">handleChange</span> = (<span class=\"hljs-params\">e: ChangeEvent&lt;HTMLSelectElement&gt;, path: string</span>) =&gt; {\n    <span class=\"hljs-title function_\">setSelectedOption</span>(e.<span class=\"hljs-property\">target</span>.<span class=\"hljs-property\">value</span>) <span class=\"hljs-comment\">// React.useState</span>\n  };</code></pre><br><br><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{selectedOption}</span> <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{(e)</span> =&gt;</span> handleChange(e, path)}&gt;\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span>&gt;</span>...<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span></code></pre>",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676639396525
      },
      {
        "content": "Obviously I can&#x27;t see what&#x27;s happening in your reducer but using React.useState will suffice for setting the selected value in the example I&#x27;ve provided. I&#x27;m assuming data.fields contains the values you&#x27;re expecting?",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676639702831
      },
      {
        "content": "data.fields give me the all fields data.",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676643644511
      },
      {
        "content": "it store only in  a state right?",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676643736001
      },
      {
        "content": "is it store into the api?",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676643750088
      },
      {
        "content": "Hey @bhavikak! You should change your field type from <code>ui</code> to <code>text</code> 🙂 <br><br>As you have noticed, ui fields <em>do not</em> store their data in the DB. So you will want to use a field type that does, i.e. text. You can leave the rest of your config as is, using the custom component that you created!",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676644124713
      },
      {
        "content": "okay @Jarrod i&#x27;ll try",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676644200106
      },
      {
        "content": "so i need to change only type?",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676644250468
      },
      {
        "content": "Yeah, and personally I think you could get away with using <code>useField</code> hook, and passing the path from props to that hook and using the <code>setValue</code> function to set the value of the field instead of the useFormFields",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676644583346
      },
      {
        "content": "wohooo it&#x27;s working with useFormField as well so i need to changed with usefield",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676644998495
      },
      {
        "content": "thanks a lot @Jarrod @remy  🙌",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676645017636
      },
      {
        "content": "Absolutely, maybe I&#x27;ll make a vid on custom components like the one you made 🤔",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676645043372
      },
      {
        "content": "yes, you can🤘",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676646196510
      },
      {
        "content": "hii @Jarrod when i select the item it&#x27;s not enable publish button",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676904280581
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1052475381531299890/1077239581059068008/image.png",
            "name": "image.png",
            "id": "1077239581059068008",
            "size": 14403,
            "url": "https://cdn.discordapp.com/attachments/1052475381531299890/1077239581059068008/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1052475381531299890/1077239581059068008/image.png",
            "height": 287,
            "width": 402,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676904330328
      },
      {
        "content": "Can you log Form state for me? Using useFormFields?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676904623294
      },
      {
        "content": "yaa",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676905257667
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1052475381531299890/1077244440671953066/Screenshot_from_2023-02-20_20-34-31.png",
            "name": "Screenshot_from_2023-02-20_20-34-31.png",
            "id": "1077244440671953066",
            "size": 248295,
            "url": "https://cdn.discordapp.com/attachments/1052475381531299890/1077244440671953066/Screenshot_from_2023-02-20_20-34-31.png",
            "proxyURL": "https://media.discordapp.net/attachments/1052475381531299890/1077244440671953066/Screenshot_from_2023-02-20_20-34-31.png",
            "height": 768,
            "width": 1366,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676905488939
      },
      {
        "content": "This is also the case for me. It persists in draft saves but doesn&#x27;t trigger a change",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676975430863
      },
      {
        "content": "And just to clarify, you are both using <code>useField</code>?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676982248356
      },
      {
        "content": "I haven&#x27;t updated mine from <code>useFormField</code> but i&#x27;m happy to follow along for @bhavikak &#x27;s issue.",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676988823900
      },
      {
        "content": "yes @Jarrod i&#x27;m use useFormField",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1677134615450
      },
      {
        "content": "nope",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1677134656267
      },
      {
        "content": "@bhavikak can you use useField instead? <br><br>Otherwise <code>useForm</code> exposes a <code>setModified</code> function that you can use to set the form as modified",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677176641708
      },
      {
        "content": "i tried with usefield as well but it&#x27;s not save my selected option",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1677217086320
      },
      {
        "content": "this is the my code",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1677217132310
      },
      {
        "content": "hello @Jarrod",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1677584096503
      },
      {
        "content": "i&#x27;m waiting for your respone.",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1677584137556
      },
      {
        "content": "I think Jarrod wants you to convert to <code>useField</code> first",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1677594599233
      },
      {
        "content": "When I get to reimplementing this, I&#x27;ll create a new thread, as we&#x27;re quite far from the original issue.",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1677594661732
      },
      {
        "content": "hii @remy i tried it but it&#x27;s not store value into the colliction api",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1677654822669
      }
    ],
    "messageCount": 55
  },
  {
    "info": {
      "name": "Bulk email using payload emailer",
      "id": "1079655600138489946",
      "guildId": "967097582721572934",
      "createdAt": 1677480354104
    },
    "messages": [
      {
        "content": "Using custom ses transport with nodemailer, is there a way using the <code>payload.sendEmail</code> to send bulk emails, or is there any workaround?",
        "fileAttachments": [],
        "authorID": "688180620744065079",
        "authorName": "teng",
        "authorAvatar": "3047a9d98f421809350f74ebc4b189a6",
        "createdAtDate": 1677480354104
      },
      {
        "content": "okay, turns out the <code>to</code> parameter can accept comma separated string to send to multiple email address",
        "fileAttachments": [],
        "authorID": "688180620744065079",
        "authorName": "teng",
        "authorAvatar": "3047a9d98f421809350f74ebc4b189a6",
        "createdAtDate": 1677482589682
      },
      {
        "content": "Hey @teng that could be something we add to the Form Builder in the future. Feel free to add that as a feature request. We do have utilized the CC field for this in the past, but I am guessing you have more than a couple emails you&#x27;d like to send to.",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1677531770731
      },
      {
        "content": "Curious if the email provider you&#x27;re using this with has the ability to leverage email groups, so you could send to one address, but then any number of people would receive it.",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1677531784351
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Commit payload generated types?",
      "id": "1070292519310594088",
      "guildId": "967097582721572934",
      "createdAt": 1675248021677
    },
    "messages": [
      {
        "content": "Just wondering whether it&#x27;s recommended to commit payload typescript definitions to the git repo, or add that file to .gitignore.",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675248021677
      },
      {
        "content": "You should commit them, will save you from the headache of regenerating them for every instance you have running and every time your config changes",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675262319937
      },
      {
        "content": "Thanks!",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675273618682
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "export list to csv, xlsx",
      "id": "1080406659987406908",
      "guildId": "967097582721572934",
      "createdAt": 1677659420726
    },
    "messages": [
      {
        "content": "Hello, Is there any option to export collection list to external file?",
        "fileAttachments": [],
        "authorID": "803037652894482442",
        "authorName": "kosmo",
        "authorAvatar": "f054fc1ce7516d4903c0712698fc5eb1",
        "createdAtDate": 1677659420726
      },
      {
        "content": "Built this yesterday:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> { stringify } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;csv-stringify/sync&#x27;</span>\n<span class=\"hljs-keyword\">import</span> archiver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;archiver&#x27;</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">downloadEndpoint</span>: <span class=\"hljs-title class_\">Endpoint</span> = {\n  <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&#x27;/download-zip&#x27;</span>,\n  <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;get&#x27;</span>,\n  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">handler</span>(<span class=\"hljs-params\">req, res, next</span>) {\n    <span class=\"hljs-comment\">// Only admins allowed</span>\n    <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-title function_\">isAdmin</span>(req.<span class=\"hljs-property\">user</span>)) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">next</span>()\n\n    <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-title function_\">find</span>({\n      <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;widgets&#x27;</span>,\n      where, <span class=\"hljs-comment\">// derived from query params</span>\n      <span class=\"hljs-attr\">limit</span>: <span class=\"hljs-number\">1000</span>, <span class=\"hljs-comment\">// sanity check</span>\n    })\n\n    <span class=\"hljs-keyword\">const</span> archive = <span class=\"hljs-title function_\">archiver</span>(<span class=\"hljs-string\">&#x27;zip&#x27;</span>, { <span class=\"hljs-attr\">zlib</span>: { <span class=\"hljs-attr\">level</span>: <span class=\"hljs-number\">9</span> } })\n    archive.<span class=\"hljs-title function_\">pipe</span>(res)\n    res.<span class=\"hljs-title function_\">setHeader</span>(<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>, <span class=\"hljs-string\">&#x27;application/zip&#x27;</span>)\n    res.<span class=\"hljs-title function_\">setHeader</span>(<span class=\"hljs-string\">&#x27;Content-Disposition&#x27;</span>, <span class=\"hljs-string\">&#x27;attachment; filename=widgets.zip&#x27;</span>)\n\n    <span class=\"hljs-keyword\">const</span> csv = <span class=\"hljs-title function_\">stringify</span>(result.<span class=\"hljs-property\">docs</span>, { <span class=\"hljs-attr\">header</span>: <span class=\"hljs-literal\">true</span> })\n    archive.<span class=\"hljs-title function_\">append</span>(csv, { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;test.csv&#x27;</span> })\n    archive.<span class=\"hljs-title function_\">finalize</span>()\n  },\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677666353601
      },
      {
        "content": "Thanks for answer! 💚 ,<br>Do you have some extra configuration for archiver? When I&#x27;m trying use it, I have a lot of errors",
        "fileAttachments": [],
        "authorID": "803037652894482442",
        "authorName": "kosmo",
        "authorAvatar": "f054fc1ce7516d4903c0712698fc5eb1",
        "createdAtDate": 1677677892317
      },
      {
        "content": "If it&#x27;s a webpack error, you should add archiver to payloadconfig.admin.webpack.resolve.alias so ot doesn&#x27;t try to bundle it. Otherwise not other config",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677709884330
      },
      {
        "content": "You could consider to skip the zipping and return the csv straight away",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677709939679
      },
      {
        "content": "thank you so much! Im going to try it",
        "fileAttachments": [],
        "authorID": "803037652894482442",
        "authorName": "kosmo",
        "authorAvatar": "f054fc1ce7516d4903c0712698fc5eb1",
        "createdAtDate": 1677710437718
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Any way to access same relationship from both sides?",
      "id": "1069986904122081311",
      "guildId": "967097582721572934",
      "createdAt": 1675175157338
    },
    "messages": [
      {
        "content": "For example, in my Projects collection I specify a relationship to a single project category.<br><br>In my Project Category collection I specify a one to many relationship to Projects. This doesn&#x27;t update when I add the category to a Project.",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1675175157338
      },
      {
        "content": "&quot;This doesn&#x27;t update when I add the category to a Project.&quot; - sorry ,what isn&#x27;t updating, the category on a project?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1675175628870
      },
      {
        "content": "When I update the category relationship on a Project, I would expect that Project Category to reflect that in it&#x27;s relationship back.",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1675176273114
      },
      {
        "content": "I think I have the same question for my project. To use OP&#x27;s example, if you have two collections, <code>ProjectCategories</code> and <code>Projects</code>...<br><br>Looking at the <code>ProjectCategories</code> collection, I can add a <code>relationship</code> field that looks like this:<br><pre><code class=\"hljs\">    {\n      name: &quot;projects&quot;,\n      type: &quot;relationship&quot;,\n      relationTo: &quot;projects&quot;,\n      hasMany: true,\n    },</code></pre><br><br>Now in the Admin UI, if I navigate to the <code>ProjectCategories</code> collection and select a &quot;Category&quot; I will have the ability to add <code>Projects</code> that are related to the category.<br><br>Now, can we do the opposite of that and have the relationship update both collections regardless of which collection you make the update in?<br><br>So, while maintaining all of the functionality mentioned above, looking at the <code>Projects</code> collection, having a relationship to <code>ProjectCategories</code>:<br><br><pre><code class=\"hljs\">    {\n      name: &quot;project_categories&quot;,\n      type: &quot;relationship&quot;,\n      relationTo: &quot;project-categories&quot;,\n      hasMany: true,\n    },</code></pre><br><br>Now in the Admin UI, if I navigate to the <code>Projects</code> collection and select a &quot;Project&quot; I will have the ability to add <code>ProjectCategories</code> that are related to the project.<br><br>Is it possible to have two collections that relate to each other and when you update either of them, the others related field updates as well?",
        "fileAttachments": [],
        "authorID": "462049378719498241",
        "authorName": "TheBigUmberto",
        "authorAvatar": "a4da04c2eb8b222a2e713be8e4b2e9d7",
        "createdAtDate": 1675372035438
      },
      {
        "content": "Payload currently supports one way relationships. There are ways to get around this:<br><br>There is a community plugin here: <a href=\"https://github.com/TimHal/pcms-backpop\">https://github.com/TimHal/pcms-backpop</a><br><br>If you simply want to query the other side of the relationship, here is an example of a component that queries how many Posts have a certain Category:<br><br><a href=\"https://github.com/payloadcms/public-demo/blob/master/src/collections/Categories.ts#L36\">https://github.com/payloadcms/public-demo/blob/master/src/collections/Categories.ts#L36</a><br><a href=\"https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx\">https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675440375208
      },
      {
        "content": "Thank you, awesome resources!",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1675443638314
      },
      {
        "content": "Hmm, what are the impracticalities of official support of 2 way relations?",
        "fileAttachments": [],
        "authorID": "276227047968210945",
        "authorName": "Harley Queens",
        "authorAvatar": "54b59995c428cbfd08a790f29a00e5df",
        "createdAtDate": 1675693931328
      },
      {
        "content": "I&#x27;m also wondering this. It would be nice to have.",
        "fileAttachments": [],
        "authorID": "399871533276987392",
        "authorName": "Twoxic",
        "authorAvatar": null,
        "createdAtDate": 1676299912458
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Payload to simplify data management in a business management solution",
      "id": "1072174352210083850",
      "guildId": "967097582721572934",
      "createdAt": 1675696685603
    },
    "messages": [
      {
        "content": "Hi im new here, these days i was checking out payload and i wanted to ask what would you guys think about using payload to build a business/accounting solution for small businesses. Do you think that payload would be an advantage or would be too much out of the scope (i hope this is the right word) of payload?",
        "fileAttachments": [],
        "authorID": "269553841375150080",
        "authorName": "RACCOON",
        "authorAvatar": "ca9cb7274ed04cf9942ceccfdbf65f3c",
        "createdAtDate": 1675696685603
      },
      {
        "content": "Payload is a Content Management System ... using it to manage finances (billing/invoices, accounts payable, inventory, etc) would probably be a bit of a headache.<br><br>Is it possible? Probably ... <br><br>Should you do it? Probably not ... <br><br>You could definitely create collections to hold the data for various things like Customers, Clients, Invoices, Payments, etc ... but Payload is not meant to provide a frontend, or really do much in the way of backend business logic... so in this case, you&#x27;d just be using payload as a storage container, and would likely be better off storing data directly to a database.",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675699710671
      },
      {
        "content": "That&#x27;s what i was thinking but my idea was more like using it as a way to write API faster so i can do it based on the client needs and than making a modular ui with react that i can reuse anytime.<br>I may expressed it poorly i hope it makes sense.",
        "fileAttachments": [],
        "authorID": "269553841375150080",
        "authorName": "RACCOON",
        "authorAvatar": "ca9cb7274ed04cf9942ceccfdbf65f3c",
        "createdAtDate": 1675700529521
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Custom Field Components Not Working",
      "id": "1075578163884720208",
      "guildId": "967097582721572934",
      "createdAt": 1676508217546
    },
    "messages": [
      {
        "content": "Hello, <br><br>I have been though the blog post here: <a href=\"https://payloadcms.com/blog/building-a-custom-field\">https://payloadcms.com/blog/building-a-custom-field</a> and am trying to add the color-picker custom field to a collection.  When I do I receive:<br><br>/src/components/color-picker/InputField.tsx:129<br>    return (&lt;div className={baseClass}&gt;<br>            ^<br><br>SyntaxError: Unexpected token &#x27;&lt;&#x27;<br>    at Object.compileFunction (node:vm:360:18)<br>    at wrapSafe (node:internal/modules/cjs/loader:1055:15)<br>    at Module._compile (node:internal/modules/cjs/loader:1090:27)<br>    at Module.m._compile (/customer-site/node_modules/ts-node/src/index.ts:1056:23)<br>    at Module._extensions..js (node:internal/modules/cjs/loader:1180:10)<br>    at Object.require.extensions.&lt;computed&gt; [as .tsx] (/customer-site/node_modules/ts-node/src/index.ts:1059:12)<br>    at Module.load (node:internal/modules/cjs/loader:1004:32)<br>    at Function.Module._load (node:internal/modules/cjs/loader:839:12)<br>    at Module.require (node:internal/modules/cjs/loader:1028:19)<br>    at require (node:internal/modules/cjs/helpers:102:18)<br>[nodemon] app crashed - waiting for file changes before starting...<br><br>I don&#x27;t know where to start with this one...<br><br>Thanks in advance!",
        "fileAttachments": [],
        "authorID": "1073680355653062788",
        "authorName": "jPetersonSoiltech",
        "authorAvatar": null,
        "createdAtDate": 1676508217546
      },
      {
        "content": "Found it in tsconfig.json &quot;compilerOptions&quot; - &gt; &quot;jsx&quot;: &quot;react&quot;  not &quot;preserve&quot;",
        "fileAttachments": [],
        "authorID": "1073680355653062788",
        "authorName": "jPetersonSoiltech",
        "authorAvatar": null,
        "createdAtDate": 1676567437809
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Use uploads for collection list images",
      "id": "1078329106434899988",
      "guildId": "967097582721572934",
      "createdAt": 1677164093360
    },
    "messages": [
      {
        "content": "Instead of a text, I&#x27;d like to display a thumbnail (related-to field)",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078329106434899988/1078329106736877608/Screenshot_2023-02-23_at_15.54.04.png",
            "name": "Screenshot_2023-02-23_at_15.54.04.png",
            "id": "1078329106736877608",
            "size": 109626,
            "url": "https://cdn.discordapp.com/attachments/1078329106434899988/1078329106736877608/Screenshot_2023-02-23_at_15.54.04.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078329106434899988/1078329106736877608/Screenshot_2023-02-23_at_15.54.04.png",
            "height": 1152,
            "width": 1256,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "525819893333884938",
        "authorName": "wiesson",
        "authorAvatar": "45ae35ecb8e0d89dd1c9a726cf793568",
        "createdAtDate": 1677164093360
      },
      {
        "content": "Possibly <a href=\"https://payloadcms.com/docs/admin/components#cell-component\">https://payloadcms.com/docs/admin/components#cell-component</a>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677166037219
      },
      {
        "content": "Where you have access to the cell and the data",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677166046376
      },
      {
        "content": "so you&#x27;d pass it to an img element",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677166054914
      },
      {
        "content": "ah, thank you! Somehow I searched the docs, but didn&#x27;t find it",
        "fileAttachments": [],
        "authorID": "525819893333884938",
        "authorName": "wiesson",
        "authorAvatar": "45ae35ecb8e0d89dd1c9a726cf793568",
        "createdAtDate": 1677166132293
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "GraphQL sometimes replacing hyphens and commas with underscores",
      "id": "1077614359649468562",
      "guildId": "967097582721572934",
      "createdAt": 1676993684447
    },
    "messages": [
      {
        "content": "Hello fellas, would anyone know why the value of something in gql has hyphens and commas replaced with underscores? This does not occur when accessing data with REST",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1077614359649468562/1077614360089866311/image.png",
            "name": "image.png",
            "id": "1077614360089866311",
            "size": 6102,
            "url": "https://cdn.discordapp.com/attachments/1077614359649468562/1077614360089866311/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1077614359649468562/1077614360089866311/image.png",
            "height": 71,
            "width": 562,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1077614359649468562/1077614360375083048/image.png",
            "name": "image.png",
            "id": "1077614360375083048",
            "size": 4875,
            "url": "https://cdn.discordapp.com/attachments/1077614359649468562/1077614360375083048/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1077614359649468562/1077614360375083048/image.png",
            "height": 22,
            "width": 889,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676993684447
      },
      {
        "content": "This is because GraphQL doesn&#x27;t allow dashes",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676993764878
      },
      {
        "content": "nothing Payload can do there unfortunately. To keep parity, I would avoid using dashes in field names",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676993783417
      },
      {
        "content": "use camelCase instead",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676993787855
      },
      {
        "content": "or undrescores, either way",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676993794580
      },
      {
        "content": "so just to clarify, is that just for strings that are prefixed with a hyphen? i.e. i just can&#x27;t start a value with a -",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676993840424
      },
      {
        "content": "any hyphen at all, anywhere",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676993857533
      },
      {
        "content": "doesn&#x27;t need to be prefixed",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676993860366
      },
      {
        "content": "<code>my-field</code> will be turned into <code>my_field</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676993869842
      },
      {
        "content": "sorry to clarify this is for the value of a field, not a field name in itself",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676993885881
      },
      {
        "content": "like a select field for example?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676993893514
      },
      {
        "content": "yep, same thing applies there as well. select values / radio values are <code>enum</code>s in graphql",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676993904800
      },
      {
        "content": "and enums can&#x27;t have dashes either",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676993911221
      },
      {
        "content": "ah ok makes sense",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676993924144
      },
      {
        "content": "thank you",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676993926803
      }
    ],
    "messageCount": 14
  },
  {
    "info": {
      "name": "Why is my generated type for my media collection possibly 'string'?",
      "id": "1073557500751773696",
      "guildId": "967097582721572934",
      "createdAt": 1676026453913
    },
    "messages": [
      {
        "content": "Hi, I have the following field on my collection:<br><pre><code class=\"hljs ts\">   {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;heroImage&#x27;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;upload&#x27;</span>,\n      <span class=\"hljs-attr\">relationTo</span>: <span class=\"hljs-string\">&#x27;media&#x27;</span>,\n      <span class=\"hljs-attr\">admin</span>: {\n        <span class=\"hljs-attr\">condition</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">_, siblingData</span>) =&gt;</span>\n          siblingData.<span class=\"hljs-property\">showHero</span> &amp;&amp; !siblingData.<span class=\"hljs-property\">makeSlider</span>,\n      },\n    },</code></pre><br><br>In my generated types, this field is defined as <code>string | Media</code>. Now, I understand the Media type, as this is just the generated type for the relation on this field, but I don&#x27;t understand how it could possibly be string. Just wondering what cases I might need to handle where this field may be string?",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1676026453913
      },
      {
        "content": "@alexdev set <code>depth</code> to 0 and then query a document in your collection<br><br>/api/collection-slug/id?depth=0",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676034920337
      },
      {
        "content": "Perfect explanation, thank you",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1676037895175
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Stuck on another 404 Issue on prod",
      "id": "1080558274572718200",
      "guildId": "967097582721572934",
      "createdAt": 1677695568460
    },
    "messages": [
      {
        "content": "Hello all, trying to resolve an issue on prod where I cant access my payload Admin  / API and I get a 404.<br><br>I replaced my domain with mywebsite.com in the following as an example:<br><br>in my payload config, serverURL: &quot;<a href=\"https://mywesbite.com\">https://mywesbite.com</a>&quot;<br><br>Nginx:<br><br><pre><code class=\"hljs nginx\">    <span class=\"hljs-section\">server</span> {\n        <span class=\"hljs-attribute\">server_name</span> mywebsite.com;\n        <span class=\"hljs-attribute\">root</span> /var/www/mywebsite.com;\n        <span class=\"hljs-comment\">#index index.html index.htm index.nginx-debian.html;</span>\n        <span class=\"hljs-attribute\">index</span> index.html;\n\n        <span class=\"hljs-section\">location</span> /payload/ {\n            <span class=\"hljs-attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"hljs-variable\">$proxy_add_x_forwarded_for</span>;\n            <span class=\"hljs-attribute\">proxy_set_header</span> Host <span class=\"hljs-variable\">$host</span>;\n            <span class=\"hljs-attribute\">proxy_pass</span> http://127.0.0.1:3000;\n            <span class=\"hljs-attribute\">proxy_http_version</span> <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-attribute\">proxy_set_header</span> Upgrade <span class=\"hljs-variable\">$http_upgrade</span>;\n            <span class=\"hljs-attribute\">proxy_set_header</span> Connection <span class=\"hljs-string\">&quot;upgrade&quot;</span>;\n        }\n\n        <span class=\"hljs-section\">location</span> /safsapi/ {\n            <span class=\"hljs-attribute\">rewrite</span><span class=\"hljs-regexp\"> ^/safsapi/(.*)$</span> /<span class=\"hljs-variable\">$1</span> <span class=\"hljs-literal\">break</span>;\n            <span class=\"hljs-attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"hljs-variable\">$proxy_add_x_forwarded_for</span>;\n            <span class=\"hljs-attribute\">proxy_set_header</span> Host <span class=\"hljs-variable\">$host</span>;\n            <span class=\"hljs-attribute\">proxy_pass</span> http://127.0.0.1:5000;\n            <span class=\"hljs-attribute\">proxy_http_version</span> <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-attribute\">proxy_set_header</span> Upgrade <span class=\"hljs-variable\">$http_upgrade</span>;\n            <span class=\"hljs-attribute\">proxy_set_header</span> Connection <span class=\"hljs-string\">&quot;upgrade&quot;</span>;\n        }\n\n        <span class=\"hljs-section\">location</span> / {\n            <span class=\"hljs-attribute\">root</span> /var/www/mywebsite.com/client/dist/safs;\n            <span class=\"hljs-comment\">#root /client/dist/safs;</span>\n            <span class=\"hljs-attribute\">try_files</span> <span class=\"hljs-variable\">$uri</span> <span class=\"hljs-variable\">$uri</span>/ /index.html;\n            <span class=\"hljs-comment\">#index  index.html index.htm;</span>\n            <span class=\"hljs-attribute\">index</span>  index.html;\n        }\n    }</code></pre>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677695568460
      },
      {
        "content": "Previously I had no issues hitting /payload and /safsapi routes",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677695586555
      },
      {
        "content": "Not sure if I accidently changed something while moving to prod",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677695627857
      },
      {
        "content": "but everything looks the same",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677695632180
      },
      {
        "content": "Update:",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677763449728
      },
      {
        "content": "If I add an express route in payload to hit &quot;/payload&quot;, I actually hit express and get a &quot;Cannot get /payload&quot;",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677763477125
      },
      {
        "content": "But still getting 404&#x27;s on payload api routes",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677763496036
      },
      {
        "content": "@zubricks Anything look weird there?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677763519603
      },
      {
        "content": "Let me take a look through this config quick and see if anything looks off",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1677763625385
      },
      {
        "content": "With that proxy setup",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677764611284
      },
      {
        "content": "I tried setting my routes",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677764615084
      },
      {
        "content": "<pre><code class=\"hljs\">  routes: {\n    api: &#x27;/payload/api&#x27;,\n    admin: &#x27;/payload/admin&#x27;,\n    graphQL: &#x27;/payload/graphql&#x27;,\n    graphQLPlayground: &#x27;/payload/graphql-playground&#x27;\n  }</code></pre>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677764618745
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1080558274572718200/1080848525321060353/image.png",
            "name": "image.png",
            "id": "1080848525321060353",
            "size": 21318,
            "url": "https://cdn.discordapp.com/attachments/1080558274572718200/1080848525321060353/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1080558274572718200/1080848525321060353/image.png",
            "height": 516,
            "width": 977,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677764769674
      },
      {
        "content": "SOLUTION",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677764982780
      },
      {
        "content": "TY to the amazing @noheadphones",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677764988463
      },
      {
        "content": "if you have a reverse proxy",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677764996424
      },
      {
        "content": "<pre><code class=\"hljs\">        location /payload/ {\n            proxy_buffering off;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header Host $host;\n            proxy_pass http://127.0.0.1:3000;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection &quot;upgrade&quot;;\n        }</code></pre>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677765001370
      },
      {
        "content": "<pre><code class=\"hljs\">proxy_buffering off;</code></pre>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677765008529
      },
      {
        "content": "must be set to off",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677765011751
      },
      {
        "content": "(not sure why exactly, but noheadphones is genius)",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677765022840
      },
      {
        "content": "interesting...good work!",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1677765043453
      },
      {
        "content": "Also",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677765063433
      },
      {
        "content": "In my situation, if this helps anyone",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677765069839
      },
      {
        "content": "I needed to add the following to my payload config",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677765080635
      },
      {
        "content": "<pre><code class=\"hljs\">  routes: {\n    api: &#x27;/payload/api&#x27;,\n    admin: &#x27;/payload/admin&#x27;,\n    graphQL: &#x27;/payload/graphql&#x27;,\n    graphQLPlayground: &#x27;/payload/graphql-playground&#x27;\n  }</code></pre>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677765083904
      }
    ],
    "messageCount": 24
  },
  {
    "info": {
      "name": "What is `Record<string, string>` used for on the `group` field on a collection?",
      "id": "1072900095663689880",
      "guildId": "967097582721572934",
      "createdAt": 1675869716326
    },
    "messages": [
      {
        "content": "The <code>collection.admin.group</code> field accepts either <code>string</code> or <code>Record&lt;string, string&gt;</code>. The docs imply that only <code>string</code> is valid and don&#x27;t describe what <code>Record&lt;string, string&gt;</code> might be used for here. Can anyone explain?",
        "fileAttachments": [],
        "authorID": "93699784942034944",
        "authorName": "itsjxck",
        "authorAvatar": "2d16b59cd6bd3e7c108384738acef863",
        "createdAtDate": 1675869716326
      },
      {
        "content": "Yeah, that is because you can add translations for your editors.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675870306951
      },
      {
        "content": "<code>group: { en: &#x27;Content&#x27;, es: &#x27;Contenido&#x27; }</code>",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675870367481
      },
      {
        "content": "Amazing, thank you",
        "fileAttachments": [],
        "authorID": "93699784942034944",
        "authorName": "itsjxck",
        "authorAvatar": "2d16b59cd6bd3e7c108384738acef863",
        "createdAtDate": 1675870426225
      },
      {
        "content": "Changed my example to make more sense! You&#x27;re welcome. 🙂",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675870444406
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Versioning on a new global with no past saved versions will throw an error",
      "id": "1078587209483034668",
      "guildId": "967097582721572934",
      "createdAt": 1677225629922
    },
    "messages": [
      {
        "content": "Hello fellas,<br><br>It appears that I&#x27;m unable to save/publish anything to a new global if there isn&#x27;t already a saved/published version of that global in the DB when versioning is enabled.<br><br>Payload will throw <pre><code class=\"hljs\">TypeError: Cannot convert undefined or null to object</code></pre><br><br>I was able to remedy this by disabling versioning, saving/publishing changes such that there is one published version of the doc saved in the DB, then re-enabling versioning, which after this point no longer throws an error<br><br>Is someone able to corroborate that this happens to them too?",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1677225629922
      },
      {
        "content": "yeah happening here too at 1.6.15",
        "fileAttachments": [],
        "authorID": "189202872800378881",
        "authorName": "bobbyZ",
        "authorAvatar": "f0988915755cddd9a231cf1afaafea65",
        "createdAtDate": 1677419093014
      },
      {
        "content": "I was able to recreate this, I&#x27;m opening a new issue on Github and will be patching it today.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677522192098
      },
      {
        "content": "I have a PR open, we&#x27;ll do some merging and get a release out sometime this week.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677534383227
      },
      {
        "content": "thanks Dan",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1677562705986
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Is there a way to conditionally set the hidden property on a field?",
      "id": "1070970660093956116",
      "guildId": "967097582721572934",
      "createdAt": 1675409703039
    },
    "messages": [
      {
        "content": "I have a certain field that is hidden in Payload based on a value selected inside a dropdown (select box).<br>What I want to do however, is if this field is hidden, to not send the JSON data in rest API response.<br><br>I see I can stop the field from being visible in the JSON response if the <code>hidden</code> field  is set to true, but is there a way to conditionally set this field?<br><br><pre><code class=\"hljs\">{\n    name: &quot;homeSlider&quot;,\n    type: &quot;array&quot;,\n    label: &quot;Home Page Image Slider&quot;,\n    minRows: 2,\n    maxRows: 10,\n    hidden: false, &lt;--------- wanting to set this \n    labels: {\n      singular: &quot;Slide&quot;,\n      plural: &quot;Slides&quot;,\n    },\n    admin: {\n      condition: (data) =&gt; {\n        console.log(data);\n        if (data.pageFormat === &quot;home-layout&quot;) {\n          return true;\n        } else {\n          data.homeSlider.hidden = true; &lt;------ trying to do it here \n          return false;\n        }\n    },\n},\n...</code></pre>",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1675409703039
      },
      {
        "content": "Ah, appears I can do this using <code>data.homeSlider = null;</code><br>It does wipe the data however so keen to hear if there are any better ides?",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1675410192100
      },
      {
        "content": "Hidden isn&#x27;t mean to be used conditionally, currently. Have you looked into an afterRead hook on the collection? You could perform some data cleanup before the response is sent back. <br><br><a href=\"https://payloadcms.com/docs/hooks/collections#afterread\">https://payloadcms.com/docs/hooks/collections#afterread</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675441944081
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "trying to build the docker that is delivered from 'npx create-payload-app' but getting errors",
      "id": "1070810091592368128",
      "guildId": "967097582721572934",
      "createdAt": 1675371420525
    },
    "messages": [
      {
        "content": "When doing docker build it complains about <br>&#x27;#0 2.579 Something went wrong installing the &quot;sharp&quot; module<br>#0 2.579<br>#0 2.579 Cannot find module &#x27;../build/Release/sharp-linuxmusl-x64.node&#x27;<br><br>Anyone can help please?",
        "fileAttachments": [],
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1675371420525
      },
      {
        "content": "Could we get a minimally reproducible example of this? That would be super helpful to get the ball rolling here 👍 <br>- a docker file<br>- a minimal payload config to go alongside",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675431712062
      },
      {
        "content": "I found out the problem was the docker files copied node_modules from the local dir which caused a mess in npm, added .dockerignore entry for the node_modules dir",
        "fileAttachments": [],
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1675436112912
      },
      {
        "content": "npx sample should be updated",
        "fileAttachments": [],
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1675436127961
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "How to specify the size of image that can be uploaded?",
      "id": "1069607514955579452",
      "guildId": "967097582721572934",
      "createdAt": 1675084703912
    },
    "messages": [
      {
        "content": "I have 2 collection that need to have an image. For the first one, I want to specify only 1024 by 1024, for the second one 512 by 512. I will not allow them to upload different size aside from those. How can I do that?",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1675084703912
      },
      {
        "content": "@johnmadrigal_ See: <a href=\"https://payloadcms.com/docs/upload/overview#image-sizes\">https://payloadcms.com/docs/upload/overview#image-sizes</a>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1675087941589
      },
      {
        "content": "Thank you. However, that is a global settings for sizes. I’m looking for specific settings for each collection.",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1675088197036
      },
      {
        "content": "@johnmadrigal_ Isn&#x27;t it on a per-collection basis? Per docs: <pre><code class=\"hljs\">Optionally, if you pass imageSizes to your Collection&#x27;s Upload config, a sizes array will also be added containing auto-resized image sizes and filenames.</code></pre>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1675088361354
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "CORS error after deployment even after setting permissions",
      "id": "1077768715334070392",
      "guildId": "967097582721572934",
      "createdAt": 1677030485710
    },
    "messages": [
      {
        "content": "I&#x27;m trying to access my endpoint from a next.js app deployed on vercel, and I keep getting a cors error, even after setting cors=&quot;*&quot; in payload.config and trying to whitelist my domain on csrf.<br><br>From the browser and from the curl command it works fine, so It really looks like a cross-origin error.<br><br>I used Railway to deploy my payloadCMS backend.<br><br>The error is on the image. Any help is appreciated.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1077768715334070392/1077768715485057155/image.png",
            "name": "image.png",
            "id": "1077768715485057155",
            "size": 98577,
            "url": "https://cdn.discordapp.com/attachments/1077768715334070392/1077768715485057155/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1077768715334070392/1077768715485057155/image.png",
            "height": 701,
            "width": 946,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677030485710
      },
      {
        "content": "What&#x27;s in your console?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677031525787
      },
      {
        "content": "you&#x27;re showing the issues tab, but can you show the console tab?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677031534353
      },
      {
        "content": "and, you should check your Railway server logs",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677031547024
      },
      {
        "content": "instead of saying cors=* you should just whitelist all domains that you&#x27;ll be accessing from. Because you can&#x27;t have cors=* and still allow cookie auth at the same time",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677031573446
      },
      {
        "content": "In my console is this",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1077768715334070392/1077777823940493433/image.png",
            "name": "image.png",
            "id": "1077777823940493433",
            "size": 233632,
            "url": "https://cdn.discordapp.com/attachments/1077768715334070392/1077777823940493433/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1077768715334070392/1077777823940493433/image.png",
            "height": 719,
            "width": 935,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677032657424
      },
      {
        "content": "ahh good ol&#x27; axios",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677033006988
      },
      {
        "content": "i can&#x27;t find anything noteworthy from all of that info",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677033013763
      },
      {
        "content": "haha",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677033014155
      },
      {
        "content": "scrolling down, is there more?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677033026342
      },
      {
        "content": "This is all, unfortunately",
        "fileAttachments": [],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677033127560
      },
      {
        "content": "Can&#x27;t find anything noteworthy as well.. And I&#x27;m still looking for the server logs on Railway",
        "fileAttachments": [],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677033169184
      },
      {
        "content": "first time using it",
        "fileAttachments": [],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677033171714
      },
      {
        "content": "Even changing CORS to specific domains and removing csrf it keeps bringing the same error",
        "fileAttachments": [],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677033685380
      },
      {
        "content": "Man, I was relying on the cors property on payload config",
        "fileAttachments": [],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677034480974
      },
      {
        "content": "and it was not working",
        "fileAttachments": [],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677034485687
      },
      {
        "content": "just as a desperate act before giving up and going to bed, I added the express middleware for cors handling",
        "fileAttachments": [],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677034510072
      },
      {
        "content": "and it worked",
        "fileAttachments": [],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677034511669
      },
      {
        "content": "i also have a problem with allowing cors=&quot;*&quot; as well (useful for staging API with PR deployments for frontend), even with express middleware <code>cors</code>.<br><br>How did you get it to work? @Lucas Delbel",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1677035291295
      },
      {
        "content": "hey @bombnp , I&#x27;m still not sure what actually worked, I&#x27;ll check tomorrow.<br><br>But what I did was simply adding the middleware and the options for cors",
        "fileAttachments": [],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677035861242
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1077768715334070392/1077791271344672870/image.png",
            "name": "image.png",
            "id": "1077791271344672870",
            "size": 62407,
            "url": "https://cdn.discordapp.com/attachments/1077768715334070392/1077791271344672870/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1077768715334070392/1077791271344672870/image.png",
            "height": 297,
            "width": 404,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677035863533
      },
      {
        "content": "and I kept the cors configuration on payload.config",
        "fileAttachments": [],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677035874894
      },
      {
        "content": "ahh, mine didn&#x27;t have <code>app.options(&#x27;*&#x27;, cors())</code>. Maybe that&#x27;s why?",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1677035930853
      },
      {
        "content": "guess i&#x27;ll try out later",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1677035937601
      },
      {
        "content": "Maybe, that&#x27;s what I was going to check",
        "fileAttachments": [],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677035944993
      },
      {
        "content": "is it safe to use cors middleware and payloads auth?",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1677047093685
      },
      {
        "content": "depending on what you&#x27;re looking to do with cors middleware",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677072889152
      },
      {
        "content": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSNotSupportingCredentials\">https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSNotSupportingCredentials</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677072908384
      },
      {
        "content": "this is not a Payload thing, it&#x27;s just an internet thing",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677072913807
      },
      {
        "content": "so, if i want to use PR deployments (like Netlify&#x27;s), which deploys a version of my website when I make a PR with different origins, and I want to connect it to my backend. How should I set the cors? I always get cors error since it&#x27;s different origin and the origin from PR deployments are always different.",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1677149567849
      },
      {
        "content": "Or maybe it&#x27;s not possible?",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1677149575065
      },
      {
        "content": "Is it possible to create a new middleware? Then look up domains from a cache and write an alternative to the cors build-in payload middleware.<br>Can the idea be to look up CORS? Using origin and check that tokens belong to the same origin. Implement the separation between accounts to avoid exploitation of others&#x27; accounts.<br><br>unset config.cors and add<br>middleware:<br><pre><code class=\"hljs\">res.header(&#x27;Access-Control-Allow-Methods&#x27;, &#x27;PUT, PATCH, POST, GET, DELETE, OPTIONS&#x27;);\nres.header(&#x27;Access-Control-Allow-Headers&#x27;, &#x27;Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing&#x27;);\n\n\nif (corsTokenBelongsToOrigin(req.headers.origin, token) ) {\n  res.header(&quot;Access-Control-Allow-Credentials&quot;, &quot;true&quot;);\n  res.setHeader(&quot;Access-Control-Allow-Origin&quot;, req.headers.origin);\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1677155496803
      },
      {
        "content": "Are you using the Payload API from a server render? else you can just add your public domain to cors and csrf?",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1677162169196
      },
      {
        "content": "you mean payload local api? then no. My website frontend (nextjs) and payload are deployed separately on different domain (for now). I&#x27;m thinking about merging them into single express app though.",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1677164065157
      },
      {
        "content": "Do you have a domain for your Nextjs app? If so, add that domain to your payload config cors, not the domain of the local container.",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1677243694458
      }
    ],
    "messageCount": 34
  },
  {
    "info": {
      "name": "Issues viewing a large collection (Over 8500 documents) with production mongo",
      "id": "1080527767839457300",
      "guildId": "967097582721572934",
      "createdAt": 1677688295088
    },
    "messages": [
      {
        "content": "I have a collection with over 8500 documents and I&#x27;m getting an error in the payload client when trying to view the list of documents from our production mongo that says:<br><br><code>MongoServerError: PlanExecutor error during aggregation :: caused by :: Sort exceeded memory limit of 33554432 bytes, but did not opt in to external sorting.</code><br><br>I&#x27;ve tried setting <code>indexSortableFields</code> to true on the payload.config. Does anyone have any ideas on what can be done here? We are on an M5 cluster tier with MongoDB.",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677688295088
      },
      {
        "content": "ok when you say <code>payload client</code>, do you mean the List view in the admin UI?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677691292770
      },
      {
        "content": "we need to enable the aggregation property <code>allowDiskUse</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677691372748
      },
      {
        "content": "I also assume that this is on a collection with versions enabled",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677691383802
      },
      {
        "content": "what is happening is that we need to sort a large set of documents, and you have too many which is causing memory issues",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677691404769
      },
      {
        "content": "i would suggest setting your versions / drafts config property <code>maxPerDoc</code> to a low number",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677691443349
      },
      {
        "content": "Yes, I meant the list view in the admin UI.<br><br>And yes, this is also on a collection with versions enabled. We only have 1 version for each doc at the moment but I&#x27;ll try lowering the amount in the config to see if that helps.",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677692257153
      },
      {
        "content": "Is the property of <code>allowDiskUse</code> something we can enable on our end or would this require a payload update?",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677692677585
      },
      {
        "content": "Also with some further testing if I set maxPerDoc to 1 it still has the issue.<br><br>If I disable versions for this collection the documents do render in the list UI however.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1080527767839457300/1080546512267907152/image.png",
            "name": "image.png",
            "id": "1080546512267907152",
            "size": 91795,
            "url": "https://cdn.discordapp.com/attachments/1080527767839457300/1080546512267907152/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1080527767839457300/1080546512267907152/image.png",
            "height": 1256,
            "width": 3072,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677692764155
      },
      {
        "content": "allowDiskUse needs to be set by Payload but you could directly edit your <code>node_modules/payload/dist</code> to see if that will fix your issue (i am pretty confident it will)",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677693247573
      },
      {
        "content": "file to be changed is here:",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677693303594
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/blob/master/src/versions/drafts/queryDrafts.ts#L54\">https://github.com/payloadcms/payload/blob/master/src/versions/drafts/queryDrafts.ts#L54</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677693304021
      },
      {
        "content": "and here is a screenshot of me editing the <code>/dist</code> version:",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677693312731
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1080527767839457300/1080548868703408218/Screen_Shot_2023-03-01_at_12.54.44_PM.png",
            "name": "Screen_Shot_2023-03-01_at_12.54.44_PM.png",
            "id": "1080548868703408218",
            "size": 56072,
            "url": "https://cdn.discordapp.com/attachments/1080527767839457300/1080548868703408218/Screen_Shot_2023-03-01_at_12.54.44_PM.png",
            "proxyURL": "https://media.discordapp.net/attachments/1080527767839457300/1080548868703408218/Screen_Shot_2023-03-01_at_12.54.44_PM.png",
            "height": 343,
            "width": 425,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677693325977
      },
      {
        "content": "clearly i am feeling like a 🤠 right now",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677693331036
      },
      {
        "content": "Hmm i&#x27;ve just tried editing the file and restarting my local server but still having the same issue:",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1080527767839457300/1080550988001312849/image.png",
            "name": "image.png",
            "id": "1080550988001312849",
            "size": 131218,
            "url": "https://cdn.discordapp.com/attachments/1080527767839457300/1080550988001312849/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1080527767839457300/1080550988001312849/image.png",
            "height": 524,
            "width": 1374,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677693831259
      },
      {
        "content": "hmm, that seems strange",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677694405741
      },
      {
        "content": "same exact error?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677694407366
      },
      {
        "content": "<a href=\"https://www.mongodb.com/docs/atlas/reference/free-shared-limitations/?_ga=2.176267877.1329169847.1677683154-860992573.1647438381#operational-limitations\">https://www.mongodb.com/docs/atlas/reference/free-shared-limitations/?_ga=2.176267877.1329169847.1677683154-860992573.1647438381#operational-limitations</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677694502730
      },
      {
        "content": "looks like M5 clusters don&#x27;t support allowDiskUse, which is very good to know",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677694545362
      },
      {
        "content": "maybe we can figure out a smarter way around this",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677694552340
      },
      {
        "content": "Oh",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677694555122
      },
      {
        "content": "ah i see:",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1080527767839457300/1080554615780679680/image.png",
            "name": "image.png",
            "id": "1080554615780679680",
            "size": 26288,
            "url": "https://cdn.discordapp.com/attachments/1080527767839457300/1080554615780679680/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1080527767839457300/1080554615780679680/image.png",
            "height": 90,
            "width": 1588,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677694696192
      },
      {
        "content": "I&#x27;m going to try bumping to M10 in the interim but this interesting and also good to know!",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677694977443
      },
      {
        "content": "ok - keep me posted",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677695020892
      },
      {
        "content": "i am not sure about how to get around this otherwise",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677695030928
      },
      {
        "content": "one other thing to note, <code>allowDiskUse</code> seems to be <code>true</code> by default on Mongo 6.0+",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677695150416
      },
      {
        "content": "so you might not need to hijack your <code>node_modules</code> like a maniac (me) if you are using 6.0+",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677695173983
      },
      {
        "content": "We&#x27;re on Mongo 5.0 at the moment. Will confirm in a couple minutes.",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677695664410
      },
      {
        "content": "@jmikrut <br>Okay! I can confirm upgrading to an m10 cluster works!",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677695771382
      },
      {
        "content": "beautiful - did you still have your node_modules fix?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677695788037
      },
      {
        "content": "or should we set this in code? PS - would be a great PR for you to make if you&#x27;re up for it 👼",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677695800106
      },
      {
        "content": "Just deleting the change to my node_modules...",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677695884775
      },
      {
        "content": "It actually seems to work just fine",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677695900456
      },
      {
        "content": "ok awesome",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677695916369
      },
      {
        "content": "sucky that the database has gotta be more expensive - i will keep this on the radar to see if it&#x27;s possible to do this in a better way",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677695935655
      },
      {
        "content": "Awesome thanks for the support! Yeah this will work fine for us in the interim but would be great for others if a similar issue didn&#x27;t require the higher dedicated server.",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677696024543
      },
      {
        "content": "Sure I could. Would it make sense to hard code allowDiskUse in the query or have this as an optional parameter somewhere? I guess if the m10 cluster seems to solve it at mongo 5.0 though maybe not quite necessary yet?",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677696288911
      },
      {
        "content": "hard code makes sense",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677696865135
      },
      {
        "content": "i think it&#x27;s only leveraged if it&#x27;s necessary",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677696868792
      },
      {
        "content": "automatically",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677696869969
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/pull/2216\">https://github.com/payloadcms/payload/pull/2216</a>",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677701421543
      },
      {
        "content": "PR is here. Feel free to update wording in the note in docs.",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677701439392
      }
    ],
    "messageCount": 42
  },
  {
    "info": {
      "name": "Does Payload support deleting multiple documents at once in List view?",
      "id": "1074703344897114195",
      "guildId": "967097582721572934",
      "createdAt": 1676299644446
    },
    "messages": [
      {
        "content": "It seems like the only way is to delete documents one by one in Edit view. Is there a faster way to bulk delete multiple documents in the admin panel?",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1676299644446
      },
      {
        "content": "Hey @bombnp not at the moment, but Bulk Editing is on our roadmap! You can keep an eye on stuff like that here - <a href=\"https://github.com/payloadcms/payload/discussions/1382\">https://github.com/payloadcms/payload/discussions/1382</a>",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1676306019210
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "TypeError When viewing Versions",
      "id": "1076253386342674474",
      "guildId": "967097582721572934",
      "createdAt": 1676669203125
    },
    "messages": [
      {
        "content": "TypeError: Cannot read properties of undefined (reading &#x27;label&#x27;)<br><br>Whenever I go to specific Versions documents I get this error. I&#x27;m unsure as to exactly what causes the error because the Admin UI goes completely blank whenever I get it. It only happens on certain versions of documents. I&#x27;ve solved similar problems in validation functions that usually require adding a missing question mark (<code>?.label</code>) but am unsure of exactly where the error is coming from or what causes it so I&#x27;m not sure how to provide more context. Could this be because of a validation function or something I have written? Or is it a Payload issue? I would assume it&#x27;s a Payload issue because it&#x27;s in a document&#x27;s Versions which I haven&#x27;t messed with besides enabling them.<br><br>Included in the pictures is an example of a Version document that&#x27;s breaking when I try to view it in the Admin UI. If there&#x27;s any other information I can provide please let me know!",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1076253386342674474/1076253386720149584/image.png",
            "name": "image.png",
            "id": "1076253386720149584",
            "size": 141153,
            "url": "https://cdn.discordapp.com/attachments/1076253386342674474/1076253386720149584/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1076253386342674474/1076253386720149584/image.png",
            "height": 412,
            "width": 1448,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1076253386342674474/1076253387017957486/image.png",
            "name": "image.png",
            "id": "1076253387017957486",
            "size": 190824,
            "url": "https://cdn.discordapp.com/attachments/1076253386342674474/1076253387017957486/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1076253386342674474/1076253387017957486/image.png",
            "height": 880,
            "width": 1038,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676669203125
      },
      {
        "content": "Hi @TheDunco - what version of payload are you on? we will try to replicate this",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676916857120
      },
      {
        "content": "Hi! I&#x27;ve been experiencing this since Payload ^1.5 and am still experiencing it on v1.6.11 which is the version I&#x27;m currently running",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676919055629
      },
      {
        "content": "@TheDunco this is in production, right? Any way to replicate this issue in development so that the error message is more helpful?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676926058963
      },
      {
        "content": "Alternatively, you could click on the top line in your error message to see where the error is coming from within the compiled code",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676926076197
      },
      {
        "content": "Ah yes, sorry, my original message contained what it looked like in development...",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1076253386342674474/1077331852492283934/image.png",
            "name": "image.png",
            "id": "1077331852492283934",
            "size": 168336,
            "url": "https://cdn.discordapp.com/attachments/1076253386342674474/1077331852492283934/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1076253386342674474/1077331852492283934/image.png",
            "height": 740,
            "width": 782,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676926329540
      },
      {
        "content": "@dribbens something to look into here probably regarding <code>getTranslatedOptions</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676926465332
      },
      {
        "content": "probably a case of having bad data, BUT, we should be able to make that function &quot;safer&quot; so that it won&#x27;t crash",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676926502624
      },
      {
        "content": "I was thinking the same.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676926536173
      },
      {
        "content": "I&#x27;ll take a 👀 . Might have trouble without steps to reproduce.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676926606011
      },
      {
        "content": "It seems to me like adding optional chaining and/or ternaries to wherever the <code>field.label</code> is accessed in that file should solve my particular issue. Is there a way to build and use the Payload dep locally so I could try this out myself?",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676927326653
      },
      {
        "content": "Otherwise improving the safety of that function overall should fix the issue, but if it would help to narrow it down since I can&#x27;t provide steps to reproduce I&#x27;m willing to try that",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676927395458
      },
      {
        "content": "yes, you just need a local Mongo running. from there, just pull down Payload and run <code>yarn dev versions</code> to get a versions test environment set up",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676927604508
      },
      {
        "content": "but you can run <code>yarn dev [any-test-folder]</code> and develop against a lot of stuff. in this case, <code>versions</code> is the move for you i&#x27;d expect",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676927651484
      },
      {
        "content": "Sweet, thanks! I was just checking and I&#x27;m actually having trouble reproducing myself, but this is an issue I&#x27;ve seen all over the place. Just kinda hard to nail down. I checked the document that was previously causing issues and it doesn&#x27;t seem to be an issue anymore, although there seem to be less versions now than before when it was causing issues 🤷",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676928194256
      },
      {
        "content": "This is in production and I have multiple designers working on it so someone else probably messed with it and fixed it unwittingly",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676928264911
      },
      {
        "content": "I thought I found where this could be happening but after some testing I couldn&#x27;t reproduce it.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676929257921
      },
      {
        "content": "Oh nvm, I think I know",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676929426412
      },
      {
        "content": "I believe it is because this function could return null from a <code>find</code> not working if options have changed on the collection config.<br><a href=\"https://github.com/payloadcms/payload/blob/d9d2b6c383b55d570473f66bbf5dcfc669bb168b/src/admin/components/views/Version/RenderFieldsToDiff/fields/Select/index.tsx#L15\">https://github.com/payloadcms/payload/blob/d9d2b6c383b55d570473f66bbf5dcfc669bb168b/src/admin/components/views/Version/RenderFieldsToDiff/fields/Select/index.tsx#L15</a>",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676930048765
      },
      {
        "content": "This file could be cleaned up, looks like I got kind of wild on it.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676930121768
      },
      {
        "content": "I can sort this out, but not right now.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676930144736
      },
      {
        "content": "Cool, thanks for looking into this! It&#x27;s not super urgent, just thought I&#x27;d report!",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676992051873
      },
      {
        "content": "Issue created:<a href=\"https://github.com/payloadcms/payload/issues/2162\">https://github.com/payloadcms/payload/issues/2162</a> and I have a PR that addresses this: <a href=\"https://github.com/payloadcms/payload/pull/2163\">https://github.com/payloadcms/payload/pull/2163</a><br>That will be released probably next week.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677078050050
      },
      {
        "content": "Awesome, thank you!",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1677100608709
      },
      {
        "content": "I&#x27;m glad you were able to figure out that it was related to changing options in select fields, that&#x27;s definitely what broke things for me",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1677100725521
      }
    ],
    "messageCount": 24
  },
  {
    "info": {
      "name": "Reverse proxy with Caddy",
      "id": "1071785036686299207",
      "guildId": "967097582721572934",
      "createdAt": 1675603865549
    },
    "messages": [
      {
        "content": "I&#x27;m trying to deploy the back office application to a server. Here is what I already did :<br>- builded the back office<br>- ran the <code>dist/server.js</code> file with pm2 on port <code>3000</code><br>- setup a reverse proxy with a CaddyFile :<br><pre><code class=\"hljs\">admin.example.com {\n    reverse_proxy 127.0.0.1:3000\n}</code></pre><br>However hitting <code>admin.example.com</code> returns a 302 to <code>/admin</code> (great news right ?). But the admin route gives me a 404 <code>Cannot GET /admin</code> . Do you have any idea of what is happening ?",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1675603865549
      },
      {
        "content": "Can&#x27;t figure out what the problem. I don&#x27;t even think it comes from Caddy.<br>Is this suppose to work  <code>curl http://localhost:3000/admin</code> ? I&#x27;m having the same HTML error, <code>Cannot GET /admin</code>, and I don&#x27;t find any logs 😦",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1675618730272
      },
      {
        "content": "Serving locally for you works?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675620119170
      },
      {
        "content": "Works on my computer with <code>yarn dev</code> will try the build version this evening",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1675670748956
      },
      {
        "content": "Yes, the build is working locally",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1675716206615
      },
      {
        "content": "Ok, the server is working properly but only when I build with <code>NODE_ENV=development</code>. With <code>NODE_ENV=production</code> , I get the 404 error",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1675722111584
      },
      {
        "content": "Ok, I resolved it, I have absolutely no idea how",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1675806145765
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "How to add custom heading for group of fields?",
      "id": "1080933685198606468",
      "guildId": "967097582721572934",
      "createdAt": 1677785073328
    },
    "messages": [
      {
        "content": "I am trying to add a custom heading for group of fields, is there an option to do that? So I want to create a heading called &quot;Information&quot; and under it, have Username, password and etc. Another heading called &quot;Contact Info&quot; and have the email, phone and etc. Right now all the fields show right after each other, but I want to group them.",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1677785073328
      },
      {
        "content": "Hey there!<br>I believe what you are looking for is the Group Field. It required a name and fields attribute and will take the name property as the heading and also as the name of the object it&#x27;s fields will be put in. This is also the structure it will have when you query the field.<br><br>You can find a link to the documentation below. If you have any further questions, don&#x27;t hesitate to contact me and I&#x27;ll do my best to help you :)<br><br><a href=\"https://payloadcms.com/docs/fields/group\">https://payloadcms.com/docs/fields/group</a>",
        "fileAttachments": [],
        "authorID": "252520518945603585",
        "authorName": "MichaelBOOM",
        "authorAvatar": "c332a63449b4311dc59675b9bd6a45d1",
        "createdAtDate": 1677785793008
      },
      {
        "content": "yes, this is it",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1677787448445
      },
      {
        "content": "thank you",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1677787450160
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Are Layouts in the Demo the Block field?",
      "id": "1075911141680758864",
      "guildId": "967097582721572934",
      "createdAt": 1676587605639
    },
    "messages": [
      {
        "content": "Just making sure the Add Layout is indeed a Block Field with a title of &quot;Layout&quot; and not some Layout specific field, which I&#x27;m not seeing in the docs. <br><br>Aside:: I would have asked such a quick and simple question in general, but I knew you&#x27;re trying to create a spot for others to find the content too.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1075911141680758864/1075911141831737425/block.png",
            "name": "block.png",
            "id": "1075911141831737425",
            "size": 13866,
            "url": "https://cdn.discordapp.com/attachments/1075911141680758864/1075911141831737425/block.png",
            "proxyURL": "https://media.discordapp.net/attachments/1075911141680758864/1075911141831737425/block.png",
            "height": 434,
            "width": 538,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676587605639
      },
      {
        "content": "Yes, you are right, &quot;Layout&quot; is a block field",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1676589040666
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1075911141680758864/1075917226747641926/chrome_hjEKtReWb1.png",
            "name": "chrome_hjEKtReWb1.png",
            "id": "1075917226747641926",
            "size": 5252,
            "url": "https://cdn.discordapp.com/attachments/1075911141680758864/1075917226747641926/chrome_hjEKtReWb1.png",
            "proxyURL": "https://media.discordapp.net/attachments/1075911141680758864/1075917226747641926/chrome_hjEKtReWb1.png",
            "height": 260,
            "width": 234,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1676589056489
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/public-demo/blob/25db41568d78264ba99baf103afdea84f0976ed1/src/collections/Posts.ts\">https://github.com/payloadcms/public-demo/blob/25db41568d78264ba99baf103afdea84f0976ed1/src/collections/Posts.ts</a>",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1676589061639
      },
      {
        "content": "Great, thanks! I didn&#x27;t see there was a repo of the demo, that would have helped me answer my own question lol",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676589098283
      },
      {
        "content": "I guess I should have read the fine print while logging in:",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676589173820
      },
      {
        "content": "🤣",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1676589185738
      },
      {
        "content": "<blockquote>&quot;The code for this demo is open source and can be found here.&quot;</blockquote>",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676589188615
      },
      {
        "content": "Thanks for the assist @Marťafiixek",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676589212998
      },
      {
        "content": "No problem 🙂",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1676589245183
      }
    ],
    "messageCount": 9
  },
  {
    "info": {
      "name": "PAYLOAD_PUBLIC env var returning undefined",
      "id": "1076162643800359063",
      "guildId": "967097582721572934",
      "createdAt": 1676647568417
    },
    "messages": [
      {
        "content": "Hello!<br>I&#x27;ve made a small util for batch uploading images. In my local environment, it works fine. But in production (northflank), <code>fetch</code> is returning 404 because <code>process.env.PAYLOAD_PUBLIC_PAYLOAD_API</code> is <code>undefined</code>. I&#x27;ve double checked that the correct env var is in production, and I&#x27;m out of ideas of what can be the problem :/<br><br>Here&#x27;s a snippet from the upload function:<br><pre><code class=\"hljs\">  const uploadFile = async (file): Promise&lt;string&gt; =&gt; {\n    const formData = new FormData();\n    formData.append(&quot;file&quot;, file);\n\n    const response = await fetch(\n      `${process.env.PAYLOAD_PUBLIC_PAYLOAD_API}/media`,\n      {\n        method: &quot;POST&quot;,\n        body: formData,\n      }\n    );\n\n    return `${file.path} – ${response.status} ${response.statusText}`;\n  };</code></pre>",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1676647568417
      },
      {
        "content": "@arielarial What about other env vars?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676648924121
      },
      {
        "content": "@thisisnotchris there&#x27;s only one other paylod_public var: <code>PAYLOAD_PUBLIC_PAYLOAD_URL</code> , which I&#x27;m using in payload.config for <code>serverURL</code> prop",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1676652709481
      },
      {
        "content": "How are you verifying the env vars on that platform? Are the vars set during <em>the build</em> of the frontend bundle?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676668816275
      },
      {
        "content": "@denolfe I&#x27;ve just checked on the container logs:<br><pre><code class=\"hljs\">2023-02-17T21:21:01.069936761Z stdout F [2023-02-17T21:21:01Z INFO ] Successfully fetched environment variables.\n2023-02-17T21:21:00.742615986Z stdout F [2023-02-17T21:21:00Z INFO ] Securely fetching environment variables...</code></pre>",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1676674741645
      },
      {
        "content": "It is also in the Build logs:<br> <pre><code class=\"hljs\">2023-02-17T21:15:58.44691136Z stdout F [2023-02-17T21:15:58Z INFO ] Successfully fetched environment variables.\n2023-02-17T21:15:58.409839571Z stdout F [2023-02-17T21:15:58Z INFO ] Securely fetching environment variables...</code></pre>",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1676674916059
      },
      {
        "content": "This is a monorepo, and payload is in the <code>cms</code> folder. I had to change the Docker file a little bit to make it work. Could this be the problem?",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1676674966560
      },
      {
        "content": "Env variables are only available on the serverside, you would have to configure webpack to replace them in the clientside build.",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1676739453007
      },
      {
        "content": "To clarify, Payload <em>already does this substitution</em> into the frontend bundle if the proper PAYLOAD_PUBLIC prefix is used.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676861082751
      },
      {
        "content": "@arielarial Are you able to log the <em>actual values</em> to be certain they&#x27;re being loaded?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676861108977
      },
      {
        "content": "Thanks @thgh and @denolfe !<br>The values aren&#x27;t being loaded :/ I made a local build to check if it was some issue in northflank, but logging a <code>process.env.PAYLOAD_PUBLIC_XXXX</code> env var is returning undefined in the frontend",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1677003055326
      },
      {
        "content": "@arielarial Not sure if this is helpful, but you can access your env vars in your webpack config",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677005285588
      },
      {
        "content": "And then you can use something like Define plugin",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677005291601
      },
      {
        "content": "<pre><code class=\"hljs\">new webpack.DefinePlugin({\n    &#x27;process.env.foo&#x27;: &#x27;bar&#x27;\n})</code></pre>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677005323463
      },
      {
        "content": "and then thats available on process.env in your app",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677005338933
      },
      {
        "content": "Webpack also accepts an env command",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677005473978
      },
      {
        "content": "webpack --config webpack.config.js --env.foo=bar",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677005476536
      },
      {
        "content": "Thanks, @thisisnotchris ! I&#x27;m trying to find out why Payload isn&#x27;t exposing public env vars (as Elliot said). I think is better to make this work as intended. But I will try that approach if I can&#x27;t figure this out, thanks!",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1677006069173
      },
      {
        "content": "I was ready to dig in payload&#x27;s source code, and found an issue about this solved by @Jarrod <br>Adding this in the top of my payload config file solved the problem:<br><br><pre><code class=\"hljs\">import path from &#x27;path&#x27;;\nimport dotenv from &#x27;dotenv&#x27;;\n\ndotenv.config({\n  path: path.resolve(__dirname, &#x27;../.env&#x27;),\n});</code></pre><br><br>Source: <a href=\"https://github.com/payloadcms/payload/issues/1654#issuecomment-1355693467\">https://github.com/payloadcms/payload/issues/1654#issuecomment-1355693467</a><br><br>Thanks again @denolfe and @thisisnotchris 🙂",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1677007135597
      },
      {
        "content": "Okay, so you weren&#x27;t pointing to where the actual .env file was before this, therefore no values were being loaded 👍",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677008252111
      },
      {
        "content": "@denolfe I guess that&#x27;s it. <br>So in production I should do a custom build script. <br>But where should I store the fetched env vars, so Payload can expose them?<br><br><pre><code class=\"hljs\">// customAdminBuild.js\nconst path = require(&#x27;path&#x27;);\n\n// Tell Payload where to find your Payload config - can do it either here, or in package.json script\nprocess.env.PAYLOAD_CONFIG_PATH = path.resolve(__dirname, &#x27;src/payload.config.ts&#x27;);\n\nconst { build } = require(&#x27;payload/dist/bin/build&#x27;);\n\nconst buildPayloadAdmin = async () =&gt; {\n// Fetch your environment variables here\n// And then run `build`\n\nbuild();\n}\n\nbuildPayloadAdmin();</code></pre>",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1677009547925
      },
      {
        "content": "You shouldn&#x27;t need this. The create-payload-app scaffolds this out for you. It does this:<br><code>&quot;build:payload&quot;: &quot;cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts payload build&quot;</code>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677010114035
      },
      {
        "content": "I&#x27;m not sure what problem you&#x27;re trying to solve",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677010149809
      },
      {
        "content": "Depending on if you have a CI process or not. The most straight-forward deploy would be to just have a separate .env file for prod",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677010202497
      },
      {
        "content": "and it&#x27;s always in the spot your code loads from",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677010221212
      },
      {
        "content": "My initial problem was that using a PAYLOAD_PUBLIC env var in a collection hook was working in development but not in production.<br>After setting <code>dotenv.config</code> , it worked for builds in my machine, as I do have an .env file to point to.<br><br>But now I&#x27;m not sure how to solve this in production, as I&#x27;m deploying to Northflank via Github<br>The .env files are not being commited, because they have credentials. I&#x27;ve set the environment variables in the admin panel configs for this project",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1677010486715
      },
      {
        "content": "I thought that I would need to use the snippet above to fetch the PAYLOAD_PUBLIC env vars and set them somehow, in <code>buildPayloadAdmin</code> , before calling payload&#x27;s build",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1677010589938
      },
      {
        "content": "Hi @denolfe, did this make sense? I&#x27;m stuck on this now",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1677162749547
      },
      {
        "content": "@arielarial Github / Gitlab allow you to set enviornment variables through the control panel",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677162890111
      },
      {
        "content": "So that your project can securely reference them",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677162903796
      },
      {
        "content": "<a href=\"https://docs.github.com/en/actions/learn-github-actions/variables\">https://docs.github.com/en/actions/learn-github-actions/variables</a>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677163431390
      },
      {
        "content": "Didn&#x27;t know about that! But still, this won&#x27;t produce an .env file, which is what payload is expecting from me to point at. It looks like this works just like Northflank&#x27;s environment variables, which are available at build, but that I can&#x27;t make Payload expose to the frontend",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1677163614595
      },
      {
        "content": "Those env vars will need to be set during build time. Payload doesn&#x27;t care <em>how</em> you go about reading in those env vars, that&#x27;s more of a CI concern for you to solve.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677188687149
      },
      {
        "content": "to add, <em><strong>the .env file is only one method of declaring .env variables</strong></em> - you don&#x27;t need to use it at all",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677188758826
      },
      {
        "content": "Northflank likely lets you set env vars another way in their interface",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677188797330
      },
      {
        "content": "typically platforms like Northflank + Vercel / + Netlify, etc. allow you to set env variables in their own CI",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677188800335
      },
      {
        "content": "^^ yep",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677188803418
      },
      {
        "content": "AKA no need for <code>.env</code> in that point",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677188812134
      },
      {
        "content": "Thank you all for the responses! I am setting my env vars via Northflank&#x27;s panel:",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1076162643800359063/1079833361364832416/image.png",
            "name": "image.png",
            "id": "1079833361364832416",
            "size": 25885,
            "url": "https://cdn.discordapp.com/attachments/1076162643800359063/1079833361364832416/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1076162643800359063/1079833361364832416/image.png",
            "height": 283,
            "width": 683,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1677522735752
      },
      {
        "content": "The problem is: during build, I&#x27;m using this vars to build Payload without problems.<br>But in Payload&#x27;s admin interface I&#x27;m using a hook that needs payload api url. That is one of my env vars, that is not being set for the admin panel of payload.<br><br>At this point I was asking myself if there&#x27;s another easier way to get payload REST API URL from inside a hook? Is this exposed in any var?",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1677522865206
      },
      {
        "content": "Recently used this, based on how it&#x27;s done in Payload internally:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> { serverURL, <span class=\"hljs-attr\">routes</span>: { api } } = <span class=\"hljs-title function_\">useConfig</span>()\n<span class=\"hljs-title function_\">fetch</span>(\n  <span class=\"hljs-string\">`<span class=\"hljs-subst\">${serverURL}</span><span class=\"hljs-subst\">${api}</span>/<span class=\"hljs-subst\">${props.relationTo}</span>`</span>,\n  { <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;POST&#x27;</span>, body }\n).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">r</span>) =&gt;</span> r.<span class=\"hljs-title function_\">json</span>())</code></pre>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677664833020
      },
      {
        "content": "Thank you so much, @thgh ! I&#x27;m gonna try this, but it seems to be exactly what I need",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1677707330824
      }
    ],
    "messageCount": 41
  },
  {
    "info": {
      "name": "Autosave Local API",
      "id": "1068315385134325822",
      "guildId": "967097582721572934",
      "createdAt": 1674776636156
    },
    "messages": [
      {
        "content": "It wasn&#x27;t very clear in the docs, but what&#x27;s the proper way to autosave using the Local API?<br><a href=\"https://payloadcms.com/docs/versions/autosave\">https://payloadcms.com/docs/versions/autosave</a>",
        "fileAttachments": [],
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674776636156
      },
      {
        "content": "Experimenting a bit, looks like just the autosave flag alone won&#x27;t do it, you also need the draft flag as well:<br><br><pre><code class=\"hljs jsx\"><span class=\"hljs-comment\">// works</span>\n  <span class=\"hljs-keyword\">const</span> note = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">update</span>({\n        <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;notes&quot;</span>,\n        <span class=\"hljs-attr\">id</span>: noteId,\n        <span class=\"hljs-attr\">data</span>: {\n            mdx,\n            source,\n        },\n        user,\n        <span class=\"hljs-attr\">draft</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">autosave</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">locale</span>: <span class=\"hljs-string\">&quot;en&quot;</span>,\n    });</code></pre>",
        "fileAttachments": [],
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674776707314
      },
      {
        "content": "With just <code>autosave</code> flag,  it seems to save all autosaves as a seperate draft:<br><br><pre><code class=\"hljs jsx\"><span class=\"hljs-comment\">// unexpected</span>\n  <span class=\"hljs-keyword\">const</span> note = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">update</span>({\n        <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;notes&quot;</span>,\n        <span class=\"hljs-attr\">id</span>: noteId,\n        <span class=\"hljs-attr\">data</span>: {\n            mdx,\n            source,\n        },\n        user,\n        <span class=\"hljs-attr\">autosave</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">locale</span>: <span class=\"hljs-string\">&quot;en&quot;</span>,\n    });</code></pre>",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1068315385134325822/1068316180642807838/image.png",
            "name": "image.png",
            "id": "1068316180642807838",
            "size": 54178,
            "url": "https://cdn.discordapp.com/attachments/1068315385134325822/1068316180642807838/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1068315385134325822/1068316180642807838/image.png",
            "height": 605,
            "width": 963,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674776825873
      },
      {
        "content": "ie, it behaves same as with only <code>draft</code> flag.",
        "fileAttachments": [],
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674776857246
      },
      {
        "content": "Autosave is only an Admin UI concept. In the docs, it calls out the need for enabling drafts on the collection.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675439803132
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Is is possible to have an optional unique field?",
      "id": "1071899413536055387",
      "guildId": "967097582721572934",
      "createdAt": 1675631135115
    },
    "messages": [
      {
        "content": "It seems that unique implies required.",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1675631135115
      },
      {
        "content": "Not true. I’ve had many occasions in other systems where I needed SQL indexes for “unique or null”",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675666356913
      },
      {
        "content": "Agree, how to do it in payload?",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1675667483899
      },
      {
        "content": "Could you do it in a custom validate function?",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675695086862
      },
      {
        "content": "Probably, but I think that would introduce a potential race condition. Created a discussion over here: <a href=\"https://github.com/payloadcms/payload/discussions/2072\">https://github.com/payloadcms/payload/discussions/2072</a>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1676276146369
      },
      {
        "content": "Going to mark an answered as the discussion has moved to github here.",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676913993501
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Clone database to downstream environments",
      "id": "1072306934604120074",
      "guildId": "967097582721572934",
      "createdAt": 1675728295709
    },
    "messages": [
      {
        "content": "I have environments for Prod, Staging, Dev, and local dev that I&#x27;d like to run Payload on... what&#x27;s the best way to be able to regularly clone content from the Prod database downstream to the staging/dev environment databases so that we&#x27;re always working with the latest content?<br><br>Is that something the Local API can do? Or better off with Mongo backup/restore?",
        "fileAttachments": [],
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675728295709
      },
      {
        "content": "I would use Local API and write an export/import process ... this way you can export specific data from one environment, and import it into another ... this would allow for downstream syncing, but also provide upstream syncing as well ... for example, taking data on staging and moving it upstream.",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675869560648
      },
      {
        "content": "@David Very cool. Do you happen to know of any examples doing that?",
        "fileAttachments": [],
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675874537450
      },
      {
        "content": "I don&#x27;t believe any examples exist for local api at the moment - but I&#x27;m currently using the local api to manage &quot;seed&quot; data, which I&#x27;m also using to migrate data from WordPress into Payload.  I export the WP data into JSON files that are transformed into the shape of our Payload documents.  I then iterate over each JSON file and create/update the document using the Local API.<br><br>I haven&#x27;t built the export feature that will allow our devs to build documents on their local and then share those, at the moment, we&#x27;re just using the REST API to get the data and saving it as a JSON file manually ... but I plan to eventually support exporting the documents out of payload with an admin button, or a CLI command",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675875304298
      },
      {
        "content": "Awesome, thank you much! I think that would be a great feature to have built in!  In the mean time I will dig into using the Local API to achieve this.",
        "fileAttachments": [],
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675875469648
      },
      {
        "content": "@Douggie O hopefully this helps ... this is a stripped down version of the script I&#x27;m using to seed data ... <a href=\"https://gist.github.com/higginsd-kong/a36d08cd5547dd97cac79226bfddf7cb\">https://gist.github.com/higginsd-kong/a36d08cd5547dd97cac79226bfddf7cb</a><br><br>It assumes there are JSON files in the <code>/seeds</code> folder at the project root.  Each collection has it&#x27;s own folder, and it supports the <code>nested docs</code> plugin ... it does currently assume the data is being loaded in the correct order.  It may say that relationships do not exist, and we&#x27;re just running it a second time in that case as it creates/updates data.<br><br>It also assumes that collections define a custom ID field, ... we just use <code>bson-objectid</code> in a <code>beforeChange</code> hook to auto-generate ID&#x27;s before creating a document.<br><br>The JSON files are basically the return from the REST API with <code>depth=0</code> ... we do strip out some of the data added by nested-docs (such as breadcrumbs property)",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675876593965
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Problem with custom auth strategy",
      "id": "1041405431387533442",
      "guildId": "967097582721572934",
      "createdAt": 1668360803220
    },
    "messages": [
      {
        "content": "I created a google oauth strategy with passport, I added it to payload and in the login everything works well (you can login, generate a token, and the token is set to the payload-token http-only cookie) but in the admin panel I can&#x27;t access, also, the api isn&#x27;t working, i&#x27;m getting this error in the console for the admin",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1041405431387533442/1041405483887640726/image.png",
            "name": "image.png",
            "id": "1041405483887640726",
            "size": 64922,
            "url": "https://cdn.discordapp.com/attachments/1041405431387533442/1041405483887640726/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1041405431387533442/1041405483887640726/image.png",
            "height": 472,
            "width": 567,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668360803220
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1041405431387533442/1041405829145968690/image.png",
            "name": "image.png",
            "id": "1041405829145968690",
            "size": 6009,
            "url": "https://cdn.discordapp.com/attachments/1041405431387533442/1041405829145968690/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1041405431387533442/1041405829145968690/image.png",
            "height": 46,
            "width": 703,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668360898140
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1041405431387533442/1041405846657171539/image.png",
            "name": "image.png",
            "id": "1041405846657171539",
            "size": 1275,
            "url": "https://cdn.discordapp.com/attachments/1041405431387533442/1041405846657171539/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1041405431387533442/1041405846657171539/image.png",
            "height": 63,
            "width": 95,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668360902312
      },
      {
        "content": "My users collection:<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">GoogleStrategy</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;../auth/google&quot;</span>;\n<span class=\"hljs-keyword\">import</span> finalise <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;../auth/jwt&quot;</span>;\n<span class=\"hljs-keyword\">import</span> passport <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;passport&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Users</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&quot;users&quot;</span>,\n  <span class=\"hljs-attr\">auth</span>: {\n    <span class=\"hljs-attr\">tokenExpiration</span>: <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">24</span> * <span class=\"hljs-number\">7</span>, <span class=\"hljs-comment\">// 1 week</span>\n    <span class=\"hljs-attr\">verify</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">maxLoginAttempts</span>: <span class=\"hljs-number\">5</span>,\n    <span class=\"hljs-attr\">lockTime</span>: <span class=\"hljs-number\">600</span> * <span class=\"hljs-number\">1000</span>,\n    <span class=\"hljs-attr\">useAPIKey</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">strategies</span>: [\n      {\n        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;google&quot;</span>,\n        <span class=\"hljs-attr\">strategy</span>: <span class=\"hljs-title class_\">GoogleStrategy</span>,\n      },\n    ],\n  },\n  <span class=\"hljs-attr\">endpoints</span>: [\n    {\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/google&quot;</span>,\n      <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&quot;get&quot;</span>,\n      <span class=\"hljs-attr\">handler</span>: <span class=\"hljs-keyword\">async</span> (req, res) =&gt; {\n        passport.<span class=\"hljs-title function_\">authenticate</span>(<span class=\"hljs-string\">&quot;google&quot;</span>, {\n          <span class=\"hljs-attr\">scope</span>: [<span class=\"hljs-string\">&quot;profile&quot;</span>, <span class=\"hljs-string\">&quot;email&quot;</span>],\n        })(req, res);\n      },\n    },\n    {\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/google/callback&quot;</span>,\n      <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&quot;get&quot;</span>,\n      <span class=\"hljs-attr\">handler</span>: <span class=\"hljs-keyword\">async</span> (req, res) =&gt; {\n        req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-title function_\">authenticate</span>(req, res, <span class=\"hljs-function\">() =&gt;</span> {\n          <span class=\"hljs-keyword\">if</span> (req?.<span class=\"hljs-property\">user</span>) {\n            <span class=\"hljs-keyword\">const</span> final = <span class=\"hljs-title function_\">finalise</span>(req, res);\n            <span class=\"hljs-keyword\">return</span> final.<span class=\"hljs-property\">res</span>.<span class=\"hljs-title function_\">status</span>(<span class=\"hljs-number\">200</span>).<span class=\"hljs-title function_\">send</span>({ <span class=\"hljs-attr\">token</span>: final.<span class=\"hljs-property\">token</span> });\n          }\n          <span class=\"hljs-keyword\">return</span> res.<span class=\"hljs-title function_\">status</span>(<span class=\"hljs-number\">401</span>).<span class=\"hljs-title function_\">send</span>({ <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Unauthorized&quot;</span> });\n        });\n      },\n    },\n  ],\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">Users</span>;</code></pre>",
        "fileAttachments": [],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668361097484
      },
      {
        "content": "the google strategy:",
        "fileAttachments": [],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668361140790
      },
      {
        "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> payload <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload&quot;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Strategy</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;passport-google-oauth20&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { v4 <span class=\"hljs-keyword\">as</span> uuidv4 } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;uuid&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Forbidden</span>, <span class=\"hljs-title class_\">LockedAuth</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/errors&quot;</span>;\n\n<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;dotenv&quot;</span>).<span class=\"hljs-title function_\">config</span>();\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">GoogleStrategy</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Strategy</span>(\n  {\n    <span class=\"hljs-attr\">clientID</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">GOOGLE_CLIENT_ID</span>,\n    <span class=\"hljs-attr\">clientSecret</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">GOOGLE_CLIENT_SECRET</span>,\n    <span class=\"hljs-attr\">callbackURL</span>: <span class=\"hljs-string\">&quot;/api/users/google/callback&quot;</span>,\n    <span class=\"hljs-attr\">scope</span>: [<span class=\"hljs-string\">&quot;profile&quot;</span>, <span class=\"hljs-string\">&quot;email&quot;</span>],\n  },\n  <span class=\"hljs-keyword\">async</span> (accessToken, refreshToken, profile, done) =&gt; {\n    <span class=\"hljs-keyword\">const</span> { emails } = profile;\n    <span class=\"hljs-keyword\">const</span> email = emails[<span class=\"hljs-number\">0</span>]?.<span class=\"hljs-property\">value</span>;\n\n    <span class=\"hljs-keyword\">if</span> (!email) {\n      <span class=\"hljs-title function_\">done</span>(<span class=\"hljs-title class_\">Forbidden</span>, <span class=\"hljs-literal\">false</span>);\n    }\n\n    <span class=\"hljs-keyword\">try</span> {\n      <span class=\"hljs-keyword\">let</span> user = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">find</span>({\n        <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;users&quot;</span>,\n        <span class=\"hljs-attr\">where</span>: {\n          <span class=\"hljs-attr\">email</span>: {\n            <span class=\"hljs-attr\">equals</span>: email,\n          },\n        },\n      });\n\n      <span class=\"hljs-keyword\">if</span> (user?.<span class=\"hljs-property\">totalDocs</span> &gt; <span class=\"hljs-number\">0</span>) {\n        user = user.<span class=\"hljs-property\">docs</span>[<span class=\"hljs-number\">0</span>];\n      }\n\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">isLocked</span> = (<span class=\"hljs-params\">date</span>) =&gt; !!(date &amp;&amp; date &gt; <span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">now</span>());\n      <span class=\"hljs-keyword\">if</span> (user &amp;&amp; <span class=\"hljs-title function_\">isLocked</span>(user.<span class=\"hljs-property\">lockUntil</span>)) {\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">LockedAuth</span>();\n      }\n\n      <span class=\"hljs-keyword\">if</span> (user?.<span class=\"hljs-property\">totalDocs</span> &lt; <span class=\"hljs-number\">1</span>) {\n        user = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">create</span>({\n          <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;users&quot;</span>,\n          <span class=\"hljs-attr\">data</span>: {\n            email,\n            <span class=\"hljs-attr\">password</span>: <span class=\"hljs-title function_\">uuidv4</span>(),\n            <span class=\"hljs-attr\">avatar</span>: <span class=\"hljs-string\">&quot;1&quot;</span>,\n            <span class=\"hljs-attr\">_verified</span>: <span class=\"hljs-literal\">true</span>,\n          },\n          <span class=\"hljs-attr\">disableVerificationEmail</span>: <span class=\"hljs-literal\">true</span>,\n        });\n      }\n\n      <span class=\"hljs-keyword\">if</span> (user) {\n        user.<span class=\"hljs-property\">collection</span> = <span class=\"hljs-string\">&quot;users&quot;</span>;\n        user.<span class=\"hljs-property\">_strategy</span> = <span class=\"hljs-string\">&quot;google&quot;</span>;\n        <span class=\"hljs-title function_\">done</span>(<span class=\"hljs-literal\">null</span>, user);\n      } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-title function_\">done</span>(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">false</span>);\n      }\n    } <span class=\"hljs-keyword\">catch</span> (e) {\n      <span class=\"hljs-title function_\">done</span>(e, <span class=\"hljs-literal\">false</span>);\n    }\n  }\n);\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">GoogleStrategy</span>;</code></pre>",
        "fileAttachments": [],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668361198631
      },
      {
        "content": "token:",
        "fileAttachments": [],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668361229140
      },
      {
        "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> jwt <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;jsonwebtoken&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">finalise</span> = (<span class=\"hljs-params\">req, res</span>) =&gt; {\n  <span class=\"hljs-keyword\">let</span> user = req.<span class=\"hljs-property\">user</span>;\n  user = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(user));\n  user = <span class=\"hljs-title function_\">sanitizeInternalFields</span>(user);\n\n  <span class=\"hljs-keyword\">const</span> collections = req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-property\">collections</span>;\n  <span class=\"hljs-keyword\">const</span> userCollection = collections[req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-property\">config</span>.<span class=\"hljs-property\">admin</span>.<span class=\"hljs-property\">user</span>];\n  <span class=\"hljs-keyword\">const</span> collectionConfig = userCollection.<span class=\"hljs-property\">config</span>;\n\n  <span class=\"hljs-keyword\">const</span> fieldsToSign = <span class=\"hljs-title function_\">getFieldsToSign</span>(collectionConfig, user);\n\n  <span class=\"hljs-keyword\">const</span> token = jwt.<span class=\"hljs-title function_\">sign</span>(fieldsToSign, req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-property\">secret</span>, {\n    <span class=\"hljs-attr\">expiresIn</span>: collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">tokenExpiration</span>,\n  });\n\n  <span class=\"hljs-keyword\">const</span> cookieOptions = {\n    <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/&quot;</span>,\n    <span class=\"hljs-attr\">httpOnly</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">expires</span>: <span class=\"hljs-title function_\">getCookieExpiration</span>(collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">tokenExpiration</span>),\n    <span class=\"hljs-attr\">secure</span>: collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">cookies</span>.<span class=\"hljs-property\">secure</span>,\n    <span class=\"hljs-attr\">sameSite</span>: collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">cookies</span>.<span class=\"hljs-property\">sameSite</span>,\n    <span class=\"hljs-attr\">domain</span>: <span class=\"hljs-literal\">undefined</span>,\n  };\n\n  <span class=\"hljs-keyword\">if</span> (collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">cookies</span>.<span class=\"hljs-property\">domain</span>) {\n    cookieOptions.<span class=\"hljs-property\">domain</span> = collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">cookies</span>.<span class=\"hljs-property\">domain</span>;\n  }\n\n  res.<span class=\"hljs-title function_\">cookie</span>(<span class=\"hljs-string\">`payload-token`</span>, token, cookieOptions);\n\n  req.<span class=\"hljs-property\">user</span> = user;\n\n  <span class=\"hljs-keyword\">return</span> { req, res, token };\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> finalise;</code></pre>",
        "fileAttachments": [],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668361265021
      },
      {
        "content": "any ideas?",
        "fileAttachments": [],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668439159572
      },
      {
        "content": "have you set all the relevant origins and callbacks in cloud console?",
        "fileAttachments": [],
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1668441210863
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1041405431387533442/1041742701588119712/image.png",
            "name": "image.png",
            "id": "1041742701588119712",
            "size": 189159,
            "url": "https://cdn.discordapp.com/attachments/1041405431387533442/1041742701588119712/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1041405431387533442/1041742701588119712/image.png",
            "height": 1618,
            "width": 1590,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1668441214786
      },
      {
        "content": "make sure to add both localhost and localhost:3100 in your case",
        "fileAttachments": [],
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1668441249567
      },
      {
        "content": "and by the way, I updated the google-one-tap plugin yesterday so it should work out the box now",
        "fileAttachments": [],
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1668441354931
      },
      {
        "content": "how to use it for auth from client?",
        "fileAttachments": [],
        "authorID": "680820827804925953",
        "authorName": "Sora",
        "authorAvatar": "84460ba76680abd54e80ab5954aa3a6e",
        "createdAtDate": 1668442538165
      },
      {
        "content": "Its not built for auth from client, just as an auth for payloadcms admin. Auth from client depends a lot on what client but you should be able to quite easily copy the code in my repo and make the necessary adjustments. The main difference would be that I save the jwt token using payloads setToken useAuth whereas you would be wanting to do similar client side:<br><a href=\"https://github.com/ScottEAdams/payload-plugin-google-one-tap/blob/main/src/components/button.tsx\">https://github.com/ScottEAdams/payload-plugin-google-one-tap/blob/main/src/components/button.tsx</a>",
        "fileAttachments": [],
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1668443949266
      },
      {
        "content": "oh thank you, I made a little fork for my project",
        "fileAttachments": [],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668447536011
      },
      {
        "content": "@7wonders any toughs on this?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1041405431387533442/1042116783278141521/image.png",
            "name": "image.png",
            "id": "1042116783278141521",
            "size": 15198,
            "url": "https://cdn.discordapp.com/attachments/1041405431387533442/1042116783278141521/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1041405431387533442/1042116783278141521/image.png",
            "height": 173,
            "width": 441,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668530402800
      },
      {
        "content": "Sorry, been offline a bunch. Have you got the <code>app.use(express.json())</code>",
        "fileAttachments": [],
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1669147077675
      },
      {
        "content": "yes, but it stills not work",
        "fileAttachments": [],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1669149976098
      },
      {
        "content": "Now the problem is when an account does not exits resolves with a 401 code",
        "fileAttachments": [],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1669150091496
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1041405431387533442/1044715971237138452/image.png",
            "name": "image.png",
            "id": "1044715971237138452",
            "size": 5056,
            "url": "https://cdn.discordapp.com/attachments/1041405431387533442/1044715971237138452/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1041405431387533442/1044715971237138452/image.png",
            "height": 68,
            "width": 387,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1669150097476
      },
      {
        "content": "@7wonders I think i got the problem",
        "fileAttachments": [],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1669504975474
      },
      {
        "content": "seems like the plugin cannot access to accounts that are not created yet",
        "fileAttachments": [],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1669504995395
      },
      {
        "content": "so you can&#x27;t cerate an account in payload using this method",
        "fileAttachments": [],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1669505007620
      },
      {
        "content": "any thougs in how can i make that?",
        "fileAttachments": [],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1669505016309
      },
      {
        "content": "As soon as I add this plugin to payload, the application does not compile:<br><br><pre><code class=\"hljs\">BREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.</code></pre>",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1671543949638
      },
      {
        "content": "Any change we can peek inside the  <pre><code class=\"hljs\">sanitizeInternalFields, getFieldsToSign and getCookieExpiration</code></pre> functions?",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1671544331918
      },
      {
        "content": "@ScriptDroid was your initial problem solved by entering all origins &amp; callbacks in the cloud console?",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677533201570
      },
      {
        "content": "@7wonders do you have any suggestions what else might be the problem if I can&#x27;t access the admin panel? I made sure the URLs are set in the google console. (and once I open any api route in the browser it redirects me to the google sign-up form)",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677579109906
      },
      {
        "content": "Really sorry, I havent been very active the last couple of months. I will see if I can check the plugins out this week and get some updating done.",
        "fileAttachments": [],
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1677608938926
      },
      {
        "content": "But remember that its completely open source so you are welcome to submit pull requests with fixes 🙂",
        "fileAttachments": [],
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1677608996487
      }
    ],
    "messageCount": 30
  },
  {
    "info": {
      "name": "Can We collaborate with Paylaod CMS?",
      "id": "1075256043220783194",
      "guildId": "967097582721572934",
      "createdAt": 1676431417995
    },
    "messages": [
      {
        "content": "Hey Sophia! This is Vincent from the ILLA team, we are building an open-source low-code tool for developers. Our Repo is here: <a href=\"https://github.com/illacloud/illa-builder\">https://github.com/illacloud/illa-builder</a>, Do you think we can build a collaboration with your product? Since your product is headless and our product is UI libaray as a head if you can combine.",
        "fileAttachments": [],
        "authorID": "998777068785520760",
        "authorName": "silencer.xyz",
        "authorAvatar": "193babc99125d2e80dd13aa3cc219f0d",
        "createdAtDate": 1676431417995
      },
      {
        "content": "@silencer.xyz Of course! Payload was built with this type of integration in mind 👍",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676470990613
      },
      {
        "content": "dope!",
        "fileAttachments": [],
        "authorID": "998777068785520760",
        "authorName": "silencer.xyz",
        "authorAvatar": "193babc99125d2e80dd13aa3cc219f0d",
        "createdAtDate": 1676641465052
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Replacing useMemo with useState?",
      "id": "1067085240062984254",
      "guildId": "967097582721572934",
      "createdAt": 1674483346716
    },
    "messages": [
      {
        "content": "Currently, when I try to set a custom elements or leaves in the richText, I get <code>Cannot find a descendant at path</code> error which causes because useMemo is reevaluated on reloads so we might need to use useState instead?<br><a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/RichText/RichText.tsx#L155\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/RichText/RichText.tsx#L155</a><br>Related issue: <a href=\"https://github.com/ianstormtaylor/slate/issues/4081\">https://github.com/ianstormtaylor/slate/issues/4081</a>",
        "fileAttachments": [],
        "authorID": "1050078247209140286",
        "authorName": "Mng",
        "authorAvatar": null,
        "createdAtDate": 1674483346716
      },
      {
        "content": "@Jarrod any thoughts?",
        "fileAttachments": [],
        "authorID": "1050078247209140286",
        "authorName": "Mng",
        "authorAvatar": null,
        "createdAtDate": 1674512193975
      },
      {
        "content": "This is probably due to your implementation, and you might be attempting to use an improper path or location",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675443143210
      },
      {
        "content": "that error is common when you try to update a node&#x27;s properties (or similar) but the path that you&#x27;re trying to do that against is not valid",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675443168025
      },
      {
        "content": "we do this often within Slate, all over the place in fact - so it&#x27;s not something that is related to our use of <code>useMemo</code> vs. <code>useState</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675443188300
      },
      {
        "content": "@jmikrut hmm, all i wanted to do is overriding the elements in the richText so thats what i did<br><code>&lt;RichText name=&quot;test&quot; label=&quot;Test&quot; admin={{elements:[&#x27;h1&#x27;, &#x27;h2&#x27;]}}/&gt;</code><br>then i got the error i mentioned but worked fine after i replaced useMemo with useState",
        "fileAttachments": [],
        "authorID": "1050078247209140286",
        "authorName": "Mng",
        "authorAvatar": null,
        "createdAtDate": 1676772406918
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "supporting other databases",
      "id": "1073859030503653387",
      "guildId": "967097582721572934",
      "createdAt": 1676098344208
    },
    "messages": [
      {
        "content": "Is supporting other databases in the roadmap?  For example Planetscale?",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676098344208
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/discussions/287\">https://github.com/payloadcms/payload/discussions/287</a> pretty much, though I doubt planetscale would be one supported out of the box, I think once ^ this is done you&#x27;d be able to use or write your own adapter for any db",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676106161942
      },
      {
        "content": "Correct, we&#x27;ll likely go with Prisma or similar to be able to hit as much DB support as possible.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676241847177
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "How to build a custom rich-text element with multiple options?",
      "id": "1075704321238368296",
      "guildId": "967097582721572934",
      "createdAt": 1676538295803
    },
    "messages": [
      {
        "content": "I want to provide editors with the ability to embed Twitter posts, while also being able to provide fallback text. How would I do that?<br><br>My guess is that I should to something similar to what the upload/relationship elements do - render a component with some buttons that then open modals for the various options.",
        "fileAttachments": [],
        "authorID": "583713322700898304",
        "authorName": "dodov",
        "authorAvatar": "963cac7b9d70846918bedd06cc4cc389",
        "createdAtDate": 1676538295803
      },
      {
        "content": "I something similar recently.<br>Basically think what you want the resulting slate node to look like. I guess <code>{type: &quot;tweet&quot;, twitterId: &quot;someid&quot;, fallback: &quot;My fallback text&quot;}</code><br>In that case, you create a button that opens the modal with some fields where you can enter this info, and confirming the modal adds a void node (it doesn&#x27;t have children) with these properties.<br><br>Have a look too at the video element on the website example: <a href=\"https://github.com/payloadcms/public-demo/tree/master/src/fields/richText/video\">https://github.com/payloadcms/public-demo/tree/master/src/fields/richText/video</a>",
        "fileAttachments": [],
        "authorID": "258898794102521857",
        "authorName": "agenericguy",
        "authorAvatar": null,
        "createdAtDate": 1676552266515
      },
      {
        "content": "I actually managed to make my own embed element: <a href=\"https://github.com/hdodov/payload-rich-text-tweet\">https://github.com/hdodov/payload-rich-text-tweet</a><br><br>It even supports both light and dark mode. 🤘",
        "fileAttachments": [],
        "authorID": "583713322700898304",
        "authorName": "dodov",
        "authorAvatar": "963cac7b9d70846918bedd06cc4cc389",
        "createdAtDate": 1676645738174
      },
      {
        "content": "Nice work! This is pretty cool!",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1676646515058
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "How to edit the list view of an upload collection?",
      "id": "1071841509399351337",
      "guildId": "967097582721572934",
      "createdAt": 1675617329693
    },
    "messages": [
      {
        "content": "I have this example but I was hoping for a more custom way to do it. For example I don&#x27;t want to display a Product like that with its ID but all of the Product&#x27;s fields. How would I do that?<br> <br><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react&quot;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Example</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/dist/admin/components/views/collections/List/Default&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Props</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/dist/admin/components/views/collections/List/types&quot;</span>;\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">ProductsList</span>(<span class=\"hljs-params\">props: Props</span>) {\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Example</span>\n            <span class=\"hljs-attr\">collection</span>=<span class=\"hljs-string\">{props.collection}</span>\n            <span class=\"hljs-attr\">columnNames</span>=<span class=\"hljs-string\">{props.columnNames}</span>\n            <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{props.data}</span>\n            <span class=\"hljs-attr\">hasCreatePermission</span>=<span class=\"hljs-string\">{props.hasCreatePermission}</span>\n            <span class=\"hljs-attr\">limit</span>=<span class=\"hljs-string\">{props.limit}</span>\n            <span class=\"hljs-attr\">newDocumentURL</span>=<span class=\"hljs-string\">{props.newDocumentURL}</span>\n            <span class=\"hljs-attr\">setColumns</span>=<span class=\"hljs-string\">{props.setColumns}</span>\n            <span class=\"hljs-attr\">setListControls</span>=<span class=\"hljs-string\">{props.setListControls}</span>\n            <span class=\"hljs-attr\">setSort</span>=<span class=\"hljs-string\">{props.setSort}</span>\n            <span class=\"hljs-attr\">tableColumns</span>=<span class=\"hljs-string\">{props.tableColumns}</span>\n            <span class=\"hljs-attr\">setLimit</span>=<span class=\"hljs-string\">{props.setLimit}</span>\n        /&gt;</span></span>\n    );\n}\n\n<span class=\"hljs-keyword\">export</span> { <span class=\"hljs-title class_\">ProductsList</span> };</code></pre>",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1071841509399351337/1071843581502947439/image.png",
            "name": "image.png",
            "id": "1071843581502947439",
            "size": 141080,
            "url": "https://cdn.discordapp.com/attachments/1071841509399351337/1071843581502947439/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1071841509399351337/1071843581502947439/image.png",
            "height": 723,
            "width": 1877,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675617329693
      },
      {
        "content": "You can use your own custom <code>List</code> component to do this, read a bit more about this here: <a href=\"https://payloadcms.com/docs/admin/components#collections\">https://payloadcms.com/docs/admin/components#collections</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675689371930
      },
      {
        "content": "Basically, on your upload collection you will need to add <code>admin: { views: { List: ProductsList } }</code>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675689439479
      },
      {
        "content": "yes i&#x27;m doing this but i meant i want to access the default Upload list component that Payload provides me, so that i can edit parts of it. i don&#x27;t want to build the component from scratch or only change some props. for example i want to change the shape of that Product in the image to be horizontal and including other fields",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675701818859
      },
      {
        "content": "if that&#x27;s possible",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675701823444
      },
      {
        "content": "i imported views/collections/List/Default but i can&#x27;t customize it any more than change its props like collection and columnNames, etc.",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675701870793
      },
      {
        "content": "Sure that makes sense. Currently you would have to copy that file (ensure import paths are updated to point to dist instead of relative paths) and then swap out the UploadGallery with your own gallery component.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675706081400
      },
      {
        "content": "I think in the future, uploads will change - either we go with list/grid display (option toggle) or just align the upload gallery so it matches the collection lists",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675706140617
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/discussions/1337\">https://github.com/payloadcms/payload/discussions/1337</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675706394049
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "payload build missing ENV and styles",
      "id": "1063030217788108860",
      "guildId": "967097582721572934",
      "createdAt": 1673516554067
    },
    "messages": [
      {
        "content": "I&#x27;m facing the issue that when I run payload on my server in production mode, my custom styles won&#x27;t load and environment variables don&#x27;t seem to be available to my custom components in the dashboard (even with PAYLOAD_PUBLIC prefix).<br><br>When I run payload in development mode on the same server, styles and ENV are there.<br><br>The Dashboard is built using payload build right on the server, with css files and env in place. <br><br>An interesting thing I noticed: If I run npm run dev, but have NODE_ENV set to production, payload seems to actually use the prebuilt dashboard bundle. Is that the expected behaviour?",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673516554067
      },
      {
        "content": "Hey @Sandro Wegmann following up here. Did you ever get this working? Here is a little thread about env vars and how to use them if you have not already seen it: <a href=\"https://github.com/payloadcms/payload/issues/1654#issuecomment-1403972303\">https://github.com/payloadcms/payload/issues/1654#issuecomment-1403972303</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675438843375
      },
      {
        "content": "Hey Jarrod, thanks for the link, it&#x27;s pretty helpful. I actually just tried it again with the same code, and it seems to work flawlessly now. Maybe cache issues or a payload update 😅",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1675440821020
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Google Cloud Run deployment",
      "id": "1073249306838052864",
      "guildId": "967097582721572934",
      "createdAt": 1675952974758
    },
    "messages": [
      {
        "content": "Would anyone be able to assist in sharing the Dockerfile they use for deployment on Google Cloud Run?<br><br>Very much out of my depth with docker 😅",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675952974758
      },
      {
        "content": "to clarify, i&#x27;m having difficulties with the built image saying that it&#x27;s unable to find payload config",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675959765684
      },
      {
        "content": "try this out;<br><br><pre><code class=\"hljs\">FROM node:18.8-alpine as base\n\nFROM base as builder\n\nWORKDIR /home/node/app\nCOPY ./package*.json ./\n\nCOPY . .\nRUN yarn install\nRUN yarn build\n\nFROM base as runtime\n\nENV NODE_ENV=production\nENV PAYLOAD_CONFIG_PATH=dist/payload.config.js\n\nWORKDIR /home/node/app\nCOPY package*.json  ./\n\nRUN yarn install --production\nCOPY --from=builder /home/node/app/dist ./dist\nCOPY --from=builder /home/node/app/build ./build\n\nEXPOSE 3000\n\nCMD [&quot;node&quot;, &quot;dist/server.js&quot;]</code></pre>",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675966330801
      },
      {
        "content": "thank you for providing this, unfortunately this didn&#x27;t solve the issue 😦",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676006902167
      },
      {
        "content": "what i found though is that if the end CMD is instead [&quot;yarn&quot;, &quot;run&quot;, &quot;serve&quot;] it runs fine 🙂",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676006935139
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "How to pass data to field level access control?",
      "id": "1073532264400551957",
      "guildId": "967097582721572934",
      "createdAt": 1676020437098
    },
    "messages": [
      {
        "content": "From this doc I can read that field level access control accepts user, data, doc, siblingData and id.<br><a href=\"https://payloadcms.com/docs/access-control/fields#field-level-access-control\">https://payloadcms.com/docs/access-control/fields#field-level-access-control</a><br><br>When I pass doc or data to the function, it&#x27;s always undefined.<br>What is more, is that value reactive i.e. will the access control update when the editReason changes.<br> <pre><code class=\"hljs\"> \naccess: {\n  update: ({ req: { user }, doc }) =&gt; { if(doc) return doc.editReason === &quot;impairment&quot;; else return true }\n  }</code></pre><br><br>What I wish to achieve is a dynamic field readOnly status. As the admin field readOnly doesn&#x27;t accept a function, I am attempting to use the access controls for this.",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1676020437098
      },
      {
        "content": "Hey @KasparTr , there are certain instances where access control is executed without reference to the document. More detail in our docs here under the Argument Availability section: <a href=\"https://payloadcms.com/docs/access-control/overview#access-control\">https://payloadcms.com/docs/access-control/overview#access-control</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676060807974
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "WordPress to Payload?",
      "id": "1062908841664200725",
      "guildId": "967097582721572934",
      "createdAt": 1673487615744
    },
    "messages": [
      {
        "content": "Hey everyone. I&#x27;m coming from a WordPress site with close to 1m records, is there an easier and faster way to transfer all those records to PayloadCMS or we&#x27;ll need to add them manually if we switch over to PayloadCMS?",
        "fileAttachments": [],
        "authorID": "436035265614839808",
        "authorName": "dplgngr",
        "authorAvatar": "c121ac319ebc2f4850268e8fcde127e9",
        "createdAtDate": 1673487615744
      },
      {
        "content": "Hey @dplgngr,<br>I&#x27;ve written migration scripts for getting data from one source, mapping them to objects and then creating the new docs in Payload. I would never manually try and create existing data with that many records. Here is a similar question on the Payload Github with more info for you:<br><a href=\"https://github.com/payloadcms/payload/discussions/1660\">https://github.com/payloadcms/payload/discussions/1660</a>",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675443541674
      },
      {
        "content": "Cool. I&#x27;ll take a look at that. Thanks for the info @dribbens",
        "fileAttachments": [],
        "authorID": "436035265614839808",
        "authorName": "dplgngr",
        "authorAvatar": "c121ac319ebc2f4850268e8fcde127e9",
        "createdAtDate": 1677682357096
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "some help with integrating Logto to a payload / next setup.",
      "id": "1072561667197640735",
      "guildId": "967097582721572934",
      "createdAt": 1675789028692
    },
    "messages": [
      {
        "content": "Hi, I have a repo with payload and next setup and I would like to integrate logto which is an open source alternative to auth0, <br>Can someone help me achieve that ? should be relatively simple to adopt the auth0 existing plugin to do that. Willing to pay for the effort. Thx!",
        "fileAttachments": [],
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1675789028692
      },
      {
        "content": "Just some curiosity from the sidelines. Why logto over Payload’s auth? Is there a specific benefit?",
        "fileAttachments": [],
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1675806161136
      },
      {
        "content": "social logins",
        "fileAttachments": [],
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1675807704752
      },
      {
        "content": "Hmm, I&#x27;m starting to wonder if we should have a jobs/freelance channel here in Discord for this. Thoughts?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676053732815
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Payload hook doesn't have permission to read from collection",
      "id": "1075498716204646512",
      "guildId": "967097582721572934",
      "createdAt": 1676489275743
    },
    "messages": [
      {
        "content": "Hello, how can I allow a Paylook hook access to read sensitive files and send them as attachments? I can&#x27;t set <code>read: ()=&gt;true</code> on this collection because then anyone could find these applications with things like social security numbers.<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Applications</span>: <span class=\"hljs-title class_\">CollectionConfig</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&#x27;applications&#x27;</span>,\n  <span class=\"hljs-attr\">access</span>: {\n    <span class=\"hljs-attr\">create</span>: ():<span class=\"hljs-function\"><span class=\"hljs-params\">boolean</span> =&gt;</span> <span class=\"hljs-literal\">true</span>,\n  },\n  <span class=\"hljs-attr\">upload</span>: {\n    <span class=\"hljs-attr\">mimeTypes</span>: [<span class=\"hljs-string\">&#x27;application/pdf&#x27;</span>],\n  },\n  <span class=\"hljs-attr\">hooks</span>: {\n    <span class=\"hljs-attr\">afterChange</span>: [\n      <span class=\"hljs-function\">(<span class=\"hljs-params\">{ doc }</span>) =&gt;</span> {\n\n        <span class=\"hljs-comment\">/* example doc:{\n             id: &#x27;63ed21907be32a1ac6e64f71&#x27;,\n             filename: &#x27;Website Application-10-10.pdf&#x27;,\n             mimeType: &#x27;application/pdf&#x27;,\n             filesize: 926986,\n             createdAt: &#x27;2023-02-15T18:16:48.348Z&#x27;,\n             updatedAt: &#x27;2023-02-15T18:16:48.348Z&#x27;,\n             url: &#x27;http://localhost:3000/applications/Website Application-10-10.pdf&#x27;\n        */</span> }\n\n        <span class=\"hljs-keyword\">const</span> fileLocation = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title function_\">URL</span>(doc.<span class=\"hljs-property\">url</span>);\n        <span class=\"hljs-keyword\">const</span> submissionTime = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>(doc.<span class=\"hljs-property\">createdAt</span>).<span class=\"hljs-title function_\">toString</span>();\n        <span class=\"hljs-keyword\">const</span> message = {\n          <span class=\"hljs-attr\">from</span>: <span class=\"hljs-string\">&#x27;website@mydomain.com&#x27;</span>,\n          <span class=\"hljs-attr\">to</span>: <span class=\"hljs-string\">&#x27;me@gmail.com&#x27;</span>,\n          <span class=\"hljs-attr\">subject</span>: <span class=\"hljs-string\">`New Driver Application at <span class=\"hljs-subst\">${submissionTime}</span>`</span>,\n          <span class=\"hljs-attr\">attachments</span>: [\n            {\n              <span class=\"hljs-attr\">path</span>: fileLocation.<span class=\"hljs-title function_\">toString</span>(),\n            },\n          ],\n          <span class=\"hljs-attr\">html</span>:<span class=\"hljs-string\">&quot;New Driver Application Attached&quot;</span>,\n        };\n        payload.<span class=\"hljs-title function_\">sendEmail</span>(message);\n      },\n    ],\n  },\n  <span class=\"hljs-attr\">fields</span>: [],\n};</code></pre><br><br><pre><code class=\"hljs bash\">Forbidden: You are not allowed to perform this action.\n    at new ExtendableError (/home/kaleb/code/ttf-cms/node_modules/payload/dist/errors/APIError.js:22:15)\n    at new APIError (/home/kaleb/code/ttf-cms/node_modules/payload/dist/errors/APIError.js:38:9)\n    at new Forbidden (/home/kaleb/code/ttf-cms/node_modules/payload/dist/errors/Forbidden.js:10:9)\n    at executeAccess (/home/kaleb/code/ttf-cms/node_modules/payload/dist/auth/executeAccess.js:9:23)\n    at async /home/kaleb/code/ttf-cms/node_modules/payload/dist/auth/getExecuteStaticAccess.js:14:34\nerror - unhandledRejection: Error: Invalid status code 403\n    at ClientRequest.&lt;anonymous&gt; (/home/kaleb/code/ttf-cms/node_modules/nodemailer/lib/fetch/index.js:218:23)\n    at ClientRequest.emit (node:events:527:28)\n    at HTTPParser.parserOnIncomingClient (node:_http_client:631:27)\n    at HTTPParser.parserOnHeadersComplete (node:_http_common:128:17)\n    at Socket.socketOnData (node:_http_client:494:22)\n    at Socket.emit (node:events:527:28)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {\n  <span class=\"hljs-built_in\">type</span>: <span class=\"hljs-string\">&#x27;FETCH&#x27;</span>,\n  sourceUrl: <span class=\"hljs-string\">&#x27;http://localhost:3000/applications/Website%20Application-10-10-10-4.pdf&#x27;</span></code></pre>",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676489275743
      },
      {
        "content": "in your collection config, you only have create access enabled",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676489751503
      },
      {
        "content": "right?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676489762734
      },
      {
        "content": "That&#x27;s correct, anyone can submit an application. So, create is set to true. That part works and the applications are uploaded to the server.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676489833227
      },
      {
        "content": "But read is not enabled, correct @TacticalSmoores ?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676489994062
      },
      {
        "content": "yep, this is the collection permissions setup<br><pre><code class=\"hljs\">access: {\n    create: ():boolean =&gt; true,\n  },</code></pre>",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676490024497
      },
      {
        "content": "Perhaps you need read? <a href=\"https://payloadcms.com/docs/access-control/collections#read\">https://payloadcms.com/docs/access-control/collections#read</a>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676490043264
      },
      {
        "content": "I have, but my understanding is the access controls are for users. This is a hook that runs on the server. The hook cannot access the file on the server.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676490143492
      },
      {
        "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-attr\">access</span>: {\n  <span class=\"hljs-attr\">create</span>: ():<span class=\"hljs-function\"><span class=\"hljs-params\">boolean</span> =&gt;</span> <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">read</span>: ():<span class=\"hljs-function\"><span class=\"hljs-params\">boolean</span> =&gt;</span> <span class=\"hljs-literal\">true</span>,\n},</code></pre><br>This works, but is a really bad idea. Now anyone on the internet can open this application pdf containing a person&#x27;s social security number, name, address, etc.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676490517180
      },
      {
        "content": "So you want non-users to be able to access these secure documents?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676500207537
      },
      {
        "content": "Yes and no,<br>The secure documents (job application, pdf) need to be <em>emailed</em> to a non-user as an attachment immediately after being uploaded. But, we don&#x27;t any non-user to have access to the file by entering the url.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676500494029
      },
      {
        "content": "Why emailed to a non user?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676500585997
      },
      {
        "content": "Will the person uploading the doc have a user account?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676500619302
      },
      {
        "content": "The person uploading the job application will not have an account.<br><br>Job application needs to be sent to the hiring manager who is older, not tech savvy. If they have to log into a CMS to pursue leads they probably won&#x27;t bother. But if they received an email attachment it would be easy for them.<br><br>This is replacing a system where people had to walk in and fill out a paper form.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676501032726
      },
      {
        "content": "When a doc is created you could create a uuid and attach that to the doc, then send the email with that as a query param.<br><br> In your read access you can check for the query param and see if it matches the uuid field on the upload doc and permit access if true.<br><br>It would likely be secure enough for ya.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676501462952
      },
      {
        "content": "Having the hiring manager use an account would obviously be most secure",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676501847850
      },
      {
        "content": "But even then, the thing you are preventing access to is the collection information not the file. So this might not work for ya after all. Really you want the user to have to fetch the document and then they can read the url where the file lives and then they can navigate to the file",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676502035774
      },
      {
        "content": "Yeah, I guess I was originally looking for something like a service worker. You can give it permissions, trigger it with hooks like <code>afterChange</code> , and perform other server-side actions using it. <br><br>Now, I think your solution of a UUID, treating it like a key to give read access, will work. I&#x27;m going to give that a shot, appreciate your help!",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676502446234
      }
    ],
    "messageCount": 17
  },
  {
    "info": {
      "name": "Plugin stripe - error has occurred in the Stripe plugin REST handler",
      "id": "1075712043400843334",
      "guildId": "967097582721572934",
      "createdAt": 1676540136910
    },
    "messages": [
      {
        "content": "HI @jacobsfletch , I&#x27;m using your super stripe plugin for payload (thanks for the deployment) and unfortunately I&#x27;m having an error that I can&#x27;t understand very well<br><br>When I do a request via postman on my url  &quot;localhost:3000/api/stripe/rest&quot;, I have this error:<br><pre><code class=\"hljs\">{\n    &quot;message&quot;: &quot;An error has occurred in the Stripe plugin REST handler: &#x27;TypeError: Cannot read properties of undefined (reading &#x27;bind&#x27;)&#x27;&quot;\n}</code></pre><br><br>with this config: <br><br><pre><code class=\"hljs\"> plugins: [\n    stripePlugin({\n      stripeSecretKey: process.env.PRIVATE_STRIPE,\n      logs: true,\n      sync: [\n        {\n          collection: &quot;customers&quot;,\n          stripeResourceType: &quot;customers&quot;,\n          stripeResourceTypeSingular: &quot;customer&quot;,\n          fields: [\n            {\n              fieldPath: &quot;email&quot;, // my unique field in my collection\n              stripeProperty: &quot;email&quot;, \n            },\n          ],\n        },\n      ],\n    }),\n  ],</code></pre> <br><br>Thanks in advance for you help and thank again for the implementation of this plugin !",
        "fileAttachments": [],
        "authorID": "986156968152555540",
        "authorName": "NF01",
        "authorAvatar": "a8f64e6e32015ae37f7d21a0a04bd885",
        "createdAtDate": 1676540136910
      },
      {
        "content": "Hmm that error is likely thrown by this line: <a href=\"https://github.com/payloadcms/plugin-stripe/blob/13ed91f0406341cd534e3c15555fe3f3224a7b61/src/utilities/stripeProxy.ts#L23\">https://github.com/payloadcms/plugin-stripe/blob/13ed91f0406341cd534e3c15555fe3f3224a7b61/src/utilities/stripeProxy.ts#L23</a> because the supplied <code>stripeMethod</code> is not valid",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676556250357
      },
      {
        "content": "Can you send the body of the request you are sending through Postman?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676556968265
      },
      {
        "content": "sorry to respond  late but I&#x27;m in a big rush in my project, I will send you this as soon as I can",
        "fileAttachments": [],
        "authorID": "986156968152555540",
        "authorName": "NF01",
        "authorAvatar": "a8f64e6e32015ae37f7d21a0a04bd885",
        "createdAtDate": 1676647125137
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Custom endpoint's access",
      "id": "1078763589227249705",
      "guildId": "967097582721572934",
      "createdAt": 1677267682130
    },
    "messages": [
      {
        "content": "Is there an easy way (built-in)  to use the same access logic for custom endpoints?",
        "fileAttachments": [],
        "authorID": "468994630365609985",
        "authorName": "gaboluque",
        "authorAvatar": "ef3cafdc42601db472dede6d2908252f",
        "createdAtDate": 1677267682130
      },
      {
        "content": "yes <a href=\"https://payloadcms.com/docs/rest-api/overview#custom-endpoints\">https://payloadcms.com/docs/rest-api/overview#custom-endpoints</a>",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1677286834366
      },
      {
        "content": "or <a href=\"https://payloadcms.com/docs/authentication/using-middleware\">https://payloadcms.com/docs/authentication/using-middleware</a>",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1677287064775
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Does payload have the functionality to limit an image size within the upload field?",
      "id": "1074464680296337478",
      "guildId": "967097582721572934",
      "createdAt": 1676242742371
    },
    "messages": [
      {
        "content": "I&#x27;m trying to force a user to upload an image size of only 100x100px. Can we set that in the upload itself so if they don&#x27;t upload that size, it shows them an error?",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676242742371
      },
      {
        "content": "I think you can only do this on the media collection itself, not at the field level that I&#x27;ve found.<br><br>Could be worth a suggestion on GitHub though as I think it would be generally very useful to be able to restrict uploads at the field level, both for image dimensions, file sizes and also mime-types.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676296509136
      },
      {
        "content": "Thanks @Kyr, I added a feature request here: <a href=\"https://github.com/payloadcms/payload/discussions/2083\">https://github.com/payloadcms/payload/discussions/2083</a><br>Feel free to upvote.",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676324564797
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "How can you get the types for the resolver arguments in GraphQL?",
      "id": "1065869193062400011",
      "guildId": "967097582721572934",
      "createdAt": 1674193418518
    },
    "messages": [
      {
        "content": "I&#x27;m writing my own graphql queries and mutations, however I couldn&#x27;t figure out how I can get types on this kind of resolver function, all arguments including <code>context</code> is untyped:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">CustomResolver</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">obj, args, context, info</span>) =&gt; {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;id received:&#x27;</span>, args)\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;context&#x27;</span>, context)\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-attr\">result</span>: <span class=\"hljs-string\">&#x27;PASS&#x27;</span>,\n  }\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674193418518
      },
      {
        "content": "I&#x27;ve done a payload import and typed the destructured context like this, not sure if there&#x27;s a cleaner approach though<br><br><pre><code class=\"hljs ts\">{ payload }: { <span class=\"hljs-attr\">payload</span>: <span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-title class_\">ImportedPayload</span> }</code></pre>",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674193674273
      },
      {
        "content": "@noheadphones would you mind sharing the code of your custom resolver?",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677596116892
      },
      {
        "content": "What exactly are you looking to do? I may be able to provide a better example",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1677596247640
      },
      {
        "content": "Basically I&#x27;m just trying to learn how the response object should be formatted or how you enabled types here.",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677596484450
      },
      {
        "content": "Sure, here&#x27;s an example of a custom query (mutation is pretty much similar)<br><br>payload config, something like this<br><pre><code class=\"hljs ts\"><span class=\"hljs-title class_\">CheckQuizAnswers</span>: <span class=\"hljs-title class_\">CheckQuizAnswers</span>(<span class=\"hljs-title class_\">GraphQL</span>, payload),</code></pre><br>This is what the function actually is:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">CheckQuizAnswersResolver</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../resolvers/CheckQuizAnswersResolver&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-title class_\">ImportedGraphQL</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;graphql&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Payload</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload&#x27;</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">CheckQuizAnswers</span> = (<span class=\"hljs-params\">GraphQL: <span class=\"hljs-keyword\">typeof</span> ImportedGraphQL, payload: Payload</span>) =&gt; {\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-attr\">args</span>: {\n      <span class=\"hljs-attr\">answers</span>: {\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GraphQL</span>.<span class=\"hljs-title class_\">GraphQLNonNull</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GraphQL</span>.<span class=\"hljs-title class_\">GraphQLList</span>(<span class=\"hljs-title class_\">GraphQL</span>.<span class=\"hljs-property\">GraphQLString</span>)),\n      },\n    },\n    <span class=\"hljs-attr\">resolve</span>: <span class=\"hljs-title class_\">CheckQuizAnswersResolver</span>,\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GraphQL</span>.<span class=\"hljs-title class_\">GraphQLObjectType</span>({\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;result&#x27;</span>,\n      <span class=\"hljs-attr\">fields</span>: {\n        <span class=\"hljs-attr\">result</span>: {\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-title class_\">GraphQL</span>.<span class=\"hljs-property\">GraphQLString</span>,\n        },\n      },\n    }),\n  }\n}</code></pre><br>And then your resolver <code>CheckQuizAnswersResolver</code> is what actually handles the logic, in this function ^^^ type is a return type of a valid GraphQL object, so in this case it&#x27;s something custom, if I want to return a payload collection though I set the <code>type</code> to <code>payload.collections[&#x27;articles&#x27;].graphQL?.type</code> for example. The args then is what arguments you might have for your query or mutation, each arg will need a <code>type</code> as well: my type here is complex as its a mandatory (nonnull) array (list) of strings<br><br>Finally my resolver function looks a bit like this<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">CheckQuizAnswersResolver</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">obj, args: ResolverArgs, context, info</span>) =&gt; {\n  <span class=\"hljs-comment\">// do some logic here</span>\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-attr\">result</span>: result ? <span class=\"hljs-string\">&#x27;PASS&#x27;</span> : <span class=\"hljs-string\">&#x27;FAIL&#x27;</span>,\n  }\n}</code></pre><br>note that I&#x27;ve manually typed my ResolverArgs, so its a custom type every time, there&#x27;s no inference right now as far as I can tell, its possible to do it though",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1677597780148
      },
      {
        "content": "Hopefully that makes sense @TheFrontend",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1677597785350
      },
      {
        "content": "Awesome, thanks!",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677598102493
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Add custom component to the collection list view",
      "id": "1075680408869539892",
      "guildId": "967097582721572934",
      "createdAt": 1676532594650
    },
    "messages": [
      {
        "content": "Hello everyone, I was wondering if it&#x27;s possible to add custom components to the collection list view. Specifically, I&#x27;d like to add a button that can fetch all documents within a collection and download them as a CSV file. I would greatly appreciate any insights or suggestions on how to achieve this. Thank you very much in advance!",
        "fileAttachments": [],
        "authorID": "608406543058206813",
        "authorName": "Dan Sivewright",
        "authorAvatar": "c89e53e5b469f9abc20e3cfab7b2de16",
        "createdAtDate": 1676532594650
      },
      {
        "content": "Hi @Dan Sivewright - adding this to your collection config will allow you to overwrite the list view:<br><br><pre><code class=\"hljs\">components: {\n  views: {\n    List: CustomList,\n  }\n}</code></pre><br><br>And to not lose the original view, you can import the list from payload and add your custom component to it, for example:<br><br><pre><code class=\"hljs\">import { List } from &#x27;payload/components/views/List&#x27;;\n\nconst CustomList: React.FC = (props) =&gt; (\n  &lt;&gt;\n    &lt;p&gt;Hello add a custom component here&lt;/p&gt;\n    &lt;List {...props} /&gt;\n  &lt;/&gt;\n);\n\nexport default CustomList;</code></pre><br><br>Hope this helps!",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676570317110
      },
      {
        "content": "This helps a ton!!!!!<br>Thank you",
        "fileAttachments": [],
        "authorID": "608406543058206813",
        "authorName": "Dan Sivewright",
        "authorAvatar": "c89e53e5b469f9abc20e3cfab7b2de16",
        "createdAtDate": 1676970509579
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Two-way relationship between fields",
      "id": "1076239186484535366",
      "guildId": "967097582721572934",
      "createdAt": 1676665817615
    },
    "messages": [
      {
        "content": "I have a 2 collections:<br><pre><code class=\"hljs\">const Users: CollectionConfig = {\nfields:[\n   {//working in companies\n      name: &quot;companies&quot;,\n      type: &quot;relationship&quot;,\n      relationTo: &quot;companies&quot;,\n      hasMany: true,\n  },\n]}</code></pre><br><br><pre><code class=\"hljs\">const Companies: CollectionConfig = {\nfields:[\n   {//employees\n      name: &quot;workers&quot;,\n      type: &quot;relationship&quot;,\n      relationTo: &quot;users&quot;,\n      hasMany: true,\n  },\n]}</code></pre><br><br>Is there a way to <strong>manage two-way relationship</strong>? <br>When i&#x27;m adding a company in users <em>companies</em> then it will update this exact company and add this user to <em>workers</em> field, and vice versa for deleting? <br><br>I guess it should work similarly like relationships in keystonejs, where you can enter a field in a collection like &quot;Companies.workers&quot; and it will manage it by itself.<br><br>Maybe i&#x27;ve missed something in docs, but i didnt found a better solution than to add a lot of hooks for both fields and use <strong>payload.update({})</strong> to update another entity.",
        "fileAttachments": [],
        "authorID": "215833081158959105",
        "authorName": "Daniq",
        "authorAvatar": "f25eb1ea60f9c5b561fe3bc6ab380049",
        "createdAtDate": 1676665817615
      },
      {
        "content": "Payload does not have an official way to manage 2-way relationships. The hook method that you describe is used in this community plugin which may be what you need. <a href=\"https://github.com/TimHal/pcms-backpop\">https://github.com/TimHal/pcms-backpop</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676666806455
      },
      {
        "content": "Thanks, i&#x27;ve tried to use this one and i realized that for it breaks more than fixes, so i guess i will reformat my collections in some way to reduce relationships.",
        "fileAttachments": [],
        "authorID": "215833081158959105",
        "authorName": "Daniq",
        "authorAvatar": "f25eb1ea60f9c5b561fe3bc6ab380049",
        "createdAtDate": 1676670321928
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Schema update",
      "id": "1070743406164320377",
      "guildId": "967097582721572934",
      "createdAt": 1675355521480
    },
    "messages": [
      {
        "content": "Hi all.<br>Can anyone point me towards the right way to migrate data when the underlying structure changes?<br>For example, I have replaced a simple textarea field with a richtext component, so now the data stored has gone from a string to an array of objects. I&#x27;ve updated my front end to handle either, but now the CMS breaks if I try to edit one of the old records.<br>Is there some way to run a process to migrate the old data to the new structure? I appreciate it may not be possible to do this automatically due to the complexity involved, but can I write code to do it, or in the worst case at least remove the old data so that the CMS doesn&#x27;t break?",
        "fileAttachments": [],
        "authorID": "1042412823457837066",
        "authorName": "DanMartin",
        "authorAvatar": null,
        "createdAtDate": 1675355521480
      },
      {
        "content": "Hey @DanMartin this is totally possible, and actually fairly simple. I have had to do this in the past, i&#x27;ve added a snippet of code that should point you in the right direction:",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1070743406164320377/1070762594736017448/transformTextToRichText.ts",
            "name": "transformTextToRichText.ts",
            "id": "1070762594736017448",
            "size": 2039,
            "url": "https://cdn.discordapp.com/attachments/1070743406164320377/1070762594736017448/transformTextToRichText.ts",
            "proxyURL": "https://media.discordapp.net/attachments/1070743406164320377/1070762594736017448/transformTextToRichText.ts",
            "height": null,
            "width": null,
            "contentType": "video/MP2T; charset=utf-8",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675360096486
      },
      {
        "content": "if you are on payloads latest version, the script will need to be tweaked a little by placing the payload.init inside the function, and then awaiting it like so <code>await payload.init({...})</code>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675360999262
      },
      {
        "content": "Thanks Jarrod, that&#x27;s pretty helpful in pointing me in the right direction. It&#x27;s slightly complicated by the field being in a flexible block, but I think that&#x27;s just an extra array to iterate over.",
        "fileAttachments": [],
        "authorID": "1042412823457837066",
        "authorName": "DanMartin",
        "authorAvatar": null,
        "createdAtDate": 1675441402176
      },
      {
        "content": "@DanMartin with that you&#x27;ll want to spread the data already in the array/objects if it is nested",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675441499826
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "RichText left and rght indent",
      "id": "1072155619718602782",
      "guildId": "967097582721572934",
      "createdAt": 1675692219429
    },
    "messages": [
      {
        "content": "Hello! I am new to CMS world. May be I have missed to find it but please help me with this. What is the way to get <code>left and right indent</code> along with the whitespaces in the frontend. I cannot find a single example on how to use the indentation in the documentation. <br>For now, I am getting the type of the element and if the<code>type is &quot;indent&quot;</code> , I render a <code>paragraph</code>",
        "fileAttachments": [],
        "authorID": "1070298006605279282",
        "authorName": "Akt771",
        "authorAvatar": null,
        "createdAtDate": 1675692219429
      },
      {
        "content": "left and right indent ... are you referring to padding/margins on either side?<br><br>The &quot;indent&quot; element is intended to mark the content for &quot;indent&quot; ... you would style this however you like on your frontend, SlateJS will style it as an indentation from the left in the payload admin ... similar to the standard treatment of a &quot;blockquote&quot; element.",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675696142163
      },
      {
        "content": "Yes, when I use<code>type as indent</code>, I expect the CMS to give an object with whitespaces (on left for left indent and on right for right indent). <br>If I consider it to style by myself, How will I know if it is a left indent or a right indent, so that, I can give the respective <code>margin</code> styles. Because, when the user does the right indent on the Payload CMS, then the user expects that there is a margin from left.",
        "fileAttachments": [],
        "authorID": "1070298006605279282",
        "authorName": "Akt771",
        "authorAvatar": null,
        "createdAtDate": 1675761741308
      },
      {
        "content": "Hi David, I understood it now. I was getting different levels of json when I have indent, so based on the levels I can give the margin now. Thank you for responding",
        "fileAttachments": [],
        "authorID": "1070298006605279282",
        "authorName": "Akt771",
        "authorAvatar": null,
        "createdAtDate": 1675772064907
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Item not appearing in table, but accessible manually via URL",
      "id": "1072418401487687790",
      "guildId": "967097582721572934",
      "createdAt": 1675754871485
    },
    "messages": [
      {
        "content": "Hi, I have an issue of some items not appearing in the <code>/admin/[collection-name]</code> table, but if I go to <code>/admin/[collection-name]/:id</code> manually, it works.<br><br>You can see it exists in the DB, but when I search for it (or use the Filter option), it doesn&#x27;t appear. If I access it via my NextJS app, it actually gives me the item correctly <img class=\"d-emoji d-emoji-animated\" src=\"https://cdn.discordapp.com/emojis/449765442412609546.gif\" alt=\":think3d:\"> <br><br>I&#x27;m on latest version of Payload (1.6.4).<br><br>Cheers!<br><br>EDIT:<br>After digging, what I found that might help:<br>Visiting <code>/admin/[collection-name]</code> automatically triggers a request to <code>/api/[collection-name]?locale=en&amp;depth=0&amp;draft=true&amp;page=1</code>. If I open this URL manually and change to <code>/api/[collection-name]?locale=en&amp;depth=0&amp;false&amp;page=1</code>, [<code>draft=false</code>] it gives me what I&#x27;m looking for.<br>Maybe <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/index.tsx#L82\">https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/index.tsx#L82</a> is relevant<br><br>EDIT 2:<br>Ah I see now, because I have <code>versions.draft: true</code> (maybe relevant?), it <strong>only gives back documents that have at least a version 1</strong>.<br>I&#x27;m not sure why some of my documents don&#x27;t have a version 1, I created all the documents via a script that uses the local API (for context: migration script from Strapi -&gt; Payload). Is there a way to filter documents that do not have a version?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1072418401487687790/1072418401806450688/Screenshot_2023-02-07_at_15.23.45.png",
            "name": "Screenshot_2023-02-07_at_15.23.45.png",
            "id": "1072418401806450688",
            "size": 13746,
            "url": "https://cdn.discordapp.com/attachments/1072418401487687790/1072418401806450688/Screenshot_2023-02-07_at_15.23.45.png",
            "proxyURL": "https://media.discordapp.net/attachments/1072418401487687790/1072418401806450688/Screenshot_2023-02-07_at_15.23.45.png",
            "height": 65,
            "width": 417,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1072418401487687790/1072418402192330772/Screenshot_2023-02-07_at_15.26.27.png",
            "name": "Screenshot_2023-02-07_at_15.26.27.png",
            "id": "1072418402192330772",
            "size": 42124,
            "url": "https://cdn.discordapp.com/attachments/1072418401487687790/1072418402192330772/Screenshot_2023-02-07_at_15.26.27.png",
            "proxyURL": "https://media.discordapp.net/attachments/1072418401487687790/1072418402192330772/Screenshot_2023-02-07_at_15.26.27.png",
            "height": 516,
            "width": 1566,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1675754871485
      },
      {
        "content": "And another issue I&#x27;m facing, I deleted an item manually via MongoDB. The item still shows up in the table and when I click on it, it redirects me to <code>/admin/not-found</code>.",
        "fileAttachments": [],
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1675755023332
      },
      {
        "content": "Item not appearing in table, but accessible manually via URL",
        "fileAttachments": [],
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1675755063782
      },
      {
        "content": "The version documents will need to be deleted as well",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675798410864
      },
      {
        "content": "Ahh i see, gotcha thank you",
        "fileAttachments": [],
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1675815794539
      },
      {
        "content": "Is there an easy way of deleting it via local API?<br><br>Specifically: I want to delete version documents that does not have an existing (real) document. I&#x27;m currently trying to figure out in MongoDB Compass an aggregation query to get those version documents",
        "fileAttachments": [],
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1675822929000
      },
      {
        "content": "In the migrateVersions script here, we are doing just that! You could adjust this script and remove the parts that are not related <br><br><a href=\"https://github.com/payloadcms/payload/releases/tag/v1.6.1\">https://github.com/payloadcms/payload/releases/tag/v1.6.1</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675825006992
      },
      {
        "content": "Cool, I&#x27;ll check that out. Thanks!",
        "fileAttachments": [],
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1675834721751
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Image data not exposed when API called from NextJS getStaticProps",
      "id": "1075007526342496306",
      "guildId": "967097582721572934",
      "createdAt": 1676372166954
    },
    "messages": [
      {
        "content": "I have a pages collection which has some blocks, and within one an image upload. When I hit the API via my browser like <code>http://localhost:3000/api/pages?where%5Burl%5D%5Bequals%5D=%2F</code> I get back the sizes object.<br><br>When I make a call to the same endpoint from NextJS&#x27;s getStaticProps, I get an object back that&#x27;s missing most of the expected data:<br><br><pre><code class=\"hljs\">    image: &#x27;63d3a93700ebf20ada158cf6&#x27;,\n    id: &#x27;63d3a94578b6112d19867f25&#x27;,\n    blockType: &#x27;Image&#x27;</code></pre><br><br>All other data looks OK",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676372166954
      },
      {
        "content": "It was because I was logged in my browser with my payload user",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676380029158
      },
      {
        "content": "Ultimately it was an access control issue",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676380174142
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "`versions.retainDeleted` was removed?",
      "id": "1072872293333749830",
      "guildId": "967097582721572934",
      "createdAt": 1675863087734
    },
    "messages": [
      {
        "content": "It looks like <code>retainDeleted</code> was removed from versions, but I don&#x27;t see this documented anywhere? I was able to track down the commit on GitHub (<a href=\"https://github.com/payloadcms/payload/commit/6ae6b9268fbbabb8f86f53a3aec190cc2243d342\">https://github.com/payloadcms/payload/commit/6ae6b9268fbbabb8f86f53a3aec190cc2243d342</a>), but don&#x27;t see any explanation being provided?  <br><br>Is this feature being removed entirely, or is it still supported in another way?<br><br>This was a breaking change in my project that defined this key on all version enabled collections, which caused me to immediately check the changelog, but I did not find anything mentioned there ... so I had to dig into the error and figure out what was going on.  I suggest updating the changelog to mention this change, I assume it&#x27;s related to the <code>simplified versions in 1.6.1</code> ?",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675863087734
      },
      {
        "content": "There is some discussion here: <a href=\"https://github.com/payloadcms/payload/discussions/1992#discussioncomment-4850439\">https://github.com/payloadcms/payload/discussions/1992#discussioncomment-4850439</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675871218533
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Can we only allow one instance of a block to be selected?",
      "id": "1079604132991729694",
      "guildId": "967097582721572934",
      "createdAt": 1677468083380
    },
    "messages": [
      {
        "content": "I have for example a footer block which if specified on a page, it will show the footer on the website. <br>Is there a way to stop the CMS user from adding multiple footer blocks to the page? <br><br>I know I can set min and max rows to 1, however there are also other blocks that they could add other than the footer, so we can&#x27;t use these fields.",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1677468083380
      },
      {
        "content": "Have you thought about using Footers as a Global Type instead? Then in the page collection you could create a toggle that opts in to show or hide the footer",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1677482395588
      },
      {
        "content": "I haven’t, no. But will look into it.",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1677517471000
      },
      {
        "content": "Yep, a global is the way to go here. Fetch the global data on the front end and render the footer with it. If you only want it on certain pages you could add a checkbox to your pages and check to see if the page should render the footer - this will take some extra legwork on your frontend side to do but totally possible.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677587931181
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Struggling with authentication",
      "id": "1040025457896206436",
      "guildId": "967097582721572934",
      "createdAt": 1668031791901
    },
    "messages": [
      {
        "content": "Hi, everyone. I&#x27;m struggling with authentication in frontend (Next.js)<br>I made a wrapper component in <code>_app</code> that uses <code>checkUser()</code> to see if there&#x27;s a user logged in (with <code>Me</code> query) and then returns <code>Login</code> component if user is <code>null</code>.<br><br>The login process works as expected, and returns user&#x27;s email as requested and error if email/password is wrong. I&#x27;ve followed payload/website and am using only fetch/graphQL, no Apollo. Then what I&#x27;m trying to do is call <code>checkUser()</code> again from parent to update <code>user</code> state. But user still returns null.<br><br>I don&#x27;t know if this pattern is wrong, if HTTP-only cookies aren&#x27;t being set, or something else. What am I doing wrong here?<br><br>Example monorepo: <a href=\"https://github.com/arieltonglet/payload-login-test\">https://github.com/arieltonglet/payload-login-test</a>",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668031791901
      },
      {
        "content": "Hi @arielarial - you might need to add the <code>credentials: &#x27;include&#x27;</code> request header so that the http-only cookie gets attached",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668032246423
      },
      {
        "content": "hi @jacobsfletch ! I&#x27;m adding it here:<br><a href=\"https://github.com/arieltonglet/payload-login-test/blob/main/frontend/graphql/index.ts#L14\">https://github.com/arieltonglet/payload-login-test/blob/main/frontend/graphql/index.ts#L14</a><br><br>should it be elsewhere?",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668032314297
      },
      {
        "content": "Ok, could it be that you are not awaiting your async <code>checkUser</code> here: <a href=\"https://github.com/arieltonglet/payload-login-test/blob/main/frontend/components/LoginContent.tsx#L20\">https://github.com/arieltonglet/payload-login-test/blob/main/frontend/components/LoginContent.tsx#L20</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668032769479
      },
      {
        "content": "try running your effect asynchronously",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668032843474
      },
      {
        "content": "<pre><code class=\"hljs\">useEffect(async () =&gt; {\n  await checkUser();\n}, []);</code></pre>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668032874034
      },
      {
        "content": "if that&#x27;s not it, open your network tab and look at the <code>/me</code> request",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668033041823
      },
      {
        "content": "you should see the payload token attached as a cookie",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668033052865
      },
      {
        "content": "hm.. so, React doesn&#x27;t like async effects. but  response from Me is user <code>null</code> anyway",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668033222448
      },
      {
        "content": "I don&#x27;t see payload token. should it be in Headers tab?",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668033234155
      },
      {
        "content": "No, wait. I tried using an incognito window and it is showing now. <code>Cookie: payload-token=[...]</code><br>But response still <code>{&quot;data&quot;:{&quot;meUser&quot;:{&quot;user&quot;:null}}}</code>",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668033384432
      },
      {
        "content": "what about when you hit the <code>/me</code> route directly",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668033728484
      },
      {
        "content": "in a new tab",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668033732022
      },
      {
        "content": "it works! 🤔",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668033813465
      },
      {
        "content": "tried adding a logout button, but it&#x27;s the same: cookie is being sent, but the response is <code>errors: [{message: &quot;No User&quot;, locations: [{line: 3, column: 3}], path: [&quot;logoutUser&quot;],…}]</code>",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668036316924
      },
      {
        "content": "Ok, we&#x27;re getting there",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668036841144
      },
      {
        "content": "I&#x27;m pretty sure you need to whitelist your domain in the <code>csrf</code> config",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668036888118
      },
      {
        "content": "like this, in your payload config.<br><pre><code class=\"hljs\"> csrf: [\n   &#x27;http://localhost:3000&#x27;\n ]</code></pre><br>change the url to match your Next.js app",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668037032970
      },
      {
        "content": "that&#x27;s it!",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668037053518
      },
      {
        "content": "amazing",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668037067223
      },
      {
        "content": "thank you so much! ✨ this was driving me crazy",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668037098930
      },
      {
        "content": "No problem! Happy to help. I know the feeling too well haha",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668037123905
      },
      {
        "content": "the payload/website repo helped A LOT as well",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668037136277
      },
      {
        "content": "Nice! We&#x27;re launching it on MONDAY so keep a look out!",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668037211537
      },
      {
        "content": "it&#x27;s been a sprint",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668037219955
      },
      {
        "content": "that&#x27;s awesome 🎉",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668037439196
      },
      {
        "content": "I&#x27;ve updated the example repo for anyone looking for something like this (also for future me) -&gt; <a href=\"https://github.com/arieltonglet/payload-login-test\">https://github.com/arieltonglet/payload-login-test</a>",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668037784475
      },
      {
        "content": "Update: We now have an official auth example <a href=\"https://github.com/payloadcms/payload/tree/master/examples/auth\">https://github.com/payloadcms/payload/tree/master/examples/auth</a> which includes a nextjs front-end that may help others coming into this thread",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677303868648
      }
    ],
    "messageCount": 27
  },
  {
    "info": {
      "name": "How to trigger \"forgot password\" flow through local API",
      "id": "1078370236400685056",
      "guildId": "967097582721572934",
      "createdAt": 1677173899508
    },
    "messages": [
      {
        "content": "I am trying this<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">forgotPassword</span>({\n  <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;users&quot;</span>,\n  <span class=\"hljs-attr\">data</span>: {\n    email,\n  },\n});</code></pre><br><br>but this gives me following error:<br><pre><code class=\"hljs\">TypeError: Cannot read properties of undefined (reading &#x27;config&#x27;)\n    at forgotPassword (/Users/user/directory/node_modules/payload/src/auth/operations/forgotPassword.ts:51:9)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)</code></pre><br><br>reseting the password via the <code>/admin/forgot</code> works without a problem though. So it cannot be my email setup I guess.<br><br>Anyone an idea?",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1677173899508
      },
      {
        "content": "Then it&#x27;s a probably a bug, I got stuck at the same thing here and used the REST API as a workaround:<br><a href=\"https://github.com/linobino1/remix-payloadcms/blob/main/app/routes/auth/forgot-password.tsx\">https://github.com/linobino1/remix-payloadcms/blob/main/app/routes/auth/forgot-password.tsx</a>",
        "fileAttachments": [],
        "authorID": "1024331309486719056",
        "authorName": "linobino1",
        "authorAvatar": null,
        "createdAtDate": 1677183510500
      },
      {
        "content": "Hey @linobino1, I opened an issue with a bug report here <a href=\"https://github.com/payloadcms/payload/issues/2170\">https://github.com/payloadcms/payload/issues/2170</a><br>In case you want to follow that",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1677226060655
      },
      {
        "content": "Thanks!",
        "fileAttachments": [],
        "authorID": "1024331309486719056",
        "authorName": "linobino1",
        "authorAvatar": null,
        "createdAtDate": 1677226082567
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Slate - some text leaves have type: \"p\", some do not",
      "id": "1072510637713920080",
      "guildId": "967097582721572934",
      "createdAt": 1675776862315
    },
    "messages": [
      {
        "content": "I know this is perhaps more slate related, but maybe someone knows why this is happening:<br><br>I have two different collections, both with RichText fields. After entering a few paragraphs of plain, unformatted text, in one I get as the data: <br><br><pre><code class=\"hljs\">[\n  {\n    type: &quot;p&quot;,\n    children: [\n      {text: &quot;Lorem Ipsum...&quot;}\n    ]\n  },\n  ...\n]</code></pre><br><br>While in the other I get:<br><br><pre><code class=\"hljs\">[\n  {\n    children: [\n      {text: &quot;Lorem Ipsum...&quot;}\n    ]\n  },\n  ...\n]</code></pre><br><br>Any ideas why? The first one seems correct.",
        "fileAttachments": [],
        "authorID": "258898794102521857",
        "authorName": "agenericguy",
        "authorAvatar": null,
        "createdAtDate": 1675776862315
      },
      {
        "content": "This might be the difference between hitting <code>Enter</code> and <code>Shift + Enter</code>. I&#x27;d have to test.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675779413956
      },
      {
        "content": "Have you  customized your richtext fields or are both fields using the defaults?",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675779476780
      },
      {
        "content": "Both default, and both not using shift + enter",
        "fileAttachments": [],
        "authorID": "258898794102521857",
        "authorName": "agenericguy",
        "authorAvatar": null,
        "createdAtDate": 1675813076877
      },
      {
        "content": "I noticed this too and thought I was going mad as I couldn&#x27;t recreate it again. <br><br>It happened after I extracted the richtext field definitions into a separate TS module and imported them into my collections for reuse.<br><br>Nothing changed in the field def, but after saving some items in the Payload Admin again, the API returned different data, omitting the &quot;p&quot; which actually caused my front end to blow up as I hadn&#x27;t accounted for that.  <br><br>Went into admin, copy/pasted rich-text content in each field and saved again, then it went back to returning the &quot;p&quot; types.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675855989441
      },
      {
        "content": "When typing and using &#x27;Enter&#x27; or &#x27;Shift+Enter&#x27; into the richText slate editor, i also get no paragraphs. (I also had richText extracted as component, but reverting this did not solve the missing &#x27;p&#x27; type bug). No custom elements/leaves are used.<br><br>Seems to be browser independent, i tried firefox and chrome.<br><br>But i can copy&amp;paste some text from MS Word, and suddenly there are paragraphs in the editor. I am also able to copy&amp;paste older richText texts and there are paragraphs.",
        "fileAttachments": [],
        "authorID": "189202872800378881",
        "authorName": "bobbyZ",
        "authorAvatar": "f0988915755cddd9a231cf1afaafea65",
        "createdAtDate": 1675863933813
      },
      {
        "content": "opend issue <a href=\"https://github.com/payloadcms/payload/issues/2048\">https://github.com/payloadcms/payload/issues/2048</a>",
        "fileAttachments": [],
        "authorID": "189202872800378881",
        "authorName": "bobbyZ",
        "authorAvatar": "f0988915755cddd9a231cf1afaafea65",
        "createdAtDate": 1675948567945
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Is it possible to hide a collection but allow a related collection to access its API?",
      "id": "1070272024775249950",
      "guildId": "967097582721572934",
      "createdAt": 1675243135399
    },
    "messages": [
      {
        "content": "I have a Media collection for uploads as suggested by the docs, and a Products collection with an image upload field that is related to the Media collection. I want to hide the Media collection from the users but still have the Products access the images related to the Media collection. When I set Media&#x27;s read access to false, the Media page is hidden but Products loses access to the images. I&#x27;m sure there&#x27;s a condition I can set for the read access. Or at the very least I want someone to be able to upload an image through a new Product but not through the Media collection.<br><br>Thank you!",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675243135399
      },
      {
        "content": "1. Looks like I can hide the collection from the navbar and the collection page&#x27;s elements itself using CSS.<br>2. I&#x27;m redirecting requests for the collection&#x27;s page to /admin so these 2 together worked out.",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675273093057
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "How to get post by slug",
      "id": "1073789240325971999",
      "guildId": "967097582721572934",
      "createdAt": 1676081704933
    },
    "messages": [
      {
        "content": "i build a blog and add unique slug field in posts and tags how to can i get post or tag by slug if i create custom endpoint and get post by slug using req.payload.collections.posts it can&#x27;t return a populated response req.payload dose not have fineOne function",
        "fileAttachments": [],
        "authorID": "589480760898093201",
        "authorName": "Qasim Ali",
        "authorAvatar": "9ed1c88c715db6238e6e81ebdfbf34bb",
        "createdAtDate": 1676081704933
      },
      {
        "content": "How to get post by slug",
        "fileAttachments": [],
        "authorID": "589480760898093201",
        "authorName": "Qasim Ali",
        "authorAvatar": "9ed1c88c715db6238e6e81ebdfbf34bb",
        "createdAtDate": 1676081746500
      },
      {
        "content": "You can use req.payload.find({})with a where argument, and limit 1. You will still get back a docs array but you can grab the first item out of it",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676095097144
      },
      {
        "content": "Hi, Jarrod thanks for the reply. I tried this method butt in this way server responds very slowly. Now I am using this way",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1073789240325971999/1074282109373513748/image.png",
            "name": "image.png",
            "id": "1074282109373513748",
            "size": 220153,
            "url": "https://cdn.discordapp.com/attachments/1073789240325971999/1074282109373513748/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1073789240325971999/1074282109373513748/image.png",
            "height": 782,
            "width": 982,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "589480760898093201",
        "authorName": "Qasim Ali",
        "authorAvatar": "9ed1c88c715db6238e6e81ebdfbf34bb",
        "createdAtDate": 1676199214125
      },
      {
        "content": "Did you have index: true and unique: true set on the slug field? You’ll want to add those either way and make sure they are added to your db",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676206263543
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Richtext - add support for button",
      "id": "1073185833319923783",
      "guildId": "967097582721572934",
      "createdAt": 1675937841492
    },
    "messages": [
      {
        "content": "Hey all, I&#x27;d like to add support for buttons inside of the wysiwyg. <br><br>I&#x27;ve added custom fields to the link dialogue - so that you can choose type of the button and potentially icons; but not sure what is the right way to append the  button classes (and icons) to the element itself. I&#x27;d like to avoid duplicating all of the logic of the built-in link element (that provides the dialogue, popup on hover...).<br><br>Thanks a lot for suggestions! 🙂",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1073185833319923783/1073185833680646155/image.png",
            "name": "image.png",
            "id": "1073185833680646155",
            "size": 151949,
            "url": "https://cdn.discordapp.com/attachments/1073185833319923783/1073185833680646155/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1073185833319923783/1073185833680646155/image.png",
            "height": 1608,
            "width": 2536,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "930428018546049024",
        "authorName": "jankocian",
        "authorAvatar": "a2eb9a4ddee5f4f66f64d16c26144b21",
        "createdAtDate": 1675937841492
      },
      {
        "content": "From a content modelling perspective, if you use the same buttons all over the place you could create a &quot;Buttons&quot; collection and then embed items from that collection in the rich text where needed.<br><br>This lets you have the kind of functionality you&#x27;re asking about, and also means that each CTA/button you create can be managed in one place no matter how many places it&#x27;s used in.<br><br>You can also use them in linked item fields elsewhere.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675942177297
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Form Builder: Create Other Field for Select/Custom Type",
      "id": "1075186230981038191",
      "guildId": "967097582721572934",
      "createdAt": 1676414773460
    },
    "messages": [
      {
        "content": "Hey so I need to add support for an &quot;other&quot; field that will allow a custom text box to appear on the frontend, the way the data is sent is an array of submissionData <br><pre><code class=\"hljs ts\">{\n  <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-built_in\">string</span>,\n  <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-built_in\">string</span>,\n  <span class=\"hljs-string\">&quot;id&quot;</span>?: <span class=\"hljs-built_in\">string</span>,\n}</code></pre><br><br>If i&#x27;m using a Select type and want to allow the extra field how should I go about submitting the text field data and adding the other field to the inbuilt type for it?<br><br>I&#x27;ve also got a custom type called &quot;multi-choice&quot; which basically identical to select, but just different blockType so it&#x27;s easier to differentiate the type of form element to show on frontend and also Select doesn&#x27;t support multi-select options it seems.<br>I&#x27;ve added an Other checkbox to say if the form creator wants to allow the custom field, but I&#x27;m unsure how to submit it, current idea would be to send it in the value key like<br><pre><code class=\"hljs ts\">{\n  <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;multi-choice&quot;</span>,\n  <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;other:Custom Text Goes Here&quot;</span>,\n}</code></pre><br>correct me if i&#x27;m wrong but this would fail validation as the value doesn&#x27;t match an option.<br>so would I just extend the submission data type or is there another way that would be recommended<br><pre><code class=\"hljs ts\">{\n  <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;multi-choice&quot;</span>,\n  <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;other&quot;</span>,\n  <span class=\"hljs-string\">&quot;data&quot;</span>: <span class=\"hljs-string\">&quot;Custom Text Goes Here&quot;</span>\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "1072674585197166633",
        "authorName": "work",
        "authorAvatar": "58f7a3fd0703e50b4d6210b3ac597b70",
        "createdAtDate": 1676414773460
      },
      {
        "content": "@jacobsfletch your prob best person to ask about this<br><br>next solution I currently have is to add a new field on the form that has &quot;nameOfField-other&quot; for accepting the other fields so it doesnt modify the returned data, and would just be an optional field returned. this gets added via a field hook for the multi-choice field, but unsure how I could add the same to the select field outside a collection hook?",
        "fileAttachments": [],
        "authorID": "1072674585197166633",
        "authorName": "work",
        "authorAvatar": "58f7a3fd0703e50b4d6210b3ac597b70",
        "createdAtDate": 1676418549029
      },
      {
        "content": "It sounds like you need to add <em>two</em> new fields to your forms collection, one for the checkbox that enables and disables your text field, then the text field itself. You can use conditional logic to show and hide this field based on whether it’s enabled.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676423210832
      },
      {
        "content": "This way you have a field to submit data to.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676423276992
      },
      {
        "content": "yep that&#x27;s pretty much what I ended up going with, and just overrode the select field to add the other toggle to it.<br><br>It would be nice if this was added into the plugin, I can make a PR for it with a rough implementation which can be edited by someone to follow your standards closer incase i&#x27;ve done something that doesn&#x27;t follow correctly.",
        "fileAttachments": [],
        "authorID": "1072674585197166633",
        "authorName": "work",
        "authorAvatar": "58f7a3fd0703e50b4d6210b3ac597b70",
        "createdAtDate": 1676423800529
      },
      {
        "content": "basically just adds another field into the form and use a hook to add or remove it on update",
        "fileAttachments": [],
        "authorID": "1072674585197166633",
        "authorName": "work",
        "authorAvatar": "58f7a3fd0703e50b4d6210b3ac597b70",
        "createdAtDate": 1676423826794
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Can I implement `useAPIKey` without requiring email and password?",
      "id": "1073652992139599872",
      "guildId": "967097582721572934",
      "createdAt": 1676049220834
    },
    "messages": [
      {
        "content": "It is possible to implement <code>auth.useAPIKey: true</code> on a collection without it auto populating an email and password form in the Payload UI? We have a collection of identities that aren&#x27;t necessarily represented by humans with email addresses. It might be another application for example. We need these identities to have API Keys to access other data in our application but I can&#x27;t seem to bypass the email and password form that auto populates in the collection when I enable <code>useAPIKey</code>?",
        "fileAttachments": [],
        "authorID": "462049378719498241",
        "authorName": "TheBigUmberto",
        "authorAvatar": "a4da04c2eb8b222a2e713be8e4b2e9d7",
        "createdAtDate": 1676049220834
      },
      {
        "content": "Bug Issue Created - <a href=\"https://github.com/payloadcms/payload/issues/2077\">https://github.com/payloadcms/payload/issues/2077</a>",
        "fileAttachments": [],
        "authorID": "462049378719498241",
        "authorName": "TheBigUmberto",
        "authorAvatar": "a4da04c2eb8b222a2e713be8e4b2e9d7",
        "createdAtDate": 1676305438753
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Error traversing fields when using nested groups",
      "id": "1064603114633703465",
      "guildId": "967097582721572934",
      "createdAt": 1673891561898
    },
    "messages": [
      {
        "content": "Getting this error when using nested groups. Is this unsupported or a bug?<br><br><pre><code class=\"hljs\">[17:45:44] ERROR (payload): TypeError: Cannot read properties of undefined (reading &#x27;email&#x27;)\n    at promise (/home/b/repo/endo-cms/node_modules/payload/src/fields/hooks/afterChange/promise.ts:69:31)\n    at /home/b/repo/endo-cms/node_modules/payload/src/fields/hooks/afterChange/traverseFields.ts:31:26\n    at Array.forEach (&lt;anonymous&gt;)\n    at traverseFields (/home/b/repo/endo-cms/node_modules/payload/src/fields/hooks/afterChange/traverseFields.ts:30:10)\n    at promise (/home/b/repo/endo-cms/node_modules/payload/src/fields/hooks/afterChange/promise.ts:60:27)\n    at /home/b/repo/endo-cms/node_modules/payload/src/fields/hooks/afterChange/traverseFields.ts:31:26\n    at Array.forEach (&lt;anonymous&gt;)\n    at traverseFields (/home/b/repo/endo-cms/node_modules/payload/src/fields/hooks/afterChange/traverseFields.ts:30:10)\n    at afterChange (/home/b/repo/endo-cms/node_modules/payload/src/fields/hooks/afterChange/index.ts:26:23)\n    at create (/home/b/repo/endo-cms/node_modules/payload/src/collections/operations/create.ts:263:29)</code></pre><br><br><pre><code class=\"hljs ts\">    <span class=\"hljs-comment\">// Traverse subfields</span>\n    <span class=\"hljs-keyword\">switch</span> (field.<span class=\"hljs-property\">type</span>) {\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;group&#x27;</span>: {\n            <span class=\"hljs-keyword\">await</span> (<span class=\"hljs-number\">0</span>, traverseFields_1.<span class=\"hljs-property\">traverseFields</span>)({\n                data,\n                doc,\n                previousDoc,\n                <span class=\"hljs-attr\">previousSiblingDoc</span>: previousDoc[field.<span class=\"hljs-property\">name</span>],\n                <span class=\"hljs-attr\">fields</span>: field.<span class=\"hljs-property\">fields</span>,\n                operation,\n                req,\n                <span class=\"hljs-attr\">siblingData</span>: siblingData[field.<span class=\"hljs-property\">name</span>] || {},\n                <span class=\"hljs-attr\">siblingDoc</span>: siblingDoc[field.<span class=\"hljs-property\">name</span>], <span class=\"hljs-comment\">// error happens here</span>\n            });\n            <span class=\"hljs-keyword\">break</span>;</code></pre>",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1673891561898
      },
      {
        "content": "Error traversing fields when using nested groups",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1673891595313
      },
      {
        "content": "@\\ ឵឵឵ could you make a simple repo that replicates this error?",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675446278178
      },
      {
        "content": "@jesschow Fixed at this point. Can tell you I tracked down the error to mixing <code>hidden</code> on a <code>type: &#x27;group&#x27;</code> field with  <code>access</code> specifiers on nested subfields, resulting in the traverse failing when trying to check access on those subfields which were not present in the result. Fix is probably a matter of short-circuiting that branch of the traverse when the field being checked is <code>undefined</code>.",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675447493476
      },
      {
        "content": "@\\ ឵឵឵ interesting!",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675447771599
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Selecting one element in Select field changes the image shown in the media field?",
      "id": "1079486959166181386",
      "guildId": "967097582721572934",
      "createdAt": 1677440146963
    },
    "messages": [
      {
        "content": "Is it possible somehow, maybe with filters or relationship between select type and media type to connect them in a way that when I select one element from the dropdown list, then in the media field the image changes.<br><br>E.g. i select the word &#x27;Cat&#x27; in the Select field then in the media field I get an image of a cat, that is already uploaded",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677440146963
      },
      {
        "content": "you can probably use field hooks",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1677453596755
      },
      {
        "content": "<a href=\"https://payloadcms.com/docs/hooks/fields\">https://payloadcms.com/docs/hooks/fields</a>",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1677453597569
      },
      {
        "content": "I&#x27;ll give it a try,thanks",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677481695171
      },
      {
        "content": "I cant really get hold of the concept of using hooks.<br>Is it possible to read data from one field inside of a hook of another field?",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677529707089
      },
      {
        "content": "Yes you can access the full document data from a hook, here is a list of the properties you can use: <a href=\"https://payloadcms.com/docs/hooks/fields#arguments-and-return-values\">https://payloadcms.com/docs/hooks/fields#arguments-and-return-values</a><br><br>Here is one way you can achieve this (screenshot), using a relationship field and hook that returns a different media based on the select field and the tags on the media item. I&#x27;ve used an <code>afterRead</code> hook here but you could use a different hook. Also the relationship field won&#x27;t display the image, but you could add a custom component to this field that renders the image.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079486959166181386/1079885090919821342/Screen_Shot_2023-02-27_at_9.52.10_PM.png",
            "name": "Screen_Shot_2023-02-27_at_9.52.10_PM.png",
            "id": "1079885090919821342",
            "size": 473563,
            "url": "https://cdn.discordapp.com/attachments/1079486959166181386/1079885090919821342/Screen_Shot_2023-02-27_at_9.52.10_PM.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079486959166181386/1079885090919821342/Screen_Shot_2023-02-27_at_9.52.10_PM.png",
            "height": 1958,
            "width": 2918,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1677535068917
      },
      {
        "content": "Thank you @jesschow, i will try it out soon, i&#x27;m sure that it will work this way. Thank you enormously. <br><br>Also, sorry about being such a noob, I still have to understand Payload, to put the puzzle pieces together. <br><br>Looks like a great opportunity as well to exercise writing custom components. Sweet. 🙌🙌🙌<br><br> By the way, can I use  something like Next&#x27;s Image component to render the image inside Payload?",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677570404715
      },
      {
        "content": "It&#x27;s working as expected, I changed the hook to afterChange and it changes the Media right after I hit the Save button. Neat. Thank you so much",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677581900737
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "How to add confirm box before user hit save or update? Also how to extend current model with type ui",
      "id": "1069161193404645396",
      "guildId": "967097582721572934",
      "createdAt": 1674978292562
    },
    "messages": [
      {
        "content": "How to add confirm box before user hit save or update? Also how to extend current model with type ui field button",
        "fileAttachments": [],
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674978292562
      },
      {
        "content": "Probably better to add version history so things have to be published to go live",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674982700590
      },
      {
        "content": "My question is -<br>1. When you click on delete button, you get a dialog box to confirm or cancel. How to get that for custom ui component button",
        "fileAttachments": [],
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674982977907
      },
      {
        "content": "I have added a custom button",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1069161193404645396/1069180985234706532/Screenshot_2023-01-29_at_2.33.11_PM.png",
            "name": "Screenshot_2023-01-29_at_2.33.11_PM.png",
            "id": "1069180985234706532",
            "size": 35588,
            "url": "https://cdn.discordapp.com/attachments/1069161193404645396/1069180985234706532/Screenshot_2023-01-29_at_2.33.11_PM.png",
            "proxyURL": "https://media.discordapp.net/attachments/1069161193404645396/1069180985234706532/Screenshot_2023-01-29_at_2.33.11_PM.png",
            "height": 732,
            "width": 668,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674983011346
      },
      {
        "content": "As you can see this pop up when we hit delete",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1069161193404645396/1069181189040132127/Screenshot_2023-01-29_at_2.33.42_PM.png",
            "name": "Screenshot_2023-01-29_at_2.33.42_PM.png",
            "id": "1069181189040132127",
            "size": 55778,
            "url": "https://cdn.discordapp.com/attachments/1069161193404645396/1069181189040132127/Screenshot_2023-01-29_at_2.33.42_PM.png",
            "proxyURL": "https://media.discordapp.net/attachments/1069161193404645396/1069181189040132127/Screenshot_2023-01-29_at_2.33.42_PM.png",
            "height": 624,
            "width": 1108,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674983059914
      },
      {
        "content": "How to get this box on click",
        "fileAttachments": [],
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674983078288
      },
      {
        "content": "I&#x27;m not sure you can do this with the default UI. <br><br>You might be able to create a fully custom UI for your collections, but that would feel a bit overkill to me.<br><br>What I suggested about enabling drafts would help prevent things from going &quot;live&quot; immediately though as you&#x27;d have to explicitly publish the changes/new document for it to be served on the APIs.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675162428967
      },
      {
        "content": "One option is to add a UI field in the sidebar that contains a button like this one:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> form = <span class=\"hljs-title function_\">useForm</span>()\n<span class=\"hljs-keyword\">return</span> <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span>=&gt;</span>{\n  if (!confirm(&#x27;Are you sure?&#x27;)) return\n  form.submit()\n// don&#x27;t forget about preventDefault\n}}&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span></code></pre><br><br>I&#x27;m hiding the existing buttons like this:<br><pre><code class=\"hljs ts\">  <span class=\"hljs-title function_\">useLayoutEffect</span>(<span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> elems = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelectorAll</span>(\n      <span class=\"hljs-string\">&#x27;.collection-edit__document-actions, .collection-edit__sidebar-fields .status&#x27;</span>\n    )\n\n    ;[].<span class=\"hljs-property\">forEach</span>.<span class=\"hljs-title function_\">call</span>(elems, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">elem</span>) {\n      elem.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">display</span> = <span class=\"hljs-string\">&#x27;none&#x27;</span>\n    })\n  }, [])</code></pre>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1675177560014
      },
      {
        "content": "Added a button and confirmation but The problem is that, confirmation is like javascript alert. which is not in line with current UI flow",
        "fileAttachments": [],
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1675324843013
      },
      {
        "content": "I don&#x27;t believe there is a way to hook into this UI flow currently. We have a drawer element abstracted out but not ready for consumption quite yet.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675437800171
      },
      {
        "content": "I think @Kyr &#x27;s suggestion about using drafts would be something to look into, because it seems like this is an outcome you&#x27;re trying to achieve.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675437836054
      },
      {
        "content": "You might also be able to grab our modal code and put it into your custom field somehow",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675437884171
      },
      {
        "content": "This feature is something I would really appreciate as well! Thanks all for the suggestions to use in the meantime though! <br>We implemented our own separation between what we consider &quot;published&quot; and &quot;draft&quot; content (using GraphQL queries) that does&#x27;t exactly play nicely with Payload&#x27;s default &quot;Draft&quot; feature (although we probably should have implemented it with the default behavior from the beginning because I really like how it works).",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676316311779
      }
    ],
    "messageCount": 12
  },
  {
    "info": {
      "name": "question around Auth",
      "id": "1072614213962444807",
      "guildId": "967097582721572934",
      "createdAt": 1675801556817
    },
    "messages": [
      {
        "content": "Can different collections support different Auth strategies?<br><br>Scenario:<br><br>CollectionA: I’m using magic link passport strategy. These users can have “clients”.<br><br>CollectionB: clients of users A. They will never log into payload themselves but I want them to be able to sign up (email password) on another client website that uses this payload collection for Auth. The benefit of having payload manage it is collectionA can reset/lock accounts etc.. like a CRM<br><br>Is this feasible?",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1675801556817
      },
      {
        "content": "Yep you can totally do that",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675801634601
      },
      {
        "content": "@jmikrut  what login route would collectionB use in this scenario, I think the built in login is tied to the <code>admin: {user: &lt;slug&gt;}</code> collection. Would I have to create a custom route and post through the auth api?",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1675892022000
      },
      {
        "content": "I think so, I see in the auth docs that I can login via collection slug name. Nice!",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1675892258766
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Custom button to create new entry in collection",
      "id": "1070006922926891169",
      "guildId": "967097582721572934",
      "createdAt": 1675179930193
    },
    "messages": [
      {
        "content": "I&#x27;m experimenting with a workaround for a &quot;content staging&quot; feature I&#x27;m trying to implement. Essentially I need to put a custom button (either in the list or the document edit screen) that when clicked, creates a new entry in a different collection based on the data in current document. What&#x27;s the best way to do that? <br><br>I&#x27;ve created the button with a UI field and tried using the local API to do this, but I get an error <code>payload__WEBPACK_IMPORTED_MODULE_1__.default.create is not a function</code>. I think I&#x27;m not using it correctly, is this designed to only work with hooks? Should I use graphql instead? An entirely different approach?<br><br>Code below for the ui field custom component... any help/examples appreciated. Thanks!<br><br><pre><code class=\"hljs\">import React from &quot;react&quot;;\nimport { useDocumentInfo } from &quot;payload/components/utilities&quot;;\nimport payload from &quot;payload&quot;;\n\nasync function createStagePage(docData) {\n  await payload.create({\n    collection: &quot;stagePage&quot;,\n    data: {\n      title: &quot;testTitle&quot;,\n    },\n  });\n}\ntype Props = { label: string };\nconst StageField: React.FC&lt;Props&gt; = (props) =&gt; {\n  const docinfo = useDocumentInfo();\n  const clickHandler = (event: React.MouseEvent&lt;HTMLButtonElement&gt;) =&gt; {\n    event.preventDefault();\n    const returnObj = {\n      fields: docinfo.collection.fields,\n      id: docinfo.id,\n    };\n    createStagePage(returnObj);\n  };\n  return &lt;button onClick={clickHandler}&gt;Content Stage&lt;/button&gt;;\n};\nexport default StageField;</code></pre>",
        "fileAttachments": [],
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675179930193
      },
      {
        "content": "The local API is server-side only, you&#x27;ll need to hit the REST API using fetch.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675440841944
      },
      {
        "content": "Here is a component that queries another collection that you may be able to use some code from: <a href=\"https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx\">https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675440912009
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "can I build this with payload?",
      "id": "1075619687318159430",
      "guildId": "967097582721572934",
      "createdAt": 1676518117504
    },
    "messages": [
      {
        "content": "I want to know if this flow can be built with Payload or if someone has suggestions on how to create this. <br><br>I have some collections: users, activities, and visits [image with example in comment]. Right now I can create visits for those activities in Front, the visit is a collection with a relationship between users and activities. <br><br>For some visits we need some extra info from the user, I was thinking of creating a collection called forms that has the block field to be able to create different forms and add a relationship to the form in activities. Then in Front, pull those fields and create the form.<br><br>I don&#x27;t know the right way to save this data.<br><br>Can I add these new and random fields directly to a collection?  (maybe the user or another like the visit collection)",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1075619687318159430/1075619687511105608/collections.png",
            "name": "collections.png",
            "id": "1075619687511105608",
            "size": 35732,
            "url": "https://cdn.discordapp.com/attachments/1075619687318159430/1075619687511105608/collections.png",
            "proxyURL": "https://media.discordapp.net/attachments/1075619687318159430/1075619687511105608/collections.png",
            "height": 873,
            "width": 1996,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1075619687318159430/1075619687737593886/flow.png",
            "name": "flow.png",
            "id": "1075619687737593886",
            "size": 51492,
            "url": "https://cdn.discordapp.com/attachments/1075619687318159430/1075619687737593886/flow.png",
            "proxyURL": "https://media.discordapp.net/attachments/1075619687318159430/1075619687737593886/flow.png",
            "height": 1516,
            "width": 1198,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1676518117504
      },
      {
        "content": "I think this can be done with the form plugin.",
        "fileAttachments": [],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1676668816320
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "useAsTitle using a relationship",
      "id": "1069862620871532614",
      "guildId": "967097582721572934",
      "createdAt": 1675145525902
    },
    "messages": [
      {
        "content": "I have a relationship to users collection in a collection, and I want to use the email of the user as <code>useAsTitle</code> but I get the id, is there a way to choose the email?",
        "fileAttachments": [],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1675145525902
      },
      {
        "content": "Have you defined <code>useAsTitle</code> on your users collection? It should be as simple as that, you can see it working if you boot up <code>npx create-payload-app</code> and select the <code>ts-blog</code> template",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1069862620871532614/1069922969666715700/Screen_Shot_2023-01-31_at_10.10.22_AM.png",
            "name": "Screen_Shot_2023-01-31_at_10.10.22_AM.png",
            "id": "1069922969666715700",
            "size": 58037,
            "url": "https://cdn.discordapp.com/attachments/1069862620871532614/1069922969666715700/Screen_Shot_2023-01-31_at_10.10.22_AM.png",
            "proxyURL": "https://media.discordapp.net/attachments/1069862620871532614/1069922969666715700/Screen_Shot_2023-01-31_at_10.10.22_AM.png",
            "height": 648,
            "width": 572,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1069862620871532614/1069922969930977352/Screen_Shot_2023-01-31_at_10.10.57_AM.png",
            "name": "Screen_Shot_2023-01-31_at_10.10.57_AM.png",
            "id": "1069922969930977352",
            "size": 51302,
            "url": "https://cdn.discordapp.com/attachments/1069862620871532614/1069922969930977352/Screen_Shot_2023-01-31_at_10.10.57_AM.png",
            "proxyURL": "https://media.discordapp.net/attachments/1069862620871532614/1069922969930977352/Screen_Shot_2023-01-31_at_10.10.57_AM.png",
            "height": 504,
            "width": 1666,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675159914295
      },
      {
        "content": "Yes, in my users collection is email:",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1069862620871532614/1070429008015138846/Screenshot_2023-02-01_at_1.41.16_p.m..png",
            "name": "Screenshot_2023-02-01_at_1.41.16_p.m..png",
            "id": "1070429008015138846",
            "size": 76709,
            "url": "https://cdn.discordapp.com/attachments/1069862620871532614/1070429008015138846/Screenshot_2023-02-01_at_1.41.16_p.m..png",
            "proxyURL": "https://media.discordapp.net/attachments/1069862620871532614/1070429008015138846/Screenshot_2023-02-01_at_1.41.16_p.m..png",
            "height": 524,
            "width": 1148,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1675280563110
      },
      {
        "content": "but, in another collection, that has a relationship to users, I want to use the user email, is this possible?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1069862620871532614/1070429194590367764/Screenshot_2023-02-01_at_1.42.11_p.m..png",
            "name": "Screenshot_2023-02-01_at_1.42.11_p.m..png",
            "id": "1070429194590367764",
            "size": 171032,
            "url": "https://cdn.discordapp.com/attachments/1069862620871532614/1070429194590367764/Screenshot_2023-02-01_at_1.42.11_p.m..png",
            "proxyURL": "https://media.discordapp.net/attachments/1069862620871532614/1070429194590367764/Screenshot_2023-02-01_at_1.42.11_p.m..png",
            "height": 1100,
            "width": 1306,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1675280607658
      },
      {
        "content": "@akacronos not in the way you are looking for. You will need to wire up an afterChange hook and add a <code>title</code> field on this collectionConfig, set the value of the title field to the email of the user with your hook 💥",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675286387785
      },
      {
        "content": "That make sense! Thanks!!",
        "fileAttachments": [],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1675292379524
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Wildcard Express Routes Blocking Admin",
      "id": "1070825108136022116",
      "guildId": "967097582721572934",
      "createdAt": 1675375000748
    },
    "messages": [
      {
        "content": "Hello everyone,<br><br>Trust you are having a great day!<br><br>Below the <code>payload.init</code> within <code>server.ts</code> I have a wildcard route to show a 404 page for any routes that do not exist <code>app.use(&#x27;*&#x27;, fourOFour);</code>, this used to work however after upgrading to version <code>1.6.3</code> it has now always routed to the 404 &amp; not the payload admin when going to <code>/admin</code>.<br><br>Thank you!",
        "fileAttachments": [],
        "authorID": "1014197588670558258",
        "authorName": "Luciano",
        "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
        "createdAtDate": 1675375000748
      },
      {
        "content": "* All my other custom routes work, everything except <code>/admin</code>",
        "fileAttachments": [],
        "authorID": "1014197588670558258",
        "authorName": "Luciano",
        "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
        "createdAtDate": 1675375090681
      },
      {
        "content": "can you share your server file?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675431426048
      },
      {
        "content": "Yep, there were a couple breaking changes in the 1.6.1 release - you can read about what needs to be done to get back up and running here <a href=\"https://github.com/payloadcms/payload/releases/tag/v1.6.1\">https://github.com/payloadcms/payload/releases/tag/v1.6.1</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675449793552
      },
      {
        "content": "Thank you for sharing that helpful resource!",
        "fileAttachments": [],
        "authorID": "1014197588670558258",
        "authorName": "Luciano",
        "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
        "createdAtDate": 1675452964009
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Is there a repo or tutorial on using google login with payload?",
      "id": "1072097651010588742",
      "guildId": "967097582721572934",
      "createdAt": 1675678398612
    },
    "messages": [
      {
        "content": "I want to completely replace the login functionality with google authentication",
        "fileAttachments": [],
        "authorID": "1004634747105972225",
        "authorName": "tantalum",
        "authorAvatar": "68d2f32d5429362e6bcf185ec5a749c7",
        "createdAtDate": 1675678398612
      },
      {
        "content": "I would say you&#x27;d want to update your server file to reroute your login page to a custom page. You can also likely hook into the middleware provided by Payload to store a token per-user (I assume) <a href=\"https://payloadcms.com/docs/authentication/using-middleware\">https://payloadcms.com/docs/authentication/using-middleware</a>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1675692370590
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Importing / migrating data?",
      "id": "1071967121149534298",
      "guildId": "967097582721572934",
      "createdAt": 1675647277868
    },
    "messages": [
      {
        "content": "Let&#x27;s say you&#x27;re migrating a client from something like Wordpress to Payload. How would you handle importing all of their blog posts? I&#x27;m a little unsure because I&#x27;m not familiar with Mongo. If Payload were in Postgres I&#x27;d feel more comfortable figuring this out. Any suggestions or approaches?",
        "fileAttachments": [],
        "authorID": "455433351227113472",
        "authorName": "burgerlove",
        "authorAvatar": null,
        "createdAtDate": 1675647277868
      },
      {
        "content": "I&#x27;m currently doing a similar WordPress to Payload migration, and what I&#x27;ve done is create some WP-CLI commands in WordPress to export the Posts to JSON.<br><br>I then wrote a script for Payload that uses the Local API, reads all of these JSON files, performs any necessary transformations, and then calls create/update as needed.<br><br>I created a <code>seed.ts</code> file next to my <code>server.ts</code>, at the core of this is the <code>start</code> function, which initializes Payload ... <br><br><pre><code class=\"hljs\">const start = async () =&gt;\n  await Payload.init({\n    secret: process.env.PAYLOAD_SECRET,\n    mongoURL: process.env.MONGODB_URI,\n    mongoOptions: {\n      dbName: process.env.MONGODB_DB_NAME ?? &#x27;payload-konghq&#x27;,\n    },\n    local: true,\n    onInit: (_payload) =&gt; {\n      payload = _payload;\n      payload.logger.info(`Payload initialized...`);\n      seed().then(\n        () =&gt; {\n          process.exit(0);\n        },\n        (err) =&gt; {\n          console.error(err);\n          process.exit(-1);\n        },\n      );\n    },\n  });\nstart();</code></pre>",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675696877849
      },
      {
        "content": "The <code>seed</code> function just acts as a wrapper around various other functions, which are purpose built for seeding data in the correct order ... for example, I create/update my Payload Users first, then I create my uploads, then I create my globals, and then I create my Posts ... this ensures that related data is in place before I try to associate things.<br><br>Ignoring my transformations, and some other bits ... the main <code>seedCollection</code> function looks like this (it uses <code>createDocument</code>, <code>updateDocument</code> and <code>setDocumentParent</code>)",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675696900836
      },
      {
        "content": "<pre><code class=\"hljs\">async function createDocument(\n  collection: string,\n  data: any,\n): Promise&lt;TypeWithID&gt; {\n  return payload\n    .create({\n      collection: collection,\n      disableVerificationEmail: true,\n      data: {\n        ...data,\n        parent: null,\n      },\n    })\n    .then((doc) =&gt; {\n      if (data.parent) {\n        return setDocumentParent(collection, data.id, data.parent);\n      }\n      return doc;\n    });\n}\n\nasync function updateDocument(\n  collection: string,\n  id: string,\n  data: any,\n): Promise&lt;TypeWithID&gt; {\n  return payload\n    .update({\n      collection: collection,\n      data: data,\n      id: id,\n    })\n    .then((doc) =&gt; {\n      if (data.parent) {\n        return setDocumentParent(collection, data.id, data.parent);\n      }\n      return doc;\n    });\n}\n\n// nested docs parent\nasync function setDocumentParent(\n  collection,\n  childId,\n  parentId,\n): Promise&lt;TypeWithID&gt; {\n  return payload.update({\n    collection: collection,\n    id: childId,\n    data: {\n      id: childId,\n      parent: parentId,\n    },\n  });\n}\n\nasync function seedCollection(collection: string) {\n  const dirPath = path.resolve(__dirname, &#x27;../seeds&#x27;, collection);\n  let filenames = [];\n\n  try {\n    filenames = fs.readdirSync(dirPath);\n  } catch (err) {\n    console.warn(&#x27;[WARNING]&#x27;, err);\n  }\n\n  for (let filename of filenames) {\n    const filepath = path.resolve(dirPath, filename);\n    if (fs.lstatSync(filepath).isDirectory()) continue;\n\n    const json = fs.readFileSync(filepath);\n    const data = JSON.parse(json.toString());\n    try {\n      const doc = await payload.findByID({\n        collection: collection,\n        id: data.id,\n      });\n      const updated = await updateDocument(collection, doc.id, data);\n    } catch (err) {\n      console.log(&#x27;[WARNING]: &#x27;, err);\n      const created = await createDocument(collection, data);\n    }\n  }\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675696908017
      },
      {
        "content": "It&#x27;s important to note that to keep things in sync across multiple calls, I&#x27;ve overridden the collection&#x27;s ID field and use a custom ID.  This ensure if I change data in WordPress, run the export commands, then run the import commands, the import will update the appropriate content ... rather than deleting/recreating ...",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675696910856
      },
      {
        "content": "I&#x27;m using the WordPress API (wpapi package) to query posts and import them via payloads rest API in a simple node script.",
        "fileAttachments": [],
        "authorID": "190191205907169280",
        "authorName": "altan",
        "authorAvatar": "6fe697550cadb7d4199a44e5bb05839d",
        "createdAtDate": 1675700034271
      },
      {
        "content": "Also importing media files like that and check against the slug to avoid duplicate imports. It&#x27;s def not super performant, but works well enough for my usecase",
        "fileAttachments": [],
        "authorID": "190191205907169280",
        "authorName": "altan",
        "authorAvatar": "6fe697550cadb7d4199a44e5bb05839d",
        "createdAtDate": 1675700159442
      },
      {
        "content": "Working something similar porting from keystonejs, I agree with @altan, I’m querying my current db and just hitting the payload rest api. It’s worked out well… the trickiest part is media files, I just wrote some notes on my post about if you would like my experience <a href=\"https://discord.com/channels/967097582721572934/1070191210834182194\">https://discord.com/channels/967097582721572934/1070191210834182194</a>",
        "fileAttachments": [],
        "authorID": "958604809215283250",
        "authorName": "joephuz",
        "authorAvatar": "a668b9d3f23523d2aae8ac84d9724c60",
        "createdAtDate": 1675920091241
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Disable inline creation feature",
      "id": "1074253173415493713",
      "guildId": "967097582721572934",
      "createdAt": 1676192315201
    },
    "messages": [
      {
        "content": "So I recently stumbled upon the feature added by this PR (<a href=\"https://github.com/payloadcms/payload/pull/1230\">https://github.com/payloadcms/payload/pull/1230</a>) after upgrading Payload and while I LOVE the idea of it... I would like to be able to disable it. Creating a new user while writing a blog post is something that I find highly unlikely anyone would want to do and as it is, the plus button kind of just makes the UI more cluttered and harder to understand. I did see in the PR that the feature that I&#x27;m looking for was planned to be done before merge but as far as I can see, that didn&#x27;t happen. Or am I crazy here? 😅",
        "fileAttachments": [],
        "authorID": "321229198234615808",
        "authorName": "Ellie",
        "authorAvatar": "7472ce50c8e25a58fb6ed48925a7c31d",
        "createdAtDate": 1676192315201
      },
      {
        "content": "@Ellie As of now, the only way to disable it would be if the user doesn&#x27;t have <code>create</code> access to that relationship&#x27;s collection. <br><br>I agree that this is very much needed, and we&#x27;ll be working this into our roadmap. Here is the feature request for what you&#x27;re describing. Go ahead and upvote 👍  <a href=\"https://github.com/payloadcms/payload/discussions/1750\">https://github.com/payloadcms/payload/discussions/1750</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676242481460
      },
      {
        "content": "Hey thanks Elliot! Seems like I didn’t even have time to go in and upvote. There’s already a PR! 🎉",
        "fileAttachments": [],
        "authorID": "321229198234615808",
        "authorName": "Ellie",
        "authorAvatar": "7472ce50c8e25a58fb6ed48925a7c31d",
        "createdAtDate": 1676274834340
      },
      {
        "content": "PR was merged in. It will be in the next release.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676308179489
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Is it possible to extend the default field components (upload, text fields)?",
      "id": "1070285562453426196",
      "guildId": "967097582721572934",
      "createdAt": 1675246363033
    },
    "messages": [
      {
        "content": "So that I can make some minor changes to them rather than an entirely different component? Is there a way to import them directly or are their codes available?<br><br>Thank you!",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675246363033
      },
      {
        "content": "You can import a Payload&#x27;s field into your own custom component to extend it&#x27;s functionality, a good example of this is in our SEO plugin repo: <a href=\"https://github.com/payloadcms/plugin-seo/blob/main/src/fields/MetaTitle.tsx\">https://github.com/payloadcms/plugin-seo/blob/main/src/fields/MetaTitle.tsx</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675262419106
      },
      {
        "content": "Thanks a lot! 😄",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675262934355
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "cyclic.sh deployment",
      "id": "1078874025280950272",
      "guildId": "967097582721572934",
      "createdAt": 1677294012137
    },
    "messages": [
      {
        "content": "has anyone deployed payload cms to cyclic.sh? I have been trying for couple of hours without any luck",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1677294012137
      },
      {
        "content": "This is the first I&#x27;ve heard of this platform. Could you provide more detail on what you&#x27;re running into? We may be able to help.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677591893034
      },
      {
        "content": "yeah, I recently heard about this when I was trying to test different platforms for running payload cms. I cant remember what was the issue I faced, but I decided not to deploy the cms to this platform so we can close this issue.",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1677600665068
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Auth issues",
      "id": "1080347758940135485",
      "guildId": "967097582721572934",
      "createdAt": 1677645377622
    },
    "messages": [
      {
        "content": "via postman i can login and get responses like expected, but when trying to fetch the /Me endpoint from my front-end, i always get { users : none } back, even if called directly after passing login. when i try to logout i get a &quot;no user&quot; error. <br><br>i have seen <br><pre><code class=\"hljs\">credentials : &#x27;include&#x27;</code></pre><br>i tried adding it to the request but i get cors errors even though both urls (localhost with ports) are whitelisted <br><br>does anyone have an idea what i am doing wrong here?",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677645377622
      },
      {
        "content": "To make authentication work across domains you need to set cors, csrf, and the cookie domain. Our official auth example demonstrates this pretty simply, check it out; <a href=\"https://github.com/payloadcms/payload/tree/master/examples/auth/cms#readme\">https://github.com/payloadcms/payload/tree/master/examples/auth/cms#readme</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677649862600
      },
      {
        "content": "The <code>credentials: include</code> line in your front-end fetch will automatically attach Payload&#x27;s http-only cookie to the request, but Payload will only respect that request and cookie if the settings are configured.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677650061933
      },
      {
        "content": "If you&#x27;re still seeing a cors error after setting the config, double check that the values are correct. You may be using environment variables that are not loaded. This has tripped me up more times than I&#x27;m willing to admit.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677650092371
      },
      {
        "content": "Also note that Postman will not trigger cors errors because it makes the request server-side and cors is a browser-only concept.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677650150183
      },
      {
        "content": "thanks for the quick response! <br><br>the cookie domain i had not set but the cors and csrf configs are like in the example with the exception of using strings directly<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> clientUrls = [<span class=\"hljs-string\">&#x27;http://localhost:5173&#x27;</span>, <span class=\"hljs-string\">&#x27;http://localhost:3000&#x27;</span>];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">buildConfig</span>({\n  <span class=\"hljs-attr\">serverURL</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PAYLOAD_PUBLIC_SERVER_URL</span>,\n  <span class=\"hljs-attr\">admin</span>: {\n    <span class=\"hljs-attr\">user</span>: <span class=\"hljs-title class_\">Admins</span>.<span class=\"hljs-property\">slug</span>,\n  },\n  <span class=\"hljs-attr\">cors</span>: clientUrls,\n  <span class=\"hljs-attr\">csrf</span>: clientUrls,\n  <span class=\"hljs-attr\">collections</span>: [<span class=\"hljs-title class_\">Admins</span>, players],\n  <span class=\"hljs-attr\">typescript</span>: {\n    <span class=\"hljs-attr\">outputFile</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&quot;payload-types.ts&quot;</span>),\n  },\n  <span class=\"hljs-attr\">graphQL</span>: {\n    <span class=\"hljs-attr\">schemaOutputFile</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&quot;generated-schema.graphql&quot;</span>),\n  },\n});</code></pre><br><br>the cors errors persists",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677650971842
      },
      {
        "content": "Can you paste the error here? And possibly your request as well.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677652157923
      },
      {
        "content": "<a href=\"https://i.imgur.com/tGYWsVZ.png\">https://i.imgur.com/tGYWsVZ.png</a>",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677653327372
      },
      {
        "content": "<pre><code class=\"hljs\">Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at http://localhost:3000/api/players/login. (Reason: expected ‘true’ in CORS header ‘Access-Control-Allow-Credentials’).</code></pre>",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677653360689
      },
      {
        "content": "<a href=\"https://i.imgur.com/0F5TVjw.png\">https://i.imgur.com/0F5TVjw.png</a>",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677653554169
      },
      {
        "content": "<pre><code class=\"hljs ts\"> <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(<span class=\"hljs-string\">&#x27;http://localhost:3000/api/players/login&#x27;</span>, {\n      <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;POST&#x27;</span>,\n      <span class=\"hljs-attr\">credentials</span>: <span class=\"hljs-string\">&#x27;include&#x27;</span>,\n      <span class=\"hljs-attr\">headers</span>: {\n        <span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>: <span class=\"hljs-string\">&#x27;application/json&#x27;</span>,\n      },\n      <span class=\"hljs-attr\">body</span>: <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>({\n        <span class=\"hljs-attr\">email</span>: username,\n        <span class=\"hljs-attr\">password</span>: password,\n      }),\n      });</code></pre>",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677653619496
      },
      {
        "content": "Weird, your response headers indicate that <code>http://localhost:5173</code> is whitelisted as expected",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677679467095
      },
      {
        "content": "<code>http://localhost:5173</code> is the address of your front-end right?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677679631659
      },
      {
        "content": "Yes",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677682928796
      },
      {
        "content": "Are you able to hit any other endpoints with success? Like <code>/api/players</code>?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677683797969
      },
      {
        "content": "when i leave out the credentials : &#x27;include&#x27;<br>i can log in , get the correct user info and token",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677683878414
      },
      {
        "content": "but in the same function, after the user token retrieval, when fetching /me again, it shows not logged in, when using not the credential line (it goes through) but with the line, the cors errors appear",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677683979455
      },
      {
        "content": "so nothing with the credential line included goes through, everything without goes through, works but as expected when your not logged in",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677683995672
      },
      {
        "content": "Ok this is making more sense",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677684114850
      },
      {
        "content": "The reason you are logging in the first time with success, but do not remain logged in, is because of the cookie domain settings",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677684178857
      },
      {
        "content": "You need to whitelist <code>localhost</code> as seen here: <a href=\"https://github.com/payloadcms/payload/blob/master/examples/auth/cms/src/collections/Users.ts#L14\">https://github.com/payloadcms/payload/blob/master/examples/auth/cms/src/collections/Users.ts#L14</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677684186855
      },
      {
        "content": "This will allow Payload to attach the http-only cookie to your browser and read it back on every <code>/me</code> request",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677684249028
      },
      {
        "content": "<a href=\"https://i.imgur.com/w7leWko.png\">https://i.imgur.com/w7leWko.png</a>",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677684257977
      },
      {
        "content": "i tried swapping secure to false since it did not work the first time i tried, ignore that pls",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677684284737
      },
      {
        "content": "Can you verify your cookie settings by inspecting the cookie in your browser?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677684462225
      },
      {
        "content": "In Chrome, Inspector &gt; Application &gt; Cookies",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677684476425
      },
      {
        "content": "You can see what domain, etc is being attached",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677684493580
      },
      {
        "content": "hmm might need to swap browsers here 😄",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677684734799
      },
      {
        "content": "nothing appears there but just to be clear , i cannot log in with &#x27;credentials : &quot;include&quot;&#x27; right",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677684858437
      },
      {
        "content": "Right and that is because <code>credentials: include</code> attaches that cookie to the request",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677684966156
      },
      {
        "content": "But all signs are pointing to a bad cookie",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677684978905
      },
      {
        "content": "yea , that seems to be missing , there is nothing i have specifically do right?",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677685023771
      },
      {
        "content": "im not experienced at all with web development to be honest, sorry if im being stupid here, usually doing more c++ or gamedev stuff ^^",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677685155355
      },
      {
        "content": "It&#x27;s all good! Happy to help. I think we&#x27;re close.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677685175515
      },
      {
        "content": "Do you have any custom hooks that might be manipulating the user in the response?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677685187363
      },
      {
        "content": "there are some hooks, but they dont do anything as far as i can tell",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677685296264
      },
      {
        "content": "<a href=\"https://i.imgur.com/U98Gm0Y.png\">https://i.imgur.com/U98Gm0Y.png</a>",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677685297367
      },
      {
        "content": "<a href=\"https://i.imgur.com/fpgHnuz.png\">https://i.imgur.com/fpgHnuz.png</a>",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677685356437
      },
      {
        "content": "Try commenting those out temporarily",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677685439532
      },
      {
        "content": "no effect",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677685679696
      },
      {
        "content": "what about <br><pre><code class=\"hljs ts\">  app.<span class=\"hljs-title function_\">use</span>(payload.<span class=\"hljs-property\">authenticate</span>);</code></pre> <br>? i seen it somewhere, had commented it out bc it did not seem to be required",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677685804899
      },
      {
        "content": "<a href=\"https://i.imgur.com/Pn3ThPS.png\">https://i.imgur.com/Pn3ThPS.png</a>",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677686366796
      },
      {
        "content": "here is a login response btw",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677686370670
      },
      {
        "content": "maybe there is some useful info",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677686379123
      },
      {
        "content": "@Nog can you paste what your most recent Players auth config looks like?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677720452819
      },
      {
        "content": "i was able to fix this issue 20 min ago , the essential parts i was missing was setting cookie settings in the user collection, jacob pointed that out, and lastly correctly setting the cookie.",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677720630826
      },
      {
        "content": "Amazing, happy to hear it 👍",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677720867612
      }
    ],
    "messageCount": 46
  },
  {
    "info": {
      "name": "Question about payload serverless using Nextjs",
      "id": "1078891668859797558",
      "guildId": "967097582721572934",
      "createdAt": 1677298218694
    },
    "messages": [
      {
        "content": "I saw that you guys are building this project<br><a href=\"https://github.com/payloadcms/next-payload-demo#readme\">https://github.com/payloadcms/next-payload-demo#readme</a><br><br>I wanted to know how advanced this project is, I know it says there that until it reaches 1.0 it is not stable, but I don&#x27;t know how far you have gotten or if we can help with something",
        "fileAttachments": [],
        "authorID": "391293587922485252",
        "authorName": "Hyra10",
        "authorAvatar": "930bc5beaa28b294cc7c1af61014f3f4",
        "createdAtDate": 1677298218694
      },
      {
        "content": "Cool to see people watching some of our repos! This repo is still being working on, and will be ready for consumption in the coming weeks.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677512035654
      },
      {
        "content": "I&#x27;m looking forward to this as well.",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677513512535
      },
      {
        "content": "thank you Elliot, I discovered a bug while playing with it, I added an issue on github, looking forward to this release",
        "fileAttachments": [],
        "authorID": "391293587922485252",
        "authorName": "Hyra10",
        "authorAvatar": "930bc5beaa28b294cc7c1af61014f3f4",
        "createdAtDate": 1677642616226
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "`listSearchableFields` for relationship picker?",
      "id": "1079423062597971968",
      "guildId": "967097582721572934",
      "createdAt": 1677424912834
    },
    "messages": [
      {
        "content": "Does anyone know of a way that you can search by a field other than the title when selecting a record from a relationship field select dropdown?<br><br>In my example, I want to associate related &quot;Fixtures&quot; to one another, but I&#x27;d like the ability to search not only by the <code>title</code>, but also by the <code>partNumber</code> field.  I can make this happen on the collection list page (by way of <code>listSearchableFields</code> in my collection declaration, but this doesn&#x27;t seem to carry over to the select dropdown. <br><br>Any ideas?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079423062597971968/1079423062711222332/image.png",
            "name": "image.png",
            "id": "1079423062711222332",
            "size": 53076,
            "url": "https://cdn.discordapp.com/attachments/1079423062597971968/1079423062711222332/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079423062597971968/1079423062711222332/image.png",
            "height": 858,
            "width": 938,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "398939985773854742",
        "authorName": "see.ess",
        "authorAvatar": "d1c3ebf237e0b1471b75095da8902dd5",
        "createdAtDate": 1677424912834
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079423062597971968/1079423209960656936/image.png",
            "name": "image.png",
            "id": "1079423209960656936",
            "size": 33959,
            "url": "https://cdn.discordapp.com/attachments/1079423062597971968/1079423209960656936/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079423062597971968/1079423209960656936/image.png",
            "height": 630,
            "width": 884,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "398939985773854742",
        "authorName": "see.ess",
        "authorAvatar": "d1c3ebf237e0b1471b75095da8902dd5",
        "createdAtDate": 1677424948013
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079423062597971968/1079423309298544670/image.png",
            "name": "image.png",
            "id": "1079423309298544670",
            "size": 44907,
            "url": "https://cdn.discordapp.com/attachments/1079423062597971968/1079423309298544670/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079423062597971968/1079423309298544670/image.png",
            "height": 672,
            "width": 1144,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "398939985773854742",
        "authorName": "see.ess",
        "authorAvatar": "d1c3ebf237e0b1471b75095da8902dd5",
        "createdAtDate": 1677424971704
      },
      {
        "content": "Currently that is not possible. This would be a great feature to add.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677521595730
      },
      {
        "content": "I would make it so that the relationship field has an <code>admin</code> property called <code>searchField</code> or similar that would take the path of the thing to search on.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677521623717
      },
      {
        "content": "Then the relationship field input could use that instead of the <code>useAstitle</code> field when the config option is present.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677521643816
      },
      {
        "content": "One thing that complexifies this a bit is that having multiple <code>relationTo</code> for different collection would need their own search fields. That leaves a lot of room for error, so maybe better to have it on the collection as a sibling to <code>listSearchableFields</code>. I&#x27;m thinking out loud. <br>The next step is to create a Github discussion for a new feature request where these details are figured out and somebody can go on to code it.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677522037175
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Serverless deployment (Google Cloud)",
      "id": "1072139981432303716",
      "guildId": "967097582721572934",
      "createdAt": 1675688490971
    },
    "messages": [
      {
        "content": "What is the current situation on deploying in a serverless environment? (Support, latency, etc.) Thank you.",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675688490971
      },
      {
        "content": "We use Google Cloud Run to host our Payload app and it&#x27;s pretty decent. Good value for money and is scaleable. We use Nextjs on the frontend so the backend doesn&#x27;t need to be particularly fast due to Next revalidating the front end behind the scenes.",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675688667893
      },
      {
        "content": "@Mark | Omniux but surely you still have to validate on the backend anyway no? (security reasons) also why Cloud Run and not Cloud Functions?",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675689312185
      },
      {
        "content": "do you suffer from cold starts? When there&#x27;s no instance running, it takes a long time to be available (&gt;20 secs)",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675690195655
      },
      {
        "content": "@bombnp you can always do the cron trick and do a dead-end request every ~15s",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675690392886
      },
      {
        "content": "but that would mean the instance would always be running, which incurs cost, yes?",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675690437235
      },
      {
        "content": "no, the costs come from initiation and time. The initiation cost is minimal, the ram and cpu time cost will also be minimal because your request should take 50ms",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675690491330
      },
      {
        "content": "just make an express route /keepAlive or something that immediately responds a  200 then finishes",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675690516626
      },
      {
        "content": "ohhhh i&#x27;ve always thought the price is incured for the time &quot;the instance is alive&quot;, but it&#x27;s the time &quot;the instance processes our request&quot; isn&#x27;t it?",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675690606723
      },
      {
        "content": "the instance being warmed up isn&#x27;t price incurred to my knowledge, here&#x27;s the cost if u did it every 15 seconds, it took 50ms on a 1gb 1.4ghz instance",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1072139981432303716/1072149110892806224/image.png",
            "name": "image.png",
            "id": "1072149110892806224",
            "size": 20369,
            "url": "https://cdn.discordapp.com/attachments/1072139981432303716/1072149110892806224/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1072139981432303716/1072149110892806224/image.png",
            "height": 414,
            "width": 435,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675690667669
      },
      {
        "content": "basically the cost is nothing, I&#x27;m assuming 0.1mb per call",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675690684404
      },
      {
        "content": "which it wont be",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675690686734
      },
      {
        "content": "although that&#x27;s fitting into my free tier",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675690717680
      },
      {
        "content": "-_- no option to estimate without it",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675690727355
      },
      {
        "content": "okay it&#x27;s about $0.30 a month",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675690785417
      },
      {
        "content": "on just cpu and ram",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675690812701
      },
      {
        "content": "including networking idk $1",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675690817275
      },
      {
        "content": "Any ideas how to avoid the <code>Cannot use import statement outside a module</code> error @bombnp",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675690895545
      },
      {
        "content": "where does this error come from?",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675690948549
      },
      {
        "content": "when deploying to cloud function",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675690958510
      },
      {
        "content": "I&#x27;m getting the error because server.js and Payload uses require() but the config file and others uses import",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675690983008
      },
      {
        "content": "runs fine locally but google hates me",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675690988743
      },
      {
        "content": "I have not deployed to cloud functions yet, only cloud run (which i switched to EC2 because i hated cold start)",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675690998302
      },
      {
        "content": "AWS?",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675691007171
      },
      {
        "content": "why not Google&#x27;s instances?",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675691019339
      },
      {
        "content": "I&#x27;ve always preferred AWS for cloud, I just tried out Cloud Run because it seemed cheap with how it works",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691055998
      },
      {
        "content": "You know that AWS provides Lambda?",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675691075780
      },
      {
        "content": "yea i might try that out too",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691152349
      },
      {
        "content": "not sure if payload goes well with serverless functions like Lambda, since it needs db connection every time it fires, but might be worth trying",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691199295
      },
      {
        "content": "If the db is on the same premises the latency should be relatively similar to running the db locally (ish)",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675691248816
      },
      {
        "content": "so a mongodb running on the same region should be fine",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675691263730
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1072139981432303716/1072151841443430501/image.png",
            "name": "image.png",
            "id": "1072151841443430501",
            "size": 36560,
            "url": "https://cdn.discordapp.com/attachments/1072139981432303716/1072151841443430501/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1072139981432303716/1072151841443430501/image.png",
            "height": 213,
            "width": 698,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675691318681
      },
      {
        "content": "ahh ty",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691370595
      },
      {
        "content": "your cold start shouldn&#x27;t take 20 seconds though, are you building or something everytime?",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675691462720
      },
      {
        "content": "or maybe fetching the dependencies rather than from cache",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675691487518
      },
      {
        "content": "Yea i thought it was off too. Didn&#x27;t really investigate yet because I was very busy with getting all the features up.",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691612416
      },
      {
        "content": "It was a docker image of the entire payload app, with all the admin panel and stuff",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691636304
      },
      {
        "content": "still, it shouldn&#x27;t be long since everything&#x27;s built already",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691644799
      },
      {
        "content": "note: the db is in mongo atlas free tier",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691662410
      },
      {
        "content": "If you&#x27;re fetching the dependencies fresh + building the panel then serving it&#x27;ll take a long time wasting effort on unneeded things",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675691683766
      },
      {
        "content": "nope, it&#x27;s already built inside Dockerfile",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691727073
      },
      {
        "content": "strange",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675691744872
      },
      {
        "content": "@bombnp after some struggle I have a Payload server running on Cloud Functions, on warm-start client sees a ~40-50ms delay. <code>NODE_ENV=development</code> causes massive delays and weirdness, <code>NODE_ENV=production</code> fixes this, just something you might&#x27;ve missed previously :)",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675701353532
      },
      {
        "content": "serverless is... something we have thought a lot about, the 1.6.x release laid the groundwork for some neat things in this space",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675706564181
      },
      {
        "content": "interesting. Thanks! Will keep that in mind while I investigate.",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675710261078
      },
      {
        "content": "cloud run with docker was the simplest to setup. We don&#x27;t need to worry about performance of Payload as long as the frontend (hosted in vercel) is fast. With Payload only being used when revalidating, because this is technically done in the background, we generally don&#x27;t need to worry about computing power of the MongoDB or Payload instance. Our entire stack costs about $3 a month. Cold starts take about 10 seconds to load the dashboard. That&#x27;s a hell of a lot faster than Strapi and even faster than Wordpress",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675798193918
      },
      {
        "content": "when you say 10 seconds cold start, do u mean only to load the dashboard? or does it take 10 seconds to access Payload&#x27;s REST API as well?",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675827477303
      },
      {
        "content": "To load the login page. 10 seconds is an extreme case, it&#x27;s closer to 5 seconds.<br><br>Once logged in Payload runs pretty fast. About a second or so for changes to be saved. If you&#x27;ve ever worked on large Wordpress Projects, you&#x27;ll know that even just 2 seconds to save a page is FAST",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675831962474
      }
    ],
    "messageCount": 47
  },
  {
    "info": {
      "name": "Populate richText internal link with REST API",
      "id": "1076278103489396767",
      "guildId": "967097582721572934",
      "createdAt": 1676675096152
    },
    "messages": [
      {
        "content": "Found a similar question for graphql : <a href=\"https://discord.com/channels/967097582721572934/1037832607292989580\">https://discord.com/channels/967097582721572934/1037832607292989580</a><br><br>Adding  the parameter <code>?depth=5</code> doesn&#x27;t populate the internal link with the linked post, I get this in the response :<br><pre><code class=\"hljs ts\">{\n  <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;link&quot;</span>,\n  <span class=\"hljs-string\">&quot;linkType&quot;</span>: <span class=\"hljs-string\">&quot;internal&quot;</span>,\n  <span class=\"hljs-string\">&quot;doc&quot;</span>: {\n    <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;63bb4f907576e702327e1c29&quot;</span>,\n    <span class=\"hljs-string\">&quot;relationTo&quot;</span>: <span class=\"hljs-string\">&quot;post&quot;</span>\n  },\n  <span class=\"hljs-string\">&quot;newTab&quot;</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-string\">&quot;children&quot;</span>: [\n    {\n      <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;My great text&quot;</span>\n    }\n  ]\n}</code></pre><br><br>Don&#x27;t know if it&#x27;s relevant but my <code>WYSIWYG</code> is inside a <code>tabs</code> field.",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1676675096152
      },
      {
        "content": "do you have open access control to your <code>post</code> collection?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676769747278
      },
      {
        "content": "depth should work out of the box, and it might be access control that&#x27;s tripping you up?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676769755172
      },
      {
        "content": "Everything is public for the read operation.<br>Btw, I&#x27;m using the latest payload version.",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1676770072216
      },
      {
        "content": "If it should work I will try to make a reproduction",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1676770093216
      },
      {
        "content": "@jmikrut I think it&#x27;s a bug from payload, made a ticket on github. <br><a href=\"https://github.com/payloadcms/payload/issues/2134\">https://github.com/payloadcms/payload/issues/2134</a>",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1676821374594
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Missing Payload Config",
      "id": "1071062090334339122",
      "guildId": "967097582721572934",
      "createdAt": 1675431501707
    },
    "messages": [
      {
        "content": "Hi,<br><br>it&#x27;s me again. I still try to get my seed operation going and it throws the error : &quot;&#x27;Error: cannot find Payload config. Please create a configuration file located at the root of your current working directory called &quot;payload.config.js&quot; or &quot;payload.config.ts&quot;.&#x27;).<br><br>I call the function in src/seed.ts where also payload.config resides and my package json goes like this &quot;seed&quot;: &quot;node src/seed.ts&quot;. When I try to prefix the command with &quot;PAYLOAD_CONFIG_PATH=src/payload.config.ts &quot;, it throws the error &quot;Cannot use import statement outside a module&quot;.<br><br>Any help is like always highly appreciated",
        "fileAttachments": [],
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1675431501707
      },
      {
        "content": "hey! try running your file with <code>ts-node src/seed.ts</code>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675432076963
      },
      {
        "content": "That did the trick, thank you very much",
        "fileAttachments": [],
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1675432839959
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Hide options from select",
      "id": "1074911821569458176",
      "guildId": "967097582721572934",
      "createdAt": 1676349349158
    },
    "messages": [
      {
        "content": "is there any way to hide certain &quot;options&quot; from &quot;select &quot; field depending on the user&#x27;s rol?<br><br>for example, i&#x27;d like to display less options for a normal user.",
        "fileAttachments": [],
        "authorID": "629766588492677131",
        "authorName": "LuisLopezlg",
        "authorAvatar": "34c04cc9816e77b82120e46fcb360d69",
        "createdAtDate": 1676349349158
      },
      {
        "content": "This is not possible currently. We have some similar functionality for relationships with a <code>filterOptions</code> function, so this is something we might be able to do in the future.<br><br>Feel free to submit a feature request, so we can discuss/prioritize with everyone.<br><br><a href=\"https://github.com/payloadcms/payload/discussions\">https://github.com/payloadcms/payload/discussions</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677597863095
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "RTE Text Alignment findings & assistance",
      "id": "1070320542537760858",
      "guildId": "967097582721572934",
      "createdAt": 1675254702935
    },
    "messages": [
      {
        "content": "Hey folks, I&#x27;ve been trying to build text alignment into my RTE (like I&#x27;m sure a lot of you have tried to do as well) and I&#x27;m wanting to share some of the stuff I&#x27;ve done so far. Just a disclaimer, this is currently working in a very limited capacity, the UI is glitchy, and the only thing is achieves so far is mutating the target node to have alignment as an option. I have trawled through every CMS project on the Payload Github to identify key areas for developing a custom text alignment element. Here are my findings so far;<br><br>- Text Alignment should be done using an Element rather than a Leaf, this is because leafs alter their child elements directly, whereas Elements affect a block. So if you have a h4 tag with Bold and Underline leaves, you want to add alignment to the entire text block rather than the normal text, bold and underline leaves.<br>- Text Alignment should not be treated as a unique element, it is an extension of the current node. According to this post - <a href=\"https://news.ycombinator.com/item?id=14127632\">https://news.ycombinator.com/item?id=14127632</a> - the author of Slate states that you should add custom data to the nodes, rather than setting the &#x27;type&#x27; property of the node (like what happens currently when applying h1, h2, h3...)<br>- When attempting to use Slatejs or Slate-react directly inside Element or Button code, YOU DO NOT NEED TO NPM INSTALL THESE PACKAGES. Instead, using the version used by payload. These packages can be accessed from <code>payload/node_modules/slate</code> and <code>payload/node_modules/slate-react</code>",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675254702935
      },
      {
        "content": "And now, my code;<br><br><pre><code class=\"hljs\">import React, { useCallback } from &#x27;react&#x27;;\nimport { ElementButton } from &#x27;payload/components/rich-text&#x27;;\nimport { useSlate, ReactEditor } from &#x27;payload/node_modules/slate-react&#x27;\nimport { Transforms, Editor, Element as SlateElement } from &#x27;payload/node_modules/slate&#x27;\nimport { IconAlignCenter, IconAlignLeft, IconAlignRight } from &#x27;../Icons&#x27;;\n\nconst TEXT_ALIGN_TYPES = [&#x27;left&#x27;, &#x27;center&#x27;, &#x27;right&#x27;]\n\ntype AlignmentNode = Partial&lt;SlateElement &amp;\n{\n    align?: typeof TEXT_ALIGN_TYPES,\n    type: string\n}&gt;\n\nconst addAlignment = (editor, format) =&gt; {\n\n    let targetNode: AlignmentNode = undefined;\n\n    Transforms.unwrapNodes(editor, {\n        match: n =&gt; {\n            var match = !Editor.isEditor(n) &amp;&amp;\n                SlateElement.isElement(n) &amp;&amp;\n                !TEXT_ALIGN_TYPES.includes(format)\n\n            if (match) {\n                targetNode = n as AlignmentNode;\n                return true;\n            }\n            return false;\n        },\n        split: true,\n    })\n\n    let newProperties: AlignmentNode = targetNode\n\n    newProperties = {\n        align: format,\n    }\n\n    Transforms.setNodes&lt;SlateElement&gt;(editor, newProperties)\n\n    ReactEditor.focus(editor);\n};\n\nconst Button: React.FC&lt;{ path: string }&gt; = () =&gt; {\n\n    const editor = useSlate();\n\n    return (&lt;&gt;\n        &lt;ElementButton onClick={useCallback(() =&gt; addAlignment(editor, &#x27;left&#x27;), [editor])}\n            tooltip=&#x27;left&#x27;\n            format=&#x27;left&#x27;\n        &gt;\n            &lt;IconAlignLeft /&gt;\n        &lt;/ElementButton&gt;\n\n        &lt;ElementButton onClick={useCallback(() =&gt; addAlignment(editor, &#x27;center&#x27;), [editor])}\n            tooltip=&#x27;center&#x27;\n            format=&#x27;center&#x27;\n        &gt;\n            &lt;IconAlignCenter /&gt;\n        &lt;/ElementButton&gt;\n\n        &lt;ElementButton onClick={useCallback(() =&gt; addAlignment(editor, &#x27;right&#x27;), [editor])}\n            tooltip=&#x27;right&#x27;\n            format=&#x27;right&#x27;\n        &gt;\n            &lt;IconAlignRight /&gt;\n        &lt;/ElementButton&gt;\n    &lt;/&gt;\n    );\n}\n\nexport default Button</code></pre>",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675254722804
      },
      {
        "content": "- Does this work?<br><br> Yeeeeaahhmmhmm... It works in such a way that it adds a custom node to the top level element. It adds an alignment field when it&#x27;s applied; either left, right, or center. It doesn&#x27;t actually change anything in the Editor UI as for some reason the element re-render doesn&#x27;t seem to get triggered. Because it doesn&#x27;t re-trigger, I am unable to actually make changes to way the text is displayed on the editor. HOWEVER, rest assured that the change has actually happened, so json object passed to your website front-end WILL show this change (big win). Obviously this isn&#x27;t workable from a general user perspective as the UI appears to be unresponsive in Payload. But it&#x27;s a start!<br><br>So guys, I have a baseline. Who wants to help improve it so we can actually show this in the Payload UI?",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675254727231
      },
      {
        "content": "Hey Mark - this is certainly something that should be on our roadmap if it isn&#x27;t already. I&#x27;ll get some more answers on this one for you shortly. Stay tuned!",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1675701792869
      },
      {
        "content": "No worries @zubricks 🙂 I saw that 1.6 released with a new toggleElement function, that might be the thing that solves the button toggle issue. If that&#x27;s the case I&#x27;ll share the updated code",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675798450257
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Localised description not showing",
      "id": "1071060757833339062",
      "guildId": "967097582721572934",
      "createdAt": 1675431184014
    },
    "messages": [
      {
        "content": "Hello. I have setup locales in my payload config<br><br><pre><code class=\"hljs\">  localization: {\n    locales: [&#x27;en&#x27;, &#x27;es&#x27;],\n    defaultLocale: &#x27;en&#x27;,\n    fallback: true,\n  },</code></pre><br><br>And in one of my select fields I have set the following<br><br><pre><code class=\"hljs\">admin: {\n        description: {\n          en: &#x27;The primary variant is full-width with a yellow background. The secondary variant is constrained to the grid with a black background&#x27;,\n          es: &#x27;La variante primaria ocupa todo el ancho y tiene fondo amarillo. La variante secundaria esta restringido por la cuadrícula y tiene fondo negro.&#x27;,\n        },\n      },</code></pre><br><br>However, when switching to <code>es</code> in the admin panel, the description continues to show in English",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675431184014
      },
      {
        "content": "The field also has <code>localized: true,</code>",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675431325789
      },
      {
        "content": "I noticed the docs don&#x27;t cover descriptions as objects, but it&#x27;s a valid type of Record&lt;string, string&gt;",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675432916782
      },
      {
        "content": "Perhaps this isn&#x27;t the correct way to localise descriptions",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675432925103
      },
      {
        "content": "So there are two language selections:<br>1. The locale to edit the content in<br>2. The language set on the editors account<br><br>The description relies on the <em>language</em> the editor has set from their account page",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675437311019
      },
      {
        "content": "Got it!",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675437568428
      },
      {
        "content": "Was switching the content editing not the language preference, thanks",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675437583147
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Transpile ESM only package",
      "id": "1077933544573239407",
      "guildId": "967097582721572934",
      "createdAt": 1677069784063
    },
    "messages": [
      {
        "content": "Has anyone transpiled ESM-only package to cjs to use in PayloadCMS?<br><br>I need suggestions how to implement this thing. Thank you in advance.",
        "fileAttachments": [],
        "authorID": "946373741175267329",
        "authorName": "rrums",
        "authorAvatar": "6a019fb818dd1274398027f152b5294b",
        "createdAtDate": 1677069784063
      },
      {
        "content": "I&#x27;ve tried rollup, but seems cant work, I got <code>window is not defined</code> on the package when build",
        "fileAttachments": [],
        "authorID": "946373741175267329",
        "authorName": "rrums",
        "authorAvatar": "6a019fb818dd1274398027f152b5294b",
        "createdAtDate": 1677069853291
      },
      {
        "content": "I have tried to combine Payload with Astro and came across the same issue",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677071603860
      },
      {
        "content": "Trying to integrate the Lit components, same issue after building Lit component from ESM to CJS. Not sure if it will work, but in compiled CJS code to create condition not to use window if it is not available?",
        "fileAttachments": [],
        "authorID": "715553367547707473",
        "authorName": "vladi",
        "authorAvatar": "2dbf611240f41b12c9c03eec9ddf2d5a",
        "createdAtDate": 1677072054323
      },
      {
        "content": "@rrums Does it work better if Rollup outputs UMD instead of CJS?<br><br>Another suggestion: if you are using <code>window</code> variable to access global scope and it must work in back-end (Node.js) and front-end (Browser)  try using <code>globalThis</code> instead.",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1677078535670
      },
      {
        "content": "@Jesse Sivonen <code>window</code> variable is in compiled CJS, just tried UMD output. But still the same.<br><br>Error:<br><pre><code class=\"hljs\">/path/Sites/payload/build/lit.js:5\n})(this, (function (exports) { &#x27;use strict&#x27;;\n  ^\nReferenceError: window is not defined\n    at /path/Sites/payload/build/lit.js:12:12\n    at /path/Sites/payload/build/lit.js:2:65\n    at Object.&lt;anonymous&gt; (/path/Sites/payload/build/lit.js:5:3)\n    at Module._compile (node:internal/modules/cjs/loader:1155:14)\n    at Module.m._compile (/path/Sites/payload/node_modules/ts-node/src/index.ts:1056:23)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1209:10)\n    at Object.require.extensions.&lt;computed&gt; [as .js] (/path/Sites/payload/node_modules/ts-node/src/index.ts:1059:12)\n    at Module.load (node:internal/modules/cjs/loader:1033:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:868:12)\n    at Module.require (node:internal/modules/cjs/loader:1057:19)</code></pre>",
        "fileAttachments": [],
        "authorID": "946373741175267329",
        "authorName": "rrums",
        "authorAvatar": "6a019fb818dd1274398027f152b5294b",
        "createdAtDate": 1677079336686
      },
      {
        "content": "@rrums Aa, I see. You can to import it only to front-end, maybe using dynamic import.  Or try to replace window with globalThis using @rollup/plugin-replace: <a href=\"https://github.com/rollup/plugins/tree/master/packages/replace\">https://github.com/rollup/plugins/tree/master/packages/replace</a>",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1677081458844
      },
      {
        "content": "@Jesse Sivonen I&#x27;m trying to implement lit+react to swap payload component or for ui field. I think payload do SSR in this case.<br><br>Tried to replace window with globalThis, then got another one, <code>HTMLelement is not defined</code>",
        "fileAttachments": [],
        "authorID": "946373741175267329",
        "authorName": "rrums",
        "authorAvatar": "6a019fb818dd1274398027f152b5294b",
        "createdAtDate": 1677083157511
      },
      {
        "content": "use <code>rollup</code> along with <code>@rollup/plugin-node-resolve</code> and set <code>exportConditions</code> to <code>node</code> solve my problem",
        "fileAttachments": [],
        "authorID": "946373741175267329",
        "authorName": "rrums",
        "authorAvatar": "6a019fb818dd1274398027f152b5294b",
        "createdAtDate": 1677217999879
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "Issue with preview",
      "id": "1063306442234404885",
      "guildId": "967097582721572934",
      "createdAt": 1673582411107
    },
    "messages": [
      {
        "content": "Lets say you have Payload on port 8000 and a NextJS site on port 3000. The end goal is to get preview working for a &quot;pages&quot; collection. What would you add for the preview function? I know that the docs outline a function here: <a href=\"https://payloadcms.com/docs/configuration/collections#preview\">https://payloadcms.com/docs/configuration/collections#preview</a> but it doesn&#x27;t work for me in this case. How do you handle preview when Payload&#x27;s backend on a separate server from it&#x27;s frontend?",
        "fileAttachments": [],
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1673582411107
      },
      {
        "content": "Hi @samtietjen, the payload website does exactly what you&#x27;re looking for (has the backend / frontend on different servers and uses the preview feature) and would be a good example for you. Take a look at how we do it here: <a href=\"https://github.com/payloadcms/website-cms/blob/f44cc077dfd85d3e3941df39b6ce13f4baee7fb4/src/utilities/formatPreviewURL.ts#L3\">https://github.com/payloadcms/website-cms/blob/f44cc077dfd85d3e3941df39b6ce13f4baee7fb4/src/utilities/formatPreviewURL.ts#L3</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1673603681707
      },
      {
        "content": "Thanks for the reply! This is exactly what I was referencing. process.env.PAYLOAD_PUBLIC_APP_URL would be localhost:8000 right? If I do that then I get a &quot;cannot get&quot;. If I do 3000 (Next) it 404s me. I did notice the following commits <a href=\"https://github.com/payloadcms/website/search?q=preview&amp;type=commits\">https://github.com/payloadcms/website/search?q=preview&amp;type=commits</a>. This made sense because I didn&#x27;t have anything configured in Next for preview; however, looking at the site&#x27;s current front end all of this was removed and the word preview isn&#x27;t found anywhere in the source code.<br><br>Still a newbie to Payload, so I appreciate your help!",
        "fileAttachments": [],
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1673617638687
      },
      {
        "content": "Wow that is because it is broken on our site oh dear 😂",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1673636546892
      },
      {
        "content": "You definitely need a preview API route (pages/api/preview.tsx) that should be your missing piece. The nextjs docs will help here: <a href=\"https://nextjs.org/docs/advanced-features/preview-mode\">https://nextjs.org/docs/advanced-features/preview-mode</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1673636761970
      },
      {
        "content": "Ahhhh, that makes me feel less crazy! Thank you! I&#x27;m guessing those old commits I sent you probably work for reference. Think this&#x27;ll be documented in the future?",
        "fileAttachments": [],
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1673658586480
      },
      {
        "content": "@samtietjen the &quot;preview&quot; button in Payload is just meant to point to your front-end, whatever it might be. In our case we tied it into Next&#x27;s preview so we could view drafts—but this is all extra. We&#x27;ve since migrated to Next 13&#x27;s <code>app</code> directory which did not support preview or ISR at the time although we left our code in place.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673710846618
      },
      {
        "content": "Was just chatting on GitHub discussions about this. Makes more sense now. So preview is really just the ability to add a button to your admin UI that can generate a URL. It’s up to you to do the rest. In the case of the Payload website it’s more of a “draft view”.",
        "fileAttachments": [],
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1673711306878
      },
      {
        "content": "Spot on",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673711373150
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/tree/master/examples/preview\">https://github.com/payloadcms/payload/tree/master/examples/preview</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676490538598
      },
      {
        "content": "Just merged in a preview example if you wanna take a look! It includes an example Next.js app running on the <em>pages</em> directory.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676490593745
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "Collection not being shown in admin panel",
      "id": "1075062125875175586",
      "guildId": "967097582721572934",
      "createdAt": 1676385184497
    },
    "messages": [
      {
        "content": "Hi all, something very strange in my production deployment. When I try to view a collection in the admin panel none is being displayed and I see this error message. Any pointer or ideas to what might be the issue?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1075062125875175586/1075062126277840977/image.png",
            "name": "image.png",
            "id": "1075062126277840977",
            "size": 445339,
            "url": "https://cdn.discordapp.com/attachments/1075062125875175586/1075062126277840977/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1075062125875175586/1075062126277840977/image.png",
            "height": 790,
            "width": 2880,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676385184497
      },
      {
        "content": "Oh, wait, what Payload version are you on?",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676386606738
      },
      {
        "content": "toObjectId was used in an older version that is not compatible with some mongo &quot;compliant&quot; hosting options like documentDB and azure cosmos db",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676386652439
      },
      {
        "content": "those implementations are missing a bunch of aggregates so we re-wrote them. That error should go away when you upgrade Payload to latest.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676386691309
      },
      {
        "content": "&quot;payload&quot;: &quot;^1.5.9&quot;,",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676390752497
      },
      {
        "content": "mongodb",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676390756674
      },
      {
        "content": "db hosted by us",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676390768200
      },
      {
        "content": "the admin tries to fetch the following url: serverurl/api/home-pages?locale=en&amp;depth=0&amp;draft=true",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676390813465
      },
      {
        "content": "if we remove the draft=true, it works but the admin sends draft=true",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676390838450
      },
      {
        "content": "this is the error we&#x27;re getting if we take the url and try to fetch it via the browser url field:",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676390877766
      },
      {
        "content": "{<br>&quot;errors&quot;: [<br>{<br>&quot;message&quot;: &quot;Unrecognized expression &#x27;$toObjectId&#x27;&quot;<br>}<br>]<br>}",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676390878576
      },
      {
        "content": "There were a lot of changes to versions since 1.5.9 so you&#x27;re going to want to upgrade. I&#x27;m pretty certain that will solve this for you.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676395431835
      },
      {
        "content": "There were some breaking changes and a migration script will be needed if you have data on versioned collections already",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676395446468
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-breaking-changes\">https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-breaking-changes</a>",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676395516323
      },
      {
        "content": "Hi Dan, we had an old version of mongodb, once we upgraded it worked. I will take your advice and upgrade to the latest payload version. many thanks for your help!",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676552104810
      }
    ],
    "messageCount": 14
  },
  {
    "info": {
      "name": "CUstom SCSS file not working",
      "id": "1047441931426345062",
      "guildId": "967097582721572934",
      "createdAt": 1669800016982
    },
    "messages": [
      {
        "content": "instead of /home/src/assets/css.scss",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669800932596
      },
      {
        "content": "Still isn&#x27;t adding the file to the page",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669805690051
      },
      {
        "content": "So left it at src/assets/css.scss. But this is my page structure<br><br><pre><code class=\"hljs html\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">HTML</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">http-equiv</span>=<span class=\"hljs-string\">&quot;Content-Type&quot;</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;text/html; charset=UTF-8&quot;</span> /&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;viewport&quot;</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;width=device-width, initial-scale=1, user-scalable=no&quot;</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">defer</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/admin/main.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;app&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;portal&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></code></pre>",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669805728412
      },
      {
        "content": "oh i forgot config file is within src, try just doing assets/css.scss",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669805951714
      },
      {
        "content": "Still nothing, hmm.<br>THe directory and file are present in the src folder also so they defo exist",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806016057
      },
      {
        "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> { buildConfig } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload/config&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> path <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;path&#x27;</span>;\n<span class=\"hljs-comment\">// import Examples from &#x27;./collections/Examples&#x27;;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Users</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./collections/Users&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">buildConfig</span>({\n  <span class=\"hljs-attr\">serverURL</span>: <span class=\"hljs-string\">&#x27;http://localhost:3000&#x27;</span>,\n  <span class=\"hljs-attr\">admin</span>: {\n    <span class=\"hljs-attr\">user</span>: <span class=\"hljs-title class_\">Users</span>.<span class=\"hljs-property\">slug</span>,\n    <span class=\"hljs-attr\">css</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&#x27;assets/app.scss&#x27;</span>),\n  },\n  <span class=\"hljs-attr\">collections</span>: [\n    <span class=\"hljs-title class_\">Users</span>,\n    <span class=\"hljs-comment\">// Add Collections here</span>\n    <span class=\"hljs-comment\">// Examples,</span>\n  ],\n  <span class=\"hljs-attr\">typescript</span>: {\n    <span class=\"hljs-attr\">outputFile</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&#x27;payload-types.ts&#x27;</span>),\n  },\n  <span class=\"hljs-attr\">graphQL</span>: {\n    <span class=\"hljs-attr\">schemaOutputFile</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&#x27;generated-schema.graphql&#x27;</span>),\n  },\n});</code></pre><br><br>This is the full payload.config.ts",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806051136
      },
      {
        "content": "Then this is the file structure",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1047441931426345062/1047467342432583680/image.png",
            "name": "image.png",
            "id": "1047467342432583680",
            "size": 102460,
            "url": "https://cdn.discordapp.com/attachments/1047441931426345062/1047467342432583680/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1047441931426345062/1047467342432583680/image.png",
            "height": 649,
            "width": 329,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806075508
      },
      {
        "content": "if you do yarn build does the scss file show up in dist?",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669806107151
      },
      {
        "content": "yeah",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806161152
      },
      {
        "content": "what are you doing to check if hte scss file is working?",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669806188602
      },
      {
        "content": "Just some simple css to modify colours on the page.",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806205307
      },
      {
        "content": "Trying to modify the colour of the class on the breadcrumbs span",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806330372
      },
      {
        "content": "if you look in chrome dev console are you able to see if they styles just got overridden or smth?",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669806350157
      },
      {
        "content": "Doesn&#x27;t pick up any styling I&#x27;ve added. Only references the index.scss which assuming is just the default",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806409483
      },
      {
        "content": "well it probably gets compiled into 1 css file with webpack",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669806454188
      },
      {
        "content": "That would make sense, but just isn&#x27;t picking it up",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806490625
      },
      {
        "content": "not able to reproduce it",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669806764633
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1047441931426345062/1047470314675781732/image.png",
            "name": "image.png",
            "id": "1047470314675781732",
            "size": 332033,
            "url": "https://cdn.discordapp.com/attachments/1047441931426345062/1047470314675781732/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1047441931426345062/1047470314675781732/image.png",
            "height": 960,
            "width": 3802,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669806784153
      },
      {
        "content": "<pre><code class=\"hljs\">  admin: {\n    user: Users.slug,\n    css: path.join(__dirname, &#x27;assets/styles.scss&#x27;),\n  },</code></pre>",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669806820085
      },
      {
        "content": "This is very strange",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807324283
      },
      {
        "content": "ya like it should just work",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807337579
      },
      {
        "content": "Ive created the blank typescript template from npx create-payload-app so nothing I&#x27;ve done thats different",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807361959
      },
      {
        "content": "whats in your app.scss",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807374785
      },
      {
        "content": "Ive changed the name and input to match what you used, so body background red and filename styles",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807399778
      },
      {
        "content": "try incognito?",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807419558
      },
      {
        "content": "maybe its an extension",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807422932
      },
      {
        "content": "or cache",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807424280
      },
      {
        "content": "Nope, not cached",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807486223
      },
      {
        "content": "I be confusion",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807490925
      },
      {
        "content": "ya not a clue, what os are you on?",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807572016
      },
      {
        "content": "linux",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807729056
      },
      {
        "content": "maybe try a backslash? your using path so it shouldn&#x27;t matter but we looking at longshots here",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807779689
      },
      {
        "content": "backslash breaks the string",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807955270
      },
      {
        "content": "you would need a double backslash so <code>assets\\\\styles.scss</code>",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807971188
      },
      {
        "content": "Nope :/",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807998969
      },
      {
        "content": "ya not sure",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669808005276
      },
      {
        "content": "could you send me your styles.scss",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669808010381
      },
      {
        "content": "Got it working on a different project, so wonder if setup with the cli has something that I&#x27;ve missed?",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669808963126
      },
      {
        "content": "A fellow colleague has re-created it.<br><br>So with npx create-payload-app, setup a blank typescript project then attempt it, it doesnt work",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669809274111
      },
      {
        "content": "really?",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669809795255
      },
      {
        "content": "all i did was <code>npx create-payload-app</code> spammed enter added styles.scss and the admin config and it worked",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669809823125
      },
      {
        "content": "what node version?",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669809851651
      },
      {
        "content": "16.13.1",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669810341500
      },
      {
        "content": "and npx v9.1.2",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669810352634
      },
      {
        "content": "So turns out caching does work for blank projects, must just be a one off bug",
        "fileAttachments": [],
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669818802392
      },
      {
        "content": "I just hit this same issue. What did you do to resolve it @Jamie Cee ? I&#x27;m running Payload inside a Docker container, so I&#x27;m not sure if there&#x27;s something else going on there.",
        "fileAttachments": [],
        "authorID": "423902407294976000",
        "authorName": "digi",
        "authorAvatar": "7aa4757c25d99e9032a59a3c68101ec6",
        "createdAtDate": 1669912216894
      },
      {
        "content": "Running the project outside of Docker seems to work fine",
        "fileAttachments": [],
        "authorID": "423902407294976000",
        "authorName": "digi",
        "authorAvatar": "7aa4757c25d99e9032a59a3c68101ec6",
        "createdAtDate": 1669912286502
      },
      {
        "content": "Ah, docker is running <code>serve</code> instead of <code>dev</code>",
        "fileAttachments": [],
        "authorID": "423902407294976000",
        "authorName": "digi",
        "authorAvatar": "7aa4757c25d99e9032a59a3c68101ec6",
        "createdAtDate": 1669912410035
      },
      {
        "content": "Just reinstall your node_modules",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1670980100400
      },
      {
        "content": "More specifically: <br><code>rm -Rf node_modules/.cache</code>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1676406812279
      }
    ],
    "messageCount": 53
  },
  {
    "info": {
      "name": "How to add justify, left, center and right to text inside RichText?",
      "id": "1075209037647446137",
      "guildId": "967097582721572934",
      "createdAt": 1676420210993
    },
    "messages": [
      {
        "content": "I want to position my text inside richtext, how do I do that? I checked the types of richtext elements and I do not see any type for these.",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676420210993
      },
      {
        "content": "Hi @johnmadrigal_! This is currently not implemented into Payload&#x27;s core but it is on our radar and part of our roadmap! You can see that here: <a href=\"https://github.com/payloadcms/payload/discussions/1218\">https://github.com/payloadcms/payload/discussions/1218</a><br><br>You can definitely build this yourself if you&#x27;d like but we believe it should be a core feature - here is an example of this feature shown by SlateJS:<br><a href=\"https://www.slatejs.org/examples/richtext\">https://www.slatejs.org/examples/richtext</a><br><br>And the code for the above example:<br><a href=\"https://github.com/ianstormtaylor/slate/blob/main/site/examples/richtext.tsx\">https://github.com/ianstormtaylor/slate/blob/main/site/examples/richtext.tsx</a><br><br>Lat me know if you have any other questions!",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1676913267563
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Message Queue",
      "id": "1060981012626161784",
      "guildId": "967097582721572934",
      "createdAt": 1673027985484
    },
    "messages": [
      {
        "content": "Any advice about adding a message queue for tasks like sending emails and other functions there can run later?",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1673027985484
      },
      {
        "content": "I have some thoughts on this. Making your hooks run async is a great start to not need to manage work in a queue. That said if you still do you can add any library you need to. Hell, you could even make a collection for <strong>Tasks</strong> and run a cron job on your server that:<br>1) Uses the local API to query for new &quot;tasks&quot;<br>2) Calls the function associated with each kind of job<br>3) Updates the task with a complated timestamp, or increments a failed counter (typical queue workers will have a max failed attempts setting)",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675438749241
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Where does admin/collections/pages get page list from?",
      "id": "1075255773178900570",
      "guildId": "967097582721572934",
      "createdAt": 1676431353612
    },
    "messages": [
      {
        "content": "I deleted a page manually through mongo shell and page itself was deleted successfully but somehow admin/collections/pages still show the deleted page on the list. Is there any cache I can delete? or where does admin/collections/pages looking? Thanks is advance!",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1075255773178900570/1075255773342466068/Group.jpg",
            "name": "Group.jpg",
            "id": "1075255773342466068",
            "size": 52741,
            "url": "https://cdn.discordapp.com/attachments/1075255773178900570/1075255773342466068/Group.jpg",
            "proxyURL": "https://media.discordapp.net/attachments/1075255773178900570/1075255773342466068/Group.jpg",
            "height": 427,
            "width": 1115,
            "contentType": "image/jpeg",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "478284978610896926",
        "authorName": "kouohhashi",
        "authorAvatar": "16e98dd652c9a6090ce554f5f9f8bc13",
        "createdAtDate": 1676431353612
      },
      {
        "content": "I deleted a record from _pages_versions collection and it&#x27;s gone now. thanks!",
        "fileAttachments": [],
        "authorID": "478284978610896926",
        "authorName": "kouohhashi",
        "authorAvatar": "16e98dd652c9a6090ce554f5f9f8bc13",
        "createdAtDate": 1676432850878
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "New User! How exactly do I rename my media files upon upload?",
      "id": "1073494188647264297",
      "guildId": "967097582721572934",
      "createdAt": 1676011359131
    },
    "messages": [
      {
        "content": "I am unable to efficiently search for the images I need because they&#x27;re all named &quot;Image X-X-X&quot; <br>I&#x27;ve  attempted to search by alt in the CMS, but it doesn&#x27;t  work with relationships likely because it&#x27;s using the reference ID. Any ideas?  Code below<br><br>const podcastMedia: CollectionConfig = {<br>  slug: &quot;podcast-media&quot;,<br>  admin: {<br>    useAsTitle: &quot;alt&quot;,<br>  },<br>  upload: {<br>    staticURL: &quot;/media/podcast&quot;,<br>    staticDir: &quot;media/podcast&quot;,<br>    imageSizes: [<br>      {<br>        name: &quot;card&quot;,<br>        width: 640,<br>        height: 480,<br>      },<br>    ],<br>  },<br>  fields: [<br>    {<br>      name: &quot;alt&quot;,<br>      type: &quot;relationship&quot;,<br>      relationTo: &quot;podcasts&quot;,<br>      required: true,<br>    },<br>  ],<br>};",
        "fileAttachments": [],
        "authorID": "1030998989736247306",
        "authorName": "Serry",
        "authorAvatar": null,
        "createdAtDate": 1676011359131
      },
      {
        "content": "what does your query look like? You can use dot notation to query on nested fields inside a relationship field. <br><br>i.e. api/podcast-media?where[alt.podcast-field-name][equals]=some-value",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676035443166
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Can you explain the benefits of so much granularity of data?",
      "id": "1075956342537330718",
      "guildId": "967097582721572934",
      "createdAt": 1676598382363
    },
    "messages": [
      {
        "content": "Can someone kindly enlighten me about the benefits of a system with so much granularity, when it comes to the data? I&#x27;m not use to seeing JSON right down to a p tag, a ul tag, then an li tag with a bunch of children etc. I know it was suggested this is a pro (vs a con) versus other similar CMS, this on one of the videos I watched (if I remember correctly), but I&#x27;m trying to understand how to manage it, without it become unwieldy on the frontend; I&#x27;m not implying it is or isn&#x27;t, just that it&#x27;s new to me and new things take time to understand; time to see them as a benefit versus a lot more work; how such things should be best used, or in this case, how to best consume it on the frontend etc.",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676598382363
      },
      {
        "content": "Admittedly, I may have to get use to a managing more complex data structures, but a simple Post structure kind of &quot;overwhelmed&quot; me lol",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1075956342537330718/1075957644390563920/post.json",
            "name": "post.json",
            "id": "1075957644390563920",
            "size": 8635,
            "url": "https://cdn.discordapp.com/attachments/1075956342537330718/1075957644390563920/post.json",
            "proxyURL": "https://media.discordapp.net/attachments/1075956342537330718/1075957644390563920/post.json",
            "height": null,
            "width": null,
            "contentType": "application/json; charset=utf-8",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676598692842
      },
      {
        "content": "You can see here how we use a serialize function to consume the rich text and output it. The reason we use rich text is because it allows us to do things like, embed documents and other custom elements directly into the rich text editor.<br><br>In the example, ignore the customRenderers for now and just look at the serialize function, it calls itself recursively to loop over all nodes in the json tree.<br><br><a href=\"https://github.com/payloadcms/website/blob/main/src/components/RichText/index.tsx\">https://github.com/payloadcms/website/blob/main/src/components/RichText/index.tsx</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676602467799
      },
      {
        "content": "@Jarrod thanks for sharing! Okay, I see what you&#x27;re doing here: <a href=\"https://github.com/payloadcms/website/blob/main/src/components/RichText/Serialize/index.tsx\">https://github.com/payloadcms/website/blob/main/src/components/RichText/Serialize/index.tsx</a>",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676604462216
      },
      {
        "content": "The granularity is because not all mediums that might consume the content are websites. <br><br>Content modelling in headless for true omnichannel delivery needs a completely different approach and mental model. <br><br>For example, voice assistants, printers, meta verse, etc. have no use for html. <br><br>Native app UIs can use the RichText json to natively render the content rather than relying on buggy web views, etc.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676619299474
      },
      {
        "content": "That and it allows you to actually process the data better if you need to, rather than have to try and read long strings of HTML (or alternatives)",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676619674247
      },
      {
        "content": "I love the granularity",
        "fileAttachments": [],
        "authorID": "714771241063546970",
        "authorName": "klauss",
        "authorAvatar": "584dc50d65913cccc1676e6cbc6655e9",
        "createdAtDate": 1676648294868
      },
      {
        "content": "Ah okay, makes sense.",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676737030985
      },
      {
        "content": "Thanks for sharing everyone 😀",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676737093589
      },
      {
        "content": "@Jarrod @Kyr @noheadphones @klauss is it possible to have granularity for the times one needs it or something more simple for those times when one doesn&#x27;t need it? For example, say I just want to get back a few fields with their key being the name of the field (that I&#x27;ve assigned to it) and the value being the value of the field and nothing more. Is that possible with Payload?",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676741438970
      },
      {
        "content": "Sounds like youre describing graphql?",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676741481998
      },
      {
        "content": "Yes... just make a field of a different type. text, number, etc.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676741492910
      },
      {
        "content": "Is the granularity more of a RichText specific thing?",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676741527858
      },
      {
        "content": "Possibly, but even that seems like an extra layer of complexity in my mind.",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676741617232
      },
      {
        "content": "It is. The richText field splits all the elements into JSON ... most good headless CMS do this in one way or another.<br><br>If you need what I would call &quot;structured content&quot; (i.e. plain data rather than rich text) then just use normal fields.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676741825631
      },
      {
        "content": "Ah okay, maybe that&#x27;s where the disconnect was coming from. Structured content, yes, that&#x27;s more of what I was looking for.",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676741876964
      },
      {
        "content": "Each field you define on your collection of global will return as <code>{ fieldName: fieldValue }</code> ... i.e. a normal <code>&#x27;text&#x27;</code> field might be <code>{ title: &#x27;My awesome title&#x27; }</code><br><br>The richText field type is just the value as a JSON object that describes the rich text data in a way that is easier to programmatically process then HTML is.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676741999305
      },
      {
        "content": "Great, makes more sense now. Appreciate everyone&#x27;s help!",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676742082998
      }
    ],
    "messageCount": 17
  },
  {
    "info": {
      "name": "Setting up magic link with payload auth",
      "id": "1073356002101035108",
      "guildId": "967097582721572934",
      "createdAt": 1675978412891
    },
    "messages": [
      {
        "content": "I am running into an issue with integrating <a href=\"https://magic.link/\">https://magic.link/</a> with payloads custom auth strategy. I was able to add the strategy and trigger the e-mail magic link flow. <br><br>To get it to work I have to configure the webpack server alias,  set <code>disableLocalStrategy: true,</code> on the collection and then create a custom <code>/login</code> endpoint for the collection. Everything is flowing correctly <br><br>but whenever I try to either <code>payload.create</code> or <code>payload.login</code> with the required fields, I get the type error <code>Model.findByUsername is not a function</code> other functions like <code>payload.find</code> work as expected.<br><br>The goal at this point is based on the lookup to either<br>A. create a new user and have it set access token/cookie etc..<br>or B. login the user and set the access token/cookie etc...<br><br>Any insight into why this error could be happening?",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1675978412891
      },
      {
        "content": "Is this issue caused because I disabled the local strategy?<br><br>If so I can create and login users through the custom strategy",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1675980089346
      },
      {
        "content": "So looking at the DB it looks like the user <em>is created</em> on <code>payload.create</code> but the server still throws this error hmm",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1675983460426
      },
      {
        "content": "The issue self resolved for create but not login. Likely won’t work anyway because it also expects a password and that does not get generated with magic. <br><br>Based on this discussion, I’m not sure how likely / worth it is to continue down this path <br><br><a href=\"https://github.com/payloadcms/payload/discussions/1555#discussioncomment-4276115\">https://github.com/payloadcms/payload/discussions/1555#discussioncomment-4276115</a><br><br>Will probably abandon it for the built in Auth. I don’t want to have to manage creating the token, lifecycle, refreshing etc… <br><br>I want to ideally just layer magic on top of payloads Auth and only use payload for the portions that magic couldn’t do ie generating and managing tokens after I determine if it’s a valid login or sign up",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1676004315465
      },
      {
        "content": "Hmm I think I actually got it... I can login and see the admin...working but i&#x27;m nervous that it&#x27;ll break down the line when I add other collections/access",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1676049069424
      },
      {
        "content": "For future reference, based on what I can tell/learned<br><br>If you’re going the set your own strategy route, specifically magic link. Some of the below is expended further in various docs, discord and GitHub threads. <br><br>1. Server code needs to be in its own file and aliased by webpack, not the package but the file  itself.<br>2. On the collection that is being used to auth the admin panel, pass in the passport strategy as documented by payload<br>3. Set <code>disableLocalStrategy= true</code> <strong>This turns off all payload Auth functionality for that collection (login etc…)</strong><br>4. Using the endpoints property on the collection you can create a custom route. For example you can recreate /login <br>5. On the UI pass in a custom component using before or after dashboard. This component should be the form to post login/sign up info to your route. <br>6. Order of operations are <br>     - your strategy function is called. whatever is returned will be accessible by the endpoint route<br>     - endpoint api route is called in req.user there is the data previously returned by the strategy.<br>7. In the endpoint api route you can access your payload instance to do look ups, create etc<br>    - for example… for login, I do a lookup based on email… since it’s password less flow (magic link)<br>8. Then create the session yourself using a JWT. The shape of the cookie needs to be an object with the fields collection, e-mail and payload ID set as a httponly. The discussion I linked about has useful sudo code. You also have to set res.user to have the same object as the cookie.<br>9. The cookie name must be the same payload expects. The payload instance has the prefix -&gt; <code>${payload.config.cookiePrefix}-token</code><br>10. Visit admin and 🚀 <br><br>Lastly remember to recreate logout, refresh, etc… for your cookie synced with your strategy provider",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1676053811432
      },
      {
        "content": "Setting up magic link with payload auth",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1676053858260
      },
      {
        "content": "hey @damnstaychill do you have a example repository for the final implementation?",
        "fileAttachments": [],
        "authorID": "770657092800741377",
        "authorName": "tomsvogel",
        "authorAvatar": "033a54556e448758a1bb8eb77e9d9105",
        "createdAtDate": 1677246477659
      },
      {
        "content": "Yeah let me share something this afternoon when I have a minute",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1677257440664
      },
      {
        "content": "that would be very nice, thanks.",
        "fileAttachments": [],
        "authorID": "770657092800741377",
        "authorName": "tomsvogel",
        "authorAvatar": "033a54556e448758a1bb8eb77e9d9105",
        "createdAtDate": 1677430202283
      },
      {
        "content": "@tomsvogel  this is an example repo, just change the name of example.env to .env and provide those values",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1677525286662
      },
      {
        "content": "<a href=\"https://github.com/TatisLois/payload-magic-eample\">https://github.com/TatisLois/payload-magic-eample</a>",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1677525287155
      },
      {
        "content": "I quickly threw it together so if you have any questions feel free to ask, sorry that its a little slapped together",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1677525328761
      },
      {
        "content": "thank you very much, this is the first thing I will try tomorrow morning! Thank you!",
        "fileAttachments": [],
        "authorID": "770657092800741377",
        "authorName": "tomsvogel",
        "authorAvatar": "033a54556e448758a1bb8eb77e9d9105",
        "createdAtDate": 1677528801430
      },
      {
        "content": "Hey @damnstaychill thanks for the repo! i needed to check a few Times what my mistake was.... thanks for your help.",
        "fileAttachments": [],
        "authorID": "770657092800741377",
        "authorName": "tomsvogel",
        "authorAvatar": "033a54556e448758a1bb8eb77e9d9105",
        "createdAtDate": 1677663926607
      },
      {
        "content": "Glad it helped! 🚀  let&#x27;s keep building cool shit",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1677686300023
      }
    ],
    "messageCount": 15
  },
  {
    "info": {
      "name": "email fromName isn't appearing",
      "id": "1074033677790617712",
      "guildId": "967097582721572934",
      "createdAt": 1676139983366
    },
    "messages": [
      {
        "content": "Hi - I&#x27;m just starting on the voyage of emails/nodemailer and I&#x27;ve run into an immediate quirk.<br><br>I have emails correctly configured in <code>payload.init()</code>  however when I send test emails, the <code>fromName</code> that&#x27;s defined in the config doesn&#x27;t appear.<br><br>I&#x27;ll paste my config in the thread and share a couple of images to illustrate more clearly what I mean.<br><br>Looking forward to a simple solution 🙏",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676139983366
      },
      {
        "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-attr\">email</span>: {\n  <span class=\"hljs-attr\">transportOptions</span>: {\n    <span class=\"hljs-attr\">host</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">SMTP_HOST</span>,\n    <span class=\"hljs-attr\">auth</span>: {\n      <span class=\"hljs-attr\">user</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">SMTP_USER</span>,\n      <span class=\"hljs-attr\">pass</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">SMTP_PASS</span>,\n    },\n    <span class=\"hljs-attr\">port</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">SMTP_PORT</span>,\n    <span class=\"hljs-attr\">secure</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// use TLS</span>\n    <span class=\"hljs-attr\">tls</span>: {\n      <span class=\"hljs-comment\">// do not fail on invalid certs</span>\n      <span class=\"hljs-attr\">rejectUnauthorized</span>: <span class=\"hljs-literal\">false</span>,\n    },\n  },\n  <span class=\"hljs-attr\">fromName</span>: <span class=\"hljs-string\">&#x27;Elkli &amp; Hart&#x27;</span>,\n  <span class=\"hljs-attr\">fromAddress</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">EMAIL_FROM_ADDRESS</span>,\n},</code></pre>",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676140052896
      },
      {
        "content": "I did initially have the fromName in an env var, but because it had spaces I thought I&#x27;d try directly here.",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676140076937
      },
      {
        "content": "I&#x27;ve also tried single words in place, and none of them come through.",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676140091912
      },
      {
        "content": "-<br><br>See the &#x27;Project Drawdown&#x27; in the title....",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1074033677790617712/1074034321654022214/Screenshot_2023-02-11_at_18.24.47.png",
            "name": "Screenshot_2023-02-11_at_18.24.47.png",
            "id": "1074034321654022214",
            "size": 96172,
            "url": "https://cdn.discordapp.com/attachments/1074033677790617712/1074034321654022214/Screenshot_2023-02-11_at_18.24.47.png",
            "proxyURL": "https://media.discordapp.net/attachments/1074033677790617712/1074034321654022214/Screenshot_2023-02-11_at_18.24.47.png",
            "height": 552,
            "width": 1020,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676140136842
      },
      {
        "content": "-<br><br>Whereas only the email address is displaying in my emails from nodemailer....",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1074033677790617712/1074034596301242468/Screenshot_2023-02-11_at_18.24.59.png",
            "name": "Screenshot_2023-02-11_at_18.24.59.png",
            "id": "1074034596301242468",
            "size": 55238,
            "url": "https://cdn.discordapp.com/attachments/1074033677790617712/1074034596301242468/Screenshot_2023-02-11_at_18.24.59.png",
            "proxyURL": "https://media.discordapp.net/attachments/1074033677790617712/1074034596301242468/Screenshot_2023-02-11_at_18.24.59.png",
            "height": 606,
            "width": 1046,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676140202427
      },
      {
        "content": "Any ideas?",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676140221429
      },
      {
        "content": "Figured it out",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676141163268
      },
      {
        "content": "Would I be correct in thinking that the  <code>fromName</code> is only used for automated system emails (like password reset etc??).",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676141263788
      },
      {
        "content": "When I specify the details I want in a test message object, then the correct details come though.",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676141290420
      },
      {
        "content": "I&#x27;ll share here in case it helps others in the future",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676141300390
      },
      {
        "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> message = {\n  <span class=\"hljs-attr\">to</span>: <span class=\"hljs-string\">&#x27;jake@hopking.io&#x27;</span>,\n  <span class=\"hljs-attr\">from</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">EMAIL_FROM_NAME</span>,\n  <span class=\"hljs-attr\">subject</span>: <span class=\"hljs-string\">&#x27;Order Confirmation #0000002&#x27;</span>,\n  <span class=\"hljs-attr\">email</span>: <span class=\"hljs-string\">&#x27;Plaintext version of the message&#x27;</span>,\n  <span class=\"hljs-attr\">html</span>: <span class=\"hljs-string\">&#x27;&lt;p&gt;HTML version of the message&lt;/p&gt;&#x27;</span>,\n};\n\npayload.<span class=\"hljs-title function_\">sendEmail</span>(message);</code></pre><br><br>With <code>EMAIL_FROM_NAME</code> like this in my .env:<br><br><code>EMAIL_FROM_NAME=&quot;Elkli &amp; Hart 🦌 &lt;shop@elkliandhart.com&gt;&quot;</code>",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676141382973
      },
      {
        "content": "-<br>And now I can see a much friendlier from name 🦌 👍<br>-",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1074033677790617712/1074039797573754992/Screenshot_2023-02-11_at_18.45.35.png",
            "name": "Screenshot_2023-02-11_at_18.45.35.png",
            "id": "1074039797573754992",
            "size": 50001,
            "url": "https://cdn.discordapp.com/attachments/1074033677790617712/1074039797573754992/Screenshot_2023-02-11_at_18.45.35.png",
            "proxyURL": "https://media.discordapp.net/attachments/1074033677790617712/1074039797573754992/Screenshot_2023-02-11_at_18.45.35.png",
            "height": 576,
            "width": 1056,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676141442492
      },
      {
        "content": "If someone could still comment on this before I mark this as answered, I&#x27;d be grateful:<br><br>&quot;Would I be correct in thinking that the <code>fromName</code> is only used for automated system emails (like password reset etc??).&quot;",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676141597662
      },
      {
        "content": "Correct, any email that is sent by Payload will use that name. Verification, forgot password, etc.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676242022697
      },
      {
        "content": "Thanks for confirming @denolfe",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676284292663
      }
    ],
    "messageCount": 15
  },
  {
    "info": {
      "name": "Render content from CMS or from MongoDB?",
      "id": "1078048850566184980",
      "guildId": "967097582721572934",
      "createdAt": 1677097275154
    },
    "messages": [
      {
        "content": "Hey everyone,<br><br>I&#x27;m enquiring which approach is more straight-forward or more efficient? Should i render my content directly with NextJS from the CMS or should i bypass this and read my content directly from the mongo db?<br>Which requires less coding or best approach?",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677097275154
      },
      {
        "content": "definitely go through the CMS. you can use the REST or GraphQL API, and with a little extra configuration you can use the Local API <br><br><a href=\"https://payloadcms.com/docs/rest-api/overview\">https://payloadcms.com/docs/rest-api/overview</a><br><br><a href=\"https://payloadcms.com/docs/graphql/overview\">https://payloadcms.com/docs/graphql/overview</a><br><br><a href=\"https://payloadcms.com/docs/local-api/overview\">https://payloadcms.com/docs/local-api/overview</a>",
        "fileAttachments": [],
        "authorID": "190191205907169280",
        "authorName": "altan",
        "authorAvatar": "6fe697550cadb7d4199a44e5bb05839d",
        "createdAtDate": 1677098177302
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Issues with applying hook output to a field with type select",
      "id": "1072241616917643454",
      "guildId": "967097582721572934",
      "createdAt": 1675712722759
    },
    "messages": [
      {
        "content": "Hi folks,<br><br>I&#x27;ve cloned <em>payload/website-cms</em> and am trying to add a select that is populated with select options from previous slide data (in draft mode).<br><br>Here&#x27;s my code:<br><code>export const prerequisite: Field = {\n  name: &quot;prerequisite&quot;,\n  type: &quot;select&quot;,\n  options: [{...}], // &lt;-- trying to fill this\n  hooks: {\n    someHook: [populateSelect],\n  },\n}</code><br><br><em>populateSelect</em> returns a data structure that currently looks like this:<br><br><code>options [\n  { label: &#x27;Q1. Do you have solar panels? = Yes&#x27;,    value: &#x27;Q1. Do you have solar panels? = Yes&#x27;  },\n  { label: &#x27;Q1. Do you have solar panels? = No&#x27;,    value: &#x27;Q1. Do you have solar panels? = No&#x27;  },\n  { label: &#x27;How many sets? = 1&#x27;, value: &#x27;How many sets? = 1&#x27; },\n  { label: &#x27;How many sets? = 2&#x27;, value: &#x27;How many sets? = 2&#x27; },\n  { label: &#x27;How many sets? = 3&#x27;, value: &#x27;How many sets? = 3&#x27; }\n]</code><br>A couple of questions: <br>* What can I do to add the output of populateSelect to the select options?<br>* Whats the best hook for pulling this data from an active draft as more Q and A&#x27;s are created? According to the docs, <em>beforeValidate</em> is recommended but it appears only <em>afterRead</em> appears to trigger my console logs",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675712722759
      },
      {
        "content": "Issues with applying hook output to a field with type select",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675712779901
      },
      {
        "content": "You can make a collection for <code>questions</code> and then make this field a relationship field related to the questions collection. Then in this field users could search/select or create new questions inline.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675781222431
      },
      {
        "content": "@Jarrod could you provide a bit more info:<br>* Is there something wrong with using a field in this scenario?",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675783672691
      },
      {
        "content": "On a separate note, following on from your suggestion, I&#x27;ve created:<br><br><code>import { CollectionConfig } from &#x27;payload/types&#x27;;\nimport { prerequisite } from &#x27;../prerequisite&#x27;;\nimport richText from &#x27;../../fields/richText&#x27;;\n\nexport const QuestionSets: CollectionConfig = {\n  slug: &#x27;question-set&#x27;,\n  versions: {\n    drafts: true,\n  },\n  fields: [\n    {\n      name: &#x27;Question set&#x27;,\n      type: &#x27;relationship&#x27;,\n      required: true,\n      relationTo: &quot;&quot;\n    },\n    richText({\n      name: &quot;question&quot;,\n      label: &quot;Question&quot;,\n      required: true,\n      admin: {\n        elements: [],\n        leaves: [&quot;underline&quot;],\n      },\n    }),\n    prerequisite,\n    {\n      name: &quot;answers&quot;,\n      type: &quot;array&quot;,\n      label: &quot;Answers&quot;,\n      minRows: 2,\n      required: true,\n      labels: {\n        singular: &quot;answer&quot;,\n        plural: &quot;answers&quot;\n      },\n      fields: [\n        {\n          name: &quot;answer&quot;,\n          type: &quot;text&quot;,\n        }\n      ]\n    },\n  ]\n}</code>",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675783722470
      },
      {
        "content": "but I didn&#x27;t quite follow what you meant by &quot;make this field a relationship field related to the questions collection&quot; - Is this a relationship to itself?",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675783771533
      },
      {
        "content": "You refer to questions as a collection <em>and</em> as a relationship field?",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675784375960
      },
      {
        "content": "So a relation field like:<br><pre><code class=\"hljs ts\">{\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;questions&#x27;</span>,\n  <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;relationship&#x27;</span>,\n  <span class=\"hljs-attr\">hasMany</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">relationTo</span>: <span class=\"hljs-string\">&quot;&quot;</span>\n}</code></pre><br><br>needs to have a relationTo value, the relationTo value is the slug of the collection, it could be <code>questions</code> and then on your <code>QuestionSets</code> collection, you would add a field like the above and set <code>relationTo: &quot;questions&quot;</code>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675788408011
      },
      {
        "content": "Thanks for getting back to me on this. So both question-set and question are collections in this scenario?",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675788537308
      },
      {
        "content": "I&#x27;m also trying to understand what you&#x27;re proposing each collection does - would it be that one creates questions and answers, the other populates the select options?",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675788764696
      },
      {
        "content": "Correct, one holds the q&amp;a&#x27;s, and the relationship field allows you to select them, allowing for dynamic values",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675792229700
      },
      {
        "content": "So I&#x27;ve rearranged my data structures how I think you&#x27;ve described. I have a &quot;Question set&quot; collection with a relationship to a &quot;Prerequisite&quot; collection:",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675848050311
      },
      {
        "content": "<code>export const Prerequisite: CollectionConfig = {\n  slug: &#x27;prerequisite&#x27;,\n  labels: {\n    plural: &#x27;prerequisites&#x27;,\n    singular: &#x27;prerequisite&#x27;\n  },\n  fields: [\n    prerequisite\n  ],\n  hooks: {\n    beforeChange: [beforeChangePrerequisite],\n    beforeValidate: [beforeValidatePrerequisite],\n    beforeRead: [beforeReadPrerequisite],\n    beforeOperation: [beforeOperationPrerequisite]\n  }\n}</code>",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675848069397
      },
      {
        "content": "I feel like I&#x27;ve gone a step backwards as the hooks no longer have access to the questionSet data and have been replaced with data that looks like this: <br><br><code>&quot;{\n  id: &#x27;63e36bc9d64cd8091ec9b961&#x27;,\n  createdAt: &#x27;2023-02-08T09:30:49.196Z&#x27;,\n  updatedAt: &#x27;2023-02-08T09:30:49.196Z&#x27;\n}&quot;</code><br><br>which are the prerequisites I&#x27;ve created with the text input. So if relationships are the recommended model, how can data from the relationship parent be passed to the relatesTo child?",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675849301324
      },
      {
        "content": "What is the goal here? I feel like we are talking very abstract and it makes it challenging to align thoughts. <br><br>As for getting the data, you can use <code>await payload.findByID({ ... })</code> function to fulfill the questionSet document data inside your hook 👍",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675870985315
      },
      {
        "content": "The goal is to setup a survey with conditional follow up questions based on answers to questions. i.e. if Q1 = A, fast forward to Q3.",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675871870431
      },
      {
        "content": "In the admin UI, I would want to assign the prerequisite ID on <em>Q3</em> as &quot;Q1=A&quot;, from a dynamic dropdown of all the possible Question&amp;Answer combos.",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675871998622
      },
      {
        "content": "will report back regarding the data fetch",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675872018827
      },
      {
        "content": "One initial question still remains: how do I get the data from find by id into a field of type select?",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675878483811
      },
      {
        "content": "@Jarrod I&#x27;ve messaged a video link describing the goal and a bit of my implementation, apologies for the low quality, just trying to keep file size down",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675947737916
      },
      {
        "content": "Hey @remy just watched your vid! Gathering some thoughts now",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675948469102
      },
      {
        "content": "So do you want answers to show/hide? or questions? (based on previous question answers)",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675948595680
      },
      {
        "content": "Yes. The logic for showing questions will live in the ui, the decisions will be made in the cms",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675949090493
      },
      {
        "content": "I’m trying to accomplish this with anything other than a text input, if I do so, I think my company will be sold on the transition",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675949169586
      },
      {
        "content": "I would like to show/hide <em>question sets</em>, questions with their answers",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675954855593
      },
      {
        "content": "(Conditional answers will probably be a nice to have but not part of my POC)",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675954893211
      },
      {
        "content": "I think a custom component would likely be the best solution here. Since arrays arrays are determined by user input, to get the dynamic select you are looking for you will want to use text field, with a custom component (assuming you want to keep the value format to match your current ui shape)",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675955475137
      },
      {
        "content": "This would actually be really cool",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675955528771
      },
      {
        "content": "not sure if you have seen our react hooks, but they can provide the data you need to create the custom select options, you can use payloads Select component as well and just feed your formatted options into that!<br><br>react hooks: <a href=\"https://payloadcms.com/docs/admin/hooks#react-hooks\">https://payloadcms.com/docs/admin/hooks#react-hooks</a><br><br>select component (can be imported from <code>payload/components/fields/Select</code>): <a href=\"https://github.com/payloadcms/payload/blob/master/components/fields/Select.ts\">https://github.com/payloadcms/payload/blob/master/components/fields/Select.ts</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675955837481
      },
      {
        "content": "I was thinking I&#x27;d go down the custom component route, just wanted to make sure I wasn&#x27;t underutilising what already exists. I&#x27;ve got till Tuesday. Will share what I have if I&#x27;m successful with my timeframe",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675957174660
      },
      {
        "content": "Thanks!",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675957176973
      }
    ],
    "messageCount": 30
  },
  {
    "info": {
      "name": "Does anyone know if the Payload API can return multiple items in one request?",
      "id": "1075519296349945876",
      "guildId": "967097582721572934",
      "createdAt": 1676494182432
    },
    "messages": [
      {
        "content": "E.g. If I want to fetch all pages and all users. Could that be done with one API call?",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676494182432
      },
      {
        "content": "👍",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676494190009
      },
      {
        "content": "ok so there are a few options",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676494195783
      },
      {
        "content": "short answer, Payload doesn&#x27;t do anything like that out of the box",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676494200921
      },
      {
        "content": "but longer answer - you could open up a custom endpoint and use a MongoDB <code>aggregate</code> query that merges content from multiple collections into a single result set",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676494221260
      },
      {
        "content": "OR, you could build some type of &quot;search&quot; collection",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676494234515
      },
      {
        "content": "take a look at hope network&#x27;s search functionality:",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676494247277
      },
      {
        "content": "<a href=\"https://hopenetwork.org/\">https://hopenetwork.org/</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676494247681
      },
      {
        "content": "this site uses a collection called <code>Search</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676494256117
      },
      {
        "content": "Ok thanks. I will investigate the custom endpoint route with MongoDb.",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676494260360
      },
      {
        "content": "and then every collection that we want to search across has an <code>afterChange</code> hook, that syncs it to the <code>search</code> collection",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676494277111
      },
      {
        "content": "so then the frontend of the hope site just queries against the <code>search</code> collection, and then documents from like 6 collections all get returned",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676494293224
      },
      {
        "content": "in a very fast / performant way",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676494297690
      },
      {
        "content": "this is good if you just need a quick solution. but another thing to look into, if you are going to be doing heavy searches, and you need it to scale with thousands of docs, is to use Algolia or similar",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676494331725
      },
      {
        "content": "Cool, cheers @jmikrut",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676494774101
      }
    ],
    "messageCount": 14
  },
  {
    "info": {
      "name": "cloud-storage error",
      "id": "1080613915207143494",
      "guildId": "967097582721572934",
      "createdAt": 1677708834221
    },
    "messages": [
      {
        "content": "Getting the following error after installing and configuring <code>@payloadcms/plugin-cloud-storge</code>.<br><br><pre><code class=\"hljs\">ERROR in ./node_modules/@payloadcms/plugin-cloud-storage/dist/adapters/s3/handleUpload.js 43:27-40\nModule not found: Error: Can&#x27;t resolve &#x27;fs&#x27; in &#x27;/usr/src/app/node_modules/@payloadcms/plugin-cloud-storage/dist/adapters/s3&#x27;</code></pre><br><br>I saw in another community post that maybe I need to setup an alias to <code>fs</code> in the webpack config. The README for this plugin doesn&#x27;t state that however. I&#x27;m going to give it a go but if that&#x27;s unintended, I&#x27;d like to know.<br><br>Thanks!",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677708834221
      },
      {
        "content": "Adding the alias seems to have worked, though I think (if possible) it&#x27;d be better if the package could avoid requiring <code>fs</code> if it&#x27;s being compiled client side.<br><br>Here&#x27;s what I did in case someone searches in here to find an answer and missed it on the website:<br><br>mocks/emptyObject.js<br><pre><code class=\"hljs\">export default {}</code></pre><br><br>payload.config.ts<br><pre><code class=\"hljs\">import path from &#x27;path&#x27;\nconst mockModulePath = path.resolve(__dirname, &#x27;mocks/emptyObject.js&#x27;)\n\nexport default buildConfig({\n    serverURL: &#x27;http://localhost:3000&#x27;,\n    admin: {\n        webpack: (config) =&gt; {\n            return {\n                ...config,\n                resolve: {\n                    ...config.resolve,\n                    alias: {\n                        ...config.resolve.alias,\n                        &#x27;fs&#x27;: mockModulePath,\n                    }\n                }\n            };\n        },\n...</code></pre><br><br>Then it compiled just fine. I also had to add a <code>region</code> property to the s3 config. That wasn&#x27;t immediately called out in the readme.<br><br>Hope this is helpful to someone!",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677717345671
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "The payload template setup for javascript fails to run",
      "id": "1071421186086551673",
      "guildId": "967097582721572934",
      "createdAt": 1675517116806
    },
    "messages": [
      {
        "content": "Hello guys!<br><br>I&#x27;ve used the following commands: npx create-payload-app (choose the javascript template for blog) and yarn build. I receive this error message when i am trying to start developing (yarn dev).<br>import { buildConfig } from &#x27;payload/config&#x27;;<br>^^^^^^<br><br>SyntaxError: Cannot use import statement outside a module<br>    at Object.compileFunction (node:vm:352:18)<br>    at wrapSafe (node:internal/modules/cjs/loader:1031:15)<br>    at Module._compile (node:internal/modules/cjs/loader:1065:27)<br>    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)<br>    at Module.load (node:internal/modules/cjs/loader:981:32)<br>    at Function.Module._load (node:internal/modules/cjs/loader:822:12)<br><br>It seems like the babel plugin fails to transform from ES6 to ES5. Until a few days ago e everything went well. I&#x27;ve used babel on files manually and then yarn run it works. Did anyone encountered this issue?  <br>#community-help",
        "fileAttachments": [],
        "authorID": "556880016273702941",
        "authorName": "ivy.mihai",
        "authorAvatar": null,
        "createdAtDate": 1675517116806
      },
      {
        "content": "Hey @ivy.mihai, we actually have removed the JS templates for this reason. In order to use JS, you&#x27;ll need to remove any type declarations and change any import statements to const require statements.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675519446363
      },
      {
        "content": "Let me know if you run into anything else",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675519724186
      },
      {
        "content": "I already have a project written in ES6. It&#x27;s there any way to transform the code with babel? I&#x27;ve tried babel-preset-env and then something like this babel -w src/ -d dist/ | nodemon --watch dist, but without luck.  I would like to continue the development without using require and manually transforming my code.",
        "fileAttachments": [],
        "authorID": "556880016273702941",
        "authorName": "ivy.mihai",
        "authorAvatar": null,
        "createdAtDate": 1675521799330
      },
      {
        "content": "I&#x27;ve found a working solution for this.<br><br> in my package.json :    &quot;serve:dev&quot;: &quot;babel -w src/ -d dist/ &amp;&amp; SERVER_URL=<a href=\"http://localhost:3000\">http://localhost:3000</a> PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=development nodemon dist/server.js --watch dist&quot;, <br><br>  &quot;devDependencies&quot;: {<br>    &quot;@babel/cli&quot;: &quot;^7.20.7&quot;,<br>    &quot;@babel/core&quot;: &quot;^7.20.12&quot;,<br>    &quot;@babel/preset-env&quot;: &quot;^7.20.2&quot;,<br>....<br>  &quot;babel&quot;: {<br>    &quot;presets&quot;:[<br>      &quot;@babel/preset-env&quot;<br>     ]<br>  },<br>....<br>}",
        "fileAttachments": [],
        "authorID": "556880016273702941",
        "authorName": "ivy.mihai",
        "authorAvatar": null,
        "createdAtDate": 1675524179817
      },
      {
        "content": "@ivy.mihai Awesome to hear, thank you for sharing your solution",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675691367502
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Can't modify anything in production",
      "id": "1070156169693380608",
      "guildId": "967097582721572934",
      "createdAt": 1675215513395
    },
    "messages": [
      {
        "content": "I&#x27;m running into a strange issue where I can view but not edit payload resources via the rest API.<br><br>POST /login succeeds.<br>All GET requests succeed.<br>But any other POST requests to modify resources fail (403 Forbidden).<br><br>By adding some debug logging in the <code>read:</code> and <code>update:</code> closures, I can see that the user object is present for GET requests, but <code>undefined</code> for POST requests.<br><br>By inspecting the headers, I see that the <code>payload-token</code> cookie is present for both GET and POST requests.<br><br>This issue is occurring identically when deploying to both Google Cloud Run and fly.io. The issue does not occur locally, even when running the same docker image as in production.<br><br>Any suggestions regarding how to continue debugging?<br><br>Thanks,<br>Oliver",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675215513395
      },
      {
        "content": "Hey @oliverevans96 — there are a few topics both here and in GitHub discussions about this",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675215920427
      },
      {
        "content": "maybe it&#x27;s your <code>csrf</code> config?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675215927046
      },
      {
        "content": "do you have a <code>serverURL</code> set? and is it correct on your production instance?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675215945442
      },
      {
        "content": "try and whitelist your production domain within the <code>csrf</code> config property",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675215961149
      },
      {
        "content": "Thanks for the quick reply! I&#x27;m pretty sure <code>serverURL</code> is set correctly, but I&#x27;ll double-check it. More likely to be a <code>csrf</code> issue. Can you share any links to relevant discussions or docs?",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675216046809
      },
      {
        "content": "I didn&#x27;t have any domains whitelisted for CSRF, so I&#x27;m assuming that was the issue. I&#x27;ll update in a few minutes after verifying.",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675216372882
      },
      {
        "content": "absolutely -",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675216734700
      },
      {
        "content": "<a href=\"https://payloadcms.com/docs/authentication/overview#csrf-protection\">https://payloadcms.com/docs/authentication/overview#csrf-protection</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675216735162
      },
      {
        "content": "That was it! Easy - thanks so much for your help @jmikrut!",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675217049765
      },
      {
        "content": "of course",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675217553031
      },
      {
        "content": "out of curiosity, did you have your serverURL set? or was it not set?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675217564578
      },
      {
        "content": "this is never a problem for our deployments but i see it consistently and i want to figure out what causes it",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675217578015
      },
      {
        "content": "Ah interesting, so the serverURL was also set incorrectly. It was set to <a href=\"https://my-app-randomnumbers123.a.run.app/\">https://my-app-randomnumbers123.a.run.app/</a>, which is a cloud run URL. But I was accessing the site via my own domain name, pointed at the cloud run servers.",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675227775678
      },
      {
        "content": "So I take it that if I had configured the serverURL correctly, I wouldn&#x27;t have needed to explicitly specify a csrf whitelist?",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675227812849
      },
      {
        "content": "I can confirm that when I log into payload via the cloud run deployment URL (the <code>serverURL</code>), I can make edits even though that URL isn&#x27;t in the csrf whitelist.",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675227982699
      },
      {
        "content": "correct",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675257739856
      },
      {
        "content": "that&#x27;s what i was thinking was the case",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675257746763
      },
      {
        "content": "if serverURL is set, we automatically whitelist it within CSRF protection",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675257758214
      },
      {
        "content": "if it is wrong, you&#x27;ll see the issue you saw - because we dont accept cookies from other domains that are not explicitly whitelisted for security",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675257777895
      },
      {
        "content": "Makes sense. Thanks again! If it&#x27;s not too much work, it may save some future user headaches if the server could log a message related to CSRF when this happens.",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675273720301
      }
    ],
    "messageCount": 20
  },
  {
    "info": {
      "name": "How does one handle syncing uploads between environments?",
      "id": "1078691140942970952",
      "guildId": "967097582721572934",
      "createdAt": 1677250409113
    },
    "messages": [
      {
        "content": "I&#x27;ve noticed that if you just copy an asset into the corresponding upload folder, it doesn&#x27;t change anything in the CMS to allow you to see it / use it. <br><br>This makes me wonder how the use case of syncing your local images up to a remote host should be handled. Is there a &quot;sync-to-remote&quot; functionality in Payload I&#x27;m not aware of? Or will I have to write up a script that also merges in the data from local to remote?<br><br>Any feedback welcome, thank you.",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677250409113
      },
      {
        "content": "So far the most common response I&#x27;m getting is to utilize a CDN instead of relying on local storage, which is probably why this use case isn&#x27;t accounted for in Payload?",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677258398874
      },
      {
        "content": "You may be looking for <a href=\"https://github.com/payloadcms/plugin-cloud-storage\">https://github.com/payloadcms/plugin-cloud-storage</a>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677401812548
      },
      {
        "content": "Are you talking uploading media in a local vs remote environment? Or are you asking for a way for Payload to detect you&#x27;ve copied a <code>.jpg</code> into your uploads folder and create a record for it?",
        "fileAttachments": [],
        "authorID": "398939985773854742",
        "authorName": "see.ess",
        "authorAvatar": "d1c3ebf237e0b1471b75095da8902dd5",
        "createdAtDate": 1677441460405
      },
      {
        "content": "at my company, it&#x27;s common to have a local, qa, and prod environment. local for code changes, qa for review of code changes, then prod is typically left for content management. We never sync data to prod since its data is most up to date. So as you might imagine that&#x27;s an annoying scenario to deal with at times. <br><br>In this workflow, we&#x27;ll typically sync our media (images/videos/etc) to the media folder on the other two environments (since typically they don&#x27;t override existing data, just add on). However, in both Payload and WP, the db state doesn&#x27;t recognize the new images that were synced up and thus you can&#x27;t just pick the new items for future content up dates either. <br><br>I&#x27;m definitely in favor of instead relying on a CDN solution like that which @thgh  shared. I was just curious if Payload had some way of addressing this since it is one of those annoying things that happens in WP for instance.",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677441996123
      },
      {
        "content": "Yeah, kinda figured that&#x27;s what you&#x27;re referring to... and I agree it&#x27;s a pain (especially when building first-class features that depend on the presence of a database record). I&#x27;ve dealt with it in WordPress pretty easily with some abhorrent hacks... not as easy when you&#x27;re trying to do things the right way. I&#x27;m working towards v1 of a site for my client now and am getting close to having to deal with this issue on Payload. <br><br>Not sure if a more general mongo diff/migration tool would help? <a href=\"https://github.com/datacoon/diffmongo\">https://github.com/datacoon/diffmongo</a>",
        "fileAttachments": [],
        "authorID": "398939985773854742",
        "authorName": "see.ess",
        "authorAvatar": "d1c3ebf237e0b1471b75095da8902dd5",
        "createdAtDate": 1677447889742
      },
      {
        "content": "or here&#x27;s a gist of something relatively simple that you might be able to build on: <a href=\"https://gist.github.com/niccottrell/3ff2efc2146090aa8c5b73c1eb75ba2c\">https://gist.github.com/niccottrell/3ff2efc2146090aa8c5b73c1eb75ba2c</a>",
        "fileAttachments": [],
        "authorID": "398939985773854742",
        "authorName": "see.ess",
        "authorAvatar": "d1c3ebf237e0b1471b75095da8902dd5",
        "createdAtDate": 1677448302289
      },
      {
        "content": "Interesting…. This seems like it’ll be useful anyway for comparing environment differences. Thanks!!",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677448651934
      },
      {
        "content": "fwiw, I managed to hack together this typescript version of the above gist... <a href=\"https://gist.github.com/marpstar/b257ceb628a428ec66aabde72c0cdbc4\">https://gist.github.com/marpstar/b257ceb628a428ec66aabde72c0cdbc4</a><br><br>it runs on the entire collection, not just a sample. Also allows you to specify different DB names for each environment. I&#x27;ve included instructions for launching (and debugging) for <code>ts-node</code>",
        "fileAttachments": [],
        "authorID": "398939985773854742",
        "authorName": "see.ess",
        "authorAvatar": "d1c3ebf237e0b1471b75095da8902dd5",
        "createdAtDate": 1677453440189
      },
      {
        "content": "much appreciated!",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677453500280
      }
    ],
    "messageCount": 9
  },
  {
    "info": {
      "name": "Import localized data from getText files (aka po and pot files)",
      "id": "1060720888649097306",
      "guildId": "967097582721572934",
      "createdAt": 1672965967095
    },
    "messages": [
      {
        "content": "I&#x27;m really impressed with Payload&#x27;s field level support for localization. We are using po and pot files to manage localized strings, which we are looking to import into our Payload system. I can&#x27;t imagine we&#x27;re the first to want to do this, is there any existing tooling to support this? If not, what would be a good way to design such tooling, and if we build it, might there be interest to incorporate that into Payload?",
        "fileAttachments": [],
        "authorID": "973292940023701524",
        "authorName": "Rasmus",
        "authorAvatar": null,
        "createdAtDate": 1672965967095
      },
      {
        "content": "I would LOVE to incorporate that into Payload!!!",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673283842913
      },
      {
        "content": "We want to build a significantly more robust translations workflow.... so any ideas or feedback that you have there would be amazing",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673283863674
      },
      {
        "content": "So this is what I think it should look like: Iterate over all the documents, within each, iterate over all the localized fields, take their values (in the default locale) and produce a POT file. Send the POT file to translators and get back N PO files, one for each supported locale. Iterate over all the documents again, iterate over the localized fields as before, update the docs with the strings in each of the N locales taken from the N PO files. This will be using the strings in the default locale as keys to look up the corresponding strings in all the other locales. Use a gettext implementation to deal with all the PO/POT files, there are a few different implementations in npm, not sure yet which would be the best to go with. <a href=\"https://www.npmjs.com/package/node-gettext\">https://www.npmjs.com/package/node-gettext</a> and <a href=\"https://www.npmjs.com/package/@types/node-gettext\">https://www.npmjs.com/package/@types/node-gettext</a> might be a good place to start",
        "fileAttachments": [],
        "authorID": "973292940023701524",
        "authorName": "Rasmus",
        "authorAvatar": null,
        "createdAtDate": 1673393655859
      },
      {
        "content": "Hey Dan, I&#x27;ll respond to your email here so we can get the discussion going.<br><br><blockquote>Can you give me a summary of what it is you are working on and trying to achieve? Is this to make po files for localized content from Payload projects or does this have to do with admin panel i18n?<br></blockquote><br>This is to support localization of <em>content</em>, not of the admin panel ui. I believe you already have some support for localizing the admin UI, but none yet for the content.<br><br>This is what I have so far (not everything is working yet):<br><br>* Given a collection config, pull out the paths to all localized text fields in the config, including fields nested inside groups, arrays, etc. Naturally, this will be extended to handle multiple collections, perhaps all. I&#x27;m looking for direction on how to best configure the behaviour of the tool here.<br><br>* Given a document from this collection, pull out all the string values of all the localized text fields in the document. For each value, I also get the path to where the value come from, e.g. the string &quot;The south Pacific&quot; came from collectionX.documentY.groupZ.fieldW.<br><br>* Given the set of string values, write the strings to file in POT format<br><br>The work flow from here would then be to send the POT file off to translation, getting back a PO file for each language, where those PO files map from strings like &quot;The south Pacific&quot; to &quot;Der Südpazifik&quot;. PO/POT files are widely used, there are lots of tools for managing and manipulating them, see getText. Now we would need to choose a getText implementation to facilitate the process of looking up translations from the source language to each translated language. There are a couple of different implementations to choose from. I have not decided, so I am mocking out the getText() function in the folloing.<br><br>* Given a function getText() which maps from the source language to each translated language, and given a set of documents in the collection, look up all values in all documents and save all localized fields.",
        "fileAttachments": [],
        "authorID": "973292940023701524",
        "authorName": "Rasmus",
        "authorAvatar": null,
        "createdAtDate": 1675708810409
      },
      {
        "content": "PO/POT files work best for strings that are no more than a paragraph long. I&#x27;m looking for a solution that would work well for strings that are longer than that, such as a blog post. Maybe there are getText() based tools that work well for that, or perhaps getText() is not a good choice. The overall workflow is still going to be close, though.",
        "fileAttachments": [],
        "authorID": "973292940023701524",
        "authorName": "Rasmus",
        "authorAvatar": null,
        "createdAtDate": 1675709717619
      },
      {
        "content": "Some of the questions I have:<br>* Is this of interest, does it align with the direction you want to take Payload?<br>* Is the overall approach valid? Does it look like it would play well with the existing support for localizing the admin UI?<br>* What is the best way to update payload documents with localized strings? Your docs are pretty thin on this, this page <a href=\"https://payloadcms.com/docs/configuration/localization\">https://payloadcms.com/docs/configuration/localization</a> covers how to pull localized data, but not how to update it.<br>* Which getText implementation to use, e.g. <a href=\"https://www.npmjs.com/package/node-gettext\">https://www.npmjs.com/package/node-gettext</a><br>* Consider whether PO/POT is the correct file format or whether there are others that are better suited for translating strings longer than a paragraph.<br>* Once we start looking at the code, perhaps there are smarter ways to code this, I don&#x27;t know the Payload codebase well.",
        "fileAttachments": [],
        "authorID": "973292940023701524",
        "authorName": "Rasmus",
        "authorAvatar": null,
        "createdAtDate": 1675711437924
      },
      {
        "content": "@Rasmus I&#x27;m coming from a spot of never having used PO/POT files before, so I need to catch up a little before I can offer much here.<br>Without digging in, I wonder if this can handle things like html tags. Suppose you have to translate something from a richtext field:<br><code>&lt;p&gt; Something &lt;bold&gt; bold &lt;/bold&gt; and &lt;a href=&quot;&quot;&gt;link&lt;/a&gt;&lt;/p&gt;</code><br>Are you able to parameterize it enough to make it work with this for example?<br><br>I don&#x27;t want a half-baked feature. If is supported, then we can move forward. I&#x27;m imagining there will be a place to upload  translation files that goes to a special collection that has hooks to do the document creation/updating using the local api.<br><br>We have to decide if this is a core feature or a plugin. I&#x27;m leaning towards an official plugin under payloadcms/plugin-<em>whatever-we-call-it</em>.<br>I&#x27;ll do some learning and reply to your specific questions tomorrow.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675716953931
      },
      {
        "content": "About the HTML tags, I think the use case here is that there is a blog post in English that contains <code>Something &lt;bold&gt; bold &lt;/bold&gt;</code>, and the translator would translate this as <code>quelque chose &lt;bold&gt; d&#x27;audacieux &lt;/bold&gt;</code>.  Since this is about translating <em>content</em> only, it seems to me that the use cases for needing to handle strings with placeholders, plurals and such is not there. Perhaps I am overlooking something? That <em>does</em> need to be handled in the localization of the admin interfaces, and also any other custom React component that can be build in Payload to support any particular document collection, but that is a separate thing.",
        "fileAttachments": [],
        "authorID": "973292940023701524",
        "authorName": "Rasmus",
        "authorAvatar": null,
        "createdAtDate": 1675787257143
      },
      {
        "content": "We build a multilingual app, using PO/POT files for translation of UX elements. Our toolchain consists of lingui <a href=\"https://lingui.dev/\">https://lingui.dev/</a> that handles exporting strings from JSX to POT and importing the translated strings from PO and making the strings appear in the correct locale in the app. Lingui contains a <code>&lt;Trans&gt;</code> component so we can flag in the JSX that a particular string should be translated by having <code>&lt;Text&gt;&lt;Trans&gt;This is the string&lt;/Trans&gt;&lt;Text&gt;</code> . It can also handle placeholders  like so we can translate <code>&quot;City - \\&quot;{city}\\&quot;</code> to <code>&quot;Ville – « {city} »&quot;</code>.There are several alternatives to lingui <a href=\"https://react.libhunt.com/js-lingui-alternatives\">https://react.libhunt.com/js-lingui-alternatives</a> We also use Weblate <a href=\"https://weblate.org/en/\">https://weblate.org/en/</a> to manage the translation of UX strings, great for keeping track of which strings are new/changed in each release so we know what strings to send for translation.<br><br>This new plugin to Payload would do for content roughly what lingui does for code, with a feature set that is appropriate for the needs of translating content, which i <em>think</em> is quite a bit simpler than for code.",
        "fileAttachments": [],
        "authorID": "973292940023701524",
        "authorName": "Rasmus",
        "authorAvatar": null,
        "createdAtDate": 1675787858698
      }
    ],
    "messageCount": 9
  },
  {
    "info": {
      "name": "Trying to create a production build with Payload CMS Error",
      "id": "1077011979790725190",
      "guildId": "967097582721572934",
      "createdAt": 1676850065897
    },
    "messages": [
      {
        "content": "So i have been experimenting a lot with payload CMS, i am trying to produce a production build where i can inject environment variables<br><br>I stated with the blog template <br><br>Sorry i am not that familiar with GraphQL to dive into this but definitely feels like a schema issue or some component i am missing this is my logs error, anyone encountered this<br><pre><code class=\"hljs\">cms-payload-1  | [23:39:01] INFO (payload): Connected to Mongo server successfully!\ncms-payload-1  | [23:39:01] INFO (payload): Starting Payload...\ncms-payload-1  | /home/node/node_modules/payload/node_modules/graphql/jsutils/devAssert.js:12\ncms-payload-1  |     throw new Error(message);\ncms-payload-1  |           ^\ncms-payload-1  |\ncms-payload-1  | Error: Expected JSON to be a GraphQL type.\ncms-payload-1  |     at devAssert (/home/node/node_modules/payload/node_modules/graphql/jsutils/devAssert.js:12:11)\ncms-payload-1  |     at new GraphQLList (/home/node/node_modules/payload/node_modules/graphql/type/definition.js:349:32)\ncms-payload-1  |     at /home/node/node_modules/payload/dist/graphql/schema/withOperators.js:18:27\ncms-payload-1  |     at Array.reduce (&lt;anonymous&gt;)\ncms-payload-1  |     at withOperators (/home/node/node_modules/payload/dist/graphql/schema/withOperators.js:15:27)\ncms-payload-1  |     at buildWhereInputType (/home/node/node_modules/payload/dist/graphql/schema/buildWhereInputType.js:48:43)\ncms-payload-1  |     at /home/node/node_modules/payload/dist/collections/graphql/init.js:126:79\ncms-payload-1  |     at Array.forEach (&lt;anonymous&gt;)\ncms-payload-1  |     at initCollectionsGraphQL (/home/node/node_modules/payload/dist/collections/graphql/init.js:60:38)\ncms-payload-1  |     at registerSchema (/home/node/node_modules/payload/dist/graphql/registerSchema.js:58:24)\ncms-payload-1  |\ncms-payload-1  | Node.js v18.14.1</code></pre><br><br>Any insights or help would be greatly appreciated",
        "fileAttachments": [],
        "authorID": "746341310322966588",
        "authorName": "callistusa",
        "authorAvatar": "e550c9b615e55b4da767d9e356b0a3ff",
        "createdAtDate": 1676850065897
      },
      {
        "content": "I haven&#x27;t been able to reproduce your issue.<br>If you have some reproduction steps I&#x27;d like to try them to see what is going.<br>Assuming you don&#x27;t need GraphQL at all, you can set <code>graphQL.disable: true</code> in your Payload config which should prevent this from happening if you just want to be unblocked.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676950010949
      },
      {
        "content": "Hi @dribbens this is my <code>payload-config.ts</code><br><pre><code class=\"hljs\">import { buildConfig } from &#x27;payload/config&#x27;;\nimport path from &#x27;path&#x27;;\nimport Categories from &#x27;./collections/Categories&#x27;;\nimport Posts from &#x27;./collections/Posts&#x27;;\nimport Tags from &#x27;./collections/Tags&#x27;;\nimport Users from &#x27;./collections/Users&#x27;;\nimport Media from &#x27;./collections/Media&#x27;;\n\nexport default buildConfig({\n  serverURL: &#x27;http://localhost:3000&#x27;,\n  admin: {\n    user: Users.slug,\n  },\n  collections: [\n    Categories,\n    Posts,\n    Tags,\n    Users,\n    Media,\n  ],\n  typescript: {\n    outputFile: path.resolve(__dirname, &#x27;payload-types.ts&#x27;)\n  },\n  graphQL: {\n    schemaOutputFile: path.resolve(__dirname, &#x27;generated-schema.graphql&#x27;),\n  },\n});</code></pre>",
        "fileAttachments": [],
        "authorID": "746341310322966588",
        "authorName": "callistusa",
        "authorAvatar": "e550c9b615e55b4da767d9e356b0a3ff",
        "createdAtDate": 1677022442849
      },
      {
        "content": "This is my dockerfile<br><pre><code class=\"hljs\"># syntax=docker/dockerfile:1\nFROM node:18-alpine as base\n\nFROM base as builder\n\nWORKDIR /home/node\nCOPY package*.json ./\n\nCOPY . .\nRUN npm ci\nRUN npm run build\n\nFROM base as runtime\n\nENV NODE_ENV=production\n\nWORKDIR /home/node\nCOPY package*.json  ./\n\nRUN npm i --omit dev\nCOPY --from=builder /home/node/dist ./dist\nCOPY --from=builder /home/node/build ./build\nCOPY --from=builder /home/node/src/generated-schema.graphql ./dist/generated-schema.graphql\nEXPOSE 3000\n\nCMD [&quot;node&quot;, &quot;dist/server.js&quot;]</code></pre>",
        "fileAttachments": [],
        "authorID": "746341310322966588",
        "authorName": "callistusa",
        "authorAvatar": "e550c9b615e55b4da767d9e356b0a3ff",
        "createdAtDate": 1677022515351
      },
      {
        "content": "After taking that <code>graphQL</code> piece of configuration then i get a different error<br><pre><code class=\"hljs\">cms-payload-1  | [23:42:11] INFO (payload): Connected to Mongo server successfully!\ncms-payload-1  | [23:42:11] INFO (payload): Starting Payload...\ncms-payload-1  | /home/node/node_modules/payload/node_modules/graphql/jsutils/devAssert.js:12\ncms-payload-1  |     at /home/node/node_modules/payload/dist/graphql/schema/withOperators.js:18:27\ncms-payload-1  |     at Array.reduce (&lt;anonymous&gt;)\ncms-payload-1  |     at withOperators (/home/node/node_modules/payload/dist/graphql/schema/withOperators.js:15:27)\ncms-payload-1  |     at buildWhereInputType (/home/node/node_modules/payload/dist/graphql/schema/buildWhereInputType.js:48:43)\ncms-payload-1  |     at /home/node/node_modules/payload/dist/collections/graphql/init.js:126:79cms-payload-1  |     at Array.forEach (&lt;anonymous&gt;)cms-payload-1  |     at initCollectionsGraphQL (/home/node/node_modules/payload/dist/collections/graphql/init.js:60:38)cms-payload-1  |     at registerSchema (/home/node/node_modules/payload/dist/graphql/registerSchema.js:58:24)\ncms-payload-1  |\ncms-payload-1  | Node.js v18.14.1</code></pre>",
        "fileAttachments": [],
        "authorID": "746341310322966588",
        "authorName": "callistusa",
        "authorAvatar": "e550c9b615e55b4da767d9e356b0a3ff",
        "createdAtDate": 1677023020045
      },
      {
        "content": "Do you think it could be the node version? might give that a try, but seems like when registering the schema if falls over",
        "fileAttachments": [],
        "authorID": "746341310322966588",
        "authorName": "callistusa",
        "authorAvatar": "e550c9b615e55b4da767d9e356b0a3ff",
        "createdAtDate": 1677023066629
      },
      {
        "content": "We had some issues recently due to some version issues with some incompatibilities of different GraphQL dependencies. I think that is what you are up against here.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677078510413
      },
      {
        "content": "I don&#x27;t think it is your node version. Switching to <code>yarn</code> might fix this in the short term.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677078527308
      },
      {
        "content": "This is the thread that makes me think it could be related <a href=\"https://github.com/payloadcms/payload/discussions/1856\">https://github.com/payloadcms/payload/discussions/1856</a>. Without digging in more I&#x27;m not sure.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677078949283
      },
      {
        "content": "Feel free to open an issue on our Github too, we do bugfixes on Mondays each week and if this is anyone using npm for Payload then we need to address it.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677079068830
      },
      {
        "content": "Ok will do, wouldnt have expected it to be an NPM issue but hopefully you can figure it out",
        "fileAttachments": [],
        "authorID": "746341310322966588",
        "authorName": "callistusa",
        "authorAvatar": "e550c9b615e55b4da767d9e356b0a3ff",
        "createdAtDate": 1677109493097
      },
      {
        "content": "<pre><code class=\"hljs\">    &quot;overrides&quot;: {\n        &quot;graphql&quot;: &quot;&gt;15.7.0 &lt;16.7.0&quot;\n     }</code></pre>",
        "fileAttachments": [],
        "authorID": "746341310322966588",
        "authorName": "callistusa",
        "authorAvatar": "e550c9b615e55b4da767d9e356b0a3ff",
        "createdAtDate": 1677173485559
      },
      {
        "content": "That block and rebuilding the <code>package-lock.json</code> solved it",
        "fileAttachments": [],
        "authorID": "746341310322966588",
        "authorName": "callistusa",
        "authorAvatar": "e550c9b615e55b4da767d9e356b0a3ff",
        "createdAtDate": 1677173515489
      },
      {
        "content": "There must be something in the dependency tree that is lower than 15.7.0 and is causing that incorrect string parsing",
        "fileAttachments": [],
        "authorID": "746341310322966588",
        "authorName": "callistusa",
        "authorAvatar": "e550c9b615e55b4da767d9e356b0a3ff",
        "createdAtDate": 1677173540538
      }
    ],
    "messageCount": 13
  },
  {
    "info": {
      "name": "v1.6.4 - failing to build in production mode - multiple version of GraphQL",
      "id": "1072507736241229864",
      "guildId": "967097582721572934",
      "createdAt": 1675776170550
    },
    "messages": [
      {
        "content": "I am trying to build payload using the generated Dockerfile by the <code>create-payload-app</code> script. It tries to build application using the build script which generates a bundle folder that is including multiple versions of GraphQL as shown with this error:<br><code>Error: Cannot use GraphQLScalarType &quot;DateTime&quot; from another module or realm.</code><br>But fixing it by forcing the latest version of graphql with a resolution block in package.json breaks the admin interface as they are expected older versions.<br><pre><code class=\"hljs\">&quot;resolutions&quot;: {\n    &quot;graphql&quot;: &quot;16.6.0&quot;,\n    &quot;**/graphql&quot;: &quot;16.6.0&quot;\n  },</code></pre><br><br>So what versions should satisfy both, server and admin interface?",
        "fileAttachments": [],
        "authorID": "1072442754455588884",
        "authorName": "jayzai",
        "authorAvatar": null,
        "createdAtDate": 1675776170550
      },
      {
        "content": "Hey @jayzai , I&#x27;m taking a look into this now. Let me try to recreate.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675872239417
      },
      {
        "content": "I&#x27;m not able to recreate this. Which template did you choose? Did you perform any modifications?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675873361888
      },
      {
        "content": "There is a related thread on github, <a href=\"https://github.com/payloadcms/payload/discussions/1856\">https://github.com/payloadcms/payload/discussions/1856</a> about this problem while using npm. What package manager are you using?<br>We&#x27;re going to look into this more today.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675955322914
      },
      {
        "content": "I <strong>was</strong> able to recreate the graphql error from the steps in the thread on github ^<br>That should give us more to look into.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675958475323
      },
      {
        "content": "Interesting, @jayzai does your Dockerfile contain npm commands or yarn commands? (This is generated by create-payload-app based upon what you have installed on your machine)",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675958879063
      },
      {
        "content": "Hello, got almost this problem today, Error: Expected DateTime to be a GraphQL nullable type.<br><br>Using PNPM, working in build in local, but crash in railway ,,,<br><br>The worse thing is i don&#x27;t even use GraphQL, it would be really great to dissociate GraphQL and import it as a subpackage for people wanting to use it",
        "fileAttachments": [],
        "authorID": "204263616013139970",
        "authorName": "HSWMK",
        "authorAvatar": null,
        "createdAtDate": 1677212154961
      },
      {
        "content": "We definitely have had this conversation and have plans to abstract out certain pieces from the core of Payload if it makes sense.<br><br>In the meantime, you could disable graphql by putting this in your config<br><pre><code class=\"hljs\">graph: {\n  disable: true\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677272373267
      },
      {
        "content": "My bad didn’t saw this configuration option, thank you ! But yeah it would be great to have it only if wanted 🙏",
        "fileAttachments": [],
        "authorID": "204263616013139970",
        "authorName": "HSWMK",
        "authorAvatar": null,
        "createdAtDate": 1677272455012
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "How to generate JWT token for a user without calling .login(email, password)?",
      "id": "1071806386037604352",
      "guildId": "967097582721572934",
      "createdAt": 1675608955631
    },
    "messages": [
      {
        "content": "I am using Google OAuth to authenticate my users. When I receive google id token, I would verify it and then find the user with the corresponding email. However, I don&#x27;t know how to generate the JWT for that specific user via local API without specifying email and password (especially since there&#x27;s no password)",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675608955631
      },
      {
        "content": "Or is it not supported at the moment?",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675699399588
      },
      {
        "content": "Hey, there is a lot that goes into making your auth strategy. It is tough to explain the details, but you&#x27;ll need to sign your own JWT in a new custom endpoint route and use the <code>disableLocalStrategy</code> auth option as that will turn off the built-in email + password fields along with other auth features you won&#x27;t want under your strategy.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676385543792
      },
      {
        "content": "This was a really good write up on what you need in another community-help post that could help: <a href=\"https://discord.com/channels/967097582721572934/1073356002101035108/1073672246503166022\">https://discord.com/channels/967097582721572934/1073356002101035108/1073672246503166022</a>",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676385577578
      },
      {
        "content": "oh my that really is extensive. I&#x27;ve implemented it like that as well. Thanks for reply!",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1676442354757
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Error: Unexpected end of form",
      "id": "1073654127420256367",
      "guildId": "967097582721572934",
      "createdAt": 1676049491506
    },
    "messages": [
      {
        "content": "I&#x27;m getting an unexpected end of form when running Payload on a Google Cloud Function. It&#x27;s a busboy error, related ticket here: <a href=\"https://github.com/mscdex/busboy/issues/296\">https://github.com/mscdex/busboy/issues/296</a>.<br><br>Is there any easy fix or config that can alter the buffer that Payload uses?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1073654127420256367/1073654206608724058/image.png",
            "name": "image.png",
            "id": "1073654206608724058",
            "size": 28494,
            "url": "https://cdn.discordapp.com/attachments/1073654127420256367/1073654206608724058/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1073654127420256367/1073654206608724058/image.png",
            "height": 230,
            "width": 749,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1676049491506
      },
      {
        "content": "The top-level <code>upload</code> property of the payload config is for configuring <code>express-fileupload</code>, which looks to support passing through the busboy configuration.<br><br>Types here: <a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/express-fileupload/index.d.ts\">https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/express-fileupload/index.d.ts</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676058356584
      },
      {
        "content": "express-fileupload: <a href=\"https://github.com/richardgirges/express-fileupload\">https://github.com/richardgirges/express-fileupload</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676058367249
      },
      {
        "content": "Not sure specifically what you&#x27;d need to modify specifically, but this is what we have exposed.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676058392279
      },
      {
        "content": "Looks like the intellisense is not working. You could clone down payload and use one of the config.ts files to play around with that if you wanted.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676058446525
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "How to get current user data",
      "id": "1070810433080004668",
      "guildId": "967097582721572934",
      "createdAt": 1675371501942
    },
    "messages": [
      {
        "content": "Is it possible to get the current logged in user data ? For example, I have a button in the sidebar that triggers a function, but I need to know which user is currently pressing the button to do different stuff.",
        "fileAttachments": [],
        "authorID": "122444319054495746",
        "authorName": "SKRY",
        "authorAvatar": "5b54bd085cab964c72bce21dcfe04638",
        "createdAtDate": 1675371501942
      },
      {
        "content": "How to get current user data",
        "fileAttachments": [],
        "authorID": "122444319054495746",
        "authorName": "SKRY",
        "authorAvatar": "5b54bd085cab964c72bce21dcfe04638",
        "createdAtDate": 1675371539875
      },
      {
        "content": "Yep! You can use the <code>useAuth</code> hook to get the user that is logged in: <a href=\"https://payloadcms.com/docs/admin/hooks#useauth\">https://payloadcms.com/docs/admin/hooks#useauth</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675431625267
      },
      {
        "content": "Thanks",
        "fileAttachments": [],
        "authorID": "122444319054495746",
        "authorName": "SKRY",
        "authorAvatar": "5b54bd085cab964c72bce21dcfe04638",
        "createdAtDate": 1675545386188
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "How to use relative urls in css, e.g. background-image: url(/example.jpg)",
      "id": "1070293286507511828",
      "guildId": "967097582721572934",
      "createdAt": 1675248204591
    },
    "messages": [
      {
        "content": "I don&#x27;t want to bundle this image as it already in the public folder.<br><pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.example</span> {\n  <span class=\"hljs-attribute\">background-image</span>: <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">/example.jpg</span>);\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1675248204591
      },
      {
        "content": "It should be relative to the css file where the rule is declared",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1675261063515
      },
      {
        "content": "Assuming that image lives in the root of your public folder then your code looks correct, you might need quotes around the path i.e. <code>url(&#x27;/example.jpg&#x27;);</code>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675273879922
      },
      {
        "content": "Alright, reported: <a href=\"https://github.com/payloadcms/payload/issues/1997\">https://github.com/payloadcms/payload/issues/1997</a>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1675325262162
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Pass .env variable to collections config preview URL",
      "id": "1070753504471294012",
      "guildId": "967097582721572934",
      "createdAt": 1675357929104
    },
    "messages": [
      {
        "content": "I need to use an env variable to pass a secret to the preview url in a collection config. I have tried a few variations of the code below, but seems like the env variables are not defined when the config gets instantiated. <br><br>What&#x27;s the best way to get an env value into that URL? <br><br><pre><code class=\"hljs\">import { CollectionConfig } from &quot;payload/types&quot;;\nimport formatSlug from &quot;../utilities/formatSlug&quot;;\nimport { Capstone } from &quot;../blocks/Capstone&quot;;\nimport { Cards } from &quot;../blocks/Cards&quot;;\n\nconst previewUrl = process.env.PREVIEW_URL || &quot;http://localhost:3000&quot;;\nconst previewSecret = process.env.PREVIEW_SECRET;\nconsole.log(previewSecret);\n\nexport const Page: CollectionConfig = {\n    slug: &quot;pages&quot;,\n    admin: {\n        useAsTitle: &quot;title&quot;,\n        preview: (doc) =&gt; {\n            return `${previewUrl}/api/preview?secret=${previewSecret}&amp;slug=${doc.slug}`;\n        },\n    },\n...</code></pre>",
        "fileAttachments": [],
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675357929104
      },
      {
        "content": "Found that Payload has some security features in place to block env variables unless they&#x27;re prefixed with <code>PAYLOAD_PUBLIC_</code>  (<a href=\"https://payloadcms.com/docs/admin/webpack#admin-environment-vars\">https://payloadcms.com/docs/admin/webpack#admin-environment-vars</a>). After doing that, it worked fine. <br><br><pre><code class=\"hljs\">import { CollectionConfig } from &quot;payload/types&quot;;\nimport formatSlug from &quot;../utilities/formatSlug&quot;;\nimport { Capstone } from &quot;../blocks/Capstone&quot;;\nimport { Cards } from &quot;../blocks/Cards&quot;;\n\nexport const Page: CollectionConfig = {\n    slug: &quot;pages&quot;,\n    admin: {\n        useAsTitle: &quot;title&quot;,\n        preview: (doc) =&gt; {\n            const previewUrl =\n              process.env.PAYLOAD_PUBLIC_PREVIEW_URL || &quot;http://localhost:3000&quot;;\n            const previewSecret = process.env.PAYLOAD_PUBLIC_PREVIEW_SECRET;\n            return `${previewUrl}/api/preview?secret=${previewSecret}&amp;slug=${doc.slug}`;\n        },\n    },\n...</code></pre>",
        "fileAttachments": [],
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675359284306
      },
      {
        "content": "NOTE: I had to move the env references <em>inside</em> the preview function (I updated the code above), or else it broke when running <code>yarn build</code> . I think that might be a bug? It seems like it should be able to access those env variables outside the exported function when building, as it does in dev mode.",
        "fileAttachments": [],
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675363927871
      },
      {
        "content": "Check that... just upgraded to v1.6.3 and it&#x27;s again <strong>not </strong> working when building for production. Is that a bug or is there a better way to pass variables to this preview url?",
        "fileAttachments": [],
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675365562611
      },
      {
        "content": "Ah, this is a known issue: <a href=\"https://github.com/payloadcms/payload/issues/1654\">https://github.com/payloadcms/payload/issues/1654</a>",
        "fileAttachments": [],
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675370278006
      },
      {
        "content": "@Douggie O you were able to resolve your issue by following along with the comments in that issue?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675431811546
      },
      {
        "content": "Yes, I added the require/import dotenv in both <code>payload.config.ts</code> and <code>server.ts</code> and that worked out fine. It would be awesome for future developers to have that clearly documented and set up like that in the starters (or figure out a way to make PAYLOAD_PUBLIC_ env variables available across the board). Thanks for checking up!",
        "fileAttachments": [],
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675432030626
      },
      {
        "content": "I agree with the clarity, but I do not think there is a way to consolidate and remove the need for both. Just the nature of the build/dev process 😜",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675432135573
      },
      {
        "content": "All good, minor hiccup on an amazing product. Keep up the great work!",
        "fileAttachments": [],
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675432321107
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "Remove element type for richTexy",
      "id": "1069848433868951613",
      "guildId": "967097582721572934",
      "createdAt": 1675142143457
    },
    "messages": [
      {
        "content": "I want to remove de code button from a richtext field, i don&#x27;t add it in my <code>admin:elements[]</code> is there a way to remove it?",
        "fileAttachments": [],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1675142143457
      },
      {
        "content": "Hi @akacronos, what you&#x27;re doing is correct however  <code>code</code> is not an element it is a leaf. You can see which options are elements vs leaves here: <a href=\"https://payloadcms.com/docs/fields/rich-text#admin-config\">https://payloadcms.com/docs/fields/rich-text#admin-config</a><br><br>So if you add the leaves property and don&#x27;t include &#x27;code&#x27; then this option will be hidden. <br><br><pre><code class=\"hljs\">    {\n      name: &#x27;content&#x27;,\n      type: &#x27;richText&#x27;,\n      admin: {\n        leaves: [\n          &#x27;bold&#x27;,\n          &#x27;italic&#x27;\n        ],\n      }\n    },</code></pre><br>For example this would just show bold and italic - or if you had an empty array here none would show.",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675159654681
      },
      {
        "content": "Oh, thanks!",
        "fileAttachments": [],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1675280405500
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "How to do dot notation on graphql where?",
      "id": "1077554723336499260",
      "guildId": "967097582721572934",
      "createdAt": 1676979466042
    },
    "messages": [
      {
        "content": "Is it possible to create a gql query with where clause same as the where on REST like post.image.alt on <a href=\"https://localhost:9000/api/posts?where[post.image.alt][equals]=test%20image\">https://localhost:9000/api/posts?where[post.image.alt][equals]=test%20image</a>",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676979466042
      },
      {
        "content": "Not currently, but it’s on our roadmap. The REST endpoints can do this (once the open issue is resolved).<br><br>Roadmap item: <a href=\"https://github.com/payloadcms/payload/discussions/761\">https://github.com/payloadcms/payload/discussions/761</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676983215457
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "How to set expiration limit for forgotpassword token ?",
      "id": "1077161947851669544",
      "guildId": "967097582721572934",
      "createdAt": 1676885821069
    },
    "messages": [
      {
        "content": "How  to change expiration limit for forgot password token from 1 hour ?",
        "fileAttachments": [],
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1676885821069
      },
      {
        "content": "@Veera26 According to the source, the options for forgotPassword are as follows:<br><pre><code class=\"hljs\">export type Arguments = {\n  collection: Collection\n  data: {\n    email: string\n    [key: string]: unknown\n  }\n  disableEmail?: boolean\n  expiration?: number\n  req: PayloadRequest\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676899893472
      },
      {
        "content": "reference: <a href=\"https://github.com/payloadcms/payload/blob/master/src/auth/operations/forgotPassword.ts\">https://github.com/payloadcms/payload/blob/master/src/auth/operations/forgotPassword.ts</a>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676899915063
      },
      {
        "content": "Lucky for you, the default is one hour",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676899969303
      },
      {
        "content": "<pre><code class=\"hljs\">  user.resetPasswordExpiration = expiration || Date.now() + 3600000; // 1 hour</code></pre>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676899975233
      },
      {
        "content": "OKay thanks",
        "fileAttachments": [],
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1677565982020
      },
      {
        "content": "I will look into it",
        "fileAttachments": [],
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1677565987648
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Cell component with first column \"WrapElement\" link",
      "id": "1080099407044808715",
      "guildId": "967097582721572934",
      "createdAt": 1677586165916
    },
    "messages": [
      {
        "content": "Hello,<br>I created a cell component link in the doc (<a href=\"https://payloadcms.com/docs/admin/components#cell-component\">https://payloadcms.com/docs/admin/components#cell-component</a>)<br>When the cell is in the first position the &quot;WrapElement&quot; (<a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/Cell/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/Cell/index.tsx</a>) with the link to the document is not added.<br>Is this a bug or is there something to be implemented?<br><br>Thank you",
        "fileAttachments": [],
        "authorID": "340889215304728577",
        "authorName": "febba",
        "authorAvatar": null,
        "createdAtDate": 1677586165916
      },
      {
        "content": "You will need to implement your own wrap element component. You have everything you need to do that since the link prop is passed to your custom component. You are looking at the default cell component in that file, but you are rendering a custom cell component",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677588543888
      },
      {
        "content": "Ok thank you",
        "fileAttachments": [],
        "authorID": "340889215304728577",
        "authorName": "febba",
        "authorAvatar": null,
        "createdAtDate": 1677594303864
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "useAsTitle a field (not id) from a relationship",
      "id": "1078251117735059476",
      "guildId": "967097582721572934",
      "createdAt": 1677145499405
    },
    "messages": [
      {
        "content": "Hello guys, I was wondering if there is any built-in way to do this:<br><br>I have 2 collections, UserCourses and Courses. <code>UserCourses</code> has a relationship to <code>Courses</code>.<br><br>I wanted to use as the title for each <code>UserCourses</code> record, the title of the course it has a relationship for (example: <code>Course.title</code> instead of the ID of the <code>Course</code>). <br><br>I uploaded a couple of screenshots to explain better what I&#x27;m trying to do. Thank you!",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078251117735059476/1078251117894451281/2023-02-23_10-43.png",
            "name": "2023-02-23_10-43.png",
            "id": "1078251117894451281",
            "size": 102000,
            "url": "https://cdn.discordapp.com/attachments/1078251117735059476/1078251117894451281/2023-02-23_10-43.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078251117735059476/1078251117894451281/2023-02-23_10-43.png",
            "height": 517,
            "width": 1244,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078251117735059476/1078251118229979156/2023-02-23_10-44.png",
            "name": "2023-02-23_10-44.png",
            "id": "1078251118229979156",
            "size": 39833,
            "url": "https://cdn.discordapp.com/attachments/1078251117735059476/1078251118229979156/2023-02-23_10-44.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078251117735059476/1078251118229979156/2023-02-23_10-44.png",
            "height": 557,
            "width": 1222,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "765140200438366209",
        "authorName": "Lloyd",
        "authorAvatar": null,
        "createdAtDate": 1677145499405
      },
      {
        "content": "Hi @Lloyd useAsTitle does not support nested fields currently, we will commonly use a virtual field to get specific data for your document title. For example:<br><br><pre><code class=\"hljs\">    {\n      name: &#x27;title&#x27;,\n      type: &#x27;text&#x27;,\n      admin: {\n        hidden: true,\n      },\n      hooks: {\n        beforeChange: [\n          ({ data }) =&gt; {\n            return data.course.title;\n          }\n        ],\n      },\n    },</code></pre><br><br>Then you would set <code>useAsTitle: &#x27;title&#x27;</code>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1677175154008
      },
      {
        "content": "Hi, it seems like a really good solution, thanks a lot!<br><br>I&#x27;ve encountered only one problem, in my case <code>data.course.title</code> did not contain the title of the course, here&#x27;s the output of <code>data</code>:<br><pre><code class=\"hljs\">{\n  tier: &#x27;base&#x27;,\n  user: &#x27;63c66090c20a548b1c0a325b&#x27;,\n  title: &#x27;&#x27;,\n  course: &#x27;63f4835d1c09415657bfccff&#x27;\n}</code></pre><br>But I fetched it like this<br><pre><code class=\"hljs\">    {\n      name: &#x27;title&#x27;,\n      type: &#x27;text&#x27;,\n      admin: {\n        hidden: true\n      },\n      hooks: {\n        beforeChange: [\n          async ({data}) =&gt; {\n            const req = await fetch(`${process.env.URL}/api/courses/${data.course}`)\n              .then(res =&gt; res.json())\n              .then(data =&gt; {\n                return data.title\n              })\n            return req\n          }\n        ]\n      }\n    }</code></pre><br><br>And now everything works well",
        "fileAttachments": [],
        "authorID": "765140200438366209",
        "authorName": "Lloyd",
        "authorAvatar": null,
        "createdAtDate": 1677223674174
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Set PAYLOAD_PUBLIC_ env vars at runtime?",
      "id": "1070982210523500584",
      "guildId": "967097582721572934",
      "createdAt": 1675412456876
    },
    "messages": [
      {
        "content": "Hello,<br><br>It seems that <code>PAYLOAD_PUBLIC_*</code> env vars are substituted into frontend scripts at build time. I was just wondering whether there&#x27;s any way to delay this substitution until runtime so that I don&#x27;t have to rebuild my docker container to update my S3 endpoint.<br><br>Thanks,<br>Oliver",
        "fileAttachments": [],
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675412456876
      },
      {
        "content": "Hmm, this is an interesting problem. Since the bundle must be built before serving, I don&#x27;t know of an easy way to accomplish this.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676053530665
      },
      {
        "content": "Are you using the cloud storage plugin?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676054788541
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "I think PrettyPrint is deprecated",
      "id": "1070626220322066442",
      "guildId": "967097582721572934",
      "createdAt": 1675327582198
    },
    "messages": [
      {
        "content": "I think PrettyPrint is deprecated and should use transport instead. <br>This example works with my Pino logger but does not work with Payload.<br><br><pre><code class=\"hljs\">import { pino } from &quot;pino&quot;;\n\nexport type LoggerOptions = pino.LoggerOptions;\n\nexport const defaultLoggerOptions = {\n  level: process.env.LOG_LEVEL || &quot;info&quot;,\n  transport: process.env.NODE_ENV !== &quot;production&quot;\n    ? {\n        target: &quot;pino-pretty&quot;,\n        options: {\n          colorize: true,\n          ignore: &quot;pid,hostname&quot;,\n          translateTime: &quot;HH:MM:ss&quot;,\n        }\n      }\n    : undefined,\n} as LoggerOptions;</code></pre><br><br>Payload hack; prettyPrint is deprecated<br><pre><code class=\"hljs\">loggerOptions: {\n      ...defaultLoggerOptions, // My logger options.\n      prettyPrint: process.env.NODE_ENV !== &quot;production&quot; ? {\n        ignore: &quot;pid,hostname&quot;,\n        translateTime: &quot;HH:MM:ss&quot;,\n      } : undefined,\n} as unknown,</code></pre>",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1675327582198
      },
      {
        "content": "We started work on migrating this but ran into issues with how peer dependencies are handled. I think we&#x27;ll get back to it at some point.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675442166376
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Using a custom domain to point to cloud run instance hosting payload server not allowing auth",
      "id": "1072062939051339838",
      "guildId": "967097582721572934",
      "createdAt": 1675670122636
    },
    "messages": [
      {
        "content": "Hey Payload team,<br><br>I&#x27;m currently hosting my payload server on a google cloud run instance, i am using firebase hosting to point a custom domain to the end point, upon login in with an admin account I get the error &quot;Unauthorized, you must be logged in to make this request. You are not allowed to access this page&quot;. <br><br>When i use the direct url for the endpoint provided from google cloud run with the same payload admin account it works.",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1675670122636
      },
      {
        "content": "@allanc",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1675670129037
      },
      {
        "content": "My investigation so far... does the <pre><code class=\"hljs\">serverURL</code></pre> need to be the exact domain and not a hosted url? docs found here <a href=\"https://payloadcms.com/docs/configuration/overview#using-environment-variables-in-your-config\">https://payloadcms.com/docs/configuration/overview#using-environment-variables-in-your-config</a>",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1675670172133
      },
      {
        "content": "@jmikrut hey sorry for the tag, just needed some help here since the threads going stale 🙂",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1675901375456
      },
      {
        "content": "yes, the serverURL needs to be the actual URL (with https) that you access the Payload admin with",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675902558660
      },
      {
        "content": "you should also be able to leave it undefined if you don&#x27;t know the serverURL - BUT if you do leave it undefined, then you need to whitelist the domains you&#x27;ll be using in the <code>csrf</code> property of the Payload config",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675902588032
      },
      {
        "content": "because we only accept auth cookies from either serverURL or explicitly whitelisted domains in csrf array",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675902602747
      },
      {
        "content": "for security reasons",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675902607937
      },
      {
        "content": "cc: @allanc",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1675994875426
      },
      {
        "content": "thank you and appreciate you getting to this question",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1675994887508
      },
      {
        "content": "Thanks @jmikrut, that helped me out also.",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676004398632
      },
      {
        "content": "of course! 💸",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676040820690
      },
      {
        "content": "@jmikrut hey adding in the serverURL didn&#x27;t work, do we have to add it both to <code>serverURL</code> and the <code>csrf</code>",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446214103
      },
      {
        "content": "@MRL did it work for you?",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446221856
      },
      {
        "content": "All I had to do was add the serverURL in and make sure that matches the URL where you are hosting the application.",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676446290919
      },
      {
        "content": "do you know if it supports the subdomain",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446301865
      },
      {
        "content": "or the actual base domain @MRL",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446312263
      },
      {
        "content": "It supports subdomains. So if your url is <a href=\"https://cms.mywebsite.com\">https://cms.mywebsite.com</a> then that is what you need to enter into the serverURL",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676446352781
      },
      {
        "content": "ah thank you @MRL it still doesnt work for us - maybe it might be something to do with firebase hosting a cloud run instance",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446450760
      },
      {
        "content": "Do you have the url set in the .env files?",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676446474636
      },
      {
        "content": "yep - set in the .env files on cloud run",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446517175
      },
      {
        "content": "I&#x27;m not super clued up on Firebase hosting but if you can access the logs when it is building, you should be able to see where the serverUrl is pointing to. Or you can check the browser console to see where the API calls are being made to",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676446531600
      },
      {
        "content": "sweet, for now i just redirected it to the main url on the firebase hosting",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446724486
      },
      {
        "content": "so atleast its friendly to remember",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446730304
      },
      {
        "content": "that works for now",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446732050
      },
      {
        "content": "@MRL thanks",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446739120
      },
      {
        "content": "All good 🙂",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676446751055
      }
    ],
    "messageCount": 26
  },
  {
    "info": {
      "name": "Field hook for creating slug",
      "id": "1070026227273973820",
      "guildId": "967097582721572934",
      "createdAt": 1675184532708
    },
    "messages": [
      {
        "content": "I am trying to use a hook for generating slug based on title<br><br><pre><code class=\"hljs\">{\n            name: &#x27;title&#x27;,\n            required: true,\n            type: &#x27;text&#x27;,\n            localized: true,\n        },\n        {\n            name: &#x27;slug&#x27;,\n            required: true,\n            type: &#x27;text&#x27;,\n            unique: true,\n            localized: true,\n            hooks: {\n                beforeValidate: [slugify(&#x27;title&#x27;)],\n            },\n        },</code></pre><br><br>but I get this error: <br><pre><code class=\"hljs\"> Field &quot;slug&quot; &gt; &quot;value&quot; does not match any of the allowed types</code></pre><br><br>I want to generate the slug from the title. I took a look at the website on GitHub (<a href=\"https://github.com/payloadcms/website-cms/blob/b130b43cc1cf7a0ac1ba4c71ba7db90627f7a444/src/fields/slug.ts#L7\">https://github.com/payloadcms/website-cms/blob/b130b43cc1cf7a0ac1ba4c71ba7db90627f7a444/src/fields/slug.ts#L7</a>) and that is how I got the hook but I dont want to create another field called slug and etc, I just want to use it inside the collection file",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675184532708
      },
      {
        "content": "is it because you don&#x27;t want the field to show up in the admin UI?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675189568474
      },
      {
        "content": "i.e. = you just want the data to be in the API response, and not be editable",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675189577036
      },
      {
        "content": "to do that, you can set <code>admin.disabled</code> to <code>true</code> on your slug field",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675189595515
      },
      {
        "content": "and it will be hidden in admin UI",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675189598352
      },
      {
        "content": "@jmikrut yes, the idea is to auto generate the slug value from the title automatically when post is saved",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675215420283
      },
      {
        "content": "but the issue is Field &quot;slug&quot; &gt; &quot;value&quot; does not match any of the allowed types error",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675215428018
      },
      {
        "content": "that means you don&#x27;t have your field config for the <code>slug</code> field correct",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675215886527
      },
      {
        "content": "can you copy / paste your <code>slug</code> field config here?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675215897090
      },
      {
        "content": "hum, I am not sure, I added it as a text field",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675220728799
      },
      {
        "content": "<pre><code class=\"hljs\">{\n            name: &#x27;slug&#x27;,\n            required: true,\n            type: &#x27;text&#x27;,\n            unique: true,\n            localized: true,\n            hooks: {\n                beforeValidate: [slugify(&#x27;title&#x27;)],\n            },\n        },</code></pre>",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675220733199
      },
      {
        "content": "slugify <a href=\"https://www.npmjs.com/package/slugify\">https://www.npmjs.com/package/slugify</a> is this library I want to use",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675220758024
      },
      {
        "content": "to convert the title",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675220765753
      },
      {
        "content": "the error is because you are not writing your <code>beforeValidate</code> hook properly",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675221544207
      },
      {
        "content": "in that snippet, you&#x27;re <em><strong>calling</strong></em> the function, which will likely return a string. The <code>beforeValidate</code> property can only accept an array of functions",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675221570933
      },
      {
        "content": "so you need to write your beforeValidate hook itself as a function, and not call it",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675221582851
      },
      {
        "content": "oh I see, thank you",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675226677153
      },
      {
        "content": "I will give it a shot tomorrow morning",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675226689590
      },
      {
        "content": "@jmikrut I managed to get this working and use title automatically as a slug",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675369938051
      },
      {
        "content": "Thank you for your help",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675369956765
      },
      {
        "content": "@generator101 could you kindly post your solution here? I&#x27;m also having issues working dynamically between different field selections.",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1676347528135
      },
      {
        "content": "sure",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676425897722
      },
      {
        "content": "@KasparTr here you go",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676425902661
      },
      {
        "content": "<pre><code class=\"hljs\">{\n    name: &#x27;slug&#x27;,\n    type: &#x27;text&#x27;,\n    unique: true,\n    localized: true,\n    index: true,\n    admin: {\n        readOnly: true\n    },\n    hooks: {\n        beforeValidate: [\n            ({ req: { payload }, data }) =&gt; {\n                if (payload) {\n                    return slugify(data.title)\n                }\n            },\n        ],\n    },\n},</code></pre>",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676425928999
      },
      {
        "content": "I used this library <a href=\"https://www.npmjs.com/package/slugify\">https://www.npmjs.com/package/slugify</a>",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676425946955
      },
      {
        "content": "to convert title to slug",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676425952765
      }
    ],
    "messageCount": 25
  },
  {
    "info": {
      "name": "React Console errors",
      "id": "1080345190583250995",
      "guildId": "967097582721572934",
      "createdAt": 1677644765278
    },
    "messages": [
      {
        "content": "Hey folks, when I run the admin portal on my express server, I&#x27;m getting some react errors when I get to the admin page. Any ideas where I should start for a fix?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1080345190583250995/1080345190792962150/image.png",
            "name": "image.png",
            "id": "1080345190792962150",
            "size": 323262,
            "url": "https://cdn.discordapp.com/attachments/1080345190583250995/1080345190792962150/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1080345190583250995/1080345190792962150/image.png",
            "height": 759,
            "width": 669,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "201094837066399744",
        "authorName": "badjab326",
        "authorAvatar": "ba2d52761439e0f4254f4daa5bd91be7",
        "createdAtDate": 1677644765278
      },
      {
        "content": "This is very likely due to reason number 3 from that error message. You probably have more than one copy of React. Do you have React installed as a dependency in your project? Or do you have Payload linked locally? These are two common causes.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677650493541
      },
      {
        "content": "Thanks a ton! Turns out there are multiple react dependencies in my project, so I added react to my overrides to fix it.<br><br><pre><code class=\"hljs\">&quot;overrides&quot;: {\n    &quot;graphql&quot;: &quot;15.8.0&quot;,\n    &quot;react&quot;: &quot;18.2.0&quot;\n  }</code></pre>",
        "fileAttachments": [],
        "authorID": "201094837066399744",
        "authorName": "badjab326",
        "authorAvatar": "ba2d52761439e0f4254f4daa5bd91be7",
        "createdAtDate": 1677719345453
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "How do I upload in-memory files via the the local API?",
      "id": "1076195533598769182",
      "guildId": "967097582721572934",
      "createdAt": 1676655409956
    },
    "messages": [
      {
        "content": "I want to upload a buffer via the local API. But I cannot find anything regarding that in the docs. can someone point me into the right direction?",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676655409956
      },
      {
        "content": "How do I upload in-memory files via the the local API?",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676655750191
      },
      {
        "content": "nevermind, found it in the docs!",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676655896610
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Switching between s3 and local media files",
      "id": "1076569813092155504",
      "guildId": "967097582721572934",
      "createdAt": 1676744645141
    },
    "messages": [
      {
        "content": "hey 👋  I am currently using plugin-cloud-storage and searched for an answer in docs, issues and here, but can&#x27;t find a solution to switch on using local media files when I am working on my local machine. Did anyone solved this?",
        "fileAttachments": [],
        "authorID": "386056031102304256",
        "authorName": "dragos.nedelcu",
        "authorAvatar": "c3cb755639223adfcf37dddacb9b0d64",
        "createdAtDate": 1676744645141
      },
      {
        "content": "The easiest way to do this would be to have an environment variables that is referenced inside your payload config, then conditionally use the plugin. Something similar can be seen here: <a href=\"https://github.com/payloadcms/plugin-cloud-storage/blob/master/dev/src/payload.config.ts\">https://github.com/payloadcms/plugin-cloud-storage/blob/master/dev/src/payload.config.ts</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677594592485
      },
      {
        "content": "tried that, unfortunately it doesn&#x27;t work 😦 ended up using minio to replicate s3 on my local machine. It works okay like that.",
        "fileAttachments": [],
        "authorID": "386056031102304256",
        "authorName": "dragos.nedelcu",
        "authorAvatar": "c3cb755639223adfcf37dddacb9b0d64",
        "createdAtDate": 1677595106434
      },
      {
        "content": "Interesting, I don&#x27;t see any reason why that wouldn&#x27;t work. Glad you were able to find a solution 👍",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677597291068
      },
      {
        "content": "We managed to have S3 on production and local files on dev simply with this; basically it’ll send an empty object on dev so the plugin doesn’t throw an error<br><br><pre><code class=\"hljs\">cloudStorage({\n    collections: process.env.NODE_ENV !== &#x27;development&#x27; &amp;&amp; {\n        media: {\n            adapter,\n        },\n    },\n}),</code></pre>",
        "fileAttachments": [],
        "authorID": "157199103921618944",
        "authorName": "Migu",
        "authorAvatar": "7c40c98d2393a326cea0da98f91966d2",
        "createdAtDate": 1677601815755
      },
      {
        "content": "yep",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677601902762
      },
      {
        "content": "@Migu that is the move",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677601906579
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Conditional verification email",
      "id": "1080479762524422225",
      "guildId": "967097582721572934",
      "createdAt": 1677676849729
    },
    "messages": [
      {
        "content": "Is there a way to conditionally send verification emails upon account creation? <br>I&#x27;m currently creating a plugin for Google Authentication and I&#x27;d like to not send verification emails if a user signs up with Google. As the default Email / Password auth is still active, verification emails should be send here.<br><br>Also, it looks like I can not create a new already verified account. It takes two steps: create an account and then update _verified: true.<br><br>As I can see I can only pass &#x27;true&#x27; or &#x27;generateEmailHTML&#x27; for ´´´verify´´´ option in a collection config.",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677676849729
      },
      {
        "content": "@TheFrontend You cant alter the _verified prop once they auth with Google?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677677030452
      },
      {
        "content": "I can, but not before the email is sent.<br><br><pre><code class=\"hljs\"> const registered = await payload.create({\n          collection: &#x27;users&#x27;,\n          showHiddenFields: true,\n          data: {\n            email: user.email,\n            name: user?.name,\n            password: pw,\n            oauth: pw,\n            loginMethod: &#x27;google&#x27;,\n          },\n        })</code></pre><br>          <br>Now the email is sent, before I can update the _verified. I can login directly but the email is still sent.<br><br><pre><code class=\"hljs\">await payload.update({\n              id: registered.id,\n              collection: &#x27;users&#x27;,\n              data: {\n                  _verified: true,\n              },\n          });</code></pre>",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677677226044
      },
      {
        "content": "@TheFrontend Unless there is a better way..",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677678935121
      },
      {
        "content": "How about disabling email",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677678940879
      },
      {
        "content": "And then manually calling <pre><code class=\"hljs\">payload.sendEmail(message)</code></pre>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677678946849
      },
      {
        "content": "on creation of a user with the type you want",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677678956731
      },
      {
        "content": "We&#x27;ve done something similar in the past by using a <code>beforeOperation</code> hook that contains the conditional logic for setting <code>disableVerificationEmail</code>. Let me post a snippet",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677680594648
      },
      {
        "content": "This used a previous Payload version, but still should be good.<br><br><pre><code class=\"hljs\">import type { CollectionBeforeOperationHook } from &#x27;payload/types&#x27;;\n\nconst skipVerificationEmail: CollectionBeforeOperationHook = ({ args, operation }) =&gt; {\n  if (operation === &#x27;create&#x27; &amp;&amp; args.req.query &amp;&amp; typeof args.req.query.checkout !== &#x27;undefined&#x27;) {\n    return {\n      ...args,\n      disableVerificationEmail: true,\n    };\n  }\n\n  return args;\n};</code></pre>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677680721497
      },
      {
        "content": "Just change up the conditional. You <em>should</em> have access to the user off of req",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677680751937
      },
      {
        "content": "Works perfectly, thanks!",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677705108572
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "Same nested block in a block",
      "id": "1072464714782748752",
      "guildId": "967097582721572934",
      "createdAt": 1675765913435
    },
    "messages": [
      {
        "content": "Hello! For a project we need to setup a tree based content block. The blocks should contain the same blocks as the parent. Is there a possibility to implement this or should something like this be done in a different way?",
        "fileAttachments": [],
        "authorID": "1064443950024368138",
        "authorName": "RTribe",
        "authorAvatar": null,
        "createdAtDate": 1675765913435
      },
      {
        "content": "Hi @RTribe! Are you looking to implement nested blocks? If so, you can see an example of this in action - pull down the <code>payload</code> repo and run the commands <code>yarn &amp;&amp; yarn dev fields.</code> <br><br>Username is <code>dev@payloadcms.com</code> - pass is <code>test</code><br><br>The <code>blocks</code> collection will have an example of nested blocks. Let me know if this is what you were looking for!",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1072464714782748752/1073631067065569362/nested-blocks.png",
            "name": "nested-blocks.png",
            "id": "1073631067065569362",
            "size": 103344,
            "url": "https://cdn.discordapp.com/attachments/1072464714782748752/1073631067065569362/nested-blocks.png",
            "proxyURL": "https://media.discordapp.net/attachments/1072464714782748752/1073631067065569362/nested-blocks.png",
            "height": 878,
            "width": 1776,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1676043993542
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "How to set aliases for server-only modules used inside my hooks (Webpack errors)",
      "id": "1070447034231967844",
      "guildId": "967097582721572934",
      "createdAt": 1675284860905
    },
    "messages": [
      {
        "content": "I&#x27;m using multiple libraries involving QR codes and image processing inside a hook. I tried to follow along the webpack settings in the [docs](<a href=\"https://payloadcms.com/docs/admin/webpack\">https://payloadcms.com/docs/admin/webpack</a>) regarding setting aliases for server-side modules to prevent Webpack from trying to bundle them. I&#x27;m getting multiple Webpack errors for multiple packages such as:<br><pre><code class=\"hljs json\">ERROR in ./node_modules/@jimp/core/es/index.js <span class=\"hljs-number\">42</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">33</span><span class=\"hljs-number\">-46</span>\nModule not found<span class=\"hljs-punctuation\">:</span> Error<span class=\"hljs-punctuation\">:</span> Can&#x27;t resolve &#x27;fs&#x27; in &#x27;/mnt/c/Users/minanaro/Desktop/payload-cms/node_modules/@jimp/core/es&#x27;\n\nBREAKING CHANGE<span class=\"hljs-punctuation\">:</span> webpack &lt; <span class=\"hljs-number\">5</span> used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill<span class=\"hljs-punctuation\">,</span> you need to<span class=\"hljs-punctuation\">:</span>\n        - add a fallback &#x27;resolve.fallback<span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span> <span class=\"hljs-attr\">&quot;url&quot;</span><span class=\"hljs-punctuation\">:</span> require.resolve(<span class=\"hljs-string\">&quot;url/&quot;</span>) <span class=\"hljs-punctuation\">}</span>&#x27;\n        - install &#x27;url&#x27;\nIf you don&#x27;t want to include a polyfill<span class=\"hljs-punctuation\">,</span> you can use an empty module like this<span class=\"hljs-punctuation\">:</span>\n        resolve.fallback<span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span> <span class=\"hljs-attr\">&quot;url&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">false</span></span> <span class=\"hljs-punctuation\">}</span></code></pre><br><br><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> encodeImageWithQRPath = path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&quot;hooks/encodeImageWithQR.js&quot;</span>);\n<span class=\"hljs-keyword\">const</span> mockModule = path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&quot;util/mockObj.js&quot;</span>);\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">buildConfig</span>({\n    <span class=\"hljs-attr\">admin</span>: {\n        <span class=\"hljs-attr\">webpack</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">config</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">return</span> {\n                ...config,\n                <span class=\"hljs-attr\">resolve</span>: {\n                    ...config.<span class=\"hljs-property\">resolve</span>,\n                    <span class=\"hljs-attr\">alias</span>: {\n                        ...config.<span class=\"hljs-property\">resolve</span>.<span class=\"hljs-property\">alias</span>,\n                        [encodeImageWithQRPath]: mockModule,\n                    },\n                },\n            };\n        },\n<span class=\"hljs-comment\">// and so on</span></code></pre><br><br>mockModule.js is the same as the docs example, an empty object. I also have my encodeImageWith... hook. I checked the alias paths and they&#x27;re correct. I also tried setting the fallback values for the modules to be false but to no avail.<br><br>What am I doing wrong?<br>Thanks for your help!",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675284860905
      },
      {
        "content": "Oh, it seems deleting node_modules/.cache fixed it... Apologies! 😄",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675285520011
      },
      {
        "content": "nice!",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675285652061
      },
      {
        "content": "i was just about to say that",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675285654515
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Field tags?",
      "id": "1077252662237605949",
      "guildId": "967097582721572934",
      "createdAt": 1676907449064
    },
    "messages": [
      {
        "content": "How could I tag a question?<br>At present, &quot;Question Set 05&quot; is my indication for Q5. It could show more information (in a collapsed view) about what that field contains. If this doesn&#x27;t exist, it would be a nice to have in the elipsis menu in the attached screenshot, or within the expanded field, that displays in the collapsed view.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1077252662237605949/1077252662917079131/Screenshot_2023-02-20_at_15.27.21.png",
            "name": "Screenshot_2023-02-20_at_15.27.21.png",
            "id": "1077252662917079131",
            "size": 17477,
            "url": "https://cdn.discordapp.com/attachments/1077252662237605949/1077252662917079131/Screenshot_2023-02-20_at_15.27.21.png",
            "proxyURL": "https://media.discordapp.net/attachments/1077252662237605949/1077252662917079131/Screenshot_2023-02-20_at_15.27.21.png",
            "height": 230,
            "width": 569,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676907449064
      },
      {
        "content": "If you are looking to customize the row label (&quot;Question Set 05&quot;) you can pass a React component to <code>arrayField.admin.components.RowLabel</code>. That way you can show information contained in the array item instead of the generated label. See documentation here: <a href=\"https://payloadcms.com/docs/fields/array#admin-config\">https://payloadcms.com/docs/fields/array#admin-config</a>",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1676912359374
      },
      {
        "content": "Awesome, thanks Jesse!",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676912437271
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Conditionally hide preview button?",
      "id": "1070901022245011486",
      "guildId": "967097582721572934",
      "createdAt": 1675393100082
    },
    "messages": [
      {
        "content": "Is there a way to conditionally render the preview button in the admin ui for previewing drafts? I.e. return a string would render the button but returning null/undefined would not render it?<br><br><a href=\"https://payloadcms.com/docs/configuration/collections#preview\">https://payloadcms.com/docs/configuration/collections#preview</a>",
        "fileAttachments": [],
        "authorID": "767903785216770058",
        "authorName": "ghard1314",
        "authorAvatar": "c007ec6ad4057708ca240354f3fca3c5",
        "createdAtDate": 1675393100082
      },
      {
        "content": "Hey @ghard1314 - conditionally rendering the preview button is currently not supported but it would definitely make a great feature. We will keep this on our radar!",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1675960102078
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Images showing as strings and not the image information",
      "id": "1077087054187483156",
      "guildId": "967097582721572934",
      "createdAt": 1676867965028
    },
    "messages": [
      {
        "content": "Hi all<br>I have a block that returns some items and one of which is an image. <br>I can&#x27;t however get the actual image to return, it just returns me the image id. Is there any way to get the actual image to be returned with all the data?<br><br>I can see the image data in the API URL so I believe it is probably related to the image being of type <code>string | Media</code> ?<br>Do I need to query the images separately?",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676867965028
      },
      {
        "content": "I&#x27;m also using the REST API by the way.",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676874784715
      },
      {
        "content": "Ahh figured out the issue, I didn&#x27;t have the right access set on the Media collection!<br><pre><code class=\"hljs\">access: {\n  read: () =&gt; true\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676877360090
      },
      {
        "content": "You need to set/increase the <code>depth</code> parameter in your request. Payload doesn&#x27;t populate nested document by default and only gives you the <code>id</code> of it.<br><a href=\"https://payloadcms.com/docs/getting-started/concepts#depth\">https://payloadcms.com/docs/getting-started/concepts#depth</a>",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1676877414115
      },
      {
        "content": "Well you were too fast 😀",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1676877446326
      },
      {
        "content": "Ah haha sorry mate, we were right on the same submit time. Thanks for your reply though. I was checking the depth but could see I was getting the data back in the API. I just couldn’t access it. Then when querying the media by itself, I realised that it wasn’t working which is when I tested the access.",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676913242307
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Fetching items by slug (or other unique text field)",
      "id": "1036263494649122908",
      "guildId": "967097582721572934",
      "createdAt": 1667134869969
    },
    "messages": [
      {
        "content": "Hey, the REST api currently works with the element ID&#x27;s, is it possible to also make it work with unique text fields on a collection, for example I create a slug field so I could do /api/recipes/mojito?",
        "fileAttachments": [],
        "authorID": "84990579150163968",
        "authorName": "kobeaerts",
        "authorAvatar": null,
        "createdAtDate": 1667134869969
      },
      {
        "content": "U could use query filters for this <br><a href=\"https://payloadcms.com/docs/queries/overview#operators\">https://payloadcms.com/docs/queries/overview#operators</a><br>like:<br><code>/api/recipes?where[slug][equals]=mojito</code><br><br>If u index the queried field, it&#x27;ll be even faster",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1667136409832
      },
      {
        "content": "True but this gives back an array of results, is it possible to get a single result?",
        "fileAttachments": [],
        "authorID": "84990579150163968",
        "authorName": "kobeaerts",
        "authorAvatar": null,
        "createdAtDate": 1667164217636
      },
      {
        "content": "@kobeaerts nope it&#x27;s not. This might seem weird at first pass but it starts to make sense after you use it for a bit",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1667270740729
      },
      {
        "content": "If the collection used a custom ID text field then that url could work. You won&#x27;t be able to change it though so this probably isn&#x27;t helpful.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1667463700609
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Webpack error when updating document in collection with payload.update",
      "id": "1075501371039682663",
      "guildId": "967097582721572934",
      "createdAt": 1676489908705
    },
    "messages": [
      {
        "content": "I am trying to to update a field in my collection with the following code;<br><br><pre><code class=\"hljs\"> await payload.update({\n        collection: &#x27;clients&#x27;,\n        id,\n        data: {\n            status: &#x27;meetingInviteSent&#x27;\n        },\n        depth: 2,\n    });</code></pre><br><br>However this gives me the following error in the console;<br><br><pre><code class=\"hljs\">TypeError: payload__WEBPACK_IMPORTED_MODULE_2__.default.update</code></pre><br><br>The collection doesn&#x27;t update however the toast still displays saying that the collection updated successfully.<br><br>I created this document using the JSON API from my Next.js app;<br><br><pre><code class=\"hljs\">        var result = await fetch(`${process.env.NEXT_PUBLIC_CMS_URL}/api/clients`, { \n          method: &#x27;POST&#x27;,\n          headers: {\n            &#x27;Content-Type&#x27;: &#x27;application/json&#x27;\n          },\n          body: JSON.stringify({\n            clientInformation: {\n              name: `${firstName} ${lastName}`,\n              email,\n              company \n            },\n            name: `${firstName} ${lastName}`,\n            email,\n            company,\n            lastContacted: new Date(),\n            services: services.join(&#x27;, &#x27;),\n            message\n          })});</code></pre><br><br>This adds the document to Payload. But updating it using the local API fails",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1676489908705
      },
      {
        "content": "@Mark | Omniux do you have update access defined on your clients collection?",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676915555928
      },
      {
        "content": "Hey @jesschow, I do, yeah, I have it set using a Permissions check, I can try it without. I did use a workaround for the time being and did an update using the useFormFields hook, but it is quite a tenuous solution i&#x27;ll be honest haha",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1676915785759
      },
      {
        "content": "I should probably mention I am using a custom UI field with a custom button that calls payload.update",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1676915847063
      },
      {
        "content": "@Mark | Omniux glad you found a workaround 💥  still curious what is causing this, do you get the same typeError if you explicitly set the type? i.e. <br><pre><code class=\"hljs\">data: {\n  status: &#x27;meetingInviteSent&#x27; \n} as any, </code></pre>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676916688225
      },
      {
        "content": "Afraid that&#x27;s not working either. console logging the &#x27;payload&#x27; object is returning an empty object, so the update function doesn&#x27;t exist. I am possibly misunderstanding how payload.update is meant to function. I am trying to use it inside of a custom React component that is being displayed via a UI field",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1676922968959
      },
      {
        "content": "I&#x27;m doing <code>import payload from payload</code> and using it like this;<br><br><pre><code class=\"hljs\">import payload from &#x27;payload&#x27;;\nimport { useForm, useFormFields } from &#x27;payload/components/forms&#x27;;\nimport { Data } from &#x27;payload/dist/admin/components/forms/Form/types&#x27;;\nimport React, { useEffect, useState } from &#x27;react&#x27;\n\nexport const ClientInfo = () =&gt; {\n    const [prevState, setPrevState] = useState&lt;Data | null&gt;(null)\n    const { getData, submit } = useForm();\n    const { email, name, company, services, id } = getData();\n    const [status, setStatus]: [string, (value: string) =&gt; void] = useFormFields(([fields, dispatch]) =&gt; [\n        fields.status.value as string, (value: string) =&gt; dispatch({ type: &#x27;UPDATE&#x27;, path: &#x27;status&#x27;, value: value })\n    ]);\n\n    const dropClient = () =&gt; {\n        setStatus(&#x27;lost&#x27;);\n    }\n\n    const onboardClient = async () =&gt; {\n        //setStatus(&#x27;meetingInviteSent&#x27;);\n        await payload.update({\n            collection: &#x27;clients&#x27;,\n            id,\n            data: {\n                status: &#x27;meetingInviteSent&#x27;\n            } as any,\n            depth: 2,\n        });\n    }\n\n    return (&lt;div&gt; ... &lt;button type=&#x27;button&#x27; onClick={async () =&gt; await onboardClient()}&gt;Onboard Client&lt;/button&gt; &lt;/div&gt;)\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1676923128582
      },
      {
        "content": "Payload is a Node-only class, and it can&#x27;t be run in the browser",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676923384271
      },
      {
        "content": "you need to make fetches to your API within the admin panel code",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676923403772
      },
      {
        "content": "gotcha, I was starting to figure that out as I was pasting my code snippets 😄  Would it maybe be possible to fetch this payload instance and hold it in a provider? Not so much for my use case but for future use cases? Having a usePayload hook could be really useful for a situation like this",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1676924048169
      },
      {
        "content": "nope can&#x27;t do that, because you can&#x27;t serialize functions / methods as JSON",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676924304979
      },
      {
        "content": "BUT what we could do is &quot;mock&quot; payload as a hook so that it ships all the same methods, similar API, but written for browser instead",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676924326466
      },
      {
        "content": "this is something that we have on our radar",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676924332093
      },
      {
        "content": "Yup totally makes sense. My brain definently stopped working with this one haha. Thanks!",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1676934203528
      }
    ],
    "messageCount": 13
  },
  {
    "info": {
      "name": "Replacing an uploaded image's buffer in a beforeValidate/Change hook",
      "id": "1070461370501447680",
      "guildId": "967097582721572934",
      "createdAt": 1675288278938
    },
    "messages": [
      {
        "content": "Hi!<br><br>I have a Products collection with an image upload field related to a Media upload collection as suggested in the docs. I&#x27;m trying to generate and encode a QR code of the Product&#x27;s data into the uploaded image before it is uploaded. I&#x27;ve used both beforeValidate and beforeChange collection hooks to replace the buffer provided in req.files.file.data but the uploaded image is still the original image that the user selected. In the following code I generate a QR code using the new Product&#x27;s data, and use that QR&#x27;s buffer and the buffer of the image the user wants to upload to add that QR into the image, and then return the buffer that is the final image result. I can confirm my QR functions are working properly with those buffer inputs.<br><br><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">CollectionBeforeValidateHook</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/types&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { addQRToImg, encodeQR } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;../util&quot;</span>;\n<span class=\"hljs-keyword\">import</span> jsonpack <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;jsonpack&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">encodeImageWithQR</span>: <span class=\"hljs-title class_\">CollectionBeforeValidateHook</span> = <span class=\"hljs-keyword\">async</span> ({\n    data,\n    req,\n    operation,\n    originalDoc,\n}) =&gt; {\n    <span class=\"hljs-keyword\">const</span> uploadedImgBuffer = req.<span class=\"hljs-property\">files</span>.<span class=\"hljs-property\">file</span>.<span class=\"hljs-property\">data</span>;\n\n    <span class=\"hljs-keyword\">const</span> productDataBuffer = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">encodeQR</span>(jsonpack.<span class=\"hljs-title function_\">pack</span>(data));\n    <span class=\"hljs-keyword\">const</span> updatedImgBuffer = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">addQRToImg</span>(productDataBuffer, uploadedImgBuffer);\n\n    req.<span class=\"hljs-property\">files</span>.<span class=\"hljs-property\">file</span>.<span class=\"hljs-property\">data</span> = updatedImgBuffer;\n    \n    <span class=\"hljs-keyword\">return</span> data;\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> encodeImageWithQR;</code></pre><br><br>Any ideas? Am I using the wrong hook? Thank you!",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675288278938
      },
      {
        "content": "Also another relevant question; I was hoping to upload the image only when the entire Product is created rather than the user picking an image and uploading immediately regardless of the Product being potentially discarded later without saving. That also means I need to move this hook to my Products collection so that I can access the Product that is being created, because I need its data to encode it in the QR code. 😄 I would really appreciate any input here as well.",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675288581009
      },
      {
        "content": "I moved my Upload object and that hook to my Products collection, now I have access to the product that is being created, but the issue persists. I tried intercepting req.files in a custom Express.js route to catch any request that has a valid req.files object so that maybe I could modify the upload buffer there but that didn&#x27;t work either... Am I going to have to create my own upload component and handle how the image is processed there?",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675330921695
      },
      {
        "content": "I think I understand the problem you&#x27;re facing. It seems like you&#x27;re hitting a limitation in the way we handle file uploads, then call hooks in the Payload operations for create and update.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675439450172
      },
      {
        "content": "File uploads are taken from the <code>req</code>, hooks are then run as you&#x27;ve used them, but the value for the file upload doesn&#x27;t get updated in the hooks unfortunately.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675439517287
      },
      {
        "content": "3 options:<br>1) open an issue on github so we (or somebody) can make a PR to make this possible<br>2) handle it in another operation afterUpdate using <code>req.payload.update()</code> and use <code>overwriteExistingFiles: true</code>. This is slightly less efficient as you&#x27;re writing to the database and persisting the images twice.<br>3) (I would have to investigate this more) Can the sharp options do this for you in the image processing steps?",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675439795379
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Image resizing not preserving aspect ratio",
      "id": "1073823694817857656",
      "guildId": "967097582721572934",
      "createdAt": 1676089919524
    },
    "messages": [
      {
        "content": "Hello fellas, this may be more of a sharp question rather than a payload one, but it seems that when resizing an image while trying to preserve aspect ratio by omitting either width or height that this omission isn&#x27;t respected and instead i end up with a cropped image<br><br>for instance, i have an image of 6608x2500 dimensions that i&#x27;m trying to resize with a <pre><code class=\"hljs\">height: 50, width: null</code></pre> option, which should lead to an image of 132x50 dimensions, but instead i&#x27;m getting 400x50.<br><br>would anyone happen to know how to resolve this?",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676089919524
      },
      {
        "content": "Does this behave any differently is width is <code>undefined</code>? I recall having either height or width as <code>undefined</code> would maintain the ratio. Curious if this will be different than <code>null</code>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676241805312
      },
      {
        "content": "unfortunately it doesn&#x27;t  😢",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676269250647
      },
      {
        "content": "Can you log an issue?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676308081197
      },
      {
        "content": "sure thing, i&#x27;ve opened one now",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676353946282
      },
      {
        "content": "Thanks, we&#x27;ll get it looked at 👍",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676384689318
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Email configuration error setting up smtp",
      "id": "1077963232838426714",
      "guildId": "967097582721572934",
      "createdAt": 1677076862297
    },
    "messages": [
      {
        "content": "Getting the following error setting up smtp:<br><pre><code class=\"hljs\">ERROR (payload): There is an error with the email configuration you have provided. Error: 140223476000704:error:1408F10B:SSL routines:ssl3_get_record:wrong version number:../deps/openssl/openssl/ssl/record/ssl3_record.c:332:</code></pre><br><br>Not sure where to start solving this.",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1677076862297
      },
      {
        "content": "@alexdev <a href=\"https://stackoverflow.com/questions/50840101/curl-35-error1408f10bssl-routinesssl3-get-recordwrong-version-number\">https://stackoverflow.com/questions/50840101/curl-35-error1408f10bssl-routinesssl3-get-recordwrong-version-number</a>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677161224717
      },
      {
        "content": "Cheers 😄 I think it was an Apache issue in the end, was posting for my coworker",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1677161737853
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "plugin-form-builder implementation",
      "id": "1075986888076300371",
      "guildId": "967097582721572934",
      "createdAt": 1676605664987
    },
    "messages": [
      {
        "content": "I&#x27;m trying the plugin and have some questions:<br>1. I set up the plugin but a can&#x27;t create form submissions from the admin, for some reason the form select is disabled. Should I be able to create submissions from the admin? <br>2. Does someone has a simpler demo for the front form? I don&#x27;t understand how should I send the data for the submission post.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1075986888076300371/1075987014157082685/Screenshot_2023-02-16_at_9.48.04_p.m..png",
            "name": "Screenshot_2023-02-16_at_9.48.04_p.m..png",
            "id": "1075987014157082685",
            "size": 30557,
            "url": "https://cdn.discordapp.com/attachments/1075986888076300371/1075987014157082685/Screenshot_2023-02-16_at_9.48.04_p.m..png",
            "proxyURL": "https://media.discordapp.net/attachments/1075986888076300371/1075987014157082685/Screenshot_2023-02-16_at_9.48.04_p.m..png",
            "height": 465,
            "width": 946,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1676605664987
      },
      {
        "content": "Have you looked at how we submit forms on the payload website? It might be handy to compare! <a href=\"https://github.com/payloadcms/website/blob/main/src/components/CMSForm/index.tsx\">https://github.com/payloadcms/website/blob/main/src/components/CMSForm/index.tsx</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676641084096
      },
      {
        "content": "@akacronos form submissions are meant to be created via Payload APIs (like a website, for instance). This is because form submissions made by content editors doesn&#x27;t provide much value—you want real data from real users. We have example repos to demonstrate this <a href=\"https://github.com/payloadcms/form-builder-example-cms\">https://github.com/payloadcms/form-builder-example-cms</a> <a href=\"https://github.com/payloadcms/form-builder-example-website\">https://github.com/payloadcms/form-builder-example-website</a>. Both of these will soon be moved directly into our Payload repo in the <code>/examples</code> folder so heads up for future readers.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676642758423
      },
      {
        "content": "thanks, I think this example is easier to understand, I was struggling with the payload website implementation.",
        "fileAttachments": [],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1676668759993
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Payload CMS Account Language",
      "id": "1078257015517892669",
      "guildId": "967097582721572934",
      "createdAt": 1677146905546
    },
    "messages": [
      {
        "content": "Can you only include the languages supported by your project? Selecting Chinese when my custom fields still need to be translated in the CMS; feels counterintuitive.",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1677146905546
      },
      {
        "content": "The internationalization of the admin panel and the localization of documents are separate by design. Is this what you&#x27;re referring to?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677512498456
      },
      {
        "content": "Internationalization of the admin has many languages. For example, I would like only to have English and Français and expand the languages when my custom components get translated and ready to enter the target market in the relevant countries.",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1677828516652
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Do not trigger afterRead hook after payload.update",
      "id": "1070692529797877791",
      "guildId": "967097582721572934",
      "createdAt": 1675343391609
    },
    "messages": [
      {
        "content": "How can I make sure the afterRead hook is not triggered after a payload.update? Reason this happens is because I run a payload.update inside of my afterRead hook, which then seems to trigger itself in an infinite loop.",
        "fileAttachments": [],
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675343391609
      },
      {
        "content": "hey @Alessio 🍣 - you could check the operation property within your afterRead hook, will that work for you?<br><br><pre><code class=\"hljs\">hooks: {\n  afterRead: [({ data, operation }) =&gt; {\n    if (operation === &#x27;update&#x27;) {\n      return null;\n    }\n    // do something here\n    return data;\n  }],\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675360562464
      },
      {
        "content": "@Alessio 🍣 you could probably attach a param to the req, and then check for that param inside your hooks",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675360891387
      },
      {
        "content": "O nice do that ^",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675361186500
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Update document field while its creating (afterChange hook, \"create\" operation)",
      "id": "1075912550430027847",
      "guildId": "967097582721572934",
      "createdAt": 1676587941511
    },
    "messages": [
      {
        "content": "I need to update field in afterChange hook in &quot;create&quot; operation.<br>There is 2 documents, 1 relates to another, like this.<br><pre><code class=\"hljs\">const Tyres: CollectionConfig = {\nfields: [\n {\n      name: &quot;tyreSize&quot;,\n      type: &quot;relationship&quot;,\n      relationTo: &#x27;tyreSizes&#x27;,\n      hasMany: false,\n    },\n]\n}</code></pre><br><br>And i wanted when im creating a new <em>tyre</em> document to checks whether there is alredy created *tyreSize * with those same parameters (so why u&#x27;ve used afterChange &quot;create&quot; operation). If same *tyreSize * is created before then i should link it via <em>tyreSize.id</em> to tyre itself, but how can i do it? because im tried<br><br><pre><code class=\"hljs\">const previouslyCreatedSize = await payload.find({\n            collection: tyreSizesCollection,\n            where: {\n              width: { equals: 100 },\n              height: { equals: 50 },\n              diskDiameter: { equals: 25 },\n            },\n          });\nif(its created){\n args.doc.tyreSize = previouslyCreatedSize.docs[0].id;\n}\nelse.....</code></pre><br><br>It find correct <em>tyreSize</em> but wont link it to tyre. I&#x27;ve tried to <br><br><pre><code class=\"hljs\">payload.update(\ncurrent tyre with new data\n)</code></pre><br>but its crashing the server. <br>So is there any possibility to update my <em>tyre</em> with previously created <em>tyreSize</em> while creating it?",
        "fileAttachments": [],
        "authorID": "215833081158959105",
        "authorName": "Daniq",
        "authorAvatar": "f25eb1ea60f9c5b561fe3bc6ab380049",
        "createdAtDate": 1676587941511
      },
      {
        "content": "Update document field while its creating (afterChange hook, &quot;create&quot; operation)",
        "fileAttachments": [],
        "authorID": "215833081158959105",
        "authorName": "Daniq",
        "authorAvatar": "f25eb1ea60f9c5b561fe3bc6ab380049",
        "createdAtDate": 1676588375726
      },
      {
        "content": "On the tyreSize collection you could make a text field that has <code>unique: true</code>. Then with a beforeValidate hook (on operation === create) you can use the submitted data to generate the value for your unique field.<br><br>That will solve the &quot;no duplication&quot; issue, but that will not solve the auto-selection you are looking for.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676641718746
      },
      {
        "content": "Thank you for answering, im was close after a few more hours trying. For me it will fix the problem and no <em>tyreSize</em> will be created if there is already <em>tyreSize</em> with same parameters.",
        "fileAttachments": [],
        "authorID": "215833081158959105",
        "authorName": "Daniq",
        "authorAvatar": "f25eb1ea60f9c5b561fe3bc6ab380049",
        "createdAtDate": 1676665187285
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "How is gonna Payload work out for me vs. Sanity?",
      "id": "1075567629491773550",
      "guildId": "967097582721572934",
      "createdAt": 1676505705951
    },
    "messages": [
      {
        "content": "Hi, I made a website in Next.js using Sanity as headless CMS. In Sanity, I made reusable components, that client can choose and change content on page that way. Sometimes, I nested components a lot. Meaning I had container nested into container, and the container also had some components inside of it. It was working, I would say kinda nicely, however, because Sanity is not self hosted and you can&#x27;t populate references easily, I had to run a JavaScript function, that would walk through object from CMS and find references and then populate them with another query (another 50 API calls, each reference 1 API call). This would invocate a huge number of API calls, and I&#x27;m currently almost hitting the limit. Sanity has lowest limit from all cloudhosted CMS I believe.<br><br>Now, I suppose that Payload, is or has:<br>1. Gonna work with 5 level nesting of blocks just fine in terms of UI<br>2. An option to invoke a query that would populate references even 5 levels deep easily<br><br>Am I right? Thanks<br><br>---<br>I&#x27;m choosing  a good CMS candidate and I have trouble with really choosing the right one. Because Strapi in my opinion sucks in terms of nesting (can&#x27;t nest an array of components into component). And most of the CMS don&#x27;t suit me too.",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1676505705951
      },
      {
        "content": "Hey @Marťafiixek , welcome! You are correct, Payload can handle the level of nesting you describe.<br><br>We did some performance testing related to this a while ago that you can look over.<br><br><a href=\"https://payloadcms.com/blog/performance-benchmarks\">https://payloadcms.com/blog/performance-benchmarks</a><br><a href=\"https://github.com/payloadcms/speed-test\">https://github.com/payloadcms/speed-test</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676506164448
      },
      {
        "content": "Though Sanity is not listed in there, from what you describe, we would be infinitely faster.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676506192450
      },
      {
        "content": "In Sanity it wasn&#x27;t about speed though, more like about the API limits when static building the app or doing incremental static generation. Thanks for the article. One question also, I saw in the demo, that there&#x27;s a columns block, which can contain one or more column. Each column has a width. Is there an option to write validation on the columns block, that does a sum of the each column width, and checks if the value is equal to 1? Thanks",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1676508449907
      },
      {
        "content": "The big draw foe me was being in control of where my content and data is stored and not being beholden to the cms company for storage",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676532666702
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Hide collection from admin panel sidebar but not not from relationship field?",
      "id": "1068706036883669022",
      "guildId": "967097582721572934",
      "createdAt": 1674869774791
    },
    "messages": [
      {
        "content": "I want a collection to be editable through a relationship field of another collection but it shouldn&#x27;t clutter up the sidebar. Is there a way?",
        "fileAttachments": [],
        "authorID": "1024331309486719056",
        "authorName": "linobino1",
        "authorAvatar": null,
        "createdAtDate": 1674869774791
      },
      {
        "content": "I’m not sure what you mean?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674870244718
      },
      {
        "content": "Sorry, I&#x27;ll provide more detail on my use case:<br><br>I have a collection <code>Movies</code> with relationship fields where I can select things like language, director, aspect ratio, etc.<br><br>I have a role <code>moderator</code> that allows for editing the movies. To keep the admin panel minimalistic, it would be nice if the collections  language, director, aspect ratio, etc. would be hidden to the moderator. When editing a movie, he should still be allowed to add new items to those collections via the movies relationship fields.",
        "fileAttachments": [],
        "authorID": "1024331309486719056",
        "authorName": "linobino1",
        "authorAvatar": null,
        "createdAtDate": 1674902133942
      },
      {
        "content": "Hi @linobino1 - check out the answer to this similar thread: <a href=\"https://discord.com/channels/967097582721572934/1064531848220381295/1064531848220381295\">https://discord.com/channels/967097582721572934/1064531848220381295/1064531848220381295</a><br><br>Also, we will be adding an <code>admin.hidden</code> feature or similar to support hiding collections without needing to define access control in our roadmap-2: <a href=\"https://github.com/payloadcms/payload/discussions/1462\">https://github.com/payloadcms/payload/discussions/1462</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675160842841
      },
      {
        "content": "cool, thank you! The proposed solution is custom css, targeting the menu items by their collection slug.",
        "fileAttachments": [],
        "authorID": "1024331309486719056",
        "authorName": "linobino1",
        "authorAvatar": null,
        "createdAtDate": 1675268799127
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "How to change the nav bar?",
      "id": "1070433148107751556",
      "guildId": "967097582721572934",
      "createdAt": 1675281550195
    },
    "messages": [
      {
        "content": "Hi everyone, I&#x27;m trying to build a Learning Management System and I have a collection of courses and lessons which are related. I was wondering if there would be any way to show a nav like the one on the image. The goal would be to show the lessons nested in each course. Can anyone point me in the right direction to do that?<br>Thanks a lot!",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1070433148107751556/1070433148560748675/admin.jpeg",
            "name": "admin.jpeg",
            "id": "1070433148560748675",
            "size": 71990,
            "url": "https://cdn.discordapp.com/attachments/1070433148107751556/1070433148560748675/admin.jpeg",
            "proxyURL": "https://media.discordapp.net/attachments/1070433148107751556/1070433148560748675/admin.jpeg",
            "height": 707,
            "width": 1884,
            "contentType": "image/jpeg",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "978594935899062282",
        "authorName": "Martí Arnau - React",
        "authorAvatar": null,
        "createdAtDate": 1675281550195
      },
      {
        "content": "Grouping of collection is supported, but only one level deep for now.<br><br><a href=\"https://payloadcms.com/docs/configuration/collections#admin-options\">https://payloadcms.com/docs/configuration/collections#admin-options</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675285494946
      },
      {
        "content": "Thanks a lot, Elliot! I&#x27;ll try that",
        "fileAttachments": [],
        "authorID": "978594935899062282",
        "authorName": "Martí Arnau - React",
        "authorAvatar": null,
        "createdAtDate": 1675288153467
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Populate relationship field on click",
      "id": "1064065679952723991",
      "guildId": "967097582721572934",
      "createdAt": 1673763427485
    },
    "messages": [
      {
        "content": "Hello!<br><br>I have a relationship field with countries. I need to implement some logic to it. For example, click on a button and select all countries from the EU.<br><br>What is the best way to do it? <br><br>I see that there is a UI field where I can create custom react components, but I would like just to add this button with logic to native relationship component.<br><br>Thanks in advance!",
        "fileAttachments": [],
        "authorID": "752838213781028884",
        "authorName": "Invest_it",
        "authorAvatar": "2ef618f2bc6b4024c6eecc6f32519ef3",
        "createdAtDate": 1673763427485
      },
      {
        "content": "Hey @Invest_it ! You could implement this with a UI field if you&#x27;d like however a better alternative could be the following - using 3 fields:<br>- Add a radio button to determine how to populate the field <code>[&quot;byGroup&quot;, &quot;bySelection&quot;]</code><br>- When <code>byGroup</code> is selected - conditionally render a select with groups. Then you&#x27;d need to wire up a <code>beforeChange</code> hook to fetch and fill the relationship field with the ids of the ones in that group.<br>- When an individual is selected: show the relationship field.<br><br>What do you think?",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1674679815558
      },
      {
        "content": "Great ideas! How do you create a filed hook that is reactively triggered based on the selection of another field tho? I can&#x27;t seem get the field hooks to trigger when the same field is edited not to talk about when another field is updated.",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1676348207339
      },
      {
        "content": "@KasparTr you would have to use a custom component and update it based on the value of another field. We have some docs that go into detail describing our react hooks so you can tie into the state of the form and update the state of fields. Check em out here and let me know if you run into anything!<br><br><a href=\"https://payloadcms.com/docs/admin/hooks\">https://payloadcms.com/docs/admin/hooks</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676478190618
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Import posts from Wordpress",
      "id": "1068171728028700802",
      "guildId": "967097582721572934",
      "createdAt": 1674742385633
    },
    "messages": [
      {
        "content": "Which is the best way to import post from Wordpress?<br>Thank you!<br>Cheers",
        "fileAttachments": [],
        "authorID": "928376918804430868",
        "authorName": "stfn",
        "authorAvatar": null,
        "createdAtDate": 1674742385633
      },
      {
        "content": "Currently, we don&#x27;t have a way to do this that doesn&#x27;t involve scripting with the Local API. However, I think this is something that we may look into in the future.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674858204094
      },
      {
        "content": "Ok ok thank you",
        "fileAttachments": [],
        "authorID": "928376918804430868",
        "authorName": "stfn",
        "authorAvatar": null,
        "createdAtDate": 1675071853532
      },
      {
        "content": "@denolfe do you have an example of how to do that",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1675077345565
      },
      {
        "content": "Sure, you would do something like this:<br><br><pre><code class=\"hljs\">import payload from &#x27;payload&#x27;;\n\nrequire(&quot;dotenv&quot;).config();\n\nconst { PAYLOAD_SECRET_KEY, MONGO_URL } = process.env;\n\n// This function ensures that there is at least one corresponding version for any document\n// within each of your draft-enabled collections.\n\nconst migratePosts = async () =&gt; {\n  // Initialize Payload\n  // IMPORTANT: make sure your ENV variables are filled properly here\n  // as the below variable names are just for reference.\n  await payload.init({\n    secret: PAYLOAD_SECRET_KEY,\n    mongoURL: MONGO_URL,\n    local: true,\n  });\n\n  // Read data from WordPress, you&#x27;ll need to figure this part out\n  const wpPosts = await getPostsFromWordPress();\n\n  for (const wpPost of wpPosts) {\n    await payload.create({\n      collection: &quot;posts&quot;,\n      // data to be saved\n      data: {\n        title: wpPost.title,\n        description: wpPost.description,\n      },\n  });\n};\n\nmigratePosts();</code></pre><br><br>Local API docs here: <a href=\"https://payloadcms.com/docs/local-api/overview#local-api\">https://payloadcms.com/docs/local-api/overview#local-api</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675106252140
      },
      {
        "content": "<pre><code class=\"hljs\">const payload = require(&#x27;payload&#x27;);\nconst path = require(&#x27;path&#x27;);\nconst slateSerializers = require(&#x27;slate-serializers&#x27;)\n\nconst { htmlToSlate, payloadHtmlToSlateConfig } = slateSerializers\nrequire(&#x27;dotenv&#x27;).config();\n\nconst {PAYLOAD_SECRET, MONGODB_URI} = process.env;\n\n\nconst authorId = &#x27;&#x27; // Payload Author ID\nconst websiteUrl = &#x27;&#x27; // WordPress website url \n\nconst transformWordPressData = ( data ) =&gt; {\n    return {\n        title: data.title.rendered,\n        slug: data.slug,\n        excerpt: data.excerpt.rendered,\n        updatedAt: data.modified, // might actually be  data.modified_gmt\n        publishedOn: data.date, // might actually be  data.date_gmt,\n        _status: data.status === &#x27;publish&#x27; ? &#x27;published&#x27; : &#x27;draft&#x27;,\n        author: authorId,\n        layout: [\n            {\n                blockType: &#x27;content&#x27;,\n                contentFields: {\n                    richText: htmlToSlate(data.content.rendered, payloadHtmlToSlateConfig)\n                }\n            }\n        ]\n    }\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1677561984708
      },
      {
        "content": "<pre><code class=\"hljs\">// This function ensures that there is at least one corresponding version for any document\n// within each of your draft-enabled collections.\nconst importFromWordPress = async () =&gt; {\n\n    const baseUrl = `${websiteUrl}/wp-json/wp/v2/posts?per_page=100`\n    const defaultOptions = {\n        method: &#x27;GET&#x27;,\n        headers: {\n            &#x27;Content-Type&#x27;: &#x27;application/json&#x27;,\n        }\n    }\n\n    try {\n\n        await payload.init({\n            secret: PAYLOAD_SECRET,\n            mongoURL: MONGODB_URI,\n            local: true,\n        });\n\n        const wpPosts = []\n\n        const getTotalPagesReq = await fetch(baseUrl, defaultOptions)\n        // Get&#x27;s the total number of post pages \n        const getTotalPagesRes = getTotalPagesReq.headers.get(&#x27;x-WP-TotalPages&#x27;)\n\n\n        for (let i = 0; i &lt; getTotalPagesRes; i++) {\n           const wpPostReq = await fetch( `${baseUrl}&amp;page=${i+1}`, defaultOptions)\n           const wpPostRes = await wpPostReq.json()\n           wpPosts.push(wpPostRes)\n        }\n\n\n        for (const wpPost of wpPosts.flat()) {\n\n            await payload.create({\n                collection: &#x27;news&#x27;,\n                // data to be saved\n                data: transformWordPressData(wpPost),\n            })\n        }\n\n\n    } catch (err) {\n        console.log(&#x27;Unable to import posts into payload from WordPress&#x27;);\n        console.error(err);\n        process.exit(0);\n    }\n\n    console.log(&#x27;WordPress import completed!&#x27;);\n    process.exit(0);\n};\n\nimportFromWordPress();</code></pre>",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1677561989249
      },
      {
        "content": "@stfn above is a simple example of using WordPress rest api to import post content into Payload",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1677562136388
      },
      {
        "content": "I then have a simple package.json script I run - <code>&quot;import&quot;: &quot;PAYLOAD_CONFIG_PATH=dist/payload.config.js node ./importFromWordPress.js&quot;</code>",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1677562198329
      },
      {
        "content": "@denolfe above is a pretty crud example on how to import from WordPress to Payload using the WordPress Rest API",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1677562705094
      },
      {
        "content": "Woow thank you, it works! And have you found a solution also for convert Gutemberg blocks?",
        "fileAttachments": [],
        "authorID": "928376918804430868",
        "authorName": "stfn",
        "authorAvatar": null,
        "createdAtDate": 1677575095136
      },
      {
        "content": "This is awesome, thanks for sharing! 🙏",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677591164967
      },
      {
        "content": "At the moment It just works with the WordPress content. Eventually I will look at importing media. @stfn do you have an example api endpoint using Gutenberg?",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1677628861438
      },
      {
        "content": "If you have access to the theme or able to add plugins you could write a custom rest api endpoint with all the data you need to import into Payload. If you use ACF flexible content it would probably be pretty easy to match flexible content blocks with Payload blocks",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1677629206697
      },
      {
        "content": "I think it would be tricker to import data from a WordPress website that is using a Page builder",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1677629360098
      },
      {
        "content": "@denolfe I noticed that there is a filePath property in the local API - <a href=\"https://payloadcms.com/docs/local-api/overview\">https://payloadcms.com/docs/local-api/overview</a>. How do I specify which field I want to add that media too",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1677632796231
      },
      {
        "content": "That is specifically for if you have <code>upload</code> enabled for the collection. Payload will handle storing it accordingly.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677679717901
      },
      {
        "content": "Ok. Is there way to add images to blocks or other fields",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1677794927449
      }
    ],
    "messageCount": 17
  },
  {
    "info": {
      "name": "MongooseError: Operation `users.countDocuments()` buffering timed out after 10000ms",
      "id": "1070732000006262794",
      "guildId": "967097582721572934",
      "createdAt": 1675352802040
    },
    "messages": [
      {
        "content": "I keep getting this error when trying to run graphQLSchema  <code>PAYLOAD_CONFIG_PATH=src/payload.config.ts payload generate:graphQLSchema</code> <br><br><pre><code class=\"hljs\">const err = new MongooseError(message);\n                      ^\nMongooseError: Operation `users.countDocuments()` buffering timed out after 10000ms</code></pre><br><br>any idea why this is happening?",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675352802040
      },
      {
        "content": "What version of payload are ya on?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675360750103
      },
      {
        "content": "the latest one <code>&quot;payload&quot;: &quot;1.6.3&quot;,</code>",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675361232533
      },
      {
        "content": "Thats odd, the command under the hood runs with mongo disabled",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675368145513
      },
      {
        "content": "@Jarrod I just updated to <code>&quot;payload&quot;: &quot;1.6.4&quot;,</code> and still have the issue",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675462981647
      },
      {
        "content": "keeps saying <code>MongooseError: Operation</code>users.countDocuments()<code>buffering timed out after 10000ms</code>",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675462997282
      },
      {
        "content": "changed to a fresh mongo db too",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675463026797
      },
      {
        "content": "@generator101 This was an issue that was fixed in 1.6.9.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676057867033
      },
      {
        "content": "Give it a try and let us know.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676057875933
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "How to trigger field hooks?",
      "id": "1074905454985093252",
      "guildId": "967097582721572934",
      "createdAt": 1676347831246
    },
    "messages": [
      {
        "content": "When exactly should fields hooks be triggered?<br><br>I can&#x27;t get any of the hooks to trigger on field value change.<br><pre><code class=\"hljs\">{\n  name: &#x27;name&#x27;,\n  type: &#x27;text&#x27;,\n  hooks: {\n    beforeValidate: [(args) =&gt; {console.log(1)}],\n    beforeChange: [(args) =&gt; {console.log(2)}],\n    afterChange: [(args) =&gt; {console.log(3)}],\n    afterRead: [(args) =&gt; {console.log(4)}],\n  },\n}</code></pre> <br>Follup question: can you trigger one field based on the change of another field?",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1676347831246
      },
      {
        "content": "These are all backend hooks. You would see those in your server console, but not the browser.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676386896145
      },
      {
        "content": "If you&#x27;re looking for admin UI react hooks, you can find those here: <a href=\"https://payloadcms.com/docs/admin/hooks\">https://payloadcms.com/docs/admin/hooks</a>",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676386958365
      },
      {
        "content": "These are useful when writing custom components and are more likely what you&#x27;re looking for.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676387027137
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Querying nested-docs",
      "id": "1080202425585106964",
      "guildId": "967097582721572934",
      "createdAt": 1677610727450
    },
    "messages": [
      {
        "content": "What is the recommended way of querying nested-docs when you know the path?<br><br>Given the following paths:<br><pre><code class=\"hljs\">/parent-page\n/parent-page/child-page\n/parent-page/child-page/grandchild-page</code></pre><br><br><code>/api/pages?where[breadcrumbs.url][equals]=/parent-page/child-page</code> <br><br>This query returns both the child-page document, and the grandchild-page document ... <br><br>I&#x27;m having trouble figuring out how to retrieve only the page that matches this path exactly.  I am temporarily using a hidden auto-generated field, that takes the last breadcrumb and stores it&#x27;s <code>url</code> into a <code>path</code> field at the document root ... so I can query <code>where[path][equals]=/parent-page/child-page</code> but this seems awkward, and I&#x27;m assuming there&#x27;s a proper way to query nested-docs?",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1677610727450
      },
      {
        "content": "That url probably fails because the forward slashes in your <code>where</code> query are not encoded, which would look like this: <code>/api/pages?where[breadcrumbs.url][equals]=%2Fparent-page%2Fchild-page</code>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677651639190
      },
      {
        "content": "But this may match on multiple docs instead of just one, because the breadcrumb may appear across more than one document, especially within the same tree.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677651834628
      },
      {
        "content": "You may want to query by <em>slug</em> then find the document whose <em>last</em> breadcrumb matches your url",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677652002626
      },
      {
        "content": "thanks - I think that helped.  I just added the slug to the query and that seems to have resolved it ... <br><br>I now have something like this ... <br><br><pre><code class=\"hljs\">?where[breadcrumbs.url][equals]=/new-page/child-page/grandchild-page&amp;where[slug][equals]=grandchild-page</code></pre><br><br>The URL does get encoded by the browser before sending, I&#x27;m just showing the decoded version for readability.",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1677681693720
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Best way to handle many-to-many relationship?",
      "id": "1034836636686626897",
      "guildId": "967097582721572934",
      "createdAt": 1666794680521
    },
    "messages": [
      {
        "content": "Say, I have two collections: <code>Books</code> and <code>Tags</code>. A book can have many tags, and a tag can be assigned to multiple books. When a book is tagged via relationship field (<code>tags</code>), I want the tag&#x27;s relationship field (<code>books</code>) to be updated accordingly (create/update/delete). Im not sure to do that as of now. Any ideas?",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1666794680521
      },
      {
        "content": "Hey @bombnp check the #plugins channel— the community has built a plugin to do exactly this for you!",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1666801897715
      },
      {
        "content": "is it <a href=\"https://github.com/TimHal/pcms-backpop\">https://github.com/TimHal/pcms-backpop</a> ?",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1666803039838
      },
      {
        "content": "yes!",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1666807227892
      },
      {
        "content": "Are there plans to officially support this? The repo states it&#x27;s not ready for production (and in pre-alpha), but I would really like to use this feature in a production application",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676319265674
      },
      {
        "content": "yes it will be officially supported",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676389596877
      },
      {
        "content": "we have to tackle additional database support before diving in here much more deeply",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676389606073
      },
      {
        "content": "Cool! For now I&#x27;ve gotten it working but had to do some custom modifications and clean-up",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676668589684
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Relation Field Typing",
      "id": "1072683238008573952",
      "guildId": "967097582721572934",
      "createdAt": 1675818013432
    },
    "messages": [
      {
        "content": "Really appreciate the outstanding work on Local API type inferences!  Experiencing a small inconvenience, and wondering if there&#x27;s an obvious solution I&#x27;m missing here.<br><br>When requesting a relation field, the return type of the field would be <code>string | Collection</code>:",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1072683238008573952/1072683238239244348/image.png",
            "name": "image.png",
            "id": "1072683238239244348",
            "size": 5257,
            "url": "https://cdn.discordapp.com/attachments/1072683238008573952/1072683238239244348/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1072683238008573952/1072683238239244348/image.png",
            "height": 54,
            "width": 531,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1675818013432
      },
      {
        "content": "Is there a way to get post, such that the inferred type of post.notes is Note[] only?",
        "fileAttachments": [],
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1675818060231
      },
      {
        "content": "I tried with depth:, but that doesn&#x27;t seem to make a difference.",
        "fileAttachments": [],
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1675818090404
      },
      {
        "content": "This is one thing we&#x27;re talking about improving. Possibly passing depth, so the type will be able to properly be inferred as one or the other. More to come!",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676039667154
      },
      {
        "content": "Because it could be either based upon depth, it needed to be a union.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676039699131
      },
      {
        "content": "Glad to hear! <br>Luckily this can be worked around <code>(post.note as Note[]).map</code> or <code>post.notes.map(note =&gt; typeof note === &quot;string&quot; ? ... : ...)</code> for now.",
        "fileAttachments": [],
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1676065583670
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Best place to deploy payloadcms?",
      "id": "1080336938915070033",
      "guildId": "967097582721572934",
      "createdAt": 1677642797927
    },
    "messages": [
      {
        "content": "I know there are lots of ways to deploy it, but I wanted to know you guys favorite options, I didn&#x27;t want to use aws EC3 mostly because I think for what I have it is too much <br><br>I love how vercel or amplify works while deploying apps and  how it connects to github actions, do you know if there is something similar that you can deploy payloadcms that is as easy as that ?",
        "fileAttachments": [],
        "authorID": "391293587922485252",
        "authorName": "Hyra10",
        "authorAvatar": "930bc5beaa28b294cc7c1af61014f3f4",
        "createdAtDate": 1677642797927
      },
      {
        "content": "Payload Cloud 🌥️ <a href=\"https://github.com/payloadcms/payload/discussions/583\">https://github.com/payloadcms/payload/discussions/583</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677650644738
      },
      {
        "content": "This is marked as roadmap priority 1 and is being actively developed. I&#x27;ve deployed on Digital Ocean dozens of times, which works well but requires all the manual setup. We have some helpful tutorials for this listed in our docs here: <a href=\"https://payloadcms.com/docs/production/deployment#digitalocean-tutorials\">https://payloadcms.com/docs/production/deployment#digitalocean-tutorials</a>. You can also leverage Docker if you&#x27;re doing this often or want to make standardize things, more on that here: <a href=\"https://payloadcms.com/docs/production/deployment#docker\">https://payloadcms.com/docs/production/deployment#docker</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677651137763
      },
      {
        "content": "I can highly recommend digitalOcean. But instead of spinning up a droplet (as in the documentation) you can simply deploy it as an „App“. Only very little configutration needed, autmatic deploys from your Github repository 🙏",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677654305406
      },
      {
        "content": "i would suggest google cloud run, this will surely help <a href=\"https://discord.com/channels/967097582721572934/1075750048924708865\">https://discord.com/channels/967097582721572934/1075750048924708865</a>",
        "fileAttachments": [],
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1677660822838
      },
      {
        "content": "for anyone finding this through the search, I&#x27;m currently using Railway and this is my setup (I&#x27;m using it inside a turborepo but you can replace it with simple yarn build &amp; yarn start if you don’t).<br><br>The experience is ok, will definitely go for the upcoming official platform once it&#x27;s available though",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1080336938915070033/1080467146234146856/image.png",
            "name": "image.png",
            "id": "1080467146234146856",
            "size": 523666,
            "url": "https://cdn.discordapp.com/attachments/1080336938915070033/1080467146234146856/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1080336938915070033/1080467146234146856/image.png",
            "height": 2368,
            "width": 1948,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "157199103921618944",
        "authorName": "Migu",
        "authorAvatar": "7c40c98d2393a326cea0da98f91966d2",
        "createdAtDate": 1677673841796
      },
      {
        "content": "For me the best place is railway, but I also deploy to my vps with coolify and work really well (Better when you need more resources because it&#x27;s more cheap).",
        "fileAttachments": [],
        "authorID": "284940321966522368",
        "authorName": "Franco",
        "authorAvatar": "13a1a45b12155816a4867b39bc4e1d13",
        "createdAtDate": 1677678187691
      },
      {
        "content": "I&#x27;m using render.com but it&#x27;s extra paid",
        "fileAttachments": [],
        "authorID": "803037652894482442",
        "authorName": "kosmo",
        "authorAvatar": "f054fc1ce7516d4903c0712698fc5eb1",
        "createdAtDate": 1677678680191
      },
      {
        "content": "I use Digital Ocean App platform for Payload. To me, it feels very similar to deploying on Vercel (which I use to deploy my frontend)",
        "fileAttachments": [],
        "authorID": "783701636165402624",
        "authorName": "tylandavis",
        "authorAvatar": "f93cd3cba7ccab13bbb14a2f41ffd5a5",
        "createdAtDate": 1677679849401
      },
      {
        "content": "thank you for your suggestions 🙇‍♂️",
        "fileAttachments": [],
        "authorID": "391293587922485252",
        "authorName": "Hyra10",
        "authorAvatar": "930bc5beaa28b294cc7c1af61014f3f4",
        "createdAtDate": 1677713113272
      }
    ],
    "messageCount": 9
  },
  {
    "info": {
      "name": "Defining the order of collection table columns in admin list view",
      "id": "1074310327585492994",
      "guildId": "967097582721572934",
      "createdAt": 1676205941817
    },
    "messages": [
      {
        "content": "Is there a simpler way of setting the order the list view columns display in the admin?<br><br>I find it really frustrating to have to deselect and reselect columns in the reverse order to what I want them displayed in the admin UI.<br><br>I&#x27;m hoping that there&#x27;s a way to define the default column order in code?",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676205941817
      },
      {
        "content": "you can do it, in your collection add <code>defaultColumns</code> in the admin with the name of the default fields name:<br><br><pre><code class=\"hljs\"> admin: {\n    defaultColumns: [&#x27;title&#x27;, &#x27;date&#x27;, &#x27;_status&#x27;, &#x27;createdBy&#x27;],\n  },</code></pre>",
        "fileAttachments": [],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1676241622568
      },
      {
        "content": "Thank you!",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676296618800
      },
      {
        "content": "I&#x27;ve added some further thoughts on this to a github discussion here: <a href=\"https://github.com/payloadcms/payload/discussions/2075\">https://github.com/payloadcms/payload/discussions/2075</a>",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676296847453
      },
      {
        "content": "@Kyr have you seen this? <a href=\"https://github.com/payloadcms/payload/pull/1865\">https://github.com/payloadcms/payload/pull/1865</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676296926052
      },
      {
        "content": "I had not... that&#x27;s awesome!",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676302570043
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Format the doc response from hooks, only for the API request.",
      "id": "1078326363884363897",
      "guildId": "967097582721572934",
      "createdAt": 1677163439485
    },
    "messages": [
      {
        "content": "Hello, I have a question about the capability to format the <code>doc</code> response in <code>afterRead</code> hook, only on the API request, not when I load the admin. Is there a way to do this? <br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">hooks</span>: {\n  <span class=\"hljs-attr\">afterRead</span>: [\n    <span class=\"hljs-function\">(<span class=\"hljs-params\">{ doc }</span>) =&gt;</span> {\n      doc.<span class=\"hljs-property\">title</span> = doc.<span class=\"hljs-property\">title</span> + <span class=\"hljs-string\">&quot;foo&quot;</span>\n      <span class=\"hljs-keyword\">return</span> doc\n    }\n  ],\n},</code></pre><code>In this example, I need to format the</code>title<code>only on the api call response. For sur I can create a</code>customTitle` object key on doc but it&#x27;s seems to be strange to keep and return unformatted data on the api response. Maybe it&#x27;s a paradigm problem?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078326363884363897/1078326364110860330/Capture_decran_2023-02-23_a_15.38.34.png",
            "name": "Capture_decran_2023-02-23_a_15.38.34.png",
            "id": "1078326364110860330",
            "size": 7267,
            "url": "https://cdn.discordapp.com/attachments/1078326363884363897/1078326364110860330/Capture_decran_2023-02-23_a_15.38.34.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078326363884363897/1078326364110860330/Capture_decran_2023-02-23_a_15.38.34.png",
            "height": 208,
            "width": 145,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078326363884363897/1078326364354134077/Capture_decran_2023-02-23_a_15.39.56.png",
            "name": "Capture_decran_2023-02-23_a_15.39.56.png",
            "id": "1078326364354134077",
            "size": 13985,
            "url": "https://cdn.discordapp.com/attachments/1078326363884363897/1078326364354134077/Capture_decran_2023-02-23_a_15.39.56.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078326363884363897/1078326364354134077/Capture_decran_2023-02-23_a_15.39.56.png",
            "height": 102,
            "width": 360,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "783679384434901012",
        "authorName": "Willy Brownhair",
        "authorAvatar": "85a20ab2579ed3b510b52a674348fcea",
        "createdAtDate": 1677163439485
      },
      {
        "content": "I found a workaround using query param to check &quot;when&quot; the api is called.<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">hooks</span>: {\n    <span class=\"hljs-attr\">afterRead</span>: [\n      <span class=\"hljs-function\">(<span class=\"hljs-params\">{ doc, req }</span>) =&gt;</span> {\n\n        <span class=\"hljs-comment\">// if &quot;?api&quot; doesn&#x27;t exist on request URL, return non formatted doc</span>\n        <span class=\"hljs-keyword\">if</span> (req.<span class=\"hljs-property\">query</span>.<span class=\"hljs-property\">api</span> == <span class=\"hljs-literal\">null</span>)\n          <span class=\"hljs-keyword\">return</span> doc\n\n        <span class=\"hljs-comment\">// with &quot;?api&quot; on api request, we want to get formatted doc</span>\n        <span class=\"hljs-comment\">//ex: http://localhost:3000/api/posts/63f727b53a255a9683223236?api</span>\n        <span class=\"hljs-comment\">// format...</span>\n\n       doc.<span class=\"hljs-property\">title</span> = doc.<span class=\"hljs-property\">title</span> + <span class=\"hljs-string\">&quot;foo&quot;</span>\n       <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;doc.title&quot;</span>,doc.<span class=\"hljs-property\">title</span>)\n       <span class=\"hljs-keyword\">return</span> doc\n      }\n    ],\n  },</code></pre>",
        "fileAttachments": [],
        "authorID": "783679384434901012",
        "authorName": "Willy Brownhair",
        "authorAvatar": "85a20ab2579ed3b510b52a674348fcea",
        "createdAtDate": 1677508301748
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Upload collection bug",
      "id": "1071853173238665277",
      "guildId": "967097582721572934",
      "createdAt": 1675620110569
    },
    "messages": [
      {
        "content": "I have a Products collection and when I upload an image while creating a Product, the uploaded image is displayed, but when I click X on the right and re-select another image to replace the upload image, the image is uploaded but I still get the &quot;Select a file&quot; component. What I can do?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1071853173238665277/1071853173670674602/image.png",
            "name": "image.png",
            "id": "1071853173670674602",
            "size": 122547,
            "url": "https://cdn.discordapp.com/attachments/1071853173238665277/1071853173670674602/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1071853173238665277/1071853173670674602/image.png",
            "height": 904,
            "width": 1500,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1071853173238665277/1071853174002028654/image.png",
            "name": "image.png",
            "id": "1071853174002028654",
            "size": 16008,
            "url": "https://cdn.discordapp.com/attachments/1071853173238665277/1071853174002028654/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1071853173238665277/1071853174002028654/image.png",
            "height": 311,
            "width": 1147,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675620110569
      },
      {
        "content": "See this PR, sounds related<br><br><a href=\"https://github.com/payloadcms/payload/pull/1978\">https://github.com/payloadcms/payload/pull/1978</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675620428784
      },
      {
        "content": "i think it&#x27;s not the same, i don&#x27;t get that same image cache thing. when i update an image, the image doesn&#x27;t appear and the Select a file component stays the same like i haven&#x27;t uploaded anything already",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675621603608
      },
      {
        "content": "@minanaro_3776 that PR got merged, can you upgrade and give it a shot?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675871632902
      },
      {
        "content": "oh wow that was fast",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675871652521
      },
      {
        "content": "sure jarrod thanks a lot, i will!",
        "fileAttachments": [],
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675871661065
      },
      {
        "content": "If it does not work, create a minimal reproduction and open an issue. We are happy to look into it further if it is a bug!",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675871668046
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Compound indexes",
      "id": "1080470661971066891",
      "guildId": "967097582721572934",
      "createdAt": 1677674679988
    },
    "messages": [
      {
        "content": "Is there a way to describe compound index for collection?<br><br>Use case: <br>Collection has two fields <code>title</code> and <code>value</code><br>Collection should have only unique pairs of title and value<br>Like:<br>title        | value<br>------------|--------------<br>email     | google<br>------------|--------------<br>email     | yahoo",
        "fileAttachments": [],
        "authorID": "351983077423185921",
        "authorName": "Ysione",
        "authorAvatar": "f612bad72951735200e85f09988732ec",
        "createdAtDate": 1677674679988
      },
      {
        "content": "Not out of the box currently. An option would be to make an additional field that is readOnly, then write a beforeValidate hook that populates it with the 2 values concatenated.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677686049605
      },
      {
        "content": "I see, thank you",
        "fileAttachments": [],
        "authorID": "351983077423185921",
        "authorName": "Ysione",
        "authorAvatar": "f612bad72951735200e85f09988732ec",
        "createdAtDate": 1677754193675
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Generating Types Error with Azure",
      "id": "1067549631904493638",
      "guildId": "967097582721572934",
      "createdAt": 1674594066359
    },
    "messages": [
      {
        "content": "Good Afternoon fellow Payloaders,<br><br>For some reason when running command <code>payload generate:types</code> (yarn payload...),  I get an error relating to the Azure Storage Blob, this error is resolved when I hard code storageAdapter.ts, which for obvious reasons, cannot be left as the solution as it would pose a glaring security vulnerability.<br><br>Storage Adapter.ts<br><pre><code class=\"hljs\">import { azureBlobStorageAdapter } from &quot;@payloadcms/plugin-cloud-storage/azure&quot;;\n\n\nconst storageAdapter = azureBlobStorageAdapter({\n  connectionString: process.env.AZURE_STORAGE_CONNECTION_STRING,\n  containerName: process.env.AZURE_STORAGE_CONTAINER_NAME,\n  allowContainerCreate:\n    process.env.AZURE_STORAGE_ALLOW_CONTAINER_CREATE === &quot;true&quot;,\n  baseURL: process.env.AZURE_STORAGE_ACCOUNT_BASEURL,\n});\n\nexport default storageAdapter;</code></pre><br>Has anyone encountered a problem like this ?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1067549631904493638/1067549632512655410/on_yarn_payload_generate_types.png",
            "name": "on_yarn_payload_generate_types.png",
            "id": "1067549632512655410",
            "size": 256280,
            "url": "https://cdn.discordapp.com/attachments/1067549631904493638/1067549632512655410/on_yarn_payload_generate_types.png",
            "proxyURL": "https://media.discordapp.net/attachments/1067549631904493638/1067549632512655410/on_yarn_payload_generate_types.png",
            "height": 864,
            "width": 2010,
            "contentType": "image/png",
            "description": "error that is thrown",
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1067549631904493638/1067549632848216134/package_json.png",
            "name": "package_json.png",
            "id": "1067549632848216134",
            "size": 321032,
            "url": "https://cdn.discordapp.com/attachments/1067549631904493638/1067549632848216134/package_json.png",
            "proxyURL": "https://media.discordapp.net/attachments/1067549631904493638/1067549632848216134/package_json.png",
            "height": 1124,
            "width": 1900,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1067549631904493638/1067549633225687040/on_yarn_build.png",
            "name": "on_yarn_build.png",
            "id": "1067549633225687040",
            "size": 464083,
            "url": "https://cdn.discordapp.com/attachments/1067549631904493638/1067549633225687040/on_yarn_build.png",
            "proxyURL": "https://media.discordapp.net/attachments/1067549631904493638/1067549633225687040/on_yarn_build.png",
            "height": 1422,
            "width": 2010,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1674594066359
      },
      {
        "content": "Ok so adding <pre><code class=\"hljs\">import dotenv from &quot;dotenv/config&quot;</code></pre> in payload.config and adding <pre><code class=\"hljs\">require(&#x27;dotenv&#x27;).config()</code></pre> in storageAdapter.ts solves the issue<br><br>incase anyone has the issue later<br><pre><code class=\"hljs\">/node_modules/@azure/storage-blob/dist/index.js:13642\n    if (connectionString.startsWith(&quot;UseDevelopmentStorage=true&quot;)) {\n                         ^\n\nTypeError: Cannot read property &#x27;startsWith&#x27; of undefined\n    at extractConnectionStringParts (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@azure/storage-blob/dist/index.js:13642:26)\n    at Function.fromConnectionString (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@azure/storage-blob/dist/index.js:24600:32)\n    at Object.adapter (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/adapters/azure/index.js:14:66)\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/plugin.js:42:43\n    at Array.map (&lt;anonymous&gt;)\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/plugin.js:38:164\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/config/build.js:15:84\n    at Array.reduce (&lt;anonymous&gt;)\n    at buildConfig (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/config/build.js:15:50)\n    at Object.&lt;anonymous&gt; (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/payload.config.js:17:44)\nerror Command failed with exit code 1.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.</code></pre>",
        "fileAttachments": [],
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1674594302658
      },
      {
        "content": "<pre><code class=\"hljs\">TypeError: Cannot read property &#x27;startsWith&#x27; of undefined\n    at extractConnectionStringParts (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@azure/storage-blob/dist/index.js:13642:26)\n    at Function.fromConnectionString (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@azure/storage-blob/dist/index.js:24600:32)\n    at Object.adapter (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/adapters/azure/index.js:14:66)\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/plugin.js:42:43\n    at Array.map (&lt;anonymous&gt;)\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/plugin.js:38:164\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/config/build.js:15:84\n    at Array.reduce (&lt;anonymous&gt;)\n    at buildConfig (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/config/build.js:15:50)\n    at Object.&lt;anonymous&gt; (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/src/payload.config.ts:23:40)\n(node:96745) UnhandledPromiseRejectionWarning: Error: Error: can&#x27;t find the configuration file located at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/src/payload.config.ts.\n    at build (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/bin/build.js:35:15)\n    at Object.&lt;anonymous&gt; (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/bin/index.js:16:9)\n    at Module._compile (internal/modules/cjs/loader.js:1085:14)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1114:10)\n    at Module.load (internal/modules/cjs/loader.js:950:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:790:12)\n    ...\n\n    </code></pre><br><br>So that will be more easily searchable by others",
        "fileAttachments": [],
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1674594497782
      },
      {
        "content": "If this is a &#x27;bad&#x27; or &#x27;hacky&#x27; solution, please lmk",
        "fileAttachments": [],
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1674594533511
      },
      {
        "content": "update: so the app builds, but does not serve (I run yarn build often during my development process when making potentiall breaking-changes)<br><br>if anyone gets why this might happen any and all feedback/assistance would be fantastic",
        "fileAttachments": [],
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1674598622837
      },
      {
        "content": "I’m not sure you need the dotenv import in the adapter file, but try adding it to your server.ts file (also keep it in your payload config file)",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674648647466
      },
      {
        "content": "@FireGuy_42 did you give this a shot?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674830378446
      },
      {
        "content": "@Jarrod Hey Jarrod, yeah so without the <code>// require(&#x27;dotenv&#x27;).config()</code> in storageAdapter.ts file. the build errors out<br><br><code>TypeError: Cannot read property &#x27;startsWith&#x27; of undefined\n    at extractConnectionStringParts (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@azure/storage-blob/dist/index.js:13642:26)</code>",
        "fileAttachments": [],
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1677187202075
      },
      {
        "content": "Server.ts<br><br><code>import express from &quot;express&quot;;\nimport payload from &quot;payload&quot;;\n\nrequire(&quot;dotenv&quot;).config();\nconst app = express();\n\n\n// Initialize Payload\npayload.init({\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGODB_URI,\n  express: app,\n  onInit: () =&gt; {\n    payload.logger.info(</code>Payload Admin URL: ${payload.getAdminURL()}<code>);\n  },\n});\n\n// Add your own express routes here\n// Redirect root to Admin panel\napp.get(&quot;/&quot;, (_, res) =&gt; {\n  res.redirect(&quot;/admin&quot;);\n});\n\napp.listen(3001);</code>",
        "fileAttachments": [],
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1677187292227
      },
      {
        "content": "still on 1.5.9",
        "fileAttachments": [],
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1677187310093
      }
    ],
    "messageCount": 9
  },
  {
    "info": {
      "name": "GraphQL Error on Startup",
      "id": "1063869037970464868",
      "guildId": "967097582721572934",
      "createdAt": 1673716544383
    },
    "messages": [
      {
        "content": "My docker container gives me the following logs on startup:<br><br><pre><code class=\"hljs\">[17:05:31] INFO (payload): Starting Payload...\n/home/node/app/node_modules/payload/node_modules/graphql/jsutils/devAssert.js:12\n    throw new Error(message);\n    ^\n\nError: Expected DateTime to be a GraphQL nullable type.\n    at devAssert (/home/node/app/node_modules/payload/node_modules/graphql/jsutils/devAssert.js:12:11)\n    at new GraphQLNonNull (/home/node/app/node_modules/payload/node_modules/graphql/type/definition.js:395:32)\n    at /home/node/app/node_modules/payload/dist/collections/graphql/init.js:101:23\n    at Array.forEach (&lt;anonymous&gt;)\n    at initCollectionsGraphQL (/home/node/app/node_modules/payload/dist/collections/graphql/init.js:60:38)\n    at registerSchema (/home/node/app/node_modules/payload/dist/graphql/registerSchema.js:58:24)\n    at init (/home/node/app/node_modules/payload/dist/init.js:79:38)\n    at initSync (/home/node/app/node_modules/payload/dist/init.js:143:22)\n    at Payload.init (/home/node/app/node_modules/payload/dist/index.js:154:29)\n    at Object.&lt;anonymous&gt; (/home/node/app/dist/server.js:15:19)</code></pre><br><br><br>My docker compose file looks like this (some parts redacted):<br><pre><code class=\"hljs\">payload:\n    image: node:18-alpine\n    ports:\n      - &#x27;3001:3001&#x27;\n    volumes:\n      - ./payload:/home/node/app\n    working_dir: /home/node/app/\n    command: sh -c &quot;npm run serve&quot;\n    depends_on:\n      - mongo\n    environment:\n      MONGODB_URI: mongodb://mongo:27017/payload\n      PORT: 3001\n      PAYLOAD_SECRET: TESTING\n    networks:\n      - main\n\n  mongo:\n    image: mongo:latest\n    ports:\n      - &#x27;27017:27017&#x27;\n    command:\n      - --storageEngine=wiredTiger\n    volumes:\n      - data:/data/db\n    logging:\n      driver: none\n    networks:\n      - main</code></pre><br><br>and the <code>./payload</code> directory I mount to my docker container contains a payload project I have already run <code>npm run build</code> on",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1673716544383
      },
      {
        "content": "It seems the npm based installation workflow is broken.<br><br>Can you try deleting your <code>node_modules</code> folder and <code>package-lock.json</code>. Then run <code>yarn install</code> and check again?",
        "fileAttachments": [],
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673727884338
      },
      {
        "content": "this is plausible, I am using npm",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1673886118415
      },
      {
        "content": "I am currently building in an ubuntu worker and then transferring the whole directory over to the host, including node_modules into the ./payload directory mentioned above",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1673886158882
      },
      {
        "content": "that makes sense, I had a similar setup. After switching to yarn you should be fine I think 🙂",
        "fileAttachments": [],
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673886209460
      },
      {
        "content": "so rework the whole workflow to use yarn?",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1673886228025
      },
      {
        "content": "i&#x27;ll give it a go now",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1673886232057
      },
      {
        "content": "switched to yarn, deploys perfectly!",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1673886855035
      },
      {
        "content": "although this is now the only component of the project that utilises yarn over npm, not world ending but I wonder what is cauting the issue?",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1673886897798
      },
      {
        "content": "The problem seems that there are 2 different versions of the GraphQL engine being used (one directly and another as a dependency). With yarn this is no problem, as you can write rules for how to handle that (overrides.json) but npm is a bit more strict. <br>Same for me, usually it is npm everywhere, once the dependencies are fixed we can switch back 🙂",
        "fileAttachments": [],
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673887132753
      },
      {
        "content": "oh btw, if everything works, please close this thread unless you need more help, this helps to keep things organized 🙂<br><br>@jmikrut another occurrence of this bug, I think I commented yesterday on a related github issue (which I can&#x27;t find right now) but the npm workflow is quite broken as of now 😦",
        "fileAttachments": [],
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673887458271
      },
      {
        "content": "ahhh is this related to <code>express-graphql</code>?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673887551866
      },
      {
        "content": "Yes I think so 🙂",
        "fileAttachments": [],
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673888058636
      },
      {
        "content": "should be reproducable with the minimal setup, but I did not try yet",
        "fileAttachments": [],
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673888087123
      },
      {
        "content": "ok i&#x27;ll put this on the radar. I hear that <code>express-graphql</code> is no longer supported so it&#x27;s probably just that we need to move to a package that uses our graphql version",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673889035030
      },
      {
        "content": "Thanks for all the help guys, will close the thread now",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1673945702130
      },
      {
        "content": "still got the problem, using pnpm on railway, working on local",
        "fileAttachments": [],
        "authorID": "204263616013139970",
        "authorName": "HSWMK",
        "authorAvatar": null,
        "createdAtDate": 1677212343282
      }
    ],
    "messageCount": 16
  },
  {
    "info": {
      "name": "Prevent users from accessing admin panel",
      "id": "1075047937555574904",
      "guildId": "967097582721572934",
      "createdAt": 1676381801738
    },
    "messages": [
      {
        "content": "How do i define which loged in users can access the admin, and which cannot?<br><br>Do I need two seperate user collections (one for admin, one for regular user), or can I add a flag to my user collection for indicating admins?",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676381801738
      },
      {
        "content": "Would <code>access.admin</code> work for you? <a href=\"https://payloadcms.com/docs/access-control/collections\">https://payloadcms.com/docs/access-control/collections</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676381930415
      },
      {
        "content": "@jacobsfletch this makes me think that i need two seperate collections for users and for admins, is that correct?",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676381980573
      },
      {
        "content": "(as in, i can &quot;assign&quot; one collection to be the admin collection, and I cannot make this assignment on a per-user level)",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676382010656
      },
      {
        "content": "You could still use a single collection and implement role or user-based access control",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676382855700
      },
      {
        "content": "You can either assign a roles select field on the user and check that in your access control function, here&#x27;s example of that <a href=\"https://github.com/payloadcms/template-ecommerce/blob/main/src/access/admins.ts\">https://github.com/payloadcms/template-ecommerce/blob/main/src/access/admins.ts</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676382937910
      },
      {
        "content": "Or go even simpler and just add a checkbox to the user and check <em>that</em>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676382960566
      },
      {
        "content": "@jacobsfletch that is super helpful. thansk a bunch!",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676383018220
      },
      {
        "content": "sorry @jacobsfletch - one more question regarding this. How do i limit the access to the admin pabel based on a checkbox like that?",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676388778167
      },
      {
        "content": "as in, I dont want normal users being able to login in <code>/admin</code>",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676388850787
      },
      {
        "content": "Add a <code>canAccessAdmin</code> checkbox field to the user collection and then in your <code>access.admin</code> hook, do something like this:<br><pre><code class=\"hljs\">export const admins: Access = ({ req: { user } }) =&gt; user.canAccessAdmin</code></pre>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676389354279
      },
      {
        "content": "makes sense, but what i dont quite understand is where to use the <code>const Admins</code> of your example after I defined it.",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676390083270
      },
      {
        "content": "On your user collection, like this:<br><br><pre><code class=\"hljs\">{\n  slug: &#x27;users&#x27;,\n  auth: true,\n  access: {\n    admin: admins\n  }\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676390302131
      },
      {
        "content": "ahhh",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676390680900
      },
      {
        "content": "i really missed the obvious here, didnt I",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676390686274
      },
      {
        "content": "thank you so much!",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676390688752
      },
      {
        "content": "No prob!",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676390859363
      }
    ],
    "messageCount": 16
  },
  {
    "info": {
      "name": "Add rules in webpack config",
      "id": "1073014021135024219",
      "guildId": "967097582721572934",
      "createdAt": 1675896878275
    },
    "messages": [
      {
        "content": "Hi ! hope you are all good. I&#x27;m facing a problem when I want to add an <code>option</code> to my <code>sass-loader</code>  in my webpack config<br>here my code:... (in my file payload.config.ts)...<br><pre><code class=\"hljs\">admin{\n webpack: (config) =&gt; {\n      config.module.rules.push(MyObjectIWantToPush);\n      return config;\n    },\n},</code></pre><br><br>...and I would like to add this object to my webpack config...<br><br><pre><code class=\"hljs\">{\n  loader: &quot;sass-loader/dist/cjs.js&quot;,\n  options: {\n    functions: {\n      &quot;env($variable)&quot;: variable =&gt; castToSass(process.env[variable]),\n    }\n  }\n}</code></pre><br><br>...in order to import some env variables in my .scss file<br><br>Is that simply possible or am I just out ? <br>Thanks in advance for any help <br><br>Viva Payload !!",
        "fileAttachments": [],
        "authorID": "986156968152555540",
        "authorName": "NF01",
        "authorAvatar": "a8f64e6e32015ae37f7d21a0a04bd885",
        "createdAtDate": 1675896878275
      },
      {
        "content": "Hey @NF01 — you should be able to control literally any part of the Payload webpack config that you need",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675910209757
      },
      {
        "content": "but I would say instead of pushing another sass loader, you should instead adjust our existing sass loader(s)",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675910224637
      },
      {
        "content": "i&#x27;ve never used functions like that for sass-loader so I&#x27;m not too familiar, but if the sass-loader supports it, it should work in Payload. Just make sure you&#x27;re extending our built-in loader instead of pushing your own",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675910249693
      },
      {
        "content": "okay well thanks a lot for the response,<br>so if I understand you well, I would have to do...<br><pre><code class=\"hljs\"> admin: {\n    webpack: (config) =&gt; ({\n      ...config,\n      module: {\n        ...config.module,\n        rules: {\n          ...config.module.rules,\n          ObjectConfigThatIWantToAdd,// The issue comes from here, error is that: Rulesetrule does not accept object\n        },\n      },\n    }),\n},</code></pre><br>(take from you doc)<br>... rather than my previous code ?<br><br>If it&#x27;s right, I already try it a bit and I&#x27;m facing the &quot;grammatical&quot;  error of webpack: &quot;the configuration object does not match the API schema&quot;<br>So I think my mistake come from my way of writing my code when I want to add my part of the config<br><br>To sum up I think it the grammar of payload to change a webpack config that I don&#x27;t get totally<br><br>Thanks for the help !!",
        "fileAttachments": [],
        "authorID": "986156968152555540",
        "authorName": "NF01",
        "authorAvatar": "a8f64e6e32015ae37f7d21a0a04bd885",
        "createdAtDate": 1675929107389
      },
      {
        "content": "At the end all good I find a way to do it more easily, I directly made a relative path in my scss file to point at my files",
        "fileAttachments": [],
        "authorID": "986156968152555540",
        "authorName": "NF01",
        "authorAvatar": "a8f64e6e32015ae37f7d21a0a04bd885",
        "createdAtDate": 1675939857411
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Has anyone integrated Next, Turborepo, and Payload?",
      "id": "1074072939412070470",
      "guildId": "967097582721572934",
      "createdAt": 1676149344066
    },
    "messages": [
      {
        "content": "I saw the Remix boilerplate. Decided to try and build something similar with Next. I&#x27;ve had some issues.<br><br>1. Clone <a href=\"https://github.com/vercel/turbo/tree/main/examples/basic\">https://github.com/vercel/turbo/tree/main/examples/basic</a><br>2. Run npx create-payload-app in the apps folder to create a new cms folder w/ Payload<br>3. Add the ui and tsconfig workspace dependencies to Payload&#x27;s package.json<br>4. For simplicities sake, I won&#x27;t create a server, I just switch the port to 8000 on Payload<br>5. Run pnpm build and all goes well. Same case for pnpm run dev.<br>6. To test that I can access the packages within payload I open up payload.config.ts and import { Button } from &#x27;ui&#x27;.<br>7. I create a simple function that returns that button, ex: export const b = () =&gt; Button;<br>8. I get the error &quot;Cannot use import statement outside a module&quot;<br><br>Basically if I try to import anything from the UI package within this new Payload folder it treats it as if esmodules aren&#x27;t configured. I&#x27;ve messed around with Payload&#x27;s tsconfig.json and package.json - but run into the same sorts of errors over and over. Any insight to this? I&#x27;m sure it&#x27;s something dumb.",
        "fileAttachments": [],
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1676149344066
      },
      {
        "content": "Hey, I&#x27;m running almost this exact setup! I&#x27;m using npm instead of pnpm but if I had to guess pnpm is going to handle things better anyway 😅 <br><br>In regards to your issue however... I think you&#x27;re running into a recent change described in the 1.6.1 changelog: <a href=\"https://github.com/payloadcms/payload/releases/tag/v1.6.1\">https://github.com/payloadcms/payload/releases/tag/v1.6.1</a><br><br>In a nutshell, you need to set up transpilation <em>somewhere</em>. I ended up not being able to get it to work in my UI library so I just set it up for Payload as described by the PR mentioned in the changelog.",
        "fileAttachments": [],
        "authorID": "321229198234615808",
        "authorName": "Ellie",
        "authorAvatar": "7472ce50c8e25a58fb6ed48925a7c31d",
        "createdAtDate": 1676192588991
      },
      {
        "content": "@Ellie Thank you! This is definitely whats going on. But darn. Even changing what was mentioned in the changelog doesn&#x27;t resolve it. Still isn&#x27;t transpiling the button found in the basic turborepo demo.",
        "fileAttachments": [],
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1676233825314
      },
      {
        "content": "Hmmmm...though even downgrading Payload to 1.5.0 doesn&#x27;t seem to resolve it",
        "fileAttachments": [],
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1676234616355
      },
      {
        "content": "Ahhhh, dumb mistake on my part. Needed to use tsup to transpile the UI folder. So I guess Payload will import from &quot;ui/dist&quot;",
        "fileAttachments": [],
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1676236604919
      },
      {
        "content": "Sorry for the late reply... didn&#x27;t actually get a ping from you which is strange. Though I&#x27;m also new to these threads in Discord so idk 🤷‍♀️ But hey, I&#x27;m glad you solved it! Most tools ignore dependencies when transpiling by default but it seems you figured that one out yourself 😅",
        "fileAttachments": [],
        "authorID": "321229198234615808",
        "authorName": "Ellie",
        "authorAvatar": "7472ce50c8e25a58fb6ed48925a7c31d",
        "createdAtDate": 1676398157444
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Only receive the ID when accessing a FormBlock using the form-builder plugin",
      "id": "1072563834587459615",
      "guildId": "967097582721572934",
      "createdAt": 1675789545438
    },
    "messages": [
      {
        "content": "I am currently using the REST API with an API key to pull page layout data from my payload CMS. Only the ID of the form, and not the contents, is shown when getting to a FormBlock.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1072563834587459615/1072563835233374208/image.png",
            "name": "image.png",
            "id": "1072563835233374208",
            "size": 9292,
            "url": "https://cdn.discordapp.com/attachments/1072563834587459615/1072563835233374208/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1072563834587459615/1072563835233374208/image.png",
            "height": 122,
            "width": 432,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675789545438
      },
      {
        "content": "I thought it could be an access thing so I attempted overriding the access for the fields collection, but also had no luck there",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1072563834587459615/1072564006205804685/image.png",
            "name": "image.png",
            "id": "1072564006205804685",
            "size": 6574,
            "url": "https://cdn.discordapp.com/attachments/1072563834587459615/1072564006205804685/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1072563834587459615/1072564006205804685/image.png",
            "height": 116,
            "width": 319,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675789586407
      },
      {
        "content": "All of my other blocks return the nested data when pulling from my CMS, it is just the forms block from the plugin that seems to be having trouble",
        "fileAttachments": [],
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675789631564
      },
      {
        "content": "Can you paste your REST request here?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675792242347
      },
      {
        "content": "<pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">const</span> potentialFoundDocument = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(fetchURL, {\n        <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&quot;GET&quot;</span>,\n        <span class=\"hljs-attr\">headers</span>: {\n            <span class=\"hljs-string\">&quot;Content-Type&quot;</span>: <span class=\"hljs-string\">&quot;application/json&quot;</span>,\n            <span class=\"hljs-title class_\">Authorization</span>: <span class=\"hljs-string\">`users API-Key <span class=\"hljs-subst\">${apiKey}</span>`</span>,\n        },\n    }).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">res</span>) =&gt;</span> res.<span class=\"hljs-title function_\">json</span>());</code></pre>",
        "fileAttachments": [],
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675796696088
      },
      {
        "content": "<pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">let</span> fetchURL = <span class=\"hljs-string\">`<span class=\"hljs-subst\">${cmsURL}</span>/api/<span class=\"hljs-subst\">${collectionName}</span>`</span>;</code></pre><br>The fetchURL grabs from my pages collection",
        "fileAttachments": [],
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675796748928
      },
      {
        "content": "Just following up. Any updates on this?",
        "fileAttachments": [],
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675975193144
      },
      {
        "content": "<code>form</code> is just a simple relationship so it&#x27;s data is determined by either <code>access</code> and <code>depth</code>. The form plugin already throws <code>read: () =&gt; true</code> onto the config for you so it&#x27;s probably nothing to do with that. Do you have <code>depth</code> on your request or <code>maxDepth</code> anywhere in your config?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675977084193
      },
      {
        "content": "Weird... Made no change besides setting maxDepth to 2, restarting the server and changing it back. Now the full form object populates",
        "fileAttachments": [],
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675978226018
      },
      {
        "content": "🧙",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675978708624
      },
      {
        "content": "Classic &quot;turn it off. turn it back on fix&quot;",
        "fileAttachments": [],
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1676029276409
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "Why does relationship return null in a custom GraphQL query?",
      "id": "1075724798019260466",
      "guildId": "967097582721572934",
      "createdAt": 1676543177848
    },
    "messages": [
      {
        "content": "This is what my query returns <br><pre><code class=\"hljs graphql\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-string\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-string\">&quot;GetCustomerOrders&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n      <span class=\"hljs-string\">&quot;docs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n        <span class=\"hljs-punctuation\">{</span>\n          <span class=\"hljs-string\">&quot;id&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;63edd88930491a91de039454&quot;</span>,\n          <span class=\"hljs-string\">&quot;createdAt&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;2023-02-16T07:17:29.488Z&quot;</span>,\n          <span class=\"hljs-string\">&quot;paid&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\">true</span>,\n          <span class=\"hljs-string\">&quot;product&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\">null</span>,\n          <span class=\"hljs-string\">&quot;amount&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">24000</span>,\n          <span class=\"hljs-string\">&quot;status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;IN_PROGRESS&quot;</span>\n        <span class=\"hljs-punctuation\">}</span>\n      <span class=\"hljs-punctuation\">]</span>\n    <span class=\"hljs-punctuation\">}</span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span></code></pre><br><br>This is the logic, basically inside my resolver<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> orders = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">find</span>({\n    <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;orders&#x27;</span>,\n    <span class=\"hljs-attr\">depth</span>: <span class=\"hljs-number\">3</span>,\n    <span class=\"hljs-attr\">limit</span>: <span class=\"hljs-number\">100</span>,\n    <span class=\"hljs-attr\">sort</span>: <span class=\"hljs-string\">&#x27;-createdAt&#x27;</span>,\n    <span class=\"hljs-attr\">where</span>: {\n      <span class=\"hljs-string\">&#x27;customer.value&#x27;</span>: {\n        <span class=\"hljs-attr\">equals</span>: customer.<span class=\"hljs-property\">id</span>,\n      },\n    },\n    <span class=\"hljs-attr\">overrideAccess</span>: <span class=\"hljs-literal\">true</span>,\n  })\n\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;orders&#x27;</span>, orders.<span class=\"hljs-property\">docs</span>)\n\n  <span class=\"hljs-keyword\">return</span> orders</code></pre><br><br>And this is how my query is declared<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">GetCustomerOrders</span> = (<span class=\"hljs-params\">GraphQL: <span class=\"hljs-keyword\">typeof</span> ImportedGraphQL, payload: Payload</span>) =&gt; {\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-attr\">args</span>: {},\n    <span class=\"hljs-attr\">resolve</span>: <span class=\"hljs-title class_\">GetCustomerOrdersResolver</span>,\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-title function_\">buildPaginatedListType</span>(<span class=\"hljs-string\">&#x27;CustomerOrders&#x27;</span>, payload.<span class=\"hljs-property\">collections</span>[<span class=\"hljs-string\">&#x27;orders&#x27;</span>].<span class=\"hljs-property\">graphQL</span>?.<span class=\"hljs-property\">type</span>),\n  }\n}</code></pre><br><br>Product for some reason is returning <code>null</code> however in the console log, I can see that it&#x27;s properly fetched via the local API.<br><br><pre><code class=\"hljs console\">product: { value: [Object], relationTo: &#x27;products&#x27; },</code></pre><br><br>This is a custom query for the <code>orders</code> collection type, if I use the generated query then it works fine so I&#x27;m struggling to figure out why this won&#x27;t work.<br><br>Here&#x27;s the query I&#x27;m testing in the playground:<br><br><pre><code class=\"hljs graphql\"><span class=\"hljs-keyword\">query</span> <span class=\"hljs-punctuation\">{</span>\n  GetCustomerOrders <span class=\"hljs-punctuation\">{</span>\n    docs <span class=\"hljs-punctuation\">{</span>\n      id\n      createdAt\n      paid\n    product <span class=\"hljs-punctuation\">{</span>\n      value <span class=\"hljs-punctuation\">{</span>\n        <span class=\"hljs-punctuation\">...</span> <span class=\"hljs-keyword\">on</span> Product <span class=\"hljs-punctuation\">{</span>\n          title\n        <span class=\"hljs-punctuation\">}</span>\n      <span class=\"hljs-punctuation\">}</span>\n    <span class=\"hljs-punctuation\">}</span>\n    amount\n    status\n    <span class=\"hljs-punctuation\">}</span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span></code></pre><br>^ this is same query works for the generated one 😫",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676543177848
      },
      {
        "content": "so",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667648759
      },
      {
        "content": "i am guessing this is because even though you are using the local API for your top-level query, and passing <code>overrideAccess: true</code>, you are still using the default <code>orders</code> GraphQL type that Payload builds",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667689816
      },
      {
        "content": "and when you are querying on the field <code>product</code>, that is actually using Payload&#x27;s internal GraphQL population method for retrieving the <code>product</code> field",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667748094
      },
      {
        "content": "and that internal population method <em><strong>requires authentication</strong></em>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667757748
      },
      {
        "content": "basically even if your top-level resolver returns that data, because you are using an internal Payload GraphQL type, GraphQL will use <em><strong>Payload&#x27;s internal field resolvers for relationship fields, requiring authentication</strong></em>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667795461
      },
      {
        "content": "Interesting, the request is via authentication only. I basically want to recreate the generated &quot;get orders&quot; query but instead of having to pass a customer id into the query, I retrieve it from the req object so that 1. devex is easier and 2. theres no way to accidentally query other customer&#x27;s orders even though in theory access control should handle that<br><br>the product in this case is publically readable as well, i get customer id from req object and check a few details and then return the orders",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676683397632
      },
      {
        "content": "this is the full resolver <br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">ResolverArgs</span> {}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">GetCustomerOrdersResolver</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">obj, args: ResolverArgs, { req }, info</span>) =&gt; {\n  <span class=\"hljs-keyword\">const</span> customer = req.<span class=\"hljs-property\">user</span>\n\n  <span class=\"hljs-keyword\">if</span> (!customer.<span class=\"hljs-property\">id</span>) {\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">&#x27;Invalid user id&#x27;</span>)\n  }\n\n  <span class=\"hljs-keyword\">if</span> (customer.<span class=\"hljs-property\">collection</span> !== <span class=\"hljs-string\">&#x27;customers&#x27;</span> || !customer.<span class=\"hljs-property\">_verified</span>) {\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">&#x27;User could not be verified.&#x27;</span>)\n  }\n\n  <span class=\"hljs-keyword\">const</span> orders = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">find</span>({\n    <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;orders&#x27;</span>,\n    <span class=\"hljs-attr\">depth</span>: <span class=\"hljs-number\">3</span>,\n    <span class=\"hljs-attr\">limit</span>: <span class=\"hljs-number\">100</span>,\n    <span class=\"hljs-attr\">sort</span>: <span class=\"hljs-string\">&#x27;-createdAt&#x27;</span>,\n    <span class=\"hljs-attr\">where</span>: {\n      <span class=\"hljs-string\">&#x27;customer.value&#x27;</span>: {\n        <span class=\"hljs-attr\">equals</span>: customer.<span class=\"hljs-property\">id</span>,\n      },\n    },\n    <span class=\"hljs-attr\">overrideAccess</span>: <span class=\"hljs-literal\">true</span>,\n  })\n\n  <span class=\"hljs-keyword\">return</span> orders\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676683795689
      },
      {
        "content": "but like you say it sounds like the resolver is not the issue",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676683863660
      },
      {
        "content": "in my request in the playground i&#x27;m passing a valid jwt token",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676683879531
      },
      {
        "content": "so when you say<br><br><blockquote>Payload&#x27;s internal field resolvers for relationship fields, requiring authentication</blockquote>",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676684069472
      },
      {
        "content": "I played around with this more to try and figure it out but unfortunately I&#x27;m still stuck, @jmikrut any ideas for a solution?",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676869889749
      },
      {
        "content": "you should try passing the <code>req</code> or the <code>user</code> through to your <code>payload.find</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676900264178
      },
      {
        "content": "it&#x27;s still the resolver for sure. basically, you&#x27;re saying give me orders with <code>depth: 3</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676900286004
      },
      {
        "content": "but in reality, GraphQL doesn&#x27;t care about if you ask for <code>depth: 3</code> or not, because it will handle population for each relationship itself",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676900308478
      },
      {
        "content": "so you should only do <code>depth: 0</code> there",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676900323261
      },
      {
        "content": "and let GraphQL handle the populations that you need for you via the built-in resolvers",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676900332963
      },
      {
        "content": "it may be due to <code>depth: 3</code> actually",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676900404141
      },
      {
        "content": "🤦",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676907904947
      },
      {
        "content": "that was totally it, thanks a lot for the explanation",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676907913543
      },
      {
        "content": "the whole context ^ helps a lot for future issues as well",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676907941006
      }
    ],
    "messageCount": 20
  },
  {
    "info": {
      "name": "HTML to RichText (Slate.js)",
      "id": "1073291611892613230",
      "guildId": "967097582721572934",
      "createdAt": 1675963061069
    },
    "messages": [
      {
        "content": "Hi everyone!, <br> I can try to import some posts from WP through local API but I have a problem with the content. <br>I don’t understand how can I convert HTML to RichText using slate.js. Someone could help me?",
        "fileAttachments": [],
        "authorID": "928376918804430868",
        "authorName": "stfn",
        "authorAvatar": null,
        "createdAtDate": 1675963061069
      },
      {
        "content": "Hey @stfn  checkout the Payload github, they have a ton of good examples of Payload in action alongside Next. <a href=\"https://github.com/payloadcms/website/tree/main/src/components/RichText\">https://github.com/payloadcms/website/tree/main/src/components/RichText</a><br><br>This is a pretty good example for the RichText Serializer",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675966273220
      },
      {
        "content": "Ok thank you but this is for &quot;frontend&quot; part, at the moment I try to import posts from WP so I have HTML and I need to transform into the RichText... Is there a way to do that?",
        "fileAttachments": [],
        "authorID": "928376918804430868",
        "authorName": "stfn",
        "authorAvatar": null,
        "createdAtDate": 1676018763786
      },
      {
        "content": "It looks like you might be able to use this to do what you are asking: <a href=\"https://docs.slatejs.org/v/v0.47/other-packages/index\">https://docs.slatejs.org/v/v0.47/other-packages/index</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676035159648
      },
      {
        "content": "Obviously you will want to test the input/output before running it on all of your data - but I think this would be an excellent starting point.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676035205790
      },
      {
        "content": "Ok thank! you I will try it",
        "fileAttachments": [],
        "authorID": "928376918804430868",
        "authorName": "stfn",
        "authorAvatar": null,
        "createdAtDate": 1676277917564
      },
      {
        "content": "if you are interested, this serializer works: <a href=\"https://github.com/thompsonsj/slate-serializers\">https://github.com/thompsonsj/slate-serializers</a><br>It works in each convertion html to slate and slate to html",
        "fileAttachments": [],
        "authorID": "928376918804430868",
        "authorName": "stfn",
        "authorAvatar": null,
        "createdAtDate": 1676373031762
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Payload richtext editor blockquote doesn't work",
      "id": "1079876635387498577",
      "guildId": "967097582721572934",
      "createdAt": 1677533053014
    },
    "messages": [
      {
        "content": "According to the intellisense I get, Payload&#x27;s default rich text editor is supposed to have a blockquote option, but when set it doesn&#x27;t show up in the UI",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079876635387498577/1079876635618197504/image.png",
            "name": "image.png",
            "id": "1079876635618197504",
            "size": 32654,
            "url": "https://cdn.discordapp.com/attachments/1079876635387498577/1079876635618197504/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079876635387498577/1079876635618197504/image.png",
            "height": 386,
            "width": 694,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079876635387498577/1079876635932774410/image.png",
            "name": "image.png",
            "id": "1079876635932774410",
            "size": 10860,
            "url": "https://cdn.discordapp.com/attachments/1079876635387498577/1079876635932774410/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079876635387498577/1079876635932774410/image.png",
            "height": 273,
            "width": 932,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1677533053014
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079876635387498577/1079876805151965304/image.png",
            "name": "image.png",
            "id": "1079876805151965304",
            "size": 53623,
            "url": "https://cdn.discordapp.com/attachments/1079876635387498577/1079876805151965304/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079876635387498577/1079876805151965304/image.png",
            "height": 331,
            "width": 1412,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1677533093547
      },
      {
        "content": "@hypersonic.dev your placeholder text made me lol irl. I&#x27;ll get with the team and get you an answer here. Hold tight!",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1677537018163
      },
      {
        "content": "@zubricks try to recreate this on latest using create payload app",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677588116906
      },
      {
        "content": "Hello again 😅 <br>Are there any plans to fix this issue soon? It wasn&#x27;t fixed in the <code>1.6.16</code> update",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1677780891271
      },
      {
        "content": "@hypersonic.dev I actually think the intellisense is incorrect. RichTexts can currently render <em>pasted</em> blockquotes but there is no toggle/button to format on/off of blockquote. We should be able to add this will low effort. @zubricks can you throw this on our roadmap",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677851282960
      },
      {
        "content": "Thanks for the clarification!",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1677853208549
      },
      {
        "content": "I&#x27;m looking forward to it!",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1677853217497
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Type broblem in Custom Graphql query",
      "id": "1062719495946387486",
      "guildId": "967097582721572934",
      "createdAt": 1673442472207
    },
    "messages": [
      {
        "content": "in resolver, i&#x27;m using local api which returns response in standard  like:  docs, totalDocs, limit, totalPages and etc. in custom Graphql query i should describe  same  Graphql type over and over, is any solution? can i user existing Graphql type objects?<br><pre><code class=\"hljs\">  queries: (GraphQL, payload) =&gt; {\n            return {\n                PostsBySlug: {\n                    type: new GraphQL.GraphQLObjectType({\n                        name: &#x27;PostsBySlug&#x27;,\n                        fields: {\n//                            docs: {\n//                                type:GraphQL.GraphQLList(Post)\n//                            },\n                            totalDocs: {\n                                type: GraphQL.GraphQLInt,\n                            },\n                            limit: {\n                                type: GraphQL.GraphQLInt,\n                            },\n                            totalPages: {\n                                type: GraphQL.GraphQLInt,\n                            },\n                           ...\n                        },\n                    }),\n                    args: {\n                        name: {\n                            type: new GraphQL.GraphQLNonNull(GraphQL.GraphQLString),\n                        }\n                    },\n                    resolve: PostsBySlug,\n                }\n            }\n        }</code></pre><br>Resolver:<br><pre><code class=\"hljs\">import payload from &#x27;payload&#x27;;\n\nconst PostsBySlug = async (_, args) =&gt; {\n    const tags = await payload.find({\n        collection: &#x27;tags&#x27;,\n        where: {\n            name: {\n                equals: args.name\n            }\n        },\n    });\n    const tag = tags?.docs?.[0]\n\n    const posts = await payload.find({\n        collection: &#x27;posts&#x27;,\n        where: {\n            tags: {\n                equals: tag.id\n            }\n        }\n    })\n    return posts\n}\nexport default PostsBySlug</code></pre>",
        "fileAttachments": [],
        "authorID": "349125160600600576",
        "authorName": "bumblebee",
        "authorAvatar": "d68860d197649e81bb7b0a4ce4555e02",
        "createdAtDate": 1673442472207
      },
      {
        "content": "Hi @bumblebee have you taken a look at our example here? <a href=\"https://payloadcms.com/docs/graphql/extending#example\">https://payloadcms.com/docs/graphql/extending#example</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675446678415
      },
      {
        "content": "@jesschow Yeahh",
        "fileAttachments": [],
        "authorID": "349125160600600576",
        "authorName": "bumblebee",
        "authorAvatar": "d68860d197649e81bb7b0a4ce4555e02",
        "createdAtDate": 1675448525490
      },
      {
        "content": "@bumblebee I think this  <code>buildPaginatedListType</code> function is what you&#x27;re looking for: <a href=\"https://github.com/payloadcms/payload/blob/071462b33beb4a38d703b88b203e63aa6bd2097e/src/graphql/schema/buildPaginatedListType.ts#L9\">https://github.com/payloadcms/payload/blob/071462b33beb4a38d703b88b203e63aa6bd2097e/src/graphql/schema/buildPaginatedListType.ts#L9</a>. We might have to export it for you but feel free to open a PR if needed 👍",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675458675200
      },
      {
        "content": "Morning, suffering from same issue. Try to setup a custom query for graphql and having issues retrieving docs. Try following this thread, but am not sure how to implement the BuildPaginatedListType",
        "fileAttachments": [],
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675763178936
      },
      {
        "content": "graphQL: {<br>    schemaOutputFile: path.resolve(__dirname, &#x27;generated-schema.graphql&#x27;),<br>    queries(GraphQL, payload) {<br>      return {<br>        PlacesByCityNameQuery: {<br>          type: buildPaginatedListType(&quot;PlacesByCityName&quot;,GraphQL.?)<br>          ,<br>          args: {<br>            name: {<br>              type: new GraphQL.GraphQLNonNull(GraphQL.GraphQLString),<br>            }<br><br>          },<br>          resolve: PlacesByCityName<br>        }<br>      }<br>    },<br>  },",
        "fileAttachments": [],
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675763199006
      },
      {
        "content": "I guess, my question would be what should I use for docType?",
        "fileAttachments": [],
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675763228986
      },
      {
        "content": "found the solution:",
        "fileAttachments": [],
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675786004291
      },
      {
        "content": "queries(GraphQL, payload) {<br>      return {<br>        PlacesByCityNameQuery: {<br>          type: buildPaginatedListType(&quot;PlacesByCityNameQuery&quot;, <strong>payload.collections.cities.graphQL.type</strong>)<br>          ,<br>          args: {<br>            name: {<br>              type: new GraphQL.GraphQLNonNull(GraphQL.GraphQLString),<br>            }<br><br>          },<br>          resolve: PlacesByCityName<br>        }<br>      }<br>    },",
        "fileAttachments": [],
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675786035550
      },
      {
        "content": "the doc type is in  payload.collections.&lt;your-slug&gt;.graphQL.type",
        "fileAttachments": [],
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675786092434
      },
      {
        "content": "for my resolver:",
        "fileAttachments": [],
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675786161540
      },
      {
        "content": "import payload from &#x27;payload&#x27;;<br><br>const PlacesByCityName = async (_, args) =&gt; {<br><br>    let found={docs:[]};<br><br>    const cities = await payload.find({<br>        collection: &#x27;cities&#x27;,<br>        where: {<br>            name: {<br>                contains: args.name<br>            }<br>        },<br>    });<br>    <br>    cities.docs.forEach(city =&gt; {<br>        if(searchExisting(city)){<br>            found.docs.push(city)<br>        }<br>    });<br><br>    return found;<br>}<br><br><br>const searchExisting=async(city)=&gt;{<br>    let search=await payload.find({<br>        collection:&#x27;places&#x27;,<br>        where:{<br>            city:{<br>                equals:city.id<br>            }<br>        }<br>    })<br>    if(search.totalDocs&gt;0){<br>        return true<br>    }else{<br>        return false<br>    }<br>}<br>export default PlacesByCityName;",
        "fileAttachments": [],
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675786168297
      }
    ],
    "messageCount": 11
  },
  {
    "info": {
      "name": "webpack < 5 used to include polyfills",
      "id": "1069381194162131005",
      "guildId": "967097582721572934",
      "createdAt": 1675030744830
    },
    "messages": [
      {
        "content": "I&#x27;m using the Next.js starter template and trying to make API calls using afterChange hook to third party services using their SDK, but that results in 100s of the following exception.<br><br>BREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.<br>This is no longer the case. Verify if you need this module and configure a polyfill for it.<br><br>It works normally on the Next.js side though. Any idea on how to resolve this? StackOverflow answers do not work for me as none talks about 100s of exception at the same time.",
        "fileAttachments": [],
        "authorID": "327367968524861440",
        "authorName": "Wandering Nerd",
        "authorAvatar": null,
        "createdAtDate": 1675030744830
      },
      {
        "content": "Your hook is likely pulling in a library for server-only code. You&#x27;ll need to alias that code. Documentation here: <a href=\"https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules\">https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675438365054
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Next.js Auth Guard inside getServerSideProps",
      "id": "1081080402946576394",
      "guildId": "967097582721572934",
      "createdAt": 1677820053565
    },
    "messages": [
      {
        "content": "Started using Payload with Next.js and i&#x27;m interested in implementing an auth guard during SSR that makes a request to the <code>/api/users/me</code> endpoint from within <code>getServerSideProps</code> to verify if the user is authenticated or else they will get redirected.",
        "fileAttachments": [],
        "authorID": "520438276964876298",
        "authorName": "Thinh Nguyen",
        "authorAvatar": "52f75597b2219461addc26b187e16dd9",
        "createdAtDate": 1677820053565
      },
      {
        "content": "Would something like this work?<br><br><pre><code class=\"hljs\">export async function getServerSideProps(context: GetServerSidePropsContext) {\n  const res = await fetch(&quot;http://localhost:8080/api/users/me&quot;, {\n    credentials: &quot;include&quot;,\n  });\n  const { user, errors } = await res.json();\n\n  if (!user) {\n    return {\n      redirect: {\n        destination: &quot;/&quot;,\n        permanent: false,\n      },\n    };\n  }\n\n  return {\n    props: {\n      user: user,\n    },\n  };\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "520438276964876298",
        "authorName": "Thinh Nguyen",
        "authorAvatar": "52f75597b2219461addc26b187e16dd9",
        "createdAtDate": 1677820319484
      },
      {
        "content": "Hi @Thinh Nguyen ! I don&#x27;t think any kind of SSR will work for this, because this code won&#x27;t run in the user&#x27;s browser. It will run in the server, so the authentication cookies will not be present to be validated. Therefore, your code will always return a redirect to &quot;/&quot;",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1677820970144
      },
      {
        "content": "Thanks @arielarial for making this distinction clear!",
        "fileAttachments": [],
        "authorID": "520438276964876298",
        "authorName": "Thinh Nguyen",
        "authorAvatar": "52f75597b2219461addc26b187e16dd9",
        "createdAtDate": 1677825083799
      },
      {
        "content": "I know in the app folder you can get the cookies off the request, and then you can make that same <code>/me</code> fetch with:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-comment\">// you will need to get cookies from req (Context?) and then look for the payload-token cookie</span>\n\n<span class=\"hljs-title function_\">fetch</span>(<span class=\"hljs-string\">&quot;http://localhost:8080/api/users/me&quot;</span>, {\n  <span class=\"hljs-attr\">headers</span>: {\n    <span class=\"hljs-title class_\">Authorization</span>: <span class=\"hljs-string\">`JWT <span class=\"hljs-subst\">${jwt <span class=\"hljs-keyword\">from</span> cookie on req}</span>`</span>,\n  }\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677851840014
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "How to show an error if image is not the right size?",
      "id": "1069866712624795658",
      "guildId": "967097582721572934",
      "createdAt": 1675146501452
    },
    "messages": [
      {
        "content": "I want to specify an image size for a collection and show an error if the image I&#x27;m trying to add is not the right size.",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1675146501452
      },
      {
        "content": "You could add a custom validate function to the field.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675148261649
      },
      {
        "content": "Do you know any code that has a similar implementation for that?",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1675156887668
      },
      {
        "content": "Could this be handled by simply specifying resizeOptions on the collection? Because this deals with image files/sizes this may be tricky. You have 2 possible options in my mind:<br><br>1. A custom validate function that probes the image size. <a href=\"https://payloadcms.com/docs/fields/overview#validation\">https://payloadcms.com/docs/fields/overview#validation</a>. This might be tricky though because you&#x27;ll have to probe the image size from the file buffer.<br>2. A hook like beforeValidate or beforeChange to probe the image size. <a href=\"https://payloadcms.com/docs/hooks/collections#beforevalidate\">https://payloadcms.com/docs/hooks/collections#beforevalidate</a><br><br>You might benefit from looking at our image resizing and image size probing here: <a href=\"https://github.com/payloadcms/payload/blob/master/src/uploads/generateFileData.ts#L99\">https://github.com/payloadcms/payload/blob/master/src/uploads/generateFileData.ts#L99</a>. Sounds like you might have to do similar logic",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675438798042
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Conditionally render fields based on a field value in a relationship",
      "id": "1077299720411689020",
      "guildId": "967097582721572934",
      "createdAt": 1676918668607
    },
    "messages": [
      {
        "content": "For example, lets assume I have 2 collections that are related; <code>Items</code> and <code>ItemTypes</code>.<br><br><code>ItemTypes</code> has a <code>name</code> text field and a <code>sellable</code> checkbox field:<br><pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">ItemTypes</span>: <span class=\"hljs-title class_\">CollectionConfig</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&quot;itemTypes&quot;</span>,\n  <span class=\"hljs-attr\">access</span>: {\n    <span class=\"hljs-attr\">read</span>: <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-literal\">true</span>,\n  },\n  <span class=\"hljs-attr\">admin</span>: {\n    <span class=\"hljs-attr\">useAsTitle</span>: <span class=\"hljs-string\">&quot;name&quot;</span>,\n    <span class=\"hljs-attr\">group</span>: <span class=\"hljs-string\">&quot;Items&quot;</span>,\n  },\n  <span class=\"hljs-attr\">fields</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;name&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;sellable&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;checkbox&quot;</span>,\n      <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span>,\n    },\n  ],\n};</code></pre><br><br><code>Items</code> has a <code>name</code> text field, a <code>type</code> relation and a <code>sellPrice</code> field which I want to make only render when <code>type.sellable === true</code>:<br><pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Items</span>: <span class=\"hljs-title class_\">CollectionConfig</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&quot;items&quot;</span>,\n  <span class=\"hljs-attr\">access</span>: {\n    <span class=\"hljs-attr\">read</span>: <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-literal\">true</span>,\n  },\n  <span class=\"hljs-attr\">admin</span>: {\n    <span class=\"hljs-attr\">useAsTitle</span>: <span class=\"hljs-string\">&quot;name&quot;</span>,\n    <span class=\"hljs-attr\">group</span>: <span class=\"hljs-string\">&quot;Items&quot;</span>,\n  },\n  <span class=\"hljs-attr\">fields</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;name&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;type&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;relationship&quot;</span>,\n      <span class=\"hljs-attr\">relationTo</span>: <span class=\"hljs-title class_\">ItemTypes</span>.<span class=\"hljs-property\">slug</span>,\n      <span class=\"hljs-attr\">hasMany</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;sellPrice&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;number&quot;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">admin</span>: {\n        <span class=\"hljs-attr\">condition</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> data.<span class=\"hljs-property\">type</span>?.<span class=\"hljs-property\">sellable</span>,\n      },\n    },\n  ],\n};</code></pre><br><br>How could I do this? In the <code>condition</code> of <code>sellPrice</code>, all I get is the id of the type rather than any of the info, and it doesn&#x27;t accept an async function in order to lookup the id in the related collection.",
        "fileAttachments": [],
        "authorID": "93699784942034944",
        "authorName": "itsjxck",
        "authorAvatar": "2d16b59cd6bd3e7c108384738acef863",
        "createdAtDate": 1676918668607
      },
      {
        "content": "Related and answered here:",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676926435597
      },
      {
        "content": "<a href=\"https://discord.com/channels/967097582721572934/1074901824785625149\">https://discord.com/channels/967097582721572934/1074901824785625149</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676926436306
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Localized blocks?",
      "id": "1080200454018977902",
      "guildId": "967097582721572934",
      "createdAt": 1677610257392
    },
    "messages": [
      {
        "content": "I&#x27;m exploring localization and I have an upcoming project that would ideally utilize localized sets of blocks. For instance, a page my contain one set of blocks for English and then another set of blocks for Spanish. <br><br>Is this supported or is it possible to support?",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677610257392
      },
      {
        "content": "I&#x27;m being silly, was trying to put the localize property on a tab definition",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677610798560
      },
      {
        "content": "my exact use-case does completely work. even allows you to fallback to the default language.",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677610798919
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Preview example with app directory",
      "id": "1075079909053059203",
      "guildId": "967097582721572934",
      "createdAt": 1676389424337
    },
    "messages": [
      {
        "content": "I&#x27;m struggling to get preview functionality working in the app directory.<br><br>I&#x27;m using the payload website + cms as a template but don&#x27;t appear to be able to get previewing, even a clean copy - I assume it works for you guys?<br><br>I&#x27;ve seen the following: <br><a href=\"https://github.com/payloadcms/payload/pull/1950\">https://github.com/payloadcms/payload/pull/1950</a>. This appears to rely on a <code>payloadToken</code> from <code>GetStaticPropsContext</code> .<br><br>How can this be accomplished within the app directory on the server?<br><br>I can only see <code>import { previewData } from &#x27;next/headers&#x27;;</code>  but this appears to only work on the client.<br><br>What I&#x27;ve implemented:<br>CMS:<br><pre><code class=\"hljs\">slug: &#x27;page&#x27;,\n  admin: {\n    useAsTitle: &#x27;Page&#x27;,\n    defaultColumns: [&#x27;title&#x27;, &#x27;slug&#x27;, &#x27;updatedAt&#x27;],\n    preview: (doc) =&gt; {\n      return `${process.env.PAYLOAD_PUBLIC_APP_URL}/api/preview?url=${formatAppURL(doc.slug)}`\n    },\n  versions: {\n    drafts: true\n  },\n  access: {\n    read: () =&gt; true,\n  },\n  },</code></pre><br>Website:<br><pre><code class=\"hljs\">export async function generateStaticParams(props) {\n  const pages = await fetchPages()\n  return pages.map((page) =&gt; {\n    return ({\n      slug: page.map(data =&gt; data?.slug),\n    })\n  })\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676389424337
      },
      {
        "content": "@remy  afaik Next.js app directory does not yet support preview, but we&#x27;ll be the first to implement it as soon as it ships! That example uses the pages directory and will be merged within a day or two.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676389721052
      },
      {
        "content": "The woes of life of the bleeding edge 🗡️🩸",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676389945397
      },
      {
        "content": "Does this mean your website cms doesn&#x27;t have a functioning preview?",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676390052147
      },
      {
        "content": "Correct 🩸",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676390095072
      },
      {
        "content": "Livin on the edge",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676390103998
      },
      {
        "content": "It had preview for ~2 weeks until we decided to migrate to Next.js 13 beta",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676390146758
      },
      {
        "content": "For my future self and anyone else that looks this up, I believe this constitutes <em>Preview mode</em>: <a href=\"https://beta.nextjs.org/docs/app-directory-roadmap\">https://beta.nextjs.org/docs/app-directory-roadmap</a>",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676392276442
      },
      {
        "content": "Just merged in a preview example in you wanna take a look: <a href=\"https://github.com/payloadcms/payload/tree/master/examples/preview\">https://github.com/payloadcms/payload/tree/master/examples/preview</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676490285665
      },
      {
        "content": "It includes an example Next.js app running Next 13 <em>pages</em> directory.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676490328512
      },
      {
        "content": "Once that Next.js roadmap item is complete we can throw an <em>app</em> directory example in there too",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676490362486
      },
      {
        "content": "Nice one, thanks @jacobsfletch. I&#x27;ve come to the end of my spike but will likely be picking this up again soon",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676560822362
      }
    ],
    "messageCount": 11
  },
  {
    "info": {
      "name": "Anyone has a good pointer on how to enable social logins ?",
      "id": "1071086861235277904",
      "guildId": "967097582721572934",
      "createdAt": 1675437407550
    },
    "messages": [
      {
        "content": "Maybe an external service like auth0 or logto ?",
        "fileAttachments": [],
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1675437407550
      },
      {
        "content": "Here is a plugin for auth0 written by a community-member: <a href=\"https://github.com/finkinfridom/payload-auth0-plugin\">https://github.com/finkinfridom/payload-auth0-plugin</a><br><br>Most SSO integrations are only accessible through an Enterprise license with Payload.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675442066443
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "How hard is it to use an existing MongoDB database (That existed pre Payload) for PayloadCMS?",
      "id": "1055845443566829658",
      "guildId": "967097582721572934",
      "createdAt": 1671803570406
    },
    "messages": [
      {
        "content": "Assume the schema of the documents in the collection is consistent.",
        "fileAttachments": [],
        "authorID": "276227047968210945",
        "authorName": "Harley Queens",
        "authorAvatar": "54b59995c428cbfd08a790f29a00e5df",
        "createdAtDate": 1671803570406
      },
      {
        "content": "We&#x27;re you able to use an existing DB? How&#x27;d it go?<br>I imagine you&#x27;d have a lot of tedious work trying to match up the collection field names exactly, but that it would work great once you got there.<br>The neat thing is that you won&#x27;t lose any data if old documents are updated in cases where your new fields don&#x27;t have 100% coverage of existing data.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675439015247
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Error using payload generate graphQLSchema",
      "id": "1069809115544694805",
      "guildId": "967097582721572934",
      "createdAt": 1675132769238
    },
    "messages": [
      {
        "content": "Recently, started getting this error when trying to run <code>payload generate:graphQLSchema</code>:<br><br><pre><code class=\"hljs\">payload/node_modules/graphql/utilities/printSchema.js:54\n  const directives = schema.getDirectives().filter(directiveFilter);\n                            ^\n\nTypeError: Cannot read properties of undefined (reading &#x27;getDirectives&#x27;)</code></pre><br><br>The full command I&#x27;m using is <code>dotenv payload generate:graphQLSchema</code>, and <code>PAYLOAD_CONFIG_PATH</code> is defined in .env, though I have also tried running it with <code>-v PAYLOAD_CONFIG_PATH=src/payload.config.ts</code> just to be sure.<br><br>I have generated the GraphQL schema successfully recently, so wondering if this looks familiar to anyone.",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675132769238
      },
      {
        "content": "Fixed in 1.6.3 <a href=\"https://github.com/payloadcms/payload/releases/tag/v1.6.3\">https://github.com/payloadcms/payload/releases/tag/v1.6.3</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675438399285
      },
      {
        "content": "@denolfe Thanks!",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675441298530
      },
      {
        "content": "@denolfe I am getting a different error",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676688654279
      },
      {
        "content": "const err = new MongooseError(message);<br>                      ^<br><br>MongooseError: Operation <code>users.countDocuments()</code> buffering timed out after 10000ms",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676688664765
      },
      {
        "content": "I updated to version 1.6.12",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676688682160
      },
      {
        "content": "That typically indicates a connectivity issue to your mongo server",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676860760014
      },
      {
        "content": "or a permissions issue",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676860764822
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "NextJS Error when using payload in same express server.",
      "id": "1068480390362308658",
      "guildId": "967097582721572934",
      "createdAt": 1674815976468
    },
    "messages": [
      {
        "content": "Hi all! I use Payload in combination with NextJS. For that I made my own server.js that ensures that Next and Payload run on the same express server. However, I get the following error from NextJS.<br><br><pre><code class=\"hljs\">error - Error [ERR_REQUIRE_ESM]: require() of ES Module /&lt;PATH TO PROJECT&gt;/src/node_modules/react-dnd/dist/index.js from /&lt;PATH TO PROJECT&gt;/src/.next/server/pages/ planning/[[...args]].js not supported.</code></pre><br><br>Next tells me to replace the <code>require</code> statements, but since this is an external package (<code>react-dnd</code>) I can&#x27;t just change it.<br><br>When I run the application without a payload (just remove the <code>payload.init</code>), I don&#x27;t get the error and the NextJS app runs great. My suspicion is that this is a webpack configuration of payload, but I&#x27;m not really sure how to solve it. Does anyone have an idea?<br><br>Here&#x27;s the code of my server.js:<br><pre><code class=\"hljs\">// server.js\nconst dotenv = require(&quot;dotenv&quot;);\nconst express = require(&quot;express&quot;);\nconst next = require(&quot;next&quot;);\nconst payload = require(&quot;payload&quot;);\nconst path = require(&quot;path&quot;);\n\ntry {\n  dotenv.config({\n    path: path.resolve(__dirname, &quot;../.env&quot;),\n  });\n\n  if (!process.env.IS_DOCKER) {\n    dotenv.config({\n      path: path.resolve(__dirname, `../.env.local`),\n    });\n  }\n\n  const dev = process.env.NODE_ENV !== &quot;production&quot;;\n  const hostname = process.env.NEXT_PUBLIC_HOSTNAME || &quot;localhost&quot;;\n  const port = process.env.NEXT_PUBLIC_PORT || &quot;3000&quot;;\n  const { PAYLOAD_SECRET_KEY, MONGO_URL } = process.env;\n\n  const app = next({ dev, hostname, port });\n  const handle = app.getRequestHandler();\n\n  const server = express();\n\n  payload.init({\n    secret: PAYLOAD_SECRET_KEY,\n    mongoURL: MONGO_URL,\n    express: server,\n  });\n  server.all(&quot;*&quot;, (req, res) =&gt; handle(req, res));\n\n  app\n    .prepare()\n    .then(() =&gt; {\n      server.listen(process.env.PORT, async () =&gt; {\n        console.log(`Server listening on ${process.env.PORT}...`);\n      });\n    })\n    .catch((error) =&gt; {\n      console.log(error);\n    });\n} catch (e) {\n  console.error(e);\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "1062755969270030376",
        "authorName": "voide",
        "authorAvatar": null,
        "createdAtDate": 1674815976468
      },
      {
        "content": "Is react-dnd ESM only? If so, that may be the issue.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675438143938
      },
      {
        "content": "If I remember correctly, react-dnd is ESNext. Should that matter? I don&#x27;t really understand why the application doesn&#x27;t work when I run Payload in the same express server, but if I just run NextJs on this express server, it works. These applications should be able to run independently of each other (on the same express server), right?",
        "fileAttachments": [],
        "authorID": "767650700536446990",
        "authorName": "voide",
        "authorAvatar": "7f83a2bf57fa1f3906f2f8445a020327",
        "createdAtDate": 1675682191711
      },
      {
        "content": "Unfortunately with TypeScript and tsconfigs, this isn&#x27;t as straight forward at times.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675691274651
      },
      {
        "content": "If I were seeing that error, the first thing I&#x27;d look at is my tsconfig and also the react-dnd documentation about being ESM-only",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675691316242
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Migrate from KeystoneJS v4 (Keystone Classic)",
      "id": "1070191210834182194",
      "guildId": "967097582721572934",
      "createdAt": 1675223867854
    },
    "messages": [
      {
        "content": "Ive got a number of older sites running keystone v4... Lately been wondering if i&#x27;ts possible to migrate these over to Payload. Seems doable, but does anybody have any insight to how challenging/possible this would be or have any ideas, pointers, experience doing something similar?",
        "fileAttachments": [],
        "authorID": "958604809215283250",
        "authorName": "joephuz",
        "authorAvatar": "a668b9d3f23523d2aae8ac84d9724c60",
        "createdAtDate": 1675223867854
      },
      {
        "content": "I haven&#x27;t used keystone for quite some time, but really what this comes down to is massaging data from keystone into the right form in order to put into Payload. That will determine how difficult of a task this is. You&#x27;d use the Payload local API for this inside of a script.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675441025988
      },
      {
        "content": "Here is some pseudo-code for you:<br><pre><code class=\"hljs\">import payload from &#x27;payload&#x27;;\n\nrequire(&#x27;dotenv&#x27;).config();\n\nconst { PAYLOAD_SECRET, MONGODB_URI } = process.env;\n\nconst migratePosts = async () =&gt; {\n  await payload.init({\n    secret: PAYLOAD_SECRET,\n    mongoURL: MONGODB_URI,\n    local: true,\n  });\n\n  // Retrieve &#x27;Posts&#x27; from keystone&#x27;\n  // Modify data accordingly\n  const postsToMigrate = [];\n  const adjustedPostData = adjust(postsToMigrate);\n\n  // Create new &#x27;Posts&#x27; in Payload\n  adjustedPostData.map(async post =&gt; {\n    const newPost = await payload.create({ collection: &#x27;posts&#x27;, data: post });\n  })\n\n};\n\nmigratePosts();</code></pre>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675441590449
      },
      {
        "content": "Also, here is a more advanced example migrating csv data which might be good to look at: <a href=\"https://github.com/payloadcms/payload/discussions/1660#discussioncomment-4485387\">https://github.com/payloadcms/payload/discussions/1660#discussioncomment-4485387</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675519991580
      },
      {
        "content": "Thanks for your feedback @denolfe … I’ve been working on this and it’s coming along great. I actually just started running the payload and keystone in tandem on different ports. Then in the keystone just make myself a temporary endpoint to hit payloads REST api after transforming the data to to the format for payload. Mostly straightforward but the trickiest part is the media files since those are handled drastically different (better) in payload. But overall got all of my tests working, just in the grunt work phase. Finally my front end should drop in pretty painlessly just tweaking all the queries over with payloads local Api! 👍",
        "fileAttachments": [],
        "authorID": "958604809215283250",
        "authorName": "joephuz",
        "authorAvatar": "a668b9d3f23523d2aae8ac84d9724c60",
        "createdAtDate": 1675918663747
      },
      {
        "content": "Another side note for the media files.. the original app is using S3 storage. I found the payload plugin which is AMAZING, but I had to trick it to port over my existing files/links. i did this by createing a basic, “not upload enabled” collection that mirrors the payload  media collection schema just using text and numbers etc. because payload would error if you hit the api without a file to upload. Once I run my script to inject all the existing docs I swap the collection slugs for the temporary “not upload” collection and the real upload collection and boom! Got all the s3 files ready to go!",
        "fileAttachments": [],
        "authorID": "958604809215283250",
        "authorName": "joephuz",
        "authorAvatar": "a668b9d3f23523d2aae8ac84d9724c60",
        "createdAtDate": 1675919156631
      },
      {
        "content": "Nice, this script might be somewhat relevant as well: <a href=\"https://github.com/payloadcms/payload/discussions/1834\">https://github.com/payloadcms/payload/discussions/1834</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675958523350
      },
      {
        "content": "Yes! I needed this thanks so much🙏",
        "fileAttachments": [],
        "authorID": "958604809215283250",
        "authorName": "joephuz",
        "authorAvatar": "a668b9d3f23523d2aae8ac84d9724c60",
        "createdAtDate": 1676095682747
      },
      {
        "content": "I get the this error running that script<br><br>Unable to find documents with payload<br>APIError: The collection with slug media can&#x27;t be found.",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1676501749251
      },
      {
        "content": "Are you trying to regenerate the media sizes like that script is designed for? I linked to that script as an example of how to interact w/ the Payload local API via script.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676505621625
      },
      {
        "content": "Yeah, I just trying regenerate all my images on the server",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1676506841387
      },
      {
        "content": "@denolfe I resolved my issue and added a github comment here <a href=\"https://github.com/payloadcms/payload/discussions/1834#discussioncomment-4989249\">https://github.com/payloadcms/payload/discussions/1834#discussioncomment-4989249</a> of how I resolved the issue",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1676507934176
      },
      {
        "content": "@christopher.nowlan Great, thanks for doing that 👍",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676554605137
      },
      {
        "content": "No worries.  I am happy to assist",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1676589626859
      }
    ],
    "messageCount": 13
  },
  {
    "info": {
      "name": "After fresh install (npx create-payload-app), npm run dev is not working",
      "id": "1077548706536099911",
      "guildId": "967097582721572934",
      "createdAt": 1676978031525
    },
    "messages": [
      {
        "content": "I have done a fresh install on my mac (verson 10.15.7) with node version 18. when i run npm run dev, it throw this error  <pre><code class=\"hljs\">[nodemon] 2.0.20\n[nodemon] to restart at any time, enter `rs`\n[nodemon] watching path(s): *.*\n[nodemon] watching extensions: ts\n[nodemon] starting `ts-node src/server.ts`\ndyld: lazy symbol binding failed: Symbol not found: _pthread_jit_write_protect_supported_np\n  Referenced from: /Users/mac/work/RnD/CMS/payload/coddle-cms/node_modules/payload/node_modules/sharp/build/Release/../.././vendor/8.13.3/darwin-x64/lib/libvips-cpp.42.dylib\n  Expected in: /usr/lib/libSystem.B.dylib\n\ndyld: Symbol not found: _pthread_jit_write_protect_supported_np\n  Referenced from: /Users/mac/work/RnD/CMS/payload/coddle-cms/node_modules/payload/node_modules/sharp/build/Release/../.././vendor/8.13.3/darwin-x64/lib/libvips-cpp.42.dylib\n  Expected in: /usr/lib/libSystem.B.dylib\n\n[nodemon] app crashed - waiting for file changes before starting...</code></pre>",
        "fileAttachments": [],
        "authorID": "273835182979678221",
        "authorName": "Villain Behind Glasses",
        "authorAvatar": "7ab84e77693b708d385126f23ed19cf1",
        "createdAtDate": 1676978031525
      },
      {
        "content": "Hey @Villain Behind Glasses! Happy to get to the bottom of this issue with you! After some further research, I would take a look at this link below. The issue at hand may be more related to your mac version in connection with the Sharp dependency.<br><br><a href=\"https://github.com/lovell/sharp/issues/3438\">https://github.com/lovell/sharp/issues/3438</a><br><br>Let me know if you need anything else!",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1677274438908
      },
      {
        "content": "You can also run it in Docker if you have it installed by issuing <code>docker-compose up</code>. That way you don&#x27;t need to also have MongoDB installed.",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1677412354359
      },
      {
        "content": "@patrikkozak thank you.",
        "fileAttachments": [],
        "authorID": "273835182979678221",
        "authorName": "Villain Behind Glasses",
        "authorAvatar": "7ab84e77693b708d385126f23ed19cf1",
        "createdAtDate": 1677566824422
      },
      {
        "content": "@Jesse Sivonen i will try it with the docker",
        "fileAttachments": [],
        "authorID": "273835182979678221",
        "authorName": "Villain Behind Glasses",
        "authorAvatar": "7ab84e77693b708d385126f23ed19cf1",
        "createdAtDate": 1677566859424
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "How to create a REST API query for an array from a collection?",
      "id": "1073500182462877706",
      "guildId": "967097582721572934",
      "createdAt": 1676012788168
    },
    "messages": [
      {
        "content": "How can I create a query for tags title is equals to House &amp; Lot? Kindly check the image for reference the of my collection",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1073500182462877706/1073500182668390420/image.png",
            "name": "image.png",
            "id": "1073500182668390420",
            "size": 92775,
            "url": "https://cdn.discordapp.com/attachments/1073500182462877706/1073500182668390420/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1073500182462877706/1073500182668390420/image.png",
            "height": 642,
            "width": 751,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676012788168
      },
      {
        "content": "How to create a REST API query for an array from a collection?",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676012860737
      },
      {
        "content": "You can use dot notation in your query like this: <code>/api/properties?where[tags.title][equals]=House%20%26%20Lot</code>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676034118025
      },
      {
        "content": "I believe dot notation is for objects only.",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676038674361
      },
      {
        "content": "The rest api will parse the dot notation into the proper database query, it works for both objects and arrays.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676039475047
      },
      {
        "content": "You may have to nest another level down if you are using qs to parse your queries (not sure if you are or not). Regardless it would be something like:<br><br><pre><code class=\"hljs typescript\">{<span class=\"hljs-attr\">tags</span>: {<span class=\"hljs-attr\">title</span>: {<span class=\"hljs-attr\">equals</span>: <span class=\"hljs-string\">&quot;House &amp; Lot&quot;</span>}}}</code></pre>",
        "fileAttachments": [],
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1676039768513
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Is it supposed to be possible to change the webpack config in a plugin?",
      "id": "1037343828497154078",
      "guildId": "967097582721572934",
      "createdAt": 1667392441630
    },
    "messages": [
      {
        "content": "I would like to add some items to <code>resolve.alias</code> but it doesn&#x27;t seem to be affected:<br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">admin</span>: {\n  ...incomingConfig.<span class=\"hljs-property\">admin</span>,\n\n  <span class=\"hljs-attr\">webpack</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">incoming</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> incomingWebpack = incomingConfig.<span class=\"hljs-property\">admin</span>?.<span class=\"hljs-property\">webpack</span> || (<span class=\"hljs-function\">(<span class=\"hljs-params\">a</span>) =&gt;</span> a)\n    <span class=\"hljs-keyword\">const</span> config = <span class=\"hljs-title function_\">incomingWebpack</span>(incoming)\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;icmign applied&#x27;</span>)\n    <span class=\"hljs-keyword\">return</span> {\n      ...config,\n      <span class=\"hljs-attr\">resolve</span>: {\n        ...config.<span class=\"hljs-property\">resolve</span>,\n        <span class=\"hljs-attr\">alias</span>: {\n          ...config.<span class=\"hljs-property\">resolve</span>.<span class=\"hljs-property\">alias</span>,\n          <span class=\"hljs-attr\">axios</span>: <span class=\"hljs-literal\">false</span>,\n          <span class=\"hljs-string\">&#x27;passport-oauth2&#x27;</span>: <span class=\"hljs-literal\">false</span>,\n          <span class=\"hljs-string\">&#x27;express-session&#x27;</span>: <span class=\"hljs-literal\">false</span>,\n          <span class=\"hljs-attr\">passport</span>: <span class=\"hljs-literal\">false</span>,\n        },\n      },\n    }\n  },\n},</code></pre>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1667392441630
      },
      {
        "content": "Yes, absolutely you can do this",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1667397073907
      },
      {
        "content": "you can see an example of how we do it in the cloud storage plugin",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1667397084767
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/plugin-cloud-storage\">https://github.com/payloadcms/plugin-cloud-storage</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1667397090406
      },
      {
        "content": "each adapter is responsible for extending the Webpack config",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1667397097870
      },
      {
        "content": "you may need to <code>rm -Rf node_modules/.cache</code> to see changes",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1667397129094
      },
      {
        "content": "I&#x27;m building an oAuth plugin, is it ok if I publish the source code?",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1667408026744
      },
      {
        "content": "<del>I have also tried to add a sign in button by setting <code>admin.components.beforeLogin</code> but it doesn&#x27;t seem to work.</del>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1667408113524
      },
      {
        "content": "Oh, just noticed what happened",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1667408510399
      },
      {
        "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">oAuthPlugin</span>(<span class=\"hljs-params\">incoming: Config</span>): <span class=\"hljs-title class_\">Config</span> {\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable constant_\">CLIENTSIDE</span>) <span class=\"hljs-keyword\">return</span> incoming</code></pre>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1667408537019
      },
      {
        "content": "Thanks, the webpack config is working too now.",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1667409354766
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "Access control to unpublish",
      "id": "1070403097052057660",
      "guildId": "967097582721572934",
      "createdAt": 1675274385465
    },
    "messages": [
      {
        "content": "Is there a way to add access control to unpublish a document?",
        "fileAttachments": [],
        "authorID": "435590980838621194",
        "authorName": "Cerize",
        "authorAvatar": null,
        "createdAtDate": 1675274385465
      },
      {
        "content": "Answered in GH Discussions here: <a href=\"https://github.com/payloadcms/payload/discussions/1996#discussioncomment-4845491\">https://github.com/payloadcms/payload/discussions/1996#discussioncomment-4845491</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675451494241
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Is it possible to hide collections from the sidebar",
      "id": "1075865165519659108",
      "guildId": "967097582721572934",
      "createdAt": 1676576644068
    },
    "messages": [
      {
        "content": "I have some collections I only want to be CRUD from other collections, where they are referenced as fields. <br>As to not confused the user, i would like to hide these collections from the sidebar. Is this possible?",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676576644068
      },
      {
        "content": "Hey @moritz there are a number of different discussions on this topic, here are a few that may contain the answers you&#x27;re looking for! I&#x27;m happy to fill in the gaps <a href=\"https://discord.com/channels/967097582721572934/1043100541036789760\">https://discord.com/channels/967097582721572934/1043100541036789760</a> <a href=\"https://discord.com/channels/967097582721572934/1064531848220381295\">https://discord.com/channels/967097582721572934/1064531848220381295</a> <a href=\"https://discord.com/channels/967097582721572934/1068706036883669022\">https://discord.com/channels/967097582721572934/1068706036883669022</a> <a href=\"https://discord.com/channels/967097582721572934/1070272024775249950\">https://discord.com/channels/967097582721572934/1070272024775249950</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676580204130
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "deploying on Digital Ocean",
      "id": "1077251950132871319",
      "guildId": "967097582721572934",
      "createdAt": 1676907279285
    },
    "messages": [
      {
        "content": "If I want to be able to upload images in Payload CMS, will a DO Droplet suffice, or do I also need Spaces (Object storage)?",
        "fileAttachments": [],
        "authorID": "850995577848070156",
        "authorName": "acandael",
        "authorAvatar": "e44cdbf7977857cdfe2b09724e7cd3bb",
        "createdAtDate": 1676907279285
      },
      {
        "content": "Droplets come with a set amount of storage already, the lowest being 10GB I think, but you can add Volume (block storage) that will automatically mount to your droplet. If you&#x27;re going to use a droplet anyway, that is likely gonna be the easiest solution for more storage. With Spaces, you would have to write the functionality for uploading files yourself, since they don&#x27;t attach directly to your droplet.",
        "fileAttachments": [],
        "authorID": "783701636165402624",
        "authorName": "tylandavis",
        "authorAvatar": "f93cd3cba7ccab13bbb14a2f41ffd5a5",
        "createdAtDate": 1676926763445
      },
      {
        "content": "Thanks for the answer Ty! This is definitely the move.",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1676927247714
      },
      {
        "content": "Thanks for the information Ty!",
        "fileAttachments": [],
        "authorID": "850995577848070156",
        "authorName": "acandael",
        "authorAvatar": "e44cdbf7977857cdfe2b09724e7cd3bb",
        "createdAtDate": 1676959965788
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Docker for remix server.",
      "id": "1077905084886818846",
      "guildId": "967097582721572934",
      "createdAt": 1677062998745
    },
    "messages": [
      {
        "content": "How can I wrap this repo ( <a href=\"https://github.com/payloadcms/remix-server\">https://github.com/payloadcms/remix-server</a> ) in docker?",
        "fileAttachments": [],
        "authorID": "691523402124623923",
        "authorName": "aliahad",
        "authorAvatar": "75a400eed63cce5cfc5d69aa882f034a",
        "createdAtDate": 1677062998745
      },
      {
        "content": "Do you want to use it in production or development? I&#x27;m asking because those require usually quite different approaches. You need a Docker image to run the container, so you&#x27;d need to use existing one from <a href=\"https://hub.docker.com\">https://hub.docker.com</a> or build your own using Dockerfile. For production, you&#x27;d actually preferably just build your own to have it self-contained, but in development it&#x27;s ok to just use Docker Compose with existing image and custom command and bind mounts.",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1677078893863
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Payload.collection is {} after Init when I try to seed",
      "id": "1070712231353917510",
      "guildId": "967097582721572934",
      "createdAt": 1675348088826
    },
    "messages": [
      {
        "content": "Hi, I want to seed some database entries and I copied most of the seed example of the next-custom-server:<br><br><pre><code class=\"hljs\">const slugify = require(&#x27;slugify&#x27;);\n\nconst payload = require(&#x27;payload&#x27;);\n\nconst appearance = require(&#x27;./samples/appearance.json&#x27;);\n\nrequire(&#x27;dotenv&#x27;).config();\n\nconst { PAYLOAD_SECRET, MONGODB_URI } = process.env;\n\nconst formatSlug = (string) =&gt; slugify(string, { lower: true, strict: true });\n\npayload.init({\n  secret: PAYLOAD_SECRET,\n  mongoURL: MONGODB_URI,\n});\n\nconst seedDatabase = async () =&gt; {\n  const createEntry = async (entry, slug) =&gt; {\n    const req = await payload.create({\n      collection: slug,\n      data: {\n        name: entry,\n        slug: formatSlug(entry),\n      },\n    });\n    console.log(req);\n  };\n\n  const populateCollection = (dataSet) =&gt; {\n    for (const [key, value] of Object.entries(dataSet)) {\n      value.items.map((item) =&gt; {\n        createEntry(item, value.slug);\n      });\n      console.log(`${key} successfully seeded!`);\n    }\n  };\n\n  console.log(payload);\n\n  //populateCollection(appearance);\n\n  console.log(await payload.find({ collection: &#x27;articles&#x27; }));\n\n  /** await payload.create({\n    collection: &#x27;&#x27;,\n    data: {\n      name: &#x27;Seed test&#x27;,\n    },\n  });**/\n\n  console.log(&#x27;Seed completed!&#x27;);\n  process.exit(0);\n};\n\nseedDatabase();</code></pre><br><br>But when executing the seed command, I get the error that the collection does not exist. Upon examining the payload object it shows my that the collection is empty, (see next Post).<br><br>My guess is that I messed up something in the init...<br><br>Any help is appreciated. Thanks",
        "fileAttachments": [],
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1675348088826
      },
      {
        "content": "The payload object:<br><br><pre><code class=\"hljs\">Payload {\n  collections: {},\n  versions: {},\n  encrypt: [Function: encrypt],\n  decrypt: [Function: decrypt],\n  Query: { name: &#x27;Query&#x27;, fields: {} },\n  Mutation: { name: &#x27;Mutation&#x27;, fields: {} },\n  errorResponses: [],\n  getAdminURL: [Function (anonymous)],\n  getAPIURL: [Function (anonymous)],\n  create: [AsyncFunction (anonymous)],\n  find: [AsyncFunction (anonymous)],\n  findByID: [AsyncFunction (anonymous)],\n  update: [AsyncFunction (anonymous)],\n  delete: [AsyncFunction (anonymous)],\n  findVersions: [AsyncFunction (anonymous)],\n  findVersionByID: [AsyncFunction (anonymous)],\n  restoreVersion: [AsyncFunction (anonymous)],\n  login: [AsyncFunction (anonymous)],\n  forgotPassword: [AsyncFunction (anonymous)],\n  resetPassword: [AsyncFunction (anonymous)],\n  unlock: [AsyncFunction (anonymous)],\n  verifyEmail: [AsyncFunction (anonymous)],\n  findGlobal: [AsyncFunction (anonymous)],\n  updateGlobal: [AsyncFunction (anonymous)],\n  findGlobalVersions: [AsyncFunction (anonymous)],\n  findGlobalVersionByID: [AsyncFunction (anonymous)],\n  restoreGlobalVersion: [AsyncFunction (anonymous)]\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1675348100999
      },
      {
        "content": "what Payload version are you on?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675351408204
      },
      {
        "content": "See if putting it in <code>onInit</code> fixes the problem:<br><pre><code class=\"hljs ts\">payload.<span class=\"hljs-title function_\">init</span>({\n  ...\n  <span class=\"hljs-attr\">onInit</span>: <span class=\"hljs-function\">() =&gt;</span> {<span class=\"hljs-comment\">/* your initialization */</span>}\n});</code></pre><br>I agree that this shouldn&#x27;t be happening if you&#x27;re not using <code>initAsync</code>, but worth a try to pin down the issue.",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675352232863
      },
      {
        "content": "well, it&#x27;s worth noting that payload.init is now asynchronous as of 1.6.0, and his code above is not awaiting init",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675352335958
      },
      {
        "content": "so if he&#x27;s on a new version that&#x27;s prob the reason",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675352342656
      },
      {
        "content": "That&#x27;d do it.",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675352402534
      },
      {
        "content": "1.6.3.",
        "fileAttachments": [],
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1675354798869
      },
      {
        "content": "Ah thanks that&#x27;s it",
        "fileAttachments": [],
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1675354821254
      },
      {
        "content": "Thanks",
        "fileAttachments": [],
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1675354851280
      }
    ],
    "messageCount": 9
  },
  {
    "info": {
      "name": "Payload good as a Wiki?",
      "id": "1064565542490472448",
      "guildId": "967097582721572934",
      "createdAt": 1673882604001
    },
    "messages": [
      {
        "content": "Hi!  I really do like payload and I&#x27;m hoping this question aligns with it&#x27;s features.<br>I want to create a wiki that allows for groups of users to share and edit content and publish that content for other groups to view.<br>Essentially I&#x27;d need to track the groups that users could be part of and expose only the editing of content that they are allowed to edit within that group (content could be editable by author or the group members).<br>In addition, group users (and maybe outside) could post comments on the content.<br>Thanks for any advise!",
        "fileAttachments": [],
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673882604001
      },
      {
        "content": "Hi @rogueturnip (really good username), absolutely payload would work for your use case. You can utilize access control functions to manage who can read/update/create your content based on their role or group. Read more about access control here: <a href=\"https://payloadcms.com/docs/access-control/collections\">https://payloadcms.com/docs/access-control/collections</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1673886172335
      },
      {
        "content": "Thanks!  I&#x27;m glad this is supported.  What would be an effective way to create &quot;groups of users&quot;, sort of like departments in a company that would edit/create (as permissions permit).  And could a user be part of 2 departments and have different permissions in each?",
        "fileAttachments": [],
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673888143722
      },
      {
        "content": "The best way to go about this would be to add a <code>department</code>  select field (with hasMany: true) to your users collection. Then you would reference that field as needed inside access control.<br><br>Here is a blog post about how to set this up: <a href=\"https://payloadcms.com/blog/build-your-own-rbac\">https://payloadcms.com/blog/build-your-own-rbac</a><br><br>You can also see examples of access control functions that do something similar in our CMS repo here: <a href=\"https://github.com/payloadcms/website-cms/tree/main/src/access\">https://github.com/payloadcms/website-cms/tree/main/src/access</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1673897494839
      },
      {
        "content": "Thanks!  can that department field be an array for multiple departments?",
        "fileAttachments": [],
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673913385943
      },
      {
        "content": "Yep, that&#x27;s what the <code>hasMany: true</code> Elliot mentioned is for",
        "fileAttachments": [],
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1673926046950
      },
      {
        "content": "Hi, I&#x27;m trying to get a similar group structure working. I have users assigned with owner, admin or member roles and can be assigned to one or more groups.<br><br>For example:<br><br>User_1, Owner<br>User_2, Owner, Groups [Group_1, Group_2, Group_3, Group_4]<br>User_3, Owner, Groups [Group 2]<br>User_4, Owner, Groups [Group_3, Group_4]<br><br>I have an IsOwnerOrHasOrganisationAccess that filters what a user can see based on the Groups they are assigned to. This works fine on all Collections apart from on the Users Collection. <br><br>The challenge comes when I log in as User_4. I don&#x27;t want them to be able to see or edit User_2 in the Users Collection. I&#x27;m currently using a filter using the In method, however, this returns User_2 because Group_3 and Group_4 are in User 2&#x27;s Groups array. Any suggestions for how I can prevent  User_2 from being returned?",
        "fileAttachments": [],
        "authorID": "1060105222166429707",
        "authorName": "ShaunyBoy",
        "authorAvatar": "f7f2e9361e8a54ce6e72580ac7b967af",
        "createdAtDate": 1675895786683
      },
      {
        "content": "@ShaunyBoy I&#x27;m not sure I follow fully, but typically we&#x27;d handle this by having an <code>IsOwnerOrSelf</code> function instead of just checking for the Owner role.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675958734138
      },
      {
        "content": "Hopefully that helps",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675958738646
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "Get Light/Dark Mode Preference for custom Component",
      "id": "1076906094791762012",
      "guildId": "967097582721572934",
      "createdAt": 1676824820946
    },
    "messages": [
      {
        "content": "Hey, how do I get the Light/Dark Mode Preference?<br>Need it for a custom component.",
        "fileAttachments": [],
        "authorID": "267014985056518147",
        "authorName": "Sylens Drake",
        "authorAvatar": "ab13a5f24e6c5f6ad5dc67fb3f57cfd0",
        "createdAtDate": 1676824820946
      },
      {
        "content": "@Sylens Drake the html element has a data-theme attribute that you can use to target your custom component css",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676829727814
      },
      {
        "content": "I think more information about the data-theme attribute could be listen on the CSS customization page that references Dark Mode: <a href=\"https://payloadcms.com/docs/admin/customizing-css\">https://payloadcms.com/docs/admin/customizing-css</a>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676900213873
      },
      {
        "content": "we don&#x27;t explicitly export the <code>useTheme</code> hook, but you can still import it",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676900898816
      },
      {
        "content": "<code>import { useTheme } from &#x27;payload/dist/admin/components/utilities/Theme</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676900930295
      },
      {
        "content": "if you did want to help us export it, you could open a PR via adding an export to the <code>payload/components/utilities</code> file and then add it to docs here:",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676900983063
      },
      {
        "content": "<a href=\"https://payloadcms.com/docs/admin/hooks#react-hooks\">https://payloadcms.com/docs/admin/hooks#react-hooks</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676901004783
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "I asked ChatGPT to write the code of an example collection. Is this valid?",
      "id": "1078730479815110809",
      "guildId": "967097582721572934",
      "createdAt": 1677259788231
    },
    "messages": [
      {
        "content": "module.exports = {<br>  slug: &#x27;posts&#x27;,<br>  labels: {<br>    singular: &#x27;Post&#x27;,<br>    plural: &#x27;Posts&#x27;<br>  },<br>  admin: {<br>    useAsTitle: &#x27;title&#x27;<br>  },<br>  fields: [<br>    {<br>      name: &#x27;title&#x27;,<br>      label: &#x27;Title&#x27;,<br>      type: &#x27;text&#x27;,<br>      required: true,<br>    },<br>    {<br>      name: &#x27;slug&#x27;,<br>      label: &#x27;Slug&#x27;,<br>      type: &#x27;slug&#x27;,<br>      from: &#x27;title&#x27;,<br>      required: true,<br>      unique: true,<br>      editable: false<br>    },<br>    {<br>      name: &#x27;content&#x27;,<br>      label: &#x27;Content&#x27;,<br>      type: &#x27;richtext&#x27;,<br>      required: true,<br>    },<br>    {<br>      name: &#x27;author&#x27;,<br>      label: &#x27;Author&#x27;,<br>      type: &#x27;relationship&#x27;,<br>      relationTo: &#x27;users&#x27;,<br>      required: true,<br>    },<br>    {<br>      name: &#x27;publishedAt&#x27;,<br>      label: &#x27;Published At&#x27;,<br>      type: &#x27;datetime&#x27;,<br>      required: true,<br>    },<br>    {<br>      name: &#x27;tags&#x27;,<br>      label: &#x27;Tags&#x27;,<br>      type: &#x27;array&#x27;,<br>      of: &#x27;string&#x27;,<br>      required: false,<br>    },<br>    {<br>      name: &#x27;featuredImage&#x27;,<br>      label: &#x27;Featured Image&#x27;,<br>      type: &#x27;file&#x27;,<br>      required: false,<br>      options: {<br>        accept: &#x27;image/*&#x27;,<br>        limit: 1,<br>      },<br>    },<br>  ],<br>};",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677259788231
      },
      {
        "content": "I asked ChatGPT to write the code of an example collection. Is this valid?",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677259812930
      },
      {
        "content": "looks valid to me",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1677264106539
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "How to visualy improve in what language your content is edited",
      "id": "1072189880362344519",
      "guildId": "967097582721572934",
      "createdAt": 1675700387803
    },
    "messages": [
      {
        "content": "Hi, <br>I&#x27;ve set up german and english as locale for my content and it works well. Now testing myself I started to put german content into english content as I didn&#x27;t realize that I am still switched to english. At the moment the only way to realize what language the content is set to, is to check the language switch in the sidebar. Is there a way to visually improve what language I am editing right now? Whats the best practice there. I&#x27;m a bit concerned editors will have similar problems as me.",
        "fileAttachments": [],
        "authorID": "352817312803586048",
        "authorName": "christophK",
        "authorAvatar": "0717076fbf3e1058a679f5d21fab0c56",
        "createdAtDate": 1675700387803
      },
      {
        "content": "Hey @christophK , this is on our roadmap as priority 1 actually! Roadmap item here: <a href=\"https://github.com/payloadcms/payload/discussions/1234\">https://github.com/payloadcms/payload/discussions/1234</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676038545862
      },
      {
        "content": "Great to see that its coming!",
        "fileAttachments": [],
        "authorID": "352817312803586048",
        "authorName": "christophK",
        "authorAvatar": "0717076fbf3e1058a679f5d21fab0c56",
        "createdAtDate": 1676334574524
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "How to deploy PayloadCMS to vercel?",
      "id": "1073493609468407808",
      "guildId": "967097582721572934",
      "createdAt": 1676011221044
    },
    "messages": [
      {
        "content": "Hello, is there a tutorial for deploying payload to vercel. Thanks",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676011221044
      },
      {
        "content": "The cool guys are developing a way to help you deploy with ease 🙂 . see: <a href=\"https://github.com/payloadcms/payload/discussions/583\">https://github.com/payloadcms/payload/discussions/583</a>",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1676015340959
      },
      {
        "content": "More to come regarding deploying on platforms with serverless functions 😏",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1073493609468407808/1073748222113218700/CleanShot_2023-02-10_at_18.30.39.png",
            "name": "CleanShot_2023-02-10_at_18.30.39.png",
            "id": "1073748222113218700",
            "size": 385954,
            "url": "https://cdn.discordapp.com/attachments/1073493609468407808/1073748222113218700/CleanShot_2023-02-10_at_18.30.39.png",
            "proxyURL": "https://media.discordapp.net/attachments/1073493609468407808/1073748222113218700/CleanShot_2023-02-10_at_18.30.39.png",
            "height": 1614,
            "width": 1182,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676071925487
      },
      {
        "content": "As of now, Payload requires a Node.js backend to be deployed",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676071992497
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Access Globals within beforeDelete Hook",
      "id": "1076104536600629249",
      "guildId": "967097582721572934",
      "createdAt": 1676633714581
    },
    "messages": [
      {
        "content": "Hello,<br><br>Currently have a &quot;working&quot; beforeDelete hook which iterates over the Pages collection however I would also like to show a warning if a related topic is included within a global field..<br><br><code>collection: &#x27;pages&#x27;</code> seems to be the line i need to change but I can&#x27;t find any docs on how to access globals within the <code>req.payload</code> object<br><br>Any help would be appreciated <br><br><pre><code class=\"hljs\">export const checkTopicsNotInReleatedPagesOrSubNav: BeforeDeleteHook = async ({ req, id }) =&gt; {\n    console.log(&#x27;checkTopicsNotInReleatedPagesOrSubNav fired&#x27;, id)\n\n    console.log(&#x27;req.payload:&#x27;, req.payload)\n    const result = await req.payload.find({\n        collection: &#x27;pages&#x27;,\n        limit: 100,\n        depth: 2,\n        where: {\n            // &#x27;globals.subNav.topic&#x27;: { equals: id },\n            &#x27;topics&#x27;: { equals: id },\n        },\n    });</code></pre>",
        "fileAttachments": [],
        "authorID": "1075816381200736306",
        "authorName": "jamesryan",
        "authorAvatar": null,
        "createdAtDate": 1676633714581
      },
      {
        "content": "Hey @jamesryan, welcome! The function you&#x27;re looking for is <code>findGlobal</code>. Docs are here: <a href=\"https://payloadcms.com/docs/local-api/overview#globals\">https://payloadcms.com/docs/local-api/overview#globals</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676667766659
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Sorting on multiple fields?",
      "id": "1074130763131400232",
      "guildId": "967097582721572934",
      "createdAt": 1676163130315
    },
    "messages": [
      {
        "content": "Is it possible to sort by one field, then another when using the REST API?<br><br>In SQL terms I&#x27;m looking for the equivalent of <code>SORT BY FieldA DESC, FieldB ASC</code>",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676163130315
      },
      {
        "content": "Currently no. This would make a great addition. You can submit a feature request in our github discussions and we will assess the priority or somebody in the community can pick it up!",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676345118968
      },
      {
        "content": "Feature request was made here <a href=\"https://github.com/payloadcms/payload/discussions/2089\">https://github.com/payloadcms/payload/discussions/2089</a> - marking this thread as answered",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676914179928
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "no docs in Vercel",
      "id": "1076044223691894835",
      "guildId": "967097582721572934",
      "createdAt": 1676619334863
    },
    "messages": [
      {
        "content": "I don&#x27;t know why, but in vercel I don&#x27;t get docs from a query but in localhost I do.<br>And i have another similar collection, and similar queries and I get docs in local and the domain. Does anyone have an idea of why?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1076044223691894835/1076044223868063774/Screenshot_2023-02-17_at_1.32.12_a.m..png",
            "name": "Screenshot_2023-02-17_at_1.32.12_a.m..png",
            "id": "1076044223868063774",
            "size": 25193,
            "url": "https://cdn.discordapp.com/attachments/1076044223691894835/1076044223868063774/Screenshot_2023-02-17_at_1.32.12_a.m..png",
            "proxyURL": "https://media.discordapp.net/attachments/1076044223691894835/1076044223868063774/Screenshot_2023-02-17_at_1.32.12_a.m..png",
            "height": 230,
            "width": 776,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1076044223691894835/1076044224102932510/Screenshot_2023-02-17_at_1.32.51_a.m..png",
            "name": "Screenshot_2023-02-17_at_1.32.51_a.m..png",
            "id": "1076044224102932510",
            "size": 30569,
            "url": "https://cdn.discordapp.com/attachments/1076044223691894835/1076044224102932510/Screenshot_2023-02-17_at_1.32.51_a.m..png",
            "proxyURL": "https://media.discordapp.net/attachments/1076044223691894835/1076044224102932510/Screenshot_2023-02-17_at_1.32.51_a.m..png",
            "height": 202,
            "width": 777,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1676619334863
      },
      {
        "content": "This is the query, I get docs in local, but not in vercel<br><pre><code class=\"hljs\">const { data } = await axios.get(&#x27;/communityMembers&#x27;, {\n    params: {\n      where: {\n        and: [\n          {\n            community: {\n              equals: {\n                value: communityId,\n                relationTo: &#x27;community&#x27;,\n              },\n            },\n          },\n          {\n            member: {\n              equals: userId,\n            },\n          },\n        ],\n      },\n    },\n  });</code></pre>",
        "fileAttachments": [],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1676619537885
      },
      {
        "content": "In other collection I use this other query and works in vercel and local:<br><pre><code class=\"hljs\">const { data } = await axios.get(&#x27;/visits&#x27;, {\n    params: {\n      where: {\n        and: [\n          {\n            activity: {\n              equals: {\n                value: activityId,\n                relationTo: &#x27;activities&#x27;,\n              },\n            },\n          },\n          {\n            attendee: {\n              equals: userId,\n            },\n          },\n        ],\n      },\n    },\n  });</code></pre>",
        "fileAttachments": [],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1676619585732
      },
      {
        "content": "I deploy the project in digital ocean and the query for <code>communityMembers</code> works fine 🫠. I really have no idea of why is not working in Vercel",
        "fileAttachments": [],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1676620065552
      },
      {
        "content": "do you get a response at all?  does your axios fn throw an error?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676640963805
      },
      {
        "content": "yes, but without docs :/",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1076044223691894835/1076247598651941034/Screenshot_2023-02-17_at_3.02.49_p.m..png",
            "name": "Screenshot_2023-02-17_at_3.02.49_p.m..png",
            "id": "1076247598651941034",
            "size": 87946,
            "url": "https://cdn.discordapp.com/attachments/1076044223691894835/1076247598651941034/Screenshot_2023-02-17_at_3.02.49_p.m..png",
            "proxyURL": "https://media.discordapp.net/attachments/1076044223691894835/1076247598651941034/Screenshot_2023-02-17_at_3.02.49_p.m..png",
            "height": 274,
            "width": 1946,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1076044223691894835/1076247599012646952/Screenshot_2023-02-17_at_3.03.08_p.m..png",
            "name": "Screenshot_2023-02-17_at_3.03.08_p.m..png",
            "id": "1076247599012646952",
            "size": 65723,
            "url": "https://cdn.discordapp.com/attachments/1076044223691894835/1076247599012646952/Screenshot_2023-02-17_at_3.03.08_p.m..png",
            "proxyURL": "https://media.discordapp.net/attachments/1076044223691894835/1076247599012646952/Screenshot_2023-02-17_at_3.03.08_p.m..png",
            "height": 374,
            "width": 1382,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1676667823369
      },
      {
        "content": "I have a similar request in another page that works",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1076044223691894835/1076248078941683722/Screenshot_2023-02-17_at_3.04.46_p.m..png",
            "name": "Screenshot_2023-02-17_at_3.04.46_p.m..png",
            "id": "1076248078941683722",
            "size": 93575,
            "url": "https://cdn.discordapp.com/attachments/1076044223691894835/1076248078941683722/Screenshot_2023-02-17_at_3.04.46_p.m..png",
            "proxyURL": "https://media.discordapp.net/attachments/1076044223691894835/1076248078941683722/Screenshot_2023-02-17_at_3.04.46_p.m..png",
            "height": 322,
            "width": 1996,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1076044223691894835/1076248079147225180/Screenshot_2023-02-17_at_3.04.53_p.m..png",
            "name": "Screenshot_2023-02-17_at_3.04.53_p.m..png",
            "id": "1076248079147225180",
            "size": 78515,
            "url": "https://cdn.discordapp.com/attachments/1076044223691894835/1076248079147225180/Screenshot_2023-02-17_at_3.04.53_p.m..png",
            "proxyURL": "https://media.discordapp.net/attachments/1076044223691894835/1076248079147225180/Screenshot_2023-02-17_at_3.04.53_p.m..png",
            "height": 378,
            "width": 1268,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1676667937843
      },
      {
        "content": "The weird things:<br>- Works in other similar collection / req<br>- Works in local but not in vercel<br>- Works in digitalocean app but not in vercel 🫠",
        "fileAttachments": [],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1676668958049
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "In the RichText field - why check for default value before setting value?",
      "id": "1063188118997586021",
      "guildId": "967097582721572934",
      "createdAt": 1673554200649
    },
    "messages": [
      {
        "content": "In <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/RichText/RichText.tsx#L185\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/RichText/RichText.tsx#L185</a> you will find the <code>val !== defaultValue</code> check before setting the value. Why? Wouldn&#x27;t this prevent you from making the richtext field empty again?",
        "fileAttachments": [],
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1673554200649
      },
      {
        "content": "this is because we only want to <code>setValue</code> of the form <em><strong>if it has changed from default</strong></em>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675442801275
      },
      {
        "content": "an optimization for not marking the form as modified right away when the field loads. Slate fires that event quite frequently, so we filter out to only those that matter",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675442819897
      },
      {
        "content": "the form will have already stored the default value if there is no value",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675442832694
      },
      {
        "content": "and i believe that because this is a direct equality comparison, once you <em><strong>change</strong></em> the value back to empty, it will not be directly equal any longer",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675442939629
      },
      {
        "content": "AKA - this is why you can successfully clear out a field right now even with this code in place",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675442951117
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Rewriting base path to dynamically to section admin and API endpoints for different tenants",
      "id": "1076473260876767232",
      "guildId": "967097582721572934",
      "createdAt": 1676721625299
    },
    "messages": [
      {
        "content": "I&#x27;m writing a multi-tenancy plugin for Payload CMS (<a href=\"https://github.com/joas8211/payload-tenancy\">https://github.com/joas8211/payload-tenancy</a>). Current task is to separate tenants by different base paths. For that I thought writing an Express middleware would make the trick, but it seems to only affect REST API requests and URLs are already rewritten to remove /api. This happens even when setting middleware to config.express.preMiddleware. It seems that there&#x27;s no way to run middleware before Payload middleware from a plugin, or is there?",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1676721625299
      },
      {
        "content": "I managed to run the middleware before Payload middleware by moving it up the router stack, like so:<br><pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">config</span>: <span class=\"hljs-title class_\">Config</span> = {\n  ...originalConfig,\n  <span class=\"hljs-attr\">onInit</span>: <span class=\"hljs-keyword\">async</span> (payload) =&gt; {\n    payload.<span class=\"hljs-property\">express</span>.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">createMiddleware</span>());\n\n    <span class=\"hljs-comment\">// Move the added middleware up in the stack as far as possible (after</span>\n    <span class=\"hljs-comment\">// &quot;bound dispatch&quot; middleware).</span>\n    <span class=\"hljs-keyword\">const</span> router = payload.<span class=\"hljs-property\">express</span>.<span class=\"hljs-property\">_router</span>;\n    <span class=\"hljs-keyword\">const</span> index = router.<span class=\"hljs-property\">stack</span>.<span class=\"hljs-title function_\">findIndex</span>(\n      <span class=\"hljs-function\">(<span class=\"hljs-params\">layer</span>) =&gt;</span> layer.<span class=\"hljs-property\">name</span> === <span class=\"hljs-string\">&quot;bound dispatch&quot;</span>\n    );\n    router.<span class=\"hljs-property\">stack</span> = [\n      ...router.<span class=\"hljs-property\">stack</span>.<span class=\"hljs-title function_\">slice</span>(<span class=\"hljs-number\">0</span>, index + <span class=\"hljs-number\">1</span>),\n      ...router.<span class=\"hljs-property\">stack</span>.<span class=\"hljs-title function_\">slice</span>(-<span class=\"hljs-number\">1</span>),\n      ...router.<span class=\"hljs-property\">stack</span>.<span class=\"hljs-title function_\">slice</span>(index + <span class=\"hljs-number\">1</span>, -<span class=\"hljs-number\">1</span>),\n    ];\n  },\n};</code></pre>",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1676803636886
      },
      {
        "content": "Now there&#x27;s another problem regarding admin front-end. I cannot dynamically decide what base URL it uses for the API. But that&#x27;s a problem of it&#x27;s own.",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1676803834443
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "How to call REST endpoint with multiple filters",
      "id": "1073580622066487377",
      "guildId": "967097582721572934",
      "createdAt": 1676031966464
    },
    "messages": [
      {
        "content": "I checked the docs here <a href=\"https://payloadcms.com/docs/queries/overview#and-or-logic\">https://payloadcms.com/docs/queries/overview#and-or-logic</a>, but no sample for the REST API request<br><br>example<br><a href=\"http://localhost:3000/api/projects?where[year][equals]=2019[and][featured][equals]=false\">http://localhost:3000/api/projects?where[year][equals]=2019[and][featured][equals]=false</a>",
        "fileAttachments": [],
        "authorID": "411679135664963585",
        "authorName": "mo7sen",
        "authorAvatar": "e4cd04275914574db2c2a2d3604bbc4f",
        "createdAtDate": 1676031966464
      },
      {
        "content": "Try <a href=\"http://localhost:3000/api/projects?where[and][year][equals]=2019&amp;where[and][featured][equals]=false\">http://localhost:3000/api/projects?where[and][year][equals]=2019&amp;where[and][featured][equals]=false</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676033722689
      },
      {
        "content": "@jacobsfletch <br>I used that library and it helped <a href=\"https://www.npmjs.com/package/qs\">https://www.npmjs.com/package/qs</a>",
        "fileAttachments": [],
        "authorID": "411679135664963585",
        "authorName": "mo7sen",
        "authorAvatar": "e4cd04275914574db2c2a2d3604bbc4f",
        "createdAtDate": 1676034608435
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Your serverURL cannot have a path.",
      "id": "1072281303887646800",
      "guildId": "967097582721572934",
      "createdAt": 1675722184870
    },
    "messages": [
      {
        "content": "Why is this check in place? Trying to use Payload with Google Cloud Functions which have a path in the URL. It seems to work fine when manually editing the <code>dist</code> that&#x27;s produced.",
        "fileAttachments": [],
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "5708c38167d7f977fdb0a509c184d057",
        "createdAtDate": 1675722184870
      },
      {
        "content": "Where are you receiving an error or restriction regarding this?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676053676930
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Problems with @aws-sdk",
      "id": "1078542544406839337",
      "guildId": "967097582721572934",
      "createdAt": 1677214980938
    },
    "messages": [
      {
        "content": "Hey there! I&#x27;m having troubles when building my app. I actually had it working some weeks ago.. but I&#x27;m unable to build it now due to some errors with aws-sdk (I&#x27;m using <code>@payloadcms/plugin-cloud-storage</code>) the app.<br><br>This is the error I get when trying to build it:<br><br><br>Has anyone found this issue too?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078542544406839337/1078542544717221969/image.png",
            "name": "image.png",
            "id": "1078542544717221969",
            "size": 111768,
            "url": "https://cdn.discordapp.com/attachments/1078542544406839337/1078542544717221969/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078542544406839337/1078542544717221969/image.png",
            "height": 429,
            "width": 1206,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "494333401264947218",
        "authorName": "nacho",
        "authorAvatar": null,
        "createdAtDate": 1677214980938
      },
      {
        "content": "Okay.. so I actually went to my last working and I&#x27;m unable to build it now..",
        "fileAttachments": [],
        "authorID": "494333401264947218",
        "authorName": "nacho",
        "authorAvatar": null,
        "createdAtDate": 1677215045248
      },
      {
        "content": "If you&#x27;re using the s3adapter you need to install @aws-sdk/lib-storage package aswell as of release 1.0.14.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078542544406839337/1078757982902440007/image.png",
            "name": "image.png",
            "id": "1078757982902440007",
            "size": 61122,
            "url": "https://cdn.discordapp.com/attachments/1078542544406839337/1078757982902440007/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078542544406839337/1078757982902440007/image.png",
            "height": 266,
            "width": 2216,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "220897925612568577",
        "authorName": "Rick",
        "authorAvatar": "17e958af3d2b16f99bcb0e3a77050739",
        "createdAtDate": 1677266345524
      },
      {
        "content": "@Rick is correct. An additional peer dependency was added for the s3 adapter recently. The readme is up-to-date with steps from the breaking change reference by Rick.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677272651364
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "How to translate validation error messages",
      "id": "1077231699190095872",
      "guildId": "967097582721572934",
      "createdAt": 1676902451084
    },
    "messages": [
      {
        "content": "I tried following the documentation <a href=\"https://payloadcms.com/docs/fields/overview#validation\">https://payloadcms.com/docs/fields/overview#validation</a><br>Validation function has translation function as an optional param, but when I use the same translation function, the error message still does not translate. <br>I have not extended i18 configuration. I am just using the <code>t</code> function and expecting payload to translate according to the language chosen by the user.  Is there anything that I am missing.<br><br><code>validate: (value, { t }) =&gt; {\n        if (condition) return true;\n        return t(\n          &quot;The URL must start with xyz&quot;\n        );\n      }</code>",
        "fileAttachments": [],
        "authorID": "1070298006605279282",
        "authorName": "Akt771",
        "authorAvatar": null,
        "createdAtDate": 1676902451084
      },
      {
        "content": "The <code>t</code> function uses the keys defined in the translation files. Take a look at <code>en.json</code> for available keys and one of the errors in source to see how it can be used. Typically, it would take a string as <code>namespace:translationKey</code>.<br><br><a href=\"https://github.com/payloadcms/payload/blob/master/src/translations/en.json\">https://github.com/payloadcms/payload/blob/master/src/translations/en.json</a><br><a href=\"https://github.com/payloadcms/payload/blob/master/src/errors/AuthenticationError.ts#L7\">https://github.com/payloadcms/payload/blob/master/src/errors/AuthenticationError.ts#L7</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676903941604
      },
      {
        "content": "Thank you very much.I think this is what i needed.",
        "fileAttachments": [],
        "authorID": "1070298006605279282",
        "authorName": "Akt771",
        "authorAvatar": null,
        "createdAtDate": 1676904990281
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Union type fragments",
      "id": "1076192345751572480",
      "guildId": "967097582721572934",
      "createdAt": 1676654649914
    },
    "messages": [
      {
        "content": "Any way to make the generated graphql schema <em>not</em> create specific types for re-used objects, or merge them in a union? Would be so nice to be able to actually re-use fragments without each being uniquely typed.<br><br>Right now, given a field that is a group: <code>const groupField: Field = { type: &#x27;group&#x27;, name; &#x27;repeated&#x27;, fields: [...]}</code><br><br>using <code>groupField</code> in different collections, say <code>User</code> and <code>Post</code> will yield <code>User_Group</code> and <code>Post_Group</code> types, and not being collected in a union type, I can&#x27;t really reuse a fragment for it in my gql-queries.",
        "fileAttachments": [],
        "authorID": "981456072617381918",
        "authorName": "rhythmic.visions",
        "authorAvatar": "1d59c2bc78c3d055cea10bd049ce51dd",
        "createdAtDate": 1676654649914
      },
      {
        "content": "I can&#x27;t think of a way you could do this without some changes.<br><br>In what you described, we are doing this for graphQL blocks I believe, but it can&#x27;t be copied for groups as they aren&#x27;t re-used in a meaningful way. Suppose the Payload GraphQL schema generation tried to make types for every group it would be a mess of unnecessarily granular types. When names are the same as another group you&#x27;d either end up with a union of identical schemas repeated when fields are the same, or we&#x27;d need some way of comparing that the field names and types are in fact the same and iterating on the schema name.<br>This sounds quite messy to do well. The only way I can think to have it work would be to add a config option for the graphQL name to groups and named tabs which would make it both—<br>A) Provide a nice way for devs to name their composable schemas parts only when needed, and<br>B) Add intention so devs can either make it work or fall on their own sword if they mess it up with a duplicate name that actually has different fields.<br><br>It is an interesting question. If you think there is a path forward on how this might work, you could create a Github discussion to try and gain traction. If there is a will to build it from the community, that would help, but as it stands this isn&#x27;t going to be prioritized by our team.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676952490203
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Issues upgrading to v1.6.11 and getting this error? any idea what might be the issue?",
      "id": "1075897263982919720",
      "guildId": "967097582721572934",
      "createdAt": 1676584296938
    },
    "messages": [
      {
        "content": "/Users/liorix/Development/featurefm-rebranded-website/apps/cms-backend/src/payload.config.ts:1<br>import { buildConfig } from &#x27;payload/config&#x27;;<br>^^^^^^<br>Followed the following guide: <a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-breaking-changes\">https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-breaking-changes</a><br><br>SyntaxError: Cannot use import statement outside a module<br>    at Object.compileFunction (node:vm:360:18)<br>    at wrapSafe (node:internal/modules/cjs/loader:1084:15)<br>    at Module._compile (node:internal/modules/cjs/loader:1119:27)<br>    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1209:10)<br>    at Module.load (node:internal/modules/cjs/loader:1033:32)<br>    at Function.Module._load (node:internal/modules/cjs/loader:868:12)<br>    at Function.Module._load (/Users/liorix/Development/featurefm-rebranded-website/packages/js/src/executors/node/node-with-require-overrides.ts:16:27)<br>    at Module.require (node:internal/modules/cjs/loader:1057:19)<br>    at require (node:internal/modules/cjs/helpers:103:18)<br>    at loadConfig (/Users/liorix/Development/featurefm-rebranded-website/node_modules/payload/src/config/load.ts:22:25)<br>No errors found.",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676584296938
      },
      {
        "content": "I have the same problem. I am currently using 1.5.9 because of it.<br><a href=\"https://github.com/payloadcms/nextjs-custom-server/issues/26\">https://github.com/payloadcms/nextjs-custom-server/issues/26</a>",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676596920937
      },
      {
        "content": "I had the the same problem days ago when I moved from 1.5.9 to 1.6.9 …I just created a new payload project and moved my collections and config ..I wonder why this happens",
        "fileAttachments": [],
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1676630314155
      },
      {
        "content": "So this is because in 1.6.0, we have recently <em><strong>removed our automatic config transpilation</strong></em> - see the changelog w/ breaking change notes here:",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676641928666
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-payload-now-no-longer-transpiles-your-config-for-you\">https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-payload-now-no-longer-transpiles-your-config-for-you</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676641970403
      },
      {
        "content": "@jmikrut I did follow the migration guide and probably missed something, Could you please point me to the specific migration I should do to fix this issue?",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676648450402
      },
      {
        "content": "we do use typescript in this project",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676648469960
      },
      {
        "content": "Same issue here. I tried to follow the migration guide, but I must be missing something.<br><br>Even the official <code>nextjs-custom-server</code> example fails <code>yarn build</code> because of this error.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676650008741
      },
      {
        "content": "Basically, you should be using the compiled version of your config <code>payload.config.js</code> resulting from your build. Previously, you could use a *.ts config in production because Payload would transpile automatically.<br><br>What command are you running to get the error? What PAYLOAD_CONFIG_PATH?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676666548934
      },
      {
        "content": "yep - there are lots of ways to handle transpilation for any given Node app that has TS / JSX, but basically, we suggest to use <code>ts-node</code> to transpile your app",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667101461
      },
      {
        "content": "and if you do that, then <code>import</code> will no longer throw errors in development",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667111731
      },
      {
        "content": "but in production, you will probably want to just run <code>node</code> instead of <code>ts-node</code>, so you should have already built your project into a <code>/dist</code> or similar",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667131579
      },
      {
        "content": "and then in production, you&#x27;d run your app like this <code>PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=production node dist/server.js</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667149154
      },
      {
        "content": "and then any files that are used by <code>dist/server.js</code> should have already been converted to CommonJS (meaning no more <code>import</code> statements to be found)",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667169318
      },
      {
        "content": "the best way to see this all working from top to bottom is to just start up a new <code>npx create-payload-app</code> and look at the NPM scripts that we ship you",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667210964
      },
      {
        "content": "<code>create-payload-app</code> is very different from the  <code>nextjs-custom-server</code> setup that was on the YouTube tutorial",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676667279383
      },
      {
        "content": "ahh yes, for that one, we will be updating that package shortly with a way to make that work",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667302825
      },
      {
        "content": "which part are you having an error with? we can expedite this",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667312109
      },
      {
        "content": "Sorry, @liorix I don&#x27;t mean to hijack your thread.<br><br>Me personally, I don&#x27;t understand what exact steps are needed to &quot;use the compiled version of your config payload.config.js instead of  *.ts config.&quot; as you guys put it.<br><br>It sounds like something needs to change in the <code>package.json</code> build script, and in the <code>tsconfig.json</code> and <code>tsconfig.server.json</code>. <br><br>I don&#x27;t need a full on tutorial, I really just need a commit history so that I can see what is being changed in your <code>nextjs-custom-server</code>  repo and better understand why.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676669042706
      },
      {
        "content": "well, nothing changed in our repo, nothing is necessary to change if you have always been using ts",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676670197193
      },
      {
        "content": "it&#x27;s only for projects that used to be JS-only",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676670205872
      },
      {
        "content": "Well I don&#x27;t understand because the <code>nextjs-custom-server</code> is typed, yet it can&#x27;t be built.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676670279954
      },
      {
        "content": "where is it failing for you? which command?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676670405602
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/nextjs-custom-server/issues/26\">https://github.com/payloadcms/nextjs-custom-server/issues/26</a>",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676670417776
      },
      {
        "content": "ok i just followed up with a bit more detail and a plan for fixing this",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676671119004
      },
      {
        "content": "Saw your response, really appreciate it!",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676671170080
      },
      {
        "content": "sorry for the hassle. this will be taken care of for you shortly",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676671184879
      },
      {
        "content": "I eventually scaffolded a new version of payload and copied my collections/etc to the new project and it worked",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676746172922
      },
      {
        "content": "thanks everyone",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676746177004
      },
      {
        "content": "yeah that was quick solution aswell😂  sometimes the hardest way is the easiest",
        "fileAttachments": [],
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1676747021026
      }
    ],
    "messageCount": 29
  },
  {
    "info": {
      "name": "Image resize doesn't work",
      "id": "1066036423712587957",
      "guildId": "967097582721572934",
      "createdAt": 1674233289412
    },
    "messages": [
      {
        "content": "I am trying to resize new images on upload, so that client&#x27;s photos get downsized to a max width of 2000px.<br><br>What I&#x27;m doing wrong?<br><br><code>upload: {\n  staticURL: &#x27;/media&#x27;,\n  staticDir: &#x27;media&#x27;,\n  mimeTypes: [&#x27;image/*&#x27;],\n  disableLocalStorage: true,\n  resizeOptions: {\n  width: 2000,\n  kernel: &#x27;nearest&#x27;,\n  fit: &#x27;cover&#x27;,\n  position: &#x27;entropy&#x27;,\n  withoutEnlargement: true,\n  }}</code><br><br>On the admin ui the size and weight is correct but on server is uploaded like the original",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1066036423712587957/1066037139491532850/Screenshot_2023-01-20_at_17.49.34.png",
            "name": "Screenshot_2023-01-20_at_17.49.34.png",
            "id": "1066037139491532850",
            "size": 57943,
            "url": "https://cdn.discordapp.com/attachments/1066036423712587957/1066037139491532850/Screenshot_2023-01-20_at_17.49.34.png",
            "proxyURL": "https://media.discordapp.net/attachments/1066036423712587957/1066037139491532850/Screenshot_2023-01-20_at_17.49.34.png",
            "height": 364,
            "width": 796,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674233289412
      },
      {
        "content": "Admin ui after upload",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1066036423712587957/1066037249784954901/Screenshot_2023-01-20_at_17.49.46.png",
            "name": "Screenshot_2023-01-20_at_17.49.46.png",
            "id": "1066037249784954901",
            "size": 238772,
            "url": "https://cdn.discordapp.com/attachments/1066036423712587957/1066037249784954901/Screenshot_2023-01-20_at_17.49.46.png",
            "proxyURL": "https://media.discordapp.net/attachments/1066036423712587957/1066037249784954901/Screenshot_2023-01-20_at_17.49.46.png",
            "height": 276,
            "width": 886,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674233486435
      },
      {
        "content": "Image size on server",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1066036423712587957/1066037337877905469/Screenshot_2023-01-20_at_17.50.00.png",
            "name": "Screenshot_2023-01-20_at_17.50.00.png",
            "id": "1066037337877905469",
            "size": 10164,
            "url": "https://cdn.discordapp.com/attachments/1066036423712587957/1066037337877905469/Screenshot_2023-01-20_at_17.50.00.png",
            "proxyURL": "https://media.discordapp.net/attachments/1066036423712587957/1066037337877905469/Screenshot_2023-01-20_at_17.50.00.png",
            "height": 96,
            "width": 552,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674233507415
      },
      {
        "content": "Let me see if I can recreate",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674234046849
      },
      {
        "content": "This works for me. I uploaded a 317kb file and the result was 116 bytes (20px width).",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674234263164
      },
      {
        "content": "<pre><code class=\"hljs\">    resizeOptions: {\n      width: 20,\n      kernel: &#x27;nearest&#x27;,\n      fit: &#x27;cover&#x27;,\n      position: &#x27;entropy&#x27;,\n      withoutEnlargement: true,\n    },</code></pre>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674234277734
      },
      {
        "content": "Are you using any plugins? I see you have <code>disableLocalStorage: true</code>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674234356402
      },
      {
        "content": "<code>plugins: [cloudStorage({ collections: { media: { adapter: adapterGCS } } })],</code>",
        "fileAttachments": [],
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674234371906
      },
      {
        "content": "<code>const adapterGCS = gcsAdapter({\n    options: {\n        keyFilename: &#x27;./src/util/*.json&#x27;,\n    },\n    bucket: process.env.GCS_BUCKET,\n});</code>",
        "fileAttachments": [],
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674234403507
      },
      {
        "content": "I have tried so many times",
        "fileAttachments": [],
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674234417902
      },
      {
        "content": "On the server still che original image",
        "fileAttachments": [],
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674234436781
      },
      {
        "content": "Okay, this info helps",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674234450950
      },
      {
        "content": "Even when clicking on the image title on che admin ui<br>I get che full image",
        "fileAttachments": [],
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674234457540
      },
      {
        "content": "Let me take a quick look on how the plugin may treat resizing differently",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674234464817
      },
      {
        "content": "I&#x27;m going to log this as a possible bug @MadRaf . This will take some investigating.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674234942355
      },
      {
        "content": "Issue logged here: <a href=\"https://github.com/payloadcms/plugin-cloud-storage/issues/35\">https://github.com/payloadcms/plugin-cloud-storage/issues/35</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674235193957
      },
      {
        "content": "Thank you 💪",
        "fileAttachments": [],
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674235653241
      },
      {
        "content": "this is happening to me as well, the size and image dimensions are shown in the admin, but when I go to the S3 the original image is uploaded, <br><br>the only thing that has worked for me is converting from png to jpg, but resizing and shrinking doesn&#x27;t work",
        "fileAttachments": [],
        "authorID": "391293587922485252",
        "authorName": "Hyra10",
        "authorAvatar": "930bc5beaa28b294cc7c1af61014f3f4",
        "createdAtDate": 1675381681708
      },
      {
        "content": "Let me take a look into this today",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675432426023
      },
      {
        "content": "@Hyra10 What version of Payload are you on? This appears to be working fine on my end.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675432623120
      },
      {
        "content": "I am on lastest version 1.6.3",
        "fileAttachments": [],
        "authorID": "391293587922485252",
        "authorName": "Hyra10",
        "authorAvatar": "930bc5beaa28b294cc7c1af61014f3f4",
        "createdAtDate": 1675485575700
      },
      {
        "content": "Can you post your config? It sounds like this is working as expected. Payload will always upload the original file.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675519665178
      },
      {
        "content": "You have the option of doing a resize on the original as well within your config",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675519679584
      },
      {
        "content": "this is my payload.config.ts<br><br><pre><code class=\"hljs\">    cloudStorage({\n      collections: {\n        // Enable cloud storage for Media collection\n        assets: {\n          disableLocalStorage: true,\n          // Create the S3 adapter\n          adapter: s3Adapter({\n            config: {\n              region: process.env.AWS_REGION,\n              credentials: {\n                accessKeyId: process.env.S3_ACCESS_KEY_ID,\n                secretAccessKey: process.env.S3_SECRET_ACCESS_KEY,\n              },\n            },\n            bucket: process.env.S3_BUCKET,\n          }),\n        },\n      },\n    }),</code></pre><br><br><br>I understand what you say that it will always store the original file but it doesn&#x27;t store the resized file, is it stored somewhere else?",
        "fileAttachments": [],
        "authorID": "391293587922485252",
        "authorName": "Hyra10",
        "authorAvatar": "930bc5beaa28b294cc7c1af61014f3f4",
        "createdAtDate": 1675526749988
      },
      {
        "content": "The original file will be resized according to the <code>upload.resizeOptions</code> property. Resizing for other specific sizes happens within the <code>imageSizes</code> array. Is this how your upload config on the collection is configured?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675690996252
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1066036423712587957/1072151005459910799/CleanShot_2023-02-06_at_08.43.35.png",
            "name": "CleanShot_2023-02-06_at_08.43.35.png",
            "id": "1072151005459910799",
            "size": 197431,
            "url": "https://cdn.discordapp.com/attachments/1066036423712587957/1072151005459910799/CleanShot_2023-02-06_at_08.43.35.png",
            "proxyURL": "https://media.discordapp.net/attachments/1066036423712587957/1072151005459910799/CleanShot_2023-02-06_at_08.43.35.png",
            "height": 990,
            "width": 1312,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675691119352
      },
      {
        "content": "Hope that makes sense",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675691122987
      }
    ],
    "messageCount": 26
  },
  {
    "info": {
      "name": "Node ESM Trouble from unknown origins",
      "id": "1071523101290004521",
      "guildId": "967097582721572934",
      "createdAt": 1675541415284
    },
    "messages": [
      {
        "content": "The <code>web</code> folder is generated by <code>svelte-kit</code> using its node adapter",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675541511429
      },
      {
        "content": "Relevant snippet of my <code>package.json</code>:",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1071523101290004521/1071523694536556727/image.png",
            "name": "image.png",
            "id": "1071523694536556727",
            "size": 21561,
            "url": "https://cdn.discordapp.com/attachments/1071523101290004521/1071523694536556727/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1071523101290004521/1071523694536556727/image.png",
            "height": 207,
            "width": 434,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675541556788
      },
      {
        "content": "Node ESM Trouble from unknown origins",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675541587960
      },
      {
        "content": "@hypersonic.dev Can you post your tsconfig.json?",
        "fileAttachments": [],
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675545371839
      },
      {
        "content": "Sure",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545383669
      },
      {
        "content": "one sec",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545386186
      },
      {
        "content": "<pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;compilerOptions&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;target&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;es5&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;lib&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;dom&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;dom.iterable&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;esnext&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;allowJs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;strict&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">false</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;esModuleInterop&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;skipLibCheck&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;outDir&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;./dist&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;rootDir&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;./src&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;jsx&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;react&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;importsNotUsedAsValues&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;error&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;moduleResolution&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;node&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;paths&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n      <span class=\"hljs-attr\">&quot;payload/generated-types&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./src/payload-types.ts&quot;</span><span class=\"hljs-punctuation\">]</span>\n    <span class=\"hljs-punctuation\">}</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;include&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;src&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;exclude&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;node_modules&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;dist&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;build&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;ts-node&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;transpileOnly&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;swc&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;esm&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span></code></pre>",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545428706
      },
      {
        "content": "Mh try using<br><code>&quot;module&quot;: &quot;commonjs&quot;,</code><br><br>(had some problems myself without it). And maybe that <code>&quot;esm&quot;: true</code> would cause problems too.<br><br>Not an expert in the pains and horrors of cjs/esm - but payload is still on commonjs and is not using esmodules yet, which sometmes causes errors",
        "fileAttachments": [],
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675545536738
      },
      {
        "content": "you&#x27;re running both payload and sveltekit from the same server?",
        "fileAttachments": [],
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675545570196
      },
      {
        "content": "Yes I am",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545586048
      },
      {
        "content": "The <code>esm: true</code> should only affect <code>ts-node</code>",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545606426
      },
      {
        "content": "Ohh I wasn&#x27;t clear",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545632441
      },
      {
        "content": "iinteresting, would love to try that as well! But I figured there would be <em>some</em> issue since sveltekit is on esm and payload on cjs",
        "fileAttachments": [],
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675545633803
      },
      {
        "content": "This error only rears its head when I run the start command",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545656819
      },
      {
        "content": "It was working without trouble on <code>v1.5.9</code> 🥹",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545679125
      },
      {
        "content": "oooh I see",
        "fileAttachments": [],
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675545840923
      },
      {
        "content": "This didn&#x27;t work btw",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545933404
      },
      {
        "content": "I&#x27;m using <code>esbuild</code> not <code>tsc</code> cli",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545948964
      },
      {
        "content": "prob something to do with those new changes introduced in 1.6.0 there.<br><br>Did it generate the server.mjs file instead of a server.js on 1.5.9 as well?",
        "fileAttachments": [],
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675546014177
      },
      {
        "content": "Yes I did",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546081288
      },
      {
        "content": "I just literally updated the payload version and made the changes to my <code>server.mts</code> file",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546112199
      },
      {
        "content": "and the start command doesn&#x27;t work anymore",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546142246
      },
      {
        "content": "Did you update the package.json as well? Prob something @jmikrut can help since he made that <a href=\"https://github.com/payloadcms/payload/pull/1847\">https://github.com/payloadcms/payload/pull/1847</a> PR which probably broke it",
        "fileAttachments": [],
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675546459664
      },
      {
        "content": "might be:",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546575800
      },
      {
        "content": "<pre><code class=\"hljs\">  &quot;ts-node&quot;: {\n    &quot;transpileOnly&quot;: true,\n    &quot;swc&quot;: true,\n    &quot;esm&quot;: true\n  }</code></pre>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546578916
      },
      {
        "content": "notice that it says <code>esm: true</code>?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546584688
      },
      {
        "content": "for some reason your build process is outputting the config as mjs",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546592892
      },
      {
        "content": "😅",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546602983
      },
      {
        "content": "you may also have <code>type: &quot;module&quot;</code> defined in your package json",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546604333
      },
      {
        "content": "it seems to have worked for him in v1.5.9 though",
        "fileAttachments": [],
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675546615760
      },
      {
        "content": "That&#x27;s intentional",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546621239
      },
      {
        "content": "old <code>load.js</code>",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1071523101290004521/1071544993694629898/image.png",
            "name": "image.png",
            "id": "1071544993694629898",
            "size": 266372,
            "url": "https://cdn.discordapp.com/attachments/1071523101290004521/1071544993694629898/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1071523101290004521/1071544993694629898/image.png",
            "height": 1080,
            "width": 1920,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546634898
      },
      {
        "content": "that&#x27;s because loading a payload config <em><strong>before</strong></em> 1.6.0 went through automatic transpilation no matter what",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546635551
      },
      {
        "content": "<em><strong>now</strong></em> the config doesn&#x27;t go through any transpilation at all in prod mode for speed / performance",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546656988
      },
      {
        "content": "so your barebones node environment, and your project settings, now need to be able to work with mjs files",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546689235
      },
      {
        "content": "i.e. @hypersonic.dev that screenshot made sure that right before we load your payload config, we implement swc/register to make sure any file that gets required afterward goes through transpilation",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546740203
      },
      {
        "content": "and you added <pre><code class=\"hljs\">&quot;module&quot;: &quot;commonjs&quot;,</code></pre>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546786850
      },
      {
        "content": "to your compilerOptions, and that didnt work?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546791998
      },
      {
        "content": "Yes, that&#x27;s because I&#x27;m using esbuild instead of tsc",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546815033
      },
      {
        "content": "To transpile the files",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546822946
      },
      {
        "content": "Esbuild tends to do its own thing",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546855803
      },
      {
        "content": "Actually I just got an idea",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546970559
      },
      {
        "content": "To transpile <code>payload.config.mts</code> to <code>payload.config.cjs</code> and check if that works",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675547002102
      },
      {
        "content": "THERE IS PROGRESS!!",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1071523101290004521/1071551918205304832/image.png",
            "name": "image.png",
            "id": "1071551918205304832",
            "size": 106692,
            "url": "https://cdn.discordapp.com/attachments/1071523101290004521/1071551918205304832/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1071523101290004521/1071551918205304832/image.png",
            "height": 361,
            "width": 1353,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675548285823
      },
      {
        "content": "I FIXED IT",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675550770995
      },
      {
        "content": "Relevant links for future reference: <a href=\"https://github.com/evanw/esbuild/issues/2023\">https://github.com/evanw/esbuild/issues/2023</a>, <a href=\"https://github.com/flex-development/toggle-pkg-type\">https://github.com/flex-development/toggle-pkg-type</a>",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675550807830
      },
      {
        "content": "My solution:",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675550839732
      },
      {
        "content": "Every payload related file is compiled to payload (i.e collections &amp; <code>payload.config.ts</code>) is transpiled to use the <code>.cjs</code> extension, while everything else uses the <code>.mjs</code> extension",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675550966261
      },
      {
        "content": "As for the command that starts the server, I use the <code>toggle-pkg-type</code> to stop <code>&quot;type&quot;:&quot;module&quot;</code> from being set in the package.json",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675551035109
      },
      {
        "content": "Thanks everyone for pointing me in the right direction!",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675551114665
      }
    ],
    "messageCount": 51
  },
  {
    "info": {
      "name": "How to handle local api authentication error?",
      "id": "1073211161480274000",
      "guildId": "967097582721572934",
      "createdAt": 1675943880196
    },
    "messages": [
      {
        "content": "I essentially want to do this:<br><br><pre><code class=\"hljs ts\">  <span class=\"hljs-keyword\">try</span> {\n    <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">login</span>({\n      <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;users&quot;</span>,\n      <span class=\"hljs-attr\">data</span>: { email, password },\n      res,\n    });\n  } <span class=\"hljs-keyword\">catch</span> (e) {\n    <span class=\"hljs-keyword\">if</span> (e <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-title class_\">AuthenticationError</span>) {\n      <span class=\"hljs-comment\">// handle error</span>\n    } <span class=\"hljs-keyword\">else</span> {\n      <span class=\"hljs-keyword\">throw</span> e;\n    }\n  }</code></pre><br><br>but it looks like I cannot import <code>AuthenticationError</code> from payloadCMS. What is the best way to handle the auth error ?",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1675943880196
      },
      {
        "content": "I don&#x27;t see a reason why we wouldn&#x27;t export this error type (along with the others). Let me get a PR going",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676056673663
      },
      {
        "content": "PR opened here: <a href=\"https://github.com/payloadcms/payload/pull/2061\">https://github.com/payloadcms/payload/pull/2061</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676056936896
      },
      {
        "content": "In the meantime, you&#x27;d have to check the error message (clunky I know)",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676056987618
      },
      {
        "content": "and doing <code>instanceof APIError</code>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676057027307
      },
      {
        "content": "awesome, thank you!",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676059375259
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "hide id field",
      "id": "1048430878898004048",
      "guildId": "967097582721572934",
      "createdAt": 1670035800433
    },
    "messages": [
      {
        "content": "Hi all 👋  <br><br>I&#x27;m having trouble hiding the id of a collection. I assumed I could do it like this, but I get caught in a loop where it can&#x27;t log me in properly. <br><br><pre><code class=\"hljs\">{\n  name: &#x27;id&#x27;,\n  type: &#x27;text&#x27;,\n  hidden: true,\n},</code></pre><br><br>I can identify at least two potential issues... the <code>type</code> is not correct, and/or <code>hidden</code> isn&#x27;t doing what I think it is. <br><br>The <code>hidden</code> config is defined as <code>Restrict this field&#x27;s visibility from all APIs entirely. Will still be saved to the database, but will not appear in any API or the Admin panel.</code><br><br>does <code>hidden: true</code> mean that the id is not included in the user object when it is fetched from the database? If this is the case, how do I include the id in the document but hide it from the toggle columns options? (pictured)<br><br>Any guidance is appreciated. Thank you",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1048430878898004048/1048430879074160670/image.png",
            "name": "image.png",
            "id": "1048430879074160670",
            "size": 33651,
            "url": "https://cdn.discordapp.com/attachments/1048430878898004048/1048430879074160670/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1048430878898004048/1048430879074160670/image.png",
            "height": 363,
            "width": 1271,
            "contentType": "image/png",
            "description": "Toggle Columns",
            "ephemeral": false
          }
        ],
        "authorID": "1047669407708610661",
        "authorName": "browniedev",
        "authorAvatar": "bc09a78c8bd507dffa53e59033933c80",
        "createdAtDate": 1670035800433
      },
      {
        "content": "hey @browniedev — well, the <code>id</code> <em><strong>will</strong></em> be included when fetched from the database—using <code>hidden: true</code> will simply hide it from being returned from any of Payload&#x27;s APIs",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1670266742418
      },
      {
        "content": "we should be able to build in controls to &quot;deactivate&quot; fields from being used as columns, I&#x27;d say that is the right way to go here",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1670266778456
      },
      {
        "content": "because hiding an <code>id</code> will have unknown side-effects in the admin UI, etc",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1670266786966
      },
      {
        "content": "we would happily accept a PR for this as well btw",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1670266796468
      },
      {
        "content": "maybe a new property on a field config like <code>admin.disableColumn</code> or similar",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1670266804585
      },
      {
        "content": "and then simply check for that property when we expose what columns are available to use in the List view",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1670266813888
      },
      {
        "content": "could be a good first contribution if you&#x27;re up for it 😈",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1670266832363
      },
      {
        "content": "Yes!! When I get home today, I&#x27;ll follow up on this 💯",
        "fileAttachments": [],
        "authorID": "1047669407708610661",
        "authorName": "browniedev",
        "authorAvatar": "bc09a78c8bd507dffa53e59033933c80",
        "createdAtDate": 1670269571711
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/discussions/1219\">https://github.com/payloadcms/payload/discussions/1219</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1670269699758
      },
      {
        "content": "this might be helpful if you end up deciding to PR",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1670269709984
      },
      {
        "content": "I&#x27;m open to the idea of making a contribution, do you have any documentation on the process of contributing?",
        "fileAttachments": [],
        "authorID": "1047669407708610661",
        "authorName": "browniedev",
        "authorAvatar": "bc09a78c8bd507dffa53e59033933c80",
        "createdAtDate": 1670269826349
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/blob/master/contributing.md\">https://github.com/payloadcms/payload/blob/master/contributing.md</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1670271087848
      },
      {
        "content": "this plus the Discussion above should be helpful",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1670271093626
      },
      {
        "content": "@browniedev have you tried to implement this? Would be nice to have!",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677674407997
      }
    ],
    "messageCount": 14
  },
  {
    "info": {
      "name": "ecosystem.config.js",
      "id": "1070933675077812326",
      "guildId": "967097582721572934",
      "createdAt": 1675400885124
    },
    "messages": [
      {
        "content": "Does anyone have an example pm2 ecosystem.config.js they could share? I&#x27;m having a really difficult time just getting a Payload &quot;hello world&quot; running on EC2 with basic NGINX config and PM2.",
        "fileAttachments": [],
        "authorID": "583007768311758886",
        "authorName": "ericpugh",
        "authorAvatar": "c6dbe07e1e07ff34376eb02a869fd18a",
        "createdAtDate": 1675400885124
      },
      {
        "content": "What do you have so far in your ecosystem file?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675431286037
      },
      {
        "content": "I&#x27;ve tried a bunch of things, currently have: <br><pre><code class=\"hljs\">module.exports = {  \n apps: [  \n   {  \n     name: &#x27;payloadcms-test&#x27;,  \n     script: &#x27;cross-env PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=production node dist/server.js&#x27;,  \n     instances: &#x27;max&#x27;,  \n     exec_mode: &#x27;cluster&#x27;,  \n     autorestart: true\n   },  \n ],  \n}</code></pre>",
        "fileAttachments": [],
        "authorID": "583007768311758886",
        "authorName": "ericpugh",
        "authorAvatar": "c6dbe07e1e07ff34376eb02a869fd18a",
        "createdAtDate": 1675436157442
      },
      {
        "content": "This gives me a 502 &quot;Bad Gateway&quot; from NGINX, and the only thing I can find in the PM2 logs is <br><pre><code class=\"hljs\">1|payloadc | SyntaxError: Invalid or unexpected token</code></pre>",
        "fileAttachments": [],
        "authorID": "583007768311758886",
        "authorName": "ericpugh",
        "authorAvatar": "c6dbe07e1e07ff34376eb02a869fd18a",
        "createdAtDate": 1675436261557
      },
      {
        "content": "Note: if I run <code>npm run serve</code> from the project root (which is the same as the &quot;script&quot; property in the ecosystem config, the site <em>does</em> serve. It doesn&#x27;t really work because of some CORS issue, but I think that does rule out an issue with NGINX.",
        "fileAttachments": [],
        "authorID": "583007768311758886",
        "authorName": "ericpugh",
        "authorAvatar": "c6dbe07e1e07ff34376eb02a869fd18a",
        "createdAtDate": 1675436404661
      },
      {
        "content": "Hm. I think I figured it out (I&#x27;m relatively new to node.js, so not sure <em>why</em> or what to do about it) but the issue was <code>exec_mode: &#x27;cluster&#x27;</code> I removed that property (which defaults to &quot;fork&quot;) and the app works.",
        "fileAttachments": [],
        "authorID": "583007768311758886",
        "authorName": "ericpugh",
        "authorAvatar": "c6dbe07e1e07ff34376eb02a869fd18a",
        "createdAtDate": 1675450193657
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Clean structure for managing complex permissions?",
      "id": "1066293456605028363",
      "guildId": "967097582721572934",
      "createdAt": 1674294570829
    },
    "messages": [
      {
        "content": "So currently I&#x27;ve found that when you need rather complex permissions,  you can end up writing a lot of code, as powerful as it is...<br>Here&#x27;s an example of what I have across my app<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> hasRoleOrSelf =\n  (<span class=\"hljs-attr\">role</span>: <span class=\"hljs-title class_\">User</span>[<span class=\"hljs-string\">&#x27;role&#x27;</span>]): <span class=\"hljs-title class_\">Access</span>&lt;<span class=\"hljs-built_in\">any</span>, <span class=\"hljs-title class_\">User</span>&gt; =&gt;\n  <span class=\"hljs-function\">(<span class=\"hljs-params\">{ req: { user } }</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (user) {\n      <span class=\"hljs-keyword\">const</span> userRole = user?.<span class=\"hljs-property\">role</span>\n\n      <span class=\"hljs-keyword\">if</span> (userRole === role) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">PriorityMap</span>[userRole] &gt;= <span class=\"hljs-title class_\">PriorityMap</span>[role]) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n\n      <span class=\"hljs-keyword\">return</span> {\n        <span class=\"hljs-attr\">id</span>: {\n          <span class=\"hljs-attr\">equals</span>: user.<span class=\"hljs-property\">id</span>,\n        },\n      }\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  }</code></pre><br><br>So this checks if the user has the right role (or of higher priority like super admin) OR it matches the id of the content...<br>Now if I want to re-use this as well as extend it with logic for an additional type of user like customer, I need a different function entirely.<br><br>Does anybody have an example of a better structure? It would be nice if the access hooks took in an array instead or maybe if it could define an OR/AND combination of permission checks which would make it easier to extend.<br><br>edit:<br>I landed on something like this, where the extension function takes in the user from the request (might update it to take the whole request in the future) so that I can attach custom extensions where needed, so that customers can interact with specific fields or parts of the API<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> hasRoleOrSelf =\n  (<span class=\"hljs-attr\">role</span>: <span class=\"hljs-title class_\">User</span>[<span class=\"hljs-string\">&#x27;role&#x27;</span>], extension?: extensionFunction): <span class=\"hljs-title class_\">Access</span>&lt;<span class=\"hljs-built_in\">any</span>, <span class=\"hljs-title class_\">User</span>&gt; =&gt;\n  <span class=\"hljs-function\">(<span class=\"hljs-params\">{ req: { user } }</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (user) {\n      <span class=\"hljs-keyword\">if</span> (extension) {\n        <span class=\"hljs-keyword\">const</span> validatedExtension = <span class=\"hljs-title function_\">extension</span>(user)\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> validatedExtension === <span class=\"hljs-string\">&#x27;boolean&#x27;</span>) <span class=\"hljs-keyword\">return</span> validatedExtension\n      }\n\n      <span class=\"hljs-keyword\">const</span> userRole = user?.<span class=\"hljs-property\">role</span>\n\n      <span class=\"hljs-keyword\">if</span> (userRole === role) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">PriorityMap</span>[userRole] &gt;= <span class=\"hljs-title class_\">PriorityMap</span>[role]) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n\n      <span class=\"hljs-keyword\">return</span> {\n        <span class=\"hljs-attr\">id</span>: {\n          <span class=\"hljs-attr\">equals</span>: user.<span class=\"hljs-property\">id</span>,\n        },\n      }\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  }</code></pre>",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674294570829
      },
      {
        "content": "This is the typical pattern that we see used. I agree that it is powerful but can get quite complex at some point. We&#x27;ve talked about creating a plugin for RBAC that implements more traditional roles, policies, scopes in the future. Is that something you&#x27;d be interested in?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675441773241
      },
      {
        "content": "Possibly yeah, I thought about writing something like that as well, for most permissions it&#x27;s simple enough, the issue comes when you&#x27;re dealing with multiple types of users (eg. staff and end users) who might then own different types of content. <br>For example we have orders, we want customers to view/manage only their own orders, for obvious reasons, and only certain staff roles to have access to view orders or certain sensitive user information like addresses.<br><br>My thinking was to try and make a function that takes an array of permission functions instead, that would make it easier to extend...so i can do something like<br><pre><code class=\"hljs\">read: [\n   hasRole(&#x27;manager&#x27;),\n   isCustomerReferenced(),\n],</code></pre><br>then if one of them matches, it would pass...will think about it more once this project is done!",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1675487515202
      },
      {
        "content": "You could definitely get pretty advanced here - even recreating something akin to IAM roles/permissions in AWS.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675489608654
      },
      {
        "content": "Here&#x27;s a link to someone leveraging the casl package to do some roles: <a href=\"https://discord.com/channels/967097582721572934/1002670004522725528/1002671690360311888\">https://discord.com/channels/967097582721572934/1002670004522725528/1002671690360311888</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675489651200
      },
      {
        "content": "Could also roll your own somewhat using types",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1066293456605028363/1071306189801013288/CleanShot_2023-02-03_at_17.29.40.png",
            "name": "CleanShot_2023-02-03_at_17.29.40.png",
            "id": "1071306189801013288",
            "size": 161714,
            "url": "https://cdn.discordapp.com/attachments/1066293456605028363/1071306189801013288/CleanShot_2023-02-03_at_17.29.40.png",
            "proxyURL": "https://media.discordapp.net/attachments/1066293456605028363/1071306189801013288/CleanShot_2023-02-03_at_17.29.40.png",
            "height": 912,
            "width": 1244,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675489699600
      },
      {
        "content": "interesting, thanks for the reference...good to see the conversation i was having in my head",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1675490103389
      },
      {
        "content": "Yeah, I definitely think there is room for a first party RBAC plugin to simplify this",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675519553998
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Download - export from a collection",
      "id": "1062197981966782554",
      "guildId": "967097582721572934",
      "createdAt": 1673318133585
    },
    "messages": [
      {
        "content": "I was looking for a plugin or field to download the data shown on a collection page but didn&#x27;t find anything, someone has a recommendation on how to implement this in the better (easiest) way possible? 😅",
        "fileAttachments": [],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1673318133585
      },
      {
        "content": "You could open a custom endpoint on your collection, where you pass the doc id as a query param - your endpoint would be responsible getting the data and transforming it into a download. I would have to do some googlin&#x27; but this would be a good starting point!<br><br>Heres some info about custom endpoints: <a href=\"https://payloadcms.com/docs/rest-api/overview#custom-endpoints\">https://payloadcms.com/docs/rest-api/overview#custom-endpoints</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675438161221
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Media List Component Thumbnail",
      "id": "1042138554903580732",
      "guildId": "967097582721572934",
      "createdAt": 1668535593487
    },
    "messages": [
      {
        "content": "Does the component support displaying SVGs? On our site we are uploading svgs and the thumbnail is displaying as a broken. What&#x27;s also interesting is on the API response for that media the proper s3 url is returned. The thumbnail href is not correct (only for svgs)",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1668535593487
      },
      {
        "content": "Are you using the <code>@payloadcms/plugin-cloud-storage</code> for this? Would love to get more detail on recreating the issue.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1668801917611
      },
      {
        "content": "Yeah, connected to an S3 bucket",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1668824600365
      },
      {
        "content": "SVG loads fine through the api / frontend and on S3. It’s only in the media collection thumbnail.",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1668824640289
      },
      {
        "content": "Using the source code for media that I found on the demo cms",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1668824650493
      },
      {
        "content": "Bumping this, were you able to make any progress?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1670263258057
      },
      {
        "content": "can confirm this still unfortunately doesn&#x27;t work 😦 the image path location for svgs for the media thumbnail just returns undefined (but the api values are fine)",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676129067217
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Check which part of the Where query a document was matched against.",
      "id": "1070206874420510760",
      "guildId": "967097582721572934",
      "createdAt": 1675227602344
    },
    "messages": [
      {
        "content": "Hello, I&#x27;ve got a slight problem currently. We are using an older version of payload and cannot update currently due to conflicting changes in future updates, so i&#x27;m doing a Payload Local API query to achieve a uniqueness check, but I want to know which part of the query it matched against in a or/and queries<br><br>a few solutions around this would be to have seperate queries for each type we are matching against, but the problem is that this is slow as for each field we want to compare uniqueness against would be its own query which could be upwards of 5-20.<br><br>next one is to pull all the documents for a collection and manually compare myself with a function and throw error specific to the field if we found a match. but the problem here is that the more documents we add, the longer it will take every time so this is kind of out of the question.<br><br>ideal solution would be that the unique flag works on fields but for some reason it does not in our version.<br>so this is why I&#x27;ve presented the idea of asking for which part of the query matched the document(s) returned.<br><br>ie doc 0 was returned as it matched {fieldName: { equals: value}} in an or/and query even though there are other parts to the query. i&#x27;m unsure if this is possible with payload or even mongoose.",
        "fileAttachments": [],
        "authorID": "284901071468494848",
        "authorName": "L U N A / R \\",
        "authorAvatar": "e4071306a07f6735d3f1da488c888f9f",
        "createdAtDate": 1675227602344
      },
      {
        "content": "Currently using Payload version 1.2.4",
        "fileAttachments": [],
        "authorID": "284901071468494848",
        "authorName": "L U N A / R \\",
        "authorAvatar": "e4071306a07f6735d3f1da488c888f9f",
        "createdAtDate": 1675227679757
      },
      {
        "content": "Hey @L U N A / R \\ I am curious as to what is holding you back from updating Payload?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675286882498
      },
      {
        "content": "We are close to releasing a product and the team has decided to stick to current version for now until we have time go through and refactor/update code/packages where needed. We looked into the most recent version available but wasn’t in full release was still in a revision stage last we checked. Updating is out of my control unfortunately.",
        "fileAttachments": [],
        "authorID": "284901071468494848",
        "authorName": "L U N A / R \\",
        "authorAvatar": "e4071306a07f6735d3f1da488c888f9f",
        "createdAtDate": 1675290956035
      },
      {
        "content": "Current solution was to do the query and then go through the returned docs and manually check for the fields",
        "fileAttachments": [],
        "authorID": "284901071468494848",
        "authorName": "L U N A / R \\",
        "authorAvatar": "e4071306a07f6735d3f1da488c888f9f",
        "createdAtDate": 1675291039050
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Directory structure for Next.js app and PayloadCMS?",
      "id": "1071441392129282188",
      "guildId": "967097582721572934",
      "createdAt": 1675521934302
    },
    "messages": [
      {
        "content": "Hello team,<br>My question is that is it a working way to install Next.js as the frontend and Payload as backend in the same idrectory, along-side one another? Or should I just keep them in separate folders, but inside one, main folder?<br><br>How do you guys do it normally, the way it works nice and dandy?",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1675521934302
      },
      {
        "content": "Check their github, they have a nextjs project combined with payload template there 🙂",
        "fileAttachments": [],
        "authorID": "220308673988263938",
        "authorName": "nicht hzK",
        "authorAvatar": "950e93943e4df21eb48a38a36c3ee62b",
        "createdAtDate": 1675554783619
      },
      {
        "content": "This matters on the project really. We prefer to keep the frontend and backend in separate repos, adn therefore allows easier separate deployments. However, as mentioned above, we do have an example with them combined here: <a href=\"https://github.com/payloadcms/nextjs-custom-server\">https://github.com/payloadcms/nextjs-custom-server</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675691876645
      },
      {
        "content": "Hi @denolfe , I have a payload cms project. How can i add NextJS configuration by myself in that existing payload project?<br>Kindly guide me.",
        "fileAttachments": [],
        "authorID": "1055906817881940069",
        "authorName": "Zeeshan",
        "authorAvatar": "2f7e0f4af189093c2c40bed516eb8754",
        "createdAtDate": 1676880040280
      },
      {
        "content": "Trying to model your project after the above repo is your best bet.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676900460517
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "payload.update help with arrays and hasMany relationship fields",
      "id": "1075390011182157886",
      "guildId": "967097582721572934",
      "createdAt": 1676463358446
    },
    "messages": [
      {
        "content": "What is the recommended approach for updating array and hasMany relationship fields?<br><br>### 1) hasMany relationship fields<br>I have an Customer collection, and I want to add an order id to the hasMany relationship field. What&#x27;s the approach to take here?<br><br>### 2) array fields<br>If I want to push a new object to an array, what is the recommended approach here?<br><br>Some example code for both cases would be <em>really</em> helpful here.<br><br>Thanks!",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676463358446
      },
      {
        "content": "@payloadcms team - would really appreciate a guide here.<br><br>When we create a relationship field, it produces an array at the API level, but when I add a new <code>id</code> to the field through <code>payload.update()</code>  do we again treat is as an array?<br><br>Would this be a correct approach:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">payloadCustomer</span>: <span class=\"hljs-title class_\">CustomerType</span> = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">findByID</span>({\n  <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;customers&#x27;</span>,\n  <span class=\"hljs-attr\">id</span>: newOrUpdatedOrder.<span class=\"hljs-property\">customerRelationship</span>.<span class=\"hljs-property\">id</span>,\n});\n\n<span class=\"hljs-keyword\">if</span> (payloadCustomer.<span class=\"hljs-property\">stripe</span>.<span class=\"hljs-property\">customerId</span> === <span class=\"hljs-string\">&#x27;&#x27;</span>) {\n  <span class=\"hljs-keyword\">const</span> stripeCustomer = <span class=\"hljs-keyword\">await</span> stripe.<span class=\"hljs-property\">customers</span>.<span class=\"hljs-title function_\">create</span>({\n    <span class=\"hljs-attr\">email</span>: customer.<span class=\"hljs-property\">email</span>,\n    <span class=\"hljs-attr\">name</span>: customer.<span class=\"hljs-property\">name</span>,\n    <span class=\"hljs-attr\">address</span>: customer.<span class=\"hljs-property\">address</span>,\n  });\n\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">updatedCustomer</span>: <span class=\"hljs-title class_\">CustomerType</span> = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">update</span>({\n    <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;customers&#x27;</span>,\n    <span class=\"hljs-attr\">id</span>: payloadCustomer.<span class=\"hljs-property\">id</span>,\n    <span class=\"hljs-attr\">data</span>: {\n      <span class=\"hljs-attr\">stripeCustomerId</span>: stripeCustomer.<span class=\"hljs-property\">id</span>,\n      <span class=\"hljs-attr\">orders</span>: [\n        ...payloadCustomer.<span class=\"hljs-property\">orders</span>,\n        newOrUpdatedOrder.<span class=\"hljs-property\">id</span>,\n      ],\n    },\n  });\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676474981165
      },
      {
        "content": "and if the <code>hasMany</code> is set to false, how do we treat this field from <code>payload.update</code> is it an array of length 1, or is it a string of id?",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676475930102
      },
      {
        "content": "I&#x27;ve found the docs have been updated since the last time I checked many moons ago 👍",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676476212945
      },
      {
        "content": "Hey @jakehopking to update an array (relationship or not), you need merge the existing array data with the new one as you are doing above.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676477596387
      },
      {
        "content": "Of fundamental importance for anyone who gets stuck on this for more time than they should:<br><br>You need to map over the array you intend to spread back in, and only return the <code>id</code> .<br><br>A relationship <code>hasMany</code> only stores an array of id, and when we query with say, <code>payload.findById</code> it returns these populated as would be expected, so when you spread back in, then you need to filter out everything except the id. Like so:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">orders</span>: [\n  ...payloadCustomer.<span class=\"hljs-property\">orders</span>.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">order</span>) =&gt;</span> order.<span class=\"hljs-property\">id</span>),\n  newOrUpdatedOrder.<span class=\"hljs-property\">id</span>,\n],</code></pre>",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676483148173
      },
      {
        "content": "@Jarrod Thanks, but I&#x27;m still a bit confused. The above realisation got me most of the way.... however I notice that the <code>hasMany</code> can actually hold arrays with multiple items with the same id. Is this expected? How best to filter out?",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676483778922
      },
      {
        "content": "do I need to do something like this to ensure no duplicates??<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">orders</span>: <span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-title function_\">from</span>(\n  <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([\n    ...payloadCustomer.<span class=\"hljs-property\">orders</span>.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">order</span>) =&gt;</span> order.<span class=\"hljs-property\">id</span>),\n    newOrUpdatedOrder.<span class=\"hljs-property\">id</span>,\n  ]),\n),</code></pre>",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676483830574
      },
      {
        "content": "-<br>seems like this should be handled at the api level?<br>-",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676483854737
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1075390011182157886/1075476395255418930/Screen_Recording_2023-02-15_at_17.58.36.mov",
            "name": "Screen_Recording_2023-02-15_at_17.58.36.mov",
            "id": "1075476395255418930",
            "size": 1031503,
            "url": "https://cdn.discordapp.com/attachments/1075390011182157886/1075476395255418930/Screen_Recording_2023-02-15_at_17.58.36.mov",
            "proxyURL": "https://media.discordapp.net/attachments/1075390011182157886/1075476395255418930/Screen_Recording_2023-02-15_at_17.58.36.mov",
            "height": 856,
            "width": 1970,
            "contentType": "video/quicktime",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676483954004
      },
      {
        "content": "For completeness for others learning this, if the hasMany relationship is new and therefore empty you need to cater for that like so:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">orders</span>: <span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-title function_\">from</span>(\n  <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([\n    ...(payloadCustomer?.<span class=\"hljs-property\">orders</span>?.<span class=\"hljs-property\">length</span> &gt; <span class=\"hljs-number\">0</span>\n      ? payloadCustomer.<span class=\"hljs-property\">orders</span>.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">order</span>) =&gt;</span> order.<span class=\"hljs-property\">id</span>)\n      : []),\n    newOrUpdatedOrder.<span class=\"hljs-property\">id</span>,\n  ]),\n),</code></pre><br><br>Otherwise you&#x27;ll get undefined errors on the map and everything explodes 💥",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676488697299
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "How to run a REPL or one-off script?",
      "id": "1077196324912513084",
      "guildId": "967097582721572934",
      "createdAt": 1676894017199
    },
    "messages": [
      {
        "content": "I want to mess around with Payload, kind of like a REPL. Or, alternatively, put what I want in a script and run that instead. Currently, I put my stuff in <code>server.ts</code>, then run Payload as I normally would. But that&#x27;s a bit slower and also hangs, because the server continues listening.<br><br>Is there a way to just run something and have Payload exit immediately after that?",
        "fileAttachments": [],
        "authorID": "583713322700898304",
        "authorName": "dodov",
        "authorAvatar": "963cac7b9d70846918bedd06cc4cc389",
        "createdAtDate": 1676894017199
      },
      {
        "content": "The best way to do this would be a stand-alone script that uses the local API. You&#x27;d run it with ts-node. Here is an example:<br><br><pre><code class=\"hljs\">import payload from &#x27;payload&#x27;\nimport path from &#x27;path&#x27;\nimport dotenv from &#x27;dotenv&#x27;\n\ndotenv.config({\n  path: path.resolve(__dirname, &#x27;../.env&#x27;),\n})\n\nconst { PAYLOAD_SECRET, MONGODB_URI } = process.env\n\nconst doAction = async (): Promise&lt;void&gt; =&gt; {\n  await payload.init({\n    secret: PAYLOAD_SECRET,\n    mongoURL: MONGODB_URI,\n    local: true,\n  })\n\n  // Use the Payload Local API: https://payloadcms.com/docs/local-api/overview#local-api\n\n  await payload.find({\n    collection: &#x27;posts&#x27;,\n    // where: {}\n  })\n\n  await payload.create({\n    collection: &#x27;posts&#x27;,\n    data: {},\n  })\n}\n\ndoAction()</code></pre>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676903287182
      },
      {
        "content": "Essentially, it runs payload.init with <code>local: true</code> which bypasses loading anything unneeded for local API usage",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676903341546
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "When accessing api from browser I see uploaded images with sizes and all, but when using fetch no",
      "id": "1078793213244084355",
      "guildId": "967097582721572934",
      "createdAt": 1677274745046
    },
    "messages": [
      {
        "content": "Why is that? I see only the image id but not the different image sizes and actual file locaiton",
        "fileAttachments": [],
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1677274745046
      },
      {
        "content": "Also in postman I see only the image ids not the actual fields for each image upload",
        "fileAttachments": [],
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1677274847942
      },
      {
        "content": "can you show an example of both requests?",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1677274958086
      },
      {
        "content": "i.e what its returning",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1677274963459
      },
      {
        "content": "Sorry, I found the problem, it was the media collection access control, on the browser I was with the admin cookie , in the fetching from the app no. Change the access control on the media collection and it was sorted",
        "fileAttachments": [],
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1677275295970
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Hide the dashboard account section for certain roles.",
      "id": "1066973751956230174",
      "guildId": "967097582721572934",
      "createdAt": 1674456765880
    },
    "messages": [
      {
        "content": "I have set all access levels of the <code>Users</code> collection to Administrator only. However, when I log in as the editor user, the account section of the dashboard page (<a href=\"http://localhost:3000/admin/account\">http://localhost:3000/admin/account</a>)  is still visible, even though the terminal is throwing <code>ERROR (payload): Forbidden: You are not allowed to perform this action.</code>.<br><br>Is it possible to hide the account part from certain roles by using access control, or is there more configuration to achieve this?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1066973751956230174/1066973752111415306/Screenshot_2023-01-23_at_15.29.03.png",
            "name": "Screenshot_2023-01-23_at_15.29.03.png",
            "id": "1066973752111415306",
            "size": 133799,
            "url": "https://cdn.discordapp.com/attachments/1066973751956230174/1066973752111415306/Screenshot_2023-01-23_at_15.29.03.png",
            "proxyURL": "https://media.discordapp.net/attachments/1066973751956230174/1066973752111415306/Screenshot_2023-01-23_at_15.29.03.png",
            "height": 2050,
            "width": 1886,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "354438130067177475",
        "authorName": "ken⌁ryu",
        "authorAvatar": "fef5eda1a6d55cb4b2e1aeec1adc2bf5",
        "createdAtDate": 1674456765880
      },
      {
        "content": "@ken⌁ryu it seems like users should always have access to their account details, this is required for authentication. Would it work for you to just <em>hide</em> those fields within the admin panel?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675454731368
      },
      {
        "content": "You should be able to do this via custom CSS: <a href=\"https://payloadcms.com/docs/admin/customizing-css#customizing-css-and-scss\">https://payloadcms.com/docs/admin/customizing-css#customizing-css-and-scss</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675454804357
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Tagging",
      "id": "1035533037091426405",
      "guildId": "967097582721572934",
      "createdAt": 1666960715316
    },
    "messages": [
      {
        "content": "Hi,<br><br>I&#x27;m after a way of &#x27;tagging&#x27; collection items with arbitrary strings, similar to taxonomies in WordPress. Has anyone implemented something similar before? Use case is, you might have X different collections and you want to grab all items from all collections which are tagged with <code>Beauty</code>.<br><br>Thanks,<br>Ash",
        "fileAttachments": [],
        "authorID": "781099510423224322",
        "authorName": "asheboy",
        "authorAvatar": null,
        "createdAtDate": 1666960715316
      },
      {
        "content": "ok so to make sure i understand, you <em><strong>don&#x27;t want</strong></em> to use a relationship to another collection",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1666962089325
      },
      {
        "content": "i probably would, especially now that we have the &quot;add inline relationship&quot; feature where you can just easily add a new &quot;tag&quot; if it doesn&#x27;t exist",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1666962106886
      },
      {
        "content": "After talking this through, we have actually gone with a hidden collection and a relationship input!",
        "fileAttachments": [],
        "authorID": "781099510423224322",
        "authorName": "asheboy",
        "authorAvatar": null,
        "createdAtDate": 1666966306120
      },
      {
        "content": "Thank you",
        "fileAttachments": [],
        "authorID": "781099510423224322",
        "authorName": "asheboy",
        "authorAvatar": null,
        "createdAtDate": 1666966309815
      },
      {
        "content": "how did you hide the collection from the admin bar?",
        "fileAttachments": [],
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1675960797107
      },
      {
        "content": "@fewbar we didn&#x27;t end up implementing this",
        "fileAttachments": [],
        "authorID": "781099510423224322",
        "authorName": "asheboy",
        "authorAvatar": null,
        "createdAtDate": 1675961519503
      },
      {
        "content": "You can disable it from the admin bar like this, but I&#x27;m not sure if you can then still use it in a realtionship",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1035533037091426405/1073285384064204841/screenshot_2023-02-09_at_16.png",
            "name": "screenshot_2023-02-09_at_16.png",
            "id": "1073285384064204841",
            "size": 92585,
            "url": "https://cdn.discordapp.com/attachments/1035533037091426405/1073285384064204841/screenshot_2023-02-09_at_16.png",
            "proxyURL": "https://media.discordapp.net/attachments/1035533037091426405/1073285384064204841/screenshot_2023-02-09_at_16.png",
            "height": 886,
            "width": 960,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "781099510423224322",
        "authorName": "asheboy",
        "authorAvatar": null,
        "createdAtDate": 1675961576295
      },
      {
        "content": "mhh ok thanks",
        "fileAttachments": [],
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1675961607165
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "Experiencing crashes when MongoDB connection drops (Atlas)",
      "id": "1070485342945300631",
      "guildId": "967097582721572934",
      "createdAt": 1675293994414
    },
    "messages": [
      {
        "content": "Fairly frequently getting errors like:<br><pre><code class=\"hljs\">/home/x/repo/payload/node_modules/mongodb/src/cmap/connection.ts:353\n      op.cb(new MongoNetworkError(message));\n            ^\nMongoNetworkError: connection 3 to 37.74.243.28:27017 closed\n    at Connection.onClose (/home/x/repo/payload/node_modules/mongodb/src/cmap/connection.ts:353:13)\n    at TLSSocket.&lt;anonymous&gt; (/home/x/repo/payload/node_modules/mongodb/src/cmap/connection.ts:258:42)\n    at TLSSocket.emit (node:events:513:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at node:net:301:12\n    at TCP.done (node:_tls_wrap:588:7) {\n  [Symbol(errorLabels)]: Set(1) { &#x27;RetryableWriteError&#x27; }\n}\n[nodemon] app crashed - waiting for file changes before starting...</code></pre><br>Is anyone experiencing similar issues on Atlas or anywhere else? Is this expected behaviour? In the past, I was getting occasional failed requests due to connection close, but now, more often than not, the app as a whole is crashing when the DB connection drops. Would be very interested if anybody has any tips on how to address this.",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675293994414
      },
      {
        "content": "Experiencing crashes when MongoDB connection drops (Atlas)",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675296778532
      },
      {
        "content": "Same/similar issue when using <code>retryWrites=false</code>:<br><pre><code class=\"hljs\">MongoNetworkError: connection 7 to 37.74.243.28:27017 closed\n    at Connection.onClose (/home/x/repo/payload/node_modules/mongodb/src/cmap/connection.ts:353:13)\n    at TLSSocket.&lt;anonymous&gt; (/home/x/repo/payload/node_modules/mongodb/src/cmap/connection.ts:258:42)\n    at TLSSocket.emit (node:events:513:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at node:net:301:12\n    at TCP.done (node:_tls_wrap:588:7) {\n  [Symbol(errorLabels)]: Set(0) {}\n}\n[nodemon] app crashed - waiting for file changes before starting...</code></pre>",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675298681181
      },
      {
        "content": "Bump.",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675352057414
      },
      {
        "content": "do you get a lot of traffic? I also use MongoDB Atlas and so far didnt have any issues but it is just me testing my project",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675355717781
      },
      {
        "content": "I&#x27;m experiencing this already during development, needs to be fixed before deploy.",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675357970772
      },
      {
        "content": "maybe you can try to add all ips to network access",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675361357842
      },
      {
        "content": "",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1070485342945300631/1070767893794529400/image.png",
            "name": "image.png",
            "id": "1070767893794529400",
            "size": 109702,
            "url": "https://cdn.discordapp.com/attachments/1070485342945300631/1070767893794529400/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1070485342945300631/1070767893794529400/image.png",
            "height": 782,
            "width": 2502,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675361359849
      },
      {
        "content": "and see if that changes anything",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675361386147
      },
      {
        "content": "@generator101 do you also user MongoDB Atlas in serverless mode?",
        "fileAttachments": [],
        "authorID": "943687018020495380",
        "authorName": "pugbyte",
        "authorAvatar": "9e019a6d298de629db0fc661580538ca",
        "createdAtDate": 1675363511527
      },
      {
        "content": "yes",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675363534828
      },
      {
        "content": "Yep, it&#x27;s configured that way. The app connects fine, but when the first connection closes (they don&#x27;t stay open forever with Atlas, esepcially Serverless), the error is not getting handled and the app crashes. The error is routine, and based on the stack trace it&#x27;s an unhandled promise rejection, meaning most likely culprit is a missing <code>await</code> somewhere.",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675363599041
      },
      {
        "content": "maybe you can try to deploy it but dont launch yet and see if you face this issue",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675363673498
      },
      {
        "content": "I never had this issue and also one of my app is deployed to railway.app",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675363686047
      },
      {
        "content": "the only issue I had with mongo was when that IP was not set so the connection would get blocked",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675363716052
      },
      {
        "content": "Hmm, so something specific w/ Atlas Serverless? I&#x27;d be curious if you could document the steps to recreate this consistently.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676053268489
      },
      {
        "content": "I wouldn&#x27;t count on it being something to do with Atlas Serverless specifically, just that Serverless tends to drop connections more frequently than you might see with a standard cluster. It appears to be an unhandled promise rejection, meaning somewhere a call to Mongoose is not being  <code>await</code>ed and the error isn&#x27;t being handled by the enclosing <code>try {} catch {}</code> block.",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1676142054913
      },
      {
        "content": "@denolfe Fixed.",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1676301754869
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/pull/2078\">https://github.com/payloadcms/payload/pull/2078</a>",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1676301756155
      },
      {
        "content": "Great! We&#x27;ll get this looked at soon 👍",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676308027640
      }
    ],
    "messageCount": 19
  },
  {
    "info": {
      "name": "Is there a way to specify max depth of returned links in the rich text editor?",
      "id": "1076469797220532294",
      "guildId": "967097582721572934",
      "createdAt": 1676720799499
    },
    "messages": [
      {
        "content": "By default, it only returns the doc ID.",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676720799499
      },
      {
        "content": "are you using Graphql or the REST API?",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1676738005346
      },
      {
        "content": "<a href=\"https://discord.com/channels/967097582721572934/1076278103489396767\">https://discord.com/channels/967097582721572934/1076278103489396767</a>",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1676764684185
      },
      {
        "content": "i&#x27;m using REST",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676820369213
      },
      {
        "content": "?depth=3 didn&#x27;t work?",
        "fileAttachments": [],
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1676852774230
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Live preview with NextJS",
      "id": "1059443765951074314",
      "guildId": "967097582721572934",
      "createdAt": 1672661477316
    },
    "messages": [
      {
        "content": "I just recently discovered Payload and fell in love with it immediately. <br><br>I&#x27;m now trying to set up a live preview with the NextJS Frontend which is deployed on vercel. The goal would be to have 2 windows open, edit the content in payload on the left side, see the changes on the preview website in real time (small delays are fine). <br><br>My Idea was to set up a separate deploy with an auth wall on a subdomain (preview.xyz.com) that get&#x27;s the data in draft mode after the user has logged in with his payload credentials. Using the autosave feature, the content on the preview page should be updated every 2 seconds. <br><br>One unsolved question is how to actually refresh the page content: I could let the page query the content every 2 seconds, or maybe set up a websocket connection to the payload express app? Since I haven&#x27;t done anything similar before, I&#x27;d love to hear if anyone thinks this will work, or if there are better/simpler ways to implement this.",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1672661477316
      },
      {
        "content": "Hey @Sandro Wegmann — I do think that a simple websocket or messaging service would be the best way to do this",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1672670973205
      },
      {
        "content": "and this is on our radar to build into Payload for sure, natively, although as of right now, you could do this on your own using SocketIO or similar",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1672670996307
      },
      {
        "content": "Sandro you are doing the lords work, if you figure it out lmk. Would love to implement a live preview, I wish there was documentation on implementation of just the preview functionality with next similar to what Prismic, DatoCMS, etc... Trying to hack something together to show team proof of concept",
        "fileAttachments": [],
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1672967621797
      },
      {
        "content": "Same here, would love this! As of right now I just refetch the draft data each 2seconds on a preview route.<br><br>Using SocketIO seems interesting for sure.",
        "fileAttachments": [],
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1672989554269
      },
      {
        "content": "I&#x27;ll post in here when I&#x27;ve figured sth out 😉",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1672995343834
      },
      {
        "content": "@FireGuy_42 @AngeloK I actually managed to get it working.  Check my post in the Showcase Channel or hmu 🙂",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673544975875
      },
      {
        "content": "Very nice! I would love to try and implement this in my project. It&#x27;s SvelteKit tho, but the functionality stays the same I guess.",
        "fileAttachments": [],
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673591439225
      },
      {
        "content": "Yup, you just have to implement a functionality in the frontend to 1. Authenticate a user (send a login request to payload) and 2. if logged in, listen to update calls from the server. This is a bit tricky if you&#x27;re using Nextjs along with SSG etc. but I don&#x27;t know about sveltekit",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673599998894
      },
      {
        "content": "Here&#x27;s what you have to do serverside <pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// Instead of just calling app.listen</span>\n<span class=\"hljs-comment\">// app.listen(process.env.PAYLOAD_PUBLIC_INTERNAL_SERVER_URL.split(&#x27;:&#x27;)[2]);</span>\n\n<span class=\"hljs-comment\">// create an http server (or https if you aren&#x27;t using a reverse proxy)</span>\n<span class=\"hljs-keyword\">const</span> server = http.<span class=\"hljs-title function_\">createServer</span>(app)\nserver.<span class=\"hljs-title function_\">listen</span>(process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PAYLOAD_PUBLIC_INTERNAL_SERVER_URL</span>.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27;:&#x27;</span>)[<span class=\"hljs-number\">2</span>], <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`HTTP Server running on port <span class=\"hljs-subst\">${process.env.PAYLOAD_PUBLIC_INTERNAL_SERVER_URL.split(<span class=\"hljs-string\">&#x27;:&#x27;</span>)[<span class=\"hljs-number\">2</span>]}</span>`</span>);\n});\n\n<span class=\"hljs-comment\">// Socket.io</span>\n<span class=\"hljs-comment\">// Now pass the server instance to socket io, to create a websocket server on the same port</span>\n<span class=\"hljs-keyword\">const</span> io = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;socket.io&#x27;</span>)(server, {\n  <span class=\"hljs-attr\">cors</span>: {\n    <span class=\"hljs-attr\">origin</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">WHITELIST_ORIGINS</span>.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27;,&#x27;</span>),\n  }\n});\n\nio.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&#x27;connection&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">socket</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;New client connected&#x27;</span>);\n\n  socket.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&#x27;disconnect&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-comment\">// console.log(&#x27;Client disconnected&#x27;)</span>\n  });\n})\n\n<span class=\"hljs-comment\">// You can&#x27;t call io.emit directly from the payload hooks, it throws errors. </span>\n<span class=\"hljs-comment\">// As a workaround, you can set up a simple endpoint that emits the update </span>\napp.<span class=\"hljs-title function_\">post</span>(<span class=\"hljs-string\">&#x27;/updatePreview&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;update preview called&#x27;</span>)\n  <span class=\"hljs-comment\">// Check if authorization header contains PAYLOAD_SECRET</span>\n  <span class=\"hljs-keyword\">if</span> (req.<span class=\"hljs-property\">headers</span>.<span class=\"hljs-property\">authorization</span> !== process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PAYLOAD_PUBLIC_SERVER_SECRET</span>) {\n    res.<span class=\"hljs-title function_\">sendStatus</span>(<span class=\"hljs-number\">401</span>)\n    <span class=\"hljs-keyword\">return</span>\n  }\n  io.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-string\">&#x27;update&#x27;</span>)\n})</code></pre>",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673600178132
      },
      {
        "content": "Now, in the payload hooks, add an afterChange Hook: <br><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">if</span> (args.<span class=\"hljs-property\">doc</span>.<span class=\"hljs-property\">_status</span> !== <span class=\"hljs-string\">&#x27;published&#x27;</span>) {\n            <span class=\"hljs-keyword\">try</span> {\n              <span class=\"hljs-title function_\">axios</span>({\n                <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;post&#x27;</span>,\n                <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">`<span class=\"hljs-subst\">${process.env.PAYLOAD_PUBLIC_INTERNAL_SERVER_URL}</span>/updatePreview`</span>,\n                <span class=\"hljs-attr\">headers</span>: {\n                  <span class=\"hljs-string\">&#x27;Authorization&#x27;</span>: <span class=\"hljs-string\">`<span class=\"hljs-subst\">${process.env.PAYLOAD_PUBLIC_SERVER_SECRET}</span>`</span>\n                }\n              })\n            } <span class=\"hljs-keyword\">catch</span> (e) {\n              <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(e)\n            }\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Not published, skipping revalidation&#x27;</span>)</code></pre><br>This will just call the api endpoint you&#x27;ve just set up and emit the update message",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673600287310
      },
      {
        "content": "if you write code blocks and want them to be syntax highlighted for readability, you can append the language after the 3 back ticks. For typescript it would be 3 back ticks followed by the word <code>typescript</code>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1673615786960
      },
      {
        "content": "Oh damn thanks @Jarrod ! This is my first time really using discord haha",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673716415940
      },
      {
        "content": "No prob! Was just letting you know 😃",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1673717106972
      },
      {
        "content": "@Sandro Wegmann finally had the chance to test this out. Works like a charm!",
        "fileAttachments": [],
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1674414228142
      },
      {
        "content": "Gosh I&#x27;m a real grave-digger here, but if anyones interested, my solution (developed accidentally in parallel with this one haha) is perhaps a bit more involved, but the authentication part is quite interesting so I figured I should probably post it. It does require the two apps (frontend and payload) to be one the same-ish URL (ie. www.example.com and cms.example.com) but works pretty well I would say!<br><br><pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> io = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Server</span>(server, {\n  <span class=\"hljs-attr\">cors</span>: {\n    <span class=\"hljs-attr\">origin</span>: <span class=\"hljs-variable constant_\">WEB_URL</span>,\n    <span class=\"hljs-attr\">credentials</span>: <span class=\"hljs-literal\">true</span>,\n  },\n  <span class=\"hljs-attr\">allowRequest</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">req, callback</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> cookies = <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">fromEntries</span>(\n      req.<span class=\"hljs-property\">headers</span>.<span class=\"hljs-property\">cookie</span>\n        ?.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;; &quot;</span>)\n        .<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">cookie</span>) =&gt;</span> cookie.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;=&quot;</span>))\n        .<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">tuple</span>) =&gt;</span> tuple.<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">2</span>) ?? []\n    );\n    <span class=\"hljs-keyword\">const</span> payloadToken = cookies[<span class=\"hljs-string\">&quot;payload-token&quot;</span>];\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> payloadToken !== <span class=\"hljs-string\">&quot;string&quot;</span>) {\n      <span class=\"hljs-title function_\">callback</span>(<span class=\"hljs-string\">&quot;Not signed in&quot;</span>, <span class=\"hljs-literal\">false</span>);\n      <span class=\"hljs-keyword\">return</span>;\n    }\n    jwt.<span class=\"hljs-title function_\">verify</span>(payloadToken, payload.<span class=\"hljs-property\">secret</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> {\n      <span class=\"hljs-keyword\">if</span> (err) {\n        <span class=\"hljs-title function_\">callback</span>(<span class=\"hljs-string\">&quot;Invalid token&quot;</span>, <span class=\"hljs-literal\">false</span>);\n        <span class=\"hljs-keyword\">return</span>;\n      }\n      <span class=\"hljs-title function_\">callback</span>(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">true</span>);\n    });\n  },\n});</code></pre>",
        "fileAttachments": [],
        "authorID": "321229198234615808",
        "authorName": "Ellie",
        "authorAvatar": "7472ce50c8e25a58fb6ed48925a7c31d",
        "createdAtDate": 1676445934310
      }
    ],
    "messageCount": 15
  },
  {
    "info": {
      "name": "Bypass collection hook when using LocalAPI",
      "id": "1078174191376932925",
      "guildId": "967097582721572934",
      "createdAt": 1677127158732
    },
    "messages": [
      {
        "content": "I need to auto-update one collection when another collection is edited (using relationship field to detect which collection to auto-update).<br>While Collection hooks are great for this business logic, it takes me into a circular loop where the auto-update itself triggers another round which is not wanted.<br><br>I could escape the logic inside to hook with some temp flags in the collection itself but this is prone to errors and not a very elegant solution.<br><br>Is there a way to tell the LocalAPI, when updating a collection, to bypass collection hooks?",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1677127158732
      },
      {
        "content": "I would add <code>cascade</code> in the request and filter that out in the hook so it doesn&#x27;t make it to the db. <br>Not aware of a way to disable hooks.<br>Eagerly waiting for relational databases 👀",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677135398322
      },
      {
        "content": "What is cascade in request? How can I add that?",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1677135553508
      },
      {
        "content": "I meant a field named cascade with type boolean or text.<br><pre><code class=\"hljs ts\">{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;cascade&quot;</span>, <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text&quot;</span>, <span class=\"hljs-attr\">hidden</span>: <span class=\"hljs-literal\">true</span> }</code></pre><br>When doing the auto-update from the other collection, pass in a value so that the other collection knows not to start a circular loop<br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">hooks</span>: {\n  <span class=\"hljs-attr\">beforeChange</span>: [<span class=\"hljs-function\">(<span class=\"hljs-params\">{ data: { cascade, ...data }, req }</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (cascade !== <span class=\"hljs-string\">&#x27;ignore&#x27;</span>)\n      req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-title function_\">update</span>({\n        <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;other&quot;</span>,\n        <span class=\"hljs-attr\">data</span>: {\n          <span class=\"hljs-attr\">cascade</span>: <span class=\"hljs-string\">&quot;ignore&quot;</span>,\n          <span class=\"hljs-attr\">dependentValue</span>: <span class=\"hljs-title function_\">calculate</span>()\n         }\n      })\n    <span class=\"hljs-comment\">// Same as initial data except &quot;cascade&quot; is missing</span>\n    <span class=\"hljs-keyword\">return</span> data\n  }],\n}</code></pre><br><br>It&#x27;s probably what you described as the not very elegant solution 😛",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677141020826
      },
      {
        "content": "I see, thank that is an interesting hack.<br>The main problem with this approach, is that when you turn cascade off, you also need to make sure it turns back on after the operation has finished. <br><br>Turning cascade on and off are also collection updates so now you have to deal with cascade update triggering the hooks also. <br><br>I implemented this and it somehow works, through additional hacks, but I wouldn&#x27;t show this code to anyone nor can I sleep at night 😄",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1677227468840
      },
      {
        "content": "The beforeChange hook runs before it hits the database, so cascade is actually never saved.<br><br>By returning a value from the beforeChange hook, it will remove the cascade property from the input.",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677401510502
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Error [ERR_REQUIRE_ESM]: require() of ES Module when trying to implement Lit Element",
      "id": "1075705278307258389",
      "guildId": "967097582721572934",
      "createdAt": 1676538523986
    },
    "messages": [
      {
        "content": "Hey there, I want to use Lit on React for <code>ui</code> field on payload. I use <code>@lit-labs/react</code> to do it.<br><br>always got <br><pre><code class=\"hljs\">Error [ERR_REQUIRE_ESM]: require() of ES Module /path/payload/node_modules/lit-element/index.js from /path/payload/src/lit-components/test/my-element.js not supported.\nInstead change the require of index.js in /path/payload/src/lit-components/test/my-element.js to a dynamic import() which is available in all CommonJS modules.</code></pre><br><br>Is there any way to implement Lit with Payload?<br>Has someone done this (Lit+React) in payload before?",
        "fileAttachments": [],
        "authorID": "946373741175267329",
        "authorName": "rrums",
        "authorAvatar": "6a019fb818dd1274398027f152b5294b",
        "createdAtDate": 1676538523986
      },
      {
        "content": "That package appears to be ESM-only, so this won&#x27;t be possible currently unless you introduce some sort of bundling to get a cjs output. This is an node-wide ecosystem problem at the moment.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677592204112
      },
      {
        "content": "yeah already solved using rollup, to have cjs output",
        "fileAttachments": [],
        "authorID": "946373741175267329",
        "authorName": "rrums",
        "authorAvatar": "6a019fb818dd1274398027f152b5294b",
        "createdAtDate": 1677762056286
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Is it possible to use Payloads' email and password validator on the frontend, like Next.js?",
      "id": "1070961204899614750",
      "guildId": "967097582721572934",
      "createdAt": 1675407448745
    },
    "messages": [
      {
        "content": "Hello,<br>I have a little project for a gaming community portal and I need to make a registration/login module in Next.js for users to be able to login into in the website and forums. My question is, that can I use somehow the built-in email and password validator of paylod for this purpose?",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1675407448745
      },
      {
        "content": "I have the same question.",
        "fileAttachments": [],
        "authorID": "941688759034970132",
        "authorName": "bigDaddy",
        "authorAvatar": "f59cf5ca783ae53f37e8a99cfbcc9a18",
        "createdAtDate": 1675415036729
      },
      {
        "content": "I guess it could be easier, if I only tried it, but it would be even easier if someone could tell me if it&#x27;s even possible or not.",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1675419666788
      },
      {
        "content": "I dont want to discourage you from using payload cms for your project but for your specific need , have you heard of <a href=\"https://www.discourse.org?\">https://www.discourse.org?</a> In that case you dont need to do a lot of custom coding",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675430476335
      },
      {
        "content": "Thanks ,but it&#x27;s a non-profit project i am making, so i don&#x27;t want to pay for any of its components, I imagined it all made by hand or coded by hand.",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1675434014564
      },
      {
        "content": "discourse is open source too (<a href=\"https://github.com/discourse/discourse\">https://github.com/discourse/discourse</a>) i used a long time ago for a project and a lot of stuff for managing a community is built in.",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675436779145
      },
      {
        "content": "On second thought ans taking a glance at it, it might be just what I need, it&#x27;s even coatumizable theme-wise",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1675461464911
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Admin UI is crawling with 100+ layout blocks",
      "id": "1078732080567025725",
      "guildId": "967097582721572934",
      "createdAt": 1677260169880
    },
    "messages": [
      {
        "content": "Hi - I&#x27;m <strong>really</strong> struggling to use the admin ui on records that have a lot of layout blocks.<br><br>Has the @payloadcms team tested the responsiveness of the ui in these use-cases?<br><br>I&#x27;m creating very content-rich pages, with 100s of images/content blocks and <strong>really</strong> need this to be snappy. Currently I&#x27;m very nervous when using the UI. <br>It frequently hangs and completely disappears at random.<br><br>Key presses are at this point are so slow that it&#x27;s not plausible to write content inside Payload.<br><br>Dragging layout blocks around is again very painful.<br><br>Saving takes a long time (this however isn&#x27;t an issue... and is understandable with the amount of json being passed about) but it&#x27;s worth mentioning.<br><br>Generally I deeply implore the @payloadcms team to really focus some attention here. Layout blocks are one of the fundamental building blocks for content heavy sites, and currently they are not fit for purpose (in my heavy use-case at least).<br><br>Please create a ticket and add it to your backlog. I&#x27;ll share some video screengrabs in the thread.<br><br>Thanks.",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1677260169880
      },
      {
        "content": "-<br><br>Also worth mentioning - I&#x27;m not using a slow machine. I&#x27;m running M1 Max with 64GB of ram. Trying the same on my partner&#x27;s older Intel i7 it&#x27;s incredibly slow... and honestly I&#x27;d say unusable.",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1677260553567
      },
      {
        "content": "cc / @jmikrut - Keen to share this with you James. I don&#x27;t want to come across as miserable here... I just really think it&#x27;s an area of your CMS that requires some urgent attention.",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1677260663904
      },
      {
        "content": "woah interesting",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677260758656
      },
      {
        "content": "we have some massive use-cases with hundreds and hundreds of fields but have never seen a slowdown",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677260772881
      },
      {
        "content": "how many fields do you have?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677260780348
      },
      {
        "content": "and how many nested block editors do you have?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677260785759
      },
      {
        "content": "regardless, i think that we should be able to get to the bottom of this",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677260800518
      },
      {
        "content": "Here&#x27;s a video of the situation: <a href=\"https://www.dropbox.com/s/20ddv7k2htqfha5/Screen%20Recording%202023-02-24%20at%2017.48.06.mov?dl=0\">https://www.dropbox.com/s/20ddv7k2htqfha5/Screen%20Recording%202023-02-24%20at%2017.48.06.mov?dl=0</a>",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1677261092667
      },
      {
        "content": "Mostly one wouldn&#x27;t have all the layout blocks expanded.... however it makes very little difference to the responsiveness of the ui if they are collapsed or expanded (when actually trying edit fields/content etc the delay in onchange events is appalling).",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1677261203763
      },
      {
        "content": "yeah we can 100% get to the bottom of this",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677261366938
      },
      {
        "content": "we may have removed some utility at one time that would only render fields if a block is 1. on screen and 2. expanded",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677261512403
      },
      {
        "content": "that at one point solved this issue 100% for us",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677261523633
      },
      {
        "content": "i know exactly what you&#x27;re up against here",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677261531167
      },
      {
        "content": "the vid shows that the tactics that we wrote prior to rectify this are no longer working as intended",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677261553679
      },
      {
        "content": "we probably removed them thinkin they were not necessary anymore but in reality it appears that they are still very helpful",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677261564855
      },
      {
        "content": "Yeah, that would be ideal. We don&#x27;t need thousands of dom nodes when a layout block is collapsed.",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1677261589024
      },
      {
        "content": "exactly",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677261620540
      },
      {
        "content": "I would be very grateful if you could add that utility back",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1677261621835
      },
      {
        "content": "yeah we will prioritize this for sure",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677261626885
      },
      {
        "content": "thanks for bringing it up",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677261632177
      },
      {
        "content": "it will solve your condition 100%",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677261637024
      },
      {
        "content": "Thanks for listening and looking forward to the update that fixes this 🙂",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1677261689872
      }
    ],
    "messageCount": 22
  },
  {
    "info": {
      "name": "Local API: How to provide data for all locales?",
      "id": "1075780856825794580",
      "guildId": "967097582721572934",
      "createdAt": 1676556543309
    },
    "messages": [
      {
        "content": "How can I provide data for all locales when using <code>payload.create</code>? <code>title</code> is normally a string.. Do I have to make two API calls (one create and one update)?<br>Or is something like this possible:<br><pre><code class=\"hljs\">payload.create({\n    collection: &#x27;pages&#x27;,\n    data: {\n        title: {en: ..., es: ...},\n    }\n});</code></pre>",
        "fileAttachments": [],
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1676556543309
      },
      {
        "content": "This isn&#x27;t currenlty possible with the existing APIs.<br>For now you have to create in one locale and then perform a separate update for each locale.<br>At some point this will need to be built into Payload.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676952913095
      },
      {
        "content": "thanks! 🙂",
        "fileAttachments": [],
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1677090704475
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "[Possible bug] How to clean a field using the dispatch from useFormFields?",
      "id": "1080189737421246536",
      "guildId": "967097582721572934",
      "createdAt": 1677607702356
    },
    "messages": [
      {
        "content": "Hi there! I am using useFormFields to get the dispatch method for an UPDATE action. Sometimes I need to clean a field, so I dispatchName(undefined). That clears the form correctly, but when I click &#x27;Save Draft&#x27; the old value reappears and is saved in Mongo. Any insights on what&#x27;s going on?<br><br>  const dispatchName = useFormFields(<br>    ([_, dispatch]) =&gt;<br>      (value: string) =&gt;<br>        dispatch({<br>          type: &#x27;UPDATE&#x27;,<br>          path: NamePath,<br>          value: value<br>        })<br>  )<br><br>dispatchName(undefined)",
        "fileAttachments": [],
        "authorID": "435590980838621194",
        "authorName": "Cerize",
        "authorAvatar": null,
        "createdAtDate": 1677607702356
      },
      {
        "content": "P.S: it seems to work better with dispatching &#x27;null&#x27;",
        "fileAttachments": [],
        "authorID": "435590980838621194",
        "authorName": "Cerize",
        "authorAvatar": null,
        "createdAtDate": 1677608070028
      },
      {
        "content": "@jmikrut Do you know if have anyone seen this before?",
        "fileAttachments": [],
        "authorID": "435590980838621194",
        "authorName": "Cerize",
        "authorAvatar": null,
        "createdAtDate": 1677610741531
      },
      {
        "content": "yeah you will need to send <code>null</code> to clear a field",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677616854511
      },
      {
        "content": "thanks @jmikrut  for confirming!",
        "fileAttachments": [],
        "authorID": "435590980838621194",
        "authorName": "Cerize",
        "authorAvatar": null,
        "createdAtDate": 1677620603961
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Conditionally render field options",
      "id": "1072527167122047016",
      "guildId": "967097582721572934",
      "createdAt": 1675780803233
    },
    "messages": [
      {
        "content": "I have a collection of <code>categories</code>. Each category has an array field with <code>subcategories</code>. I have another collection <code>posts</code> with fields of <code>category</code> and <code>subcategory</code>. I have specified that the category field is related to the categories collection. However, how could I conditionally render the options for the subcategory field once a category has been chosen? <code>admin: { condition }</code> only allows me to show or hide the filed but not to render its options based on a payload request that uses the data from the previous field.",
        "fileAttachments": [],
        "authorID": "978401445265178764",
        "authorName": "Theodore",
        "authorAvatar": null,
        "createdAtDate": 1675780803233
      },
      {
        "content": "Have you taken a look at the field conditional logic docs here? <a href=\"https://payloadcms.com/docs/fields/overview#conditional-logic\">https://payloadcms.com/docs/fields/overview#conditional-logic</a>. This should support dot notation which will help for your use-case.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676038881077
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Variable \\\"$postID\\\" of type \\\"String\\\" used in position expecting type \\\"JSON\\\"",
      "id": "1066565603487404085",
      "guildId": "967097582721572934",
      "createdAt": 1674359455702
    },
    "messages": [
      {
        "content": "I created a collection called States and when I try to query it, I get this error<br><br><pre><code class=\"hljs\">query States($postID: String) {\n        States(where: { id: { equals: $postID } }) {\n            docs{\n        id\n        name\n      }\n        }\n    }</code></pre><br><br>I want to pass the  post ID via a variable<br><br><pre><code class=\"hljs\">{\n  &quot;postID&quot;: &quot;22&quot;\n}</code></pre><br><br>in graphql playground I get this error: <br><br><pre><code class=\"hljs\">{\n  &quot;error&quot;: {\n    &quot;errors&quot;: [\n      {\n        &quot;message&quot;: &quot;Variable \\&quot;$postID\\&quot; of type \\&quot;String\\&quot; used in position expecting type \\&quot;JSON\\&quot;.&quot;,\n        &quot;locations&quot;: [\n          {\n            &quot;line&quot;: 1,\n            &quot;column&quot;: 22\n          },\n          {\n            &quot;line&quot;: 2,\n            &quot;column&quot;: 39\n          }\n        ]\n      }\n    ]\n  }\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674359455702
      },
      {
        "content": "Hey @generator101 , what version are you on and have you recently updated? There was a bug related to this that was fixed and will be in the next release.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674396248193
      },
      {
        "content": "Thanks @denolfe , i am on latest version 1.5.9",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674404502009
      },
      {
        "content": "@generator101 does this issue persist on latest? 1.6.4",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675445807461
      },
      {
        "content": "I am not sure, I changes some structures and did not face this issue anymore. Can close this issue. Thanks",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675462951686
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "not assignable to type 'FieldHook<any, any, any>[]",
      "id": "1071384975066275890",
      "guildId": "967097582721572934",
      "createdAt": 1675508483426
    },
    "messages": [
      {
        "content": "I can&#x27;t see what I&#x27;m doing wrong in this definition of a field hook:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">hooks</span>: {\n    <span class=\"hljs-attr\">beforeValidate</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">args</span>) =&gt;</span> {\n        <span class=\"hljs-keyword\">const</span> {value=<span class=\"hljs-string\">&#x27;&#x27;</span>, data} = args;\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">name</span>:<span class=\"hljs-built_in\">string</span> = value;\n\n        <span class=\"hljs-title function_\">getOwnedGames</span>().<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">games</span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">const</span> game = games.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">g</span> =&gt;</span> g.<span class=\"hljs-property\">appid</span> === data.<span class=\"hljs-property\">steamGame</span>)\n            <span class=\"hljs-keyword\">if</span> (game.<span class=\"hljs-property\">length</span> !== <span class=\"hljs-number\">0</span>)\n                name = game[<span class=\"hljs-number\">0</span>].<span class=\"hljs-property\">name</span>\n        });\n\n        <span class=\"hljs-keyword\">return</span> name;\n    }\n}</code></pre><br><br>I&#x27;m getting the error <code>TS2322: Type &#x27;(args: any) =&gt; string&#x27; is not assignable to type &#x27;FieldHook&lt;any, any, any&gt;[]&#x27;.</code>",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675508483426
      },
      {
        "content": "<a href=\"https://tenor.com/view/mib-men-in-black-will-gif-20590125\">https://tenor.com/view/mib-men-in-black-will-gif-20590125</a>",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675512678656
      },
      {
        "content": "Ignore that - realised it takes an array 🤦‍♂️",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675512714312
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "The following field is invalid",
      "id": "1070498252933308456",
      "guildId": "967097582721572934",
      "createdAt": 1675297072395
    },
    "messages": [
      {
        "content": "Hello everyone,<br><br>Trust you are having a great day!<br><br>I have a collection that used to have a field with the name of <code>slug</code> which also had <code>unique</code> set to <code>true</code>. I removed that field &amp; I&#x27;m getting this error: <code>The following field is invalid: slug</code>.<br><br>How can I fix this?<br><br>Thank you!",
        "fileAttachments": [],
        "authorID": "1014197588670558258",
        "authorName": "Luciano",
        "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
        "createdAtDate": 1675297072395
      },
      {
        "content": "Hey @Luciano! You likely  have to manually remove the index from the db (not difficult to do). Let me know if that resolved your issue 👍",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675301052654
      },
      {
        "content": "Hey @Jarrod! Yes, that  resolved my issue. Thank you very much for your time!",
        "fileAttachments": [],
        "authorID": "1014197588670558258",
        "authorName": "Luciano",
        "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
        "createdAtDate": 1675332803326
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Has anyone built a dropzone upload component?",
      "id": "1076548831384191007",
      "guildId": "967097582721572934",
      "createdAt": 1676739642712
    },
    "messages": [
      {
        "content": "The nested modal confuses some users and a simple dropzone would suffice for this usecase.",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1676739642712
      }
    ],
    "messageCount": 0
  },
  {
    "info": {
      "name": "Server url not setting properly on production",
      "id": "1078435396465201223",
      "guildId": "967097582721572934",
      "createdAt": 1677189434878
    },
    "messages": [
      {
        "content": "I have trouble getting the server url right on production. I have set the <code>serverUrl</code> property to <code>process.env.SERVER_URL || http://localhost:4000</code>. That env variable is also set inside the docker container to the production url. But when I open it is stuck on the first user screen having the popup loading in the middle.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078435396465201223/1078435397006278817/image.png",
            "name": "image.png",
            "id": "1078435397006278817",
            "size": 72366,
            "url": "https://cdn.discordapp.com/attachments/1078435396465201223/1078435397006278817/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078435396465201223/1078435397006278817/image.png",
            "height": 1378,
            "width": 1276,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078435396465201223/1078435397320839188/Screenshot_2023-02-23_at_22.50.41.png",
            "name": "Screenshot_2023-02-23_at_22.50.41.png",
            "id": "1078435397320839188",
            "size": 142045,
            "url": "https://cdn.discordapp.com/attachments/1078435396465201223/1078435397320839188/Screenshot_2023-02-23_at_22.50.41.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078435396465201223/1078435397320839188/Screenshot_2023-02-23_at_22.50.41.png",
            "height": 320,
            "width": 2874,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078435396465201223/1078435397580894388/Screenshot_2023-02-23_at_22.50.59.png",
            "name": "Screenshot_2023-02-23_at_22.50.59.png",
            "id": "1078435397580894388",
            "size": 41360,
            "url": "https://cdn.discordapp.com/attachments/1078435396465201223/1078435397580894388/Screenshot_2023-02-23_at_22.50.59.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078435396465201223/1078435397580894388/Screenshot_2023-02-23_at_22.50.59.png",
            "height": 220,
            "width": 1042,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "220897925612568577",
        "authorName": "Rick",
        "authorAvatar": "17e958af3d2b16f99bcb0e3a77050739",
        "createdAtDate": 1677189434878
      },
      {
        "content": "use the variable name <code>process.env.PAYLOAD_PUBLIC_SERVER_URL</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677200066361
      },
      {
        "content": "because if you don&#x27;t prefix your env var with <code>PAYLOAD_PUBLIC_</code>, it won&#x27;t be accessible in your admin panel",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677200092415
      },
      {
        "content": "if you <em><strong>do</strong></em> prefix it like that, we will automatically expose it for you",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677200102782
      },
      {
        "content": "Yup, that fixes it. Thanks!",
        "fileAttachments": [],
        "authorID": "220897925612568577",
        "authorName": "Rick",
        "authorAvatar": "17e958af3d2b16f99bcb0e3a77050739",
        "createdAtDate": 1677265906344
      }
    ],
    "messageCount": 4
  }
]