[
  {
    "title": "Rich Text Field | Toolbar icon library ?",
    "body": "<p dir=\"auto\">Hi !</p>\n<p dir=\"auto\">From which icon library do the icons used in the rich text editor toolbar come from?</p>\n<p dir=\"auto\">Franck</p>",
    "url": "https://github.com/payloadcms/payload/discussions/2122",
    "id": "2122",
    "createdAt": "2023-02-17T15:17:44Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "franckmartin",
      "avatar": "https://avatars.githubusercontent.com/u/988629?u=e922124f5c7d051d5a3e51512c550634102fd3e8&v=4",
      "url": "https://github.com/franckmartin"
    },
    "comments": [
      {
        "author": {
          "name": "JessChowdhury",
          "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
          "url": "https://github.com/JessChowdhury"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/franckmartin/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/franckmartin\">@franckmartin</a> - these are custom icons however you can harvest the SVGs from our codebase <a href=\"https://github.com/payloadcms/payload/tree/master/src/admin/components/icons\">here</a>.</p>",
        "createdAt": "2023-02-20T17:11:58Z",
        "replies": [
          {
            "author": {
              "name": "franckmartin",
              "avatar": "https://avatars.githubusercontent.com/u/988629?u=e922124f5c7d051d5a3e51512c550634102fd3e8&v=4",
              "url": "https://github.com/franckmartin"
            },
            "body": "<p dir=\"auto\">Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/JessChowdhury/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JessChowdhury\">@JessChowdhury</a></p>",
            "createdAt": "2023-02-21T11:27:21Z"
          },
          {
            "author": {
              "name": "cyriaqu",
              "avatar": "https://avatars.githubusercontent.com/u/126408801?v=4",
              "url": "https://github.com/cyriaqu"
            },
            "body": "<p dir=\"auto\">hello</p>",
            "createdAt": "2023-02-26T16:46:06Z"
          },
          {
            "author": {
              "name": "JessChowdhury",
              "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
              "url": "https://github.com/JessChowdhury"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/cyriaqu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cyriaqu\">@cyriaqu</a> did you need help with something?</p>",
            "createdAt": "2023-02-27T14:27:31Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "JessChowdhury",
        "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
        "url": "https://github.com/JessChowdhury"
      },
      "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/franckmartin/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/franckmartin\">@franckmartin</a> - these are custom icons however you can harvest the SVGs from our codebase <a href=\"https://github.com/payloadcms/payload/tree/master/src/admin/components/icons\">here</a>.</p>",
      "createdAt": "2023-02-20T17:11:58Z",
      "chosenAt": "2023-02-21T11:27:00Z",
      "chosenBy": "franckmartin",
      "replies": [
        {
          "author": {
            "name": "franckmartin",
            "avatar": "https://avatars.githubusercontent.com/u/988629?u=e922124f5c7d051d5a3e51512c550634102fd3e8&v=4",
            "url": "https://github.com/franckmartin"
          },
          "body": "<p dir=\"auto\">Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/JessChowdhury/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JessChowdhury\">@JessChowdhury</a></p>",
          "createdAt": "2023-02-21T11:27:21Z"
        },
        {
          "author": {
            "name": "cyriaqu",
            "avatar": "https://avatars.githubusercontent.com/u/126408801?v=4",
            "url": "https://github.com/cyriaqu"
          },
          "body": "<p dir=\"auto\">hello</p>",
          "createdAt": "2023-02-26T16:46:06Z"
        },
        {
          "author": {
            "name": "JessChowdhury",
            "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
            "url": "https://github.com/JessChowdhury"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/cyriaqu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cyriaqu\">@cyriaqu</a> did you need help with something?</p>",
          "createdAt": "2023-02-27T14:27:31Z"
        }
      ]
    }
  },
  {
    "title": "ERROR in ./dist/apps/seo-payload/config.js Module build failed (from ./node_modules/swc-loader/src/index.js): Error: unknown field `presets` at line 1 column 400",
    "body": "<p dir=\"auto\">I got this error after I fixed the <a href=\"https://github.com/payloadcms/payload/discussions/1856\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1856/hovercard\">version conflict issue of graphql</a>. Now, after hacking the <code class=\"notranslate\">require.cache</code> of graphql, I can confirm this is another issue. I'm not very familiar with <code class=\"notranslate\">swc-loader</code>. Can anybody help me take a look?</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ERROR in ./dist/apps/seo-payload/config.js\nModule build failed (from ./node_modules/swc-loader/src/index.js):\nError: unknown field `presets` at line 1 column 400\"><pre class=\"notranslate\"><code class=\"notranslate\">ERROR in ./dist/apps/seo-payload/config.js\nModule build failed (from ./node_modules/swc-loader/src/index.js):\nError: unknown field `presets` at line 1 column 400\n</code></pre></div>\n<p dir=\"auto\">Repro steps:</p>\n<p dir=\"auto\"><a href=\"https://github.com/Stupidism/nx-payload-demo\">https://github.com/Stupidism/nx-payload-demo</a>.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"git clone git@github.com:Stupidism/nx-payload-demo.git\nPUPPETEER_SKIP_DOWNLOAD=1 CYPRESS_INSTALL_BINARY=0 npm install\nnx run seo-payload:serve\"><pre class=\"notranslate\"><code class=\"notranslate\">git clone git@github.com:Stupidism/nx-payload-demo.git\nPUPPETEER_SKIP_DOWNLOAD=1 CYPRESS_INSTALL_BINARY=0 npm install\nnx run seo-payload:serve\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/2145",
    "id": "2145",
    "createdAt": "2023-02-20T16:18:04Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "Stupidism",
      "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
      "url": "https://github.com/Stupidism"
    },
    "comments": [
      {
        "author": {
          "name": "Stupidism",
          "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
          "url": "https://github.com/Stupidism"
        },
        "body": "<p dir=\"auto\">Figured it out myself.<br>\nI overrided the babel loader config before. Now it applies to swc-loader. Removing them fixed for me.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/221743378-a4085d67-bc3b-49ed-ae74-b71d0b6d6ce2.png\"><img width=\"1038\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5801015/221743378-a4085d67-bc3b-49ed-ae74-b71d0b6d6ce2.png\" style=\"max-width: 100%;\"></a></p>",
        "createdAt": "2023-02-28T03:06:57Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "Stupidism",
        "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
        "url": "https://github.com/Stupidism"
      },
      "body": "<p dir=\"auto\">Figured it out myself.<br>\nI overrided the babel loader config before. Now it applies to swc-loader. Removing them fixed for me.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/221743378-a4085d67-bc3b-49ed-ae74-b71d0b6d6ce2.png\"><img width=\"1038\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5801015/221743378-a4085d67-bc3b-49ed-ae74-b71d0b6d6ce2.png\" style=\"max-width: 100%;\"></a></p>",
      "createdAt": "2023-02-28T03:06:57Z",
      "chosenAt": "2023-02-28T03:06:59Z",
      "chosenBy": "Stupidism",
      "replies": null
    }
  },
  {
    "title": "How to use internal links in Rich Text without overloading the client with data?",
    "body": "<p dir=\"auto\">Hello!</p>\n<p dir=\"auto\">I want to use the functionality of internal links to other documents in the project. This is very handy so that I don't lose links when the document slug changes or the URL structure changes, for example. But along with the required fields of the target page (urlSlug, title), I even get the whole Rich-text document on the client ... how can I bypass this to get only the required fields?</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/614922/215115243-9714fd06-d331-4b07-a8b7-56df68eb7a88.png\"><img src=\"https://user-images.githubusercontent.com/614922/215115243-9714fd06-d331-4b07-a8b7-56df68eb7a88.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">how can I exclude text field from getting it? I use GraphQL to get data from server.</p>\n<p dir=\"auto\">Should I filter it on the server? Is it the only solution?</p>\n<p dir=\"auto\">Thank you in advance!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1960",
    "id": "1960",
    "createdAt": "2023-01-27T14:56:33Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "Kikky",
      "avatar": "https://avatars.githubusercontent.com/u/614922?v=4",
      "url": "https://github.com/Kikky"
    },
    "comments": [
      {
        "author": {
          "name": "Kikky",
          "avatar": "https://avatars.githubusercontent.com/u/614922?v=4",
          "url": "https://github.com/Kikky"
        },
        "body": "<p dir=\"auto\">As I understand, I need to sepcify correct value for maxDepth property of the relationship field in link native element? How can I do it? Or I have to override somehow native link element?</p>",
        "createdAt": "2023-01-28T07:24:04Z",
        "replies": [
          {
            "author": {
              "name": "JessChowdhury",
              "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
              "url": "https://github.com/JessChowdhury"
            },
            "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Kikky/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Kikky\">@Kikky</a> - yes you'll want to set a maxDepth on the relationship field which looks like this:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  name: 'link',\n  type: 'relationship',\n  relationTo: ['posts', 'pages'],\n  maxDepth: 1,\n}\"><pre class=\"notranslate\">{\n  name: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>link<span class=\"pl-pds\">'</span></span>,\n  type: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>relationship<span class=\"pl-pds\">'</span></span>,\n  relationTo: [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>posts<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>pages<span class=\"pl-pds\">'</span></span>],\n  maxDepth: 1,\n}</pre></div>\n<p dir=\"auto\">You may want to reduce it further to <code class=\"notranslate\">maxDepth: 0</code>, try updating these and comparing your returned data.</p>",
            "createdAt": "2023-02-01T17:13:50Z"
          },
          {
            "author": {
              "name": "evelynhathaway",
              "avatar": "https://avatars.githubusercontent.com/u/38994283?u=87cba3ad2e2b4ac6fe1b26ca72f0eac8788cb645&v=4",
              "url": "https://github.com/evelynhathaway"
            },
            "body": "<p dir=\"auto\">I don't think this solution is possible. I created <a aria-label=\"Issue #2166\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1595554186\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/2166\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/2166/hovercard\" href=\"https://github.com/payloadcms/payload/issues/2166\">#2166</a> to track the capability that would solve the author's request.</p>",
            "createdAt": "2023-02-22T18:06:53Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "Kikky",
        "avatar": "https://avatars.githubusercontent.com/u/614922?v=4",
        "url": "https://github.com/Kikky"
      },
      "body": "<p dir=\"auto\">As I understand, I need to sepcify correct value for maxDepth property of the relationship field in link native element? How can I do it? Or I have to override somehow native link element?</p>",
      "createdAt": "2023-01-28T07:24:04Z",
      "chosenAt": "2023-02-09T16:31:46Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "JessChowdhury",
            "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
            "url": "https://github.com/JessChowdhury"
          },
          "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Kikky/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Kikky\">@Kikky</a> - yes you'll want to set a maxDepth on the relationship field which looks like this:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  name: 'link',\n  type: 'relationship',\n  relationTo: ['posts', 'pages'],\n  maxDepth: 1,\n}\"><pre class=\"notranslate\">{\n  name: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>link<span class=\"pl-pds\">'</span></span>,\n  type: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>relationship<span class=\"pl-pds\">'</span></span>,\n  relationTo: [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>posts<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>pages<span class=\"pl-pds\">'</span></span>],\n  maxDepth: 1,\n}</pre></div>\n<p dir=\"auto\">You may want to reduce it further to <code class=\"notranslate\">maxDepth: 0</code>, try updating these and comparing your returned data.</p>",
          "createdAt": "2023-02-01T17:13:50Z"
        },
        {
          "author": {
            "name": "evelynhathaway",
            "avatar": "https://avatars.githubusercontent.com/u/38994283?u=87cba3ad2e2b4ac6fe1b26ca72f0eac8788cb645&v=4",
            "url": "https://github.com/evelynhathaway"
          },
          "body": "<p dir=\"auto\">I don't think this solution is possible. I created <a aria-label=\"Issue #2166\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1595554186\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/2166\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/2166/hovercard\" href=\"https://github.com/payloadcms/payload/issues/2166\">#2166</a> to track the capability that would solve the author's request.</p>",
          "createdAt": "2023-02-22T18:06:53Z"
        }
      ]
    }
  },
  {
    "title": "Can't connect Media Upload to another Collection",
    "body": "<p dir=\"auto\">I have two collections. One is Product and another one is Media. As the name suggests, I want to link the Media collection with the Product collection through a relationship field in the Product collection. Even though it runs perfectly and appears on the UI but whenever I want to create a new document of Products collection I am getting an error saying - <code class=\"notranslate\">The following field value is invalid: filename</code>. I am using <code class=\"notranslate\">@payloadcms/plugin-cloud-storage/azure</code> for uploading media on azure which is working as expected.</p>\n<p dir=\"auto\">Product Collection:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const Products = {\n    slug: 'products',\n    admin: {\n      useAsTitle: 'name',\n    },\n    fields: [\n      {\n        name: 'name',\n        type: 'text',\n      },\n      {\n        name: 'price',\n        type: 'number',\n      },\n      {\n          name: 'image',\n          type: 'relationship',\n          relationTo: 'media',\n      }\n    ],\n  }\n  \n  export default Products;\"><pre class=\"notranslate\"><code class=\"notranslate\">const Products = {\n    slug: 'products',\n    admin: {\n      useAsTitle: 'name',\n    },\n    fields: [\n      {\n        name: 'name',\n        type: 'text',\n      },\n      {\n        name: 'price',\n        type: 'number',\n      },\n      {\n          name: 'image',\n          type: 'relationship',\n          relationTo: 'media',\n      }\n    ],\n  }\n  \n  export default Products;\n</code></pre></div>\n<p dir=\"auto\">Media collection:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const Media = {\n    slug: 'media',\n    upload: true,\n    fields: [\n        {\n            name: 'image',\n            type: 'upload',\n            relationTo: 'products',\n        }\n    ],\n}\n\nexport default Media;\"><pre class=\"notranslate\"><code class=\"notranslate\">const Media = {\n    slug: 'media',\n    upload: true,\n    fields: [\n        {\n            name: 'image',\n            type: 'upload',\n            relationTo: 'products',\n        }\n    ],\n}\n\nexport default Media;\n</code></pre></div>\n<p dir=\"auto\">This is my buildConfig -</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"export default buildConfig({\n  serverURL: 'http://localhost:3000',\n  admin: {\n    user: Users.slug,\n  },\n  collections: [\n    Users,\n    Products,\n    Media\n  ],\n  plugins: [\n    cloudStorage({\n      collections: {\n        media: {\n          adapter: azureAdapter,\n          disablePayloadAccessControl: true\n        },\n      },\n    })\n  ],\n});\"><pre class=\"notranslate\"><code class=\"notranslate\">export default buildConfig({\n  serverURL: 'http://localhost:3000',\n  admin: {\n    user: Users.slug,\n  },\n  collections: [\n    Users,\n    Products,\n    Media\n  ],\n  plugins: [\n    cloudStorage({\n      collections: {\n        media: {\n          adapter: azureAdapter,\n          disablePayloadAccessControl: true\n        },\n      },\n    })\n  ],\n});\n</code></pre></div>\n<p dir=\"auto\">The issue:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/24480497/185422663-c293c39c-a3ff-4746-9fb6-be906619015b.png\"><img src=\"https://user-images.githubusercontent.com/24480497/185422663-c293c39c-a3ff-4746-9fb6-be906619015b.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Any help would be appreciated!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/962",
    "id": "962",
    "createdAt": "2022-08-18T14:38:48Z",
    "upvotes": 2,
    "commentTotal": 3,
    "author": {
      "name": "afifaniks",
      "avatar": "https://avatars.githubusercontent.com/u/24480497?u=d1b0d406637cfd2b30d6edb88f22034bb47cf6a7&v=4",
      "url": "https://github.com/afifaniks"
    },
    "comments": [
      {
        "author": {
          "name": "sowmyapeta",
          "avatar": "https://avatars.githubusercontent.com/u/11541541?v=4",
          "url": "https://github.com/sowmyapeta"
        },
        "body": "<p dir=\"auto\">Image type in Products should be 'upload' and not 'relationship'<br>\n{<br>\nname: 'image',<br>\ntype: 'upload',<br>\nrelationTo: 'media',<br>\n},</p>\n<p dir=\"auto\">Fields in media should be any fields which you want to describe about the image uploaded.<br>\nfields: [<br>\n{<br>\nname: 'alt',<br>\nlabel: 'Alt Text',<br>\ntype: 'text',<br>\n},<br>\n],</p>",
        "createdAt": "2022-08-18T15:19:19Z",
        "replies": [
          {
            "author": {
              "name": "afifaniks",
              "avatar": "https://avatars.githubusercontent.com/u/24480497?u=d1b0d406637cfd2b30d6edb88f22034bb47cf6a7&v=4",
              "url": "https://github.com/afifaniks"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/sowmyapeta/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sowmyapeta\">@sowmyapeta</a> Thank you! However, even with that, I'm still getting the same error!</p>",
            "createdAt": "2022-08-18T15:37:45Z"
          }
        ]
      },
      {
        "author": {
          "name": "afifaniks",
          "avatar": "https://avatars.githubusercontent.com/u/24480497?u=d1b0d406637cfd2b30d6edb88f22034bb47cf6a7&v=4",
          "url": "https://github.com/afifaniks"
        },
        "body": "<p dir=\"auto\">It looks like, the issue was due to my MongoDB cluster. I deleted the collection from my db cluster and the problem was fixed!</p>",
        "createdAt": "2022-08-18T17:06:09Z",
        "replies": null
      },
      {
        "author": {
          "name": "marpstar",
          "avatar": "https://avatars.githubusercontent.com/u/1839701?u=f24a97131bb9852bf676530c12abf6d6c7a7166d&v=4",
          "url": "https://github.com/marpstar"
        },
        "body": "<p dir=\"auto\">I just wanted to offer a solution to this error message. I encountered this error message when switching from   using</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n  name: &quot;media&quot;,\n  type: &quot;relationship&quot;,\n  relationTo: &quot;media&quot;,\n  hasMany: true,\n},\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n  name: \"media\",\n  type: \"relationship\",\n  relationTo: \"media\",\n  hasMany: true,\n},\n</code></pre></div>\n<p dir=\"auto\">to</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n  name: &quot;images&quot;,\n  type: &quot;array&quot;,\n  fields: [\n    {\n      name: &quot;image&quot;,\n      type: &quot;upload&quot;,\n      relationTo: &quot;media&quot;\n    },\n  ],\n},\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n  name: \"images\",\n  type: \"array\",\n  fields: [\n    {\n      name: \"image\",\n      type: \"upload\",\n      relationTo: \"media\"\n    },\n  ],\n},\n</code></pre></div>\n<p dir=\"auto\">The first of which created an index on my collection for the filename of the <code class=\"notranslate\">media</code> field. I had to use Mongo Compass to find that index and drop it. Once I did, everything started working fine again.</p>",
        "createdAt": "2023-02-22T16:13:34Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "afifaniks",
        "avatar": "https://avatars.githubusercontent.com/u/24480497?u=d1b0d406637cfd2b30d6edb88f22034bb47cf6a7&v=4",
        "url": "https://github.com/afifaniks"
      },
      "body": "<p dir=\"auto\">It looks like, the issue was due to my MongoDB cluster. I deleted the collection from my db cluster and the problem was fixed!</p>",
      "createdAt": "2022-08-18T17:06:09Z",
      "chosenAt": "2022-08-18T17:06:42Z",
      "chosenBy": "afifaniks",
      "replies": null
    }
  },
  {
    "title": "how to center a title (h1,h2,h3)",
    "body": "<p dir=\"auto\">just like:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16400882/192406612-e68e3ae6-ebca-4cd2-b6dc-716e6ce4ba70.png\"><img width=\"1279\" alt=\"image\" src=\"https://user-images.githubusercontent.com/16400882/192406612-e68e3ae6-ebca-4cd2-b6dc-716e6ce4ba70.png\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1178",
    "id": "1178",
    "createdAt": "2022-09-27T00:54:57Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "zhounewz",
      "avatar": "https://avatars.githubusercontent.com/u/16400882?u=0b9839b373d35997a96ca00f71550153d6c8d945&v=4",
      "url": "https://github.com/zhounewz"
    },
    "comments": [
      {
        "author": {
          "name": "JessChowdhury",
          "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
          "url": "https://github.com/JessChowdhury"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zhounewz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhounewz\">@zhounewz</a> - this feature is on our roadmap <a href=\"https://github.com/payloadcms/payload/discussions/1218\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1218/hovercard\">here</a>, for now you can achieve this by adding a custom element. Read the comments <a href=\"https://github.com/payloadcms/payload/discussions/1218\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1218/hovercard\">here for more info</a>.</p>",
        "createdAt": "2023-02-20T17:16:24Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "JessChowdhury",
        "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
        "url": "https://github.com/JessChowdhury"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zhounewz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhounewz\">@zhounewz</a> - this feature is on our roadmap <a href=\"https://github.com/payloadcms/payload/discussions/1218\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1218/hovercard\">here</a>, for now you can achieve this by adding a custom element. Read the comments <a href=\"https://github.com/payloadcms/payload/discussions/1218\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1218/hovercard\">here for more info</a>.</p>",
      "createdAt": "2023-02-20T17:16:24Z",
      "chosenAt": "2023-02-27T20:24:35Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "How to best handle transpiling?",
    "body": "<p dir=\"auto\">I've had a lot of issues with transpiling while integrating Payload into a Turborepo.</p>\n<p dir=\"auto\">Take a look at <a href=\"https://github.com/vercel/turbo/tree/main/examples/with-tailwind\">this repo</a>.</p>\n<ol dir=\"auto\">\n<li>Use npx create-payload-app to add a new app labeled \"cms\".</li>\n<li>Open any Payload file and import a button from \"ui\".</li>\n<li>Get all sorts of errors about import statements and package subpaths.</li>\n</ol>\n<p dir=\"auto\">I've read the recent <a href=\"https://github.com/payloadcms/payload/pull/1847\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/1847/hovercard\">changelog</a>, and for a moment I thought that I fixed the problem...until I didn't.</p>\n<p dir=\"auto\">Honestly, I'm blindly editing tsconfig files hoping for some sort of cjs output that the configuration gods will bless. I don't really understand what the output should be or how I should arrive there.</p>\n<p dir=\"auto\">How can external React libaries be properly handled in Payload?</p>\n<p dir=\"auto\">Super appreciated!</p>\n<p dir=\"auto\">Edit: Noticed Tsup doesn't support es5 as a target...Maybe that's what I'm running into? Does Payload need es5?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/2106",
    "id": "2106",
    "createdAt": "2023-02-15T20:19:01Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "samtietjen",
      "avatar": "https://avatars.githubusercontent.com/u/4971280?u=9ff035a29d294e47b3109f00e6a9eec46f32fa8c&v=4",
      "url": "https://github.com/samtietjen"
    },
    "comments": [
      {
        "author": {
          "name": "samtietjen",
          "avatar": "https://avatars.githubusercontent.com/u/4971280?u=9ff035a29d294e47b3109f00e6a9eec46f32fa8c&v=4",
          "url": "https://github.com/samtietjen"
        },
        "body": "<p dir=\"auto\">I think I've got it...Tsup won't compile to es5. Looks like Payload wants es5 and cjs, so I went for rollup instead. Thoughhh...I've been here before. Hopefully this is it though!</p>",
        "createdAt": "2023-02-16T04:18:18Z",
        "replies": [
          {
            "author": {
              "name": "rrums123",
              "avatar": "https://avatars.githubusercontent.com/u/100153954?u=f46ed9e6da40c742bbcf26eacb8a1072cc9fd911&v=4",
              "url": "https://github.com/rrums123"
            },
            "body": "<p dir=\"auto\">Hey, can you please show how to transpile the package to cjs using rollup? I want to do the same but still can't. Thank you.</p>",
            "createdAt": "2023-02-20T09:40:06Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "samtietjen",
        "avatar": "https://avatars.githubusercontent.com/u/4971280?u=9ff035a29d294e47b3109f00e6a9eec46f32fa8c&v=4",
        "url": "https://github.com/samtietjen"
      },
      "body": "<p dir=\"auto\">I think I've got it...Tsup won't compile to es5. Looks like Payload wants es5 and cjs, so I went for rollup instead. Thoughhh...I've been here before. Hopefully this is it though!</p>",
      "createdAt": "2023-02-16T04:18:18Z",
      "chosenAt": "2023-02-17T18:22:33Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "rrums123",
            "avatar": "https://avatars.githubusercontent.com/u/100153954?u=f46ed9e6da40c742bbcf26eacb8a1072cc9fd911&v=4",
            "url": "https://github.com/rrums123"
          },
          "body": "<p dir=\"auto\">Hey, can you please show how to transpile the package to cjs using rollup? I want to do the same but still can't. Thank you.</p>",
          "createdAt": "2023-02-20T09:40:06Z"
        }
      ]
    }
  },
  {
    "title": "How to load server-side libs (like `fs` or `os`) in collections only in case when code runs on the server?",
    "body": "<p dir=\"auto\">Hello everyone.</p>\n<p dir=\"auto\"><strong>What I want to do?</strong></p>\n<p dir=\"auto\">I have <code class=\"notranslate\">users</code> collection that has hook <code class=\"notranslate\">beforeOperation</code> that should check incoming <code class=\"notranslate\">user</code> data for profile <code class=\"notranslate\">picture</code> URL, download it by URL into temp location and create new record in collection <code class=\"notranslate\">avatar</code> with attached temp <code class=\"notranslate\">file</code>, finally attach record <code class=\"notranslate\">id</code> as <code class=\"notranslate\">avatar</code>.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"beforeOperation: [\n    async ({ args, operation }) =&gt; {\n      const { req, data } = args;\n\n      if (operation === &quot;create&quot;) {\n        try {\n          // Here I tried to cheat and load lib via dynamic imports. It doesn't work.\n          // Also I tried ESM imports and require(). The same story.\n          const { downloadFile } = await import(&quot;../src/utils/downloadFile&quot;);\n          const { default: os } = await import(&quot;os&quot;);\n\n          const filePath = `${os.tmpdir()}/randomfile`;\n\n          if (data.picture) {\n            await downloadFile(data.picture, filePath);\n\n            const avatar = await req.payload.create({\n              collection: &quot;avatars&quot;,\n              filePath,\n            });\n\n            return {\n              ...args,\n              data: {\n                ...data,\n                avatar: avatar.id,\n              },\n            };\n          }\n        } catch (error) {\n          console.log({ error });\n        }\n\n        return args;\n      }\n    },\n  ],\n},\"><pre class=\"notranslate\"><span class=\"pl-s1\">beforeOperation</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> args<span class=\"pl-kos\">,</span> operation <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> req<span class=\"pl-kos\">,</span> data <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">;</span>\n\n      <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">\"create\"</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c\">// Here I tried to cheat and load lib via dynamic imports. It doesn't work.</span>\n          <span class=\"pl-c\">// Also I tried ESM imports and require(). The same story.</span>\n          <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> downloadFile <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-k\">import</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"../src/utils/downloadFile\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">default</span>: <span class=\"pl-s1\">os</span> <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-k\">import</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"os\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n          <span class=\"pl-k\">const</span> <span class=\"pl-s1\">filePath</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">os</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">tmpdir</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span></span>/randomfile`</span><span class=\"pl-kos\">;</span>\n\n          <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">picture</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-k\">await</span> <span class=\"pl-en\">downloadFile</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">picture</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">filePath</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n            <span class=\"pl-k\">const</span> <span class=\"pl-s1\">avatar</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n              <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">\"avatars\"</span><span class=\"pl-kos\">,</span>\n              filePath<span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n            <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n              ...<span class=\"pl-s1\">args</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n                ...<span class=\"pl-s1\">data</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">avatar</span>: <span class=\"pl-s1\">avatar</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">error</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> error <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\"><strong>Where is the problem?</strong></p>\n<p dir=\"auto\">When I add this code to collection <code class=\"notranslate\">users</code> and try to open Admin UI - I see following error:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/90701/219454122-db75de75-122a-44e5-a4ce-ae00e513ea93.png\"><img width=\"763\" alt=\"Screenshot 2023-02-16 at 20 22 51\" src=\"https://user-images.githubusercontent.com/90701/219454122-db75de75-122a-44e5-a4ce-ae00e513ea93.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Error as text:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ERROR in ./collections/Users.ts 174:36-48\nModule not found: Error: Can't resolve 'os' in '/home/node/app/collections'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { &quot;os&quot;: require.resolve(&quot;os-browserify/browser&quot;) }'\n\t- install 'os-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { &quot;os&quot;: false }\nERROR in ./src/utils/downloadFile.ts 126:0-39\nModule not found: Error: Can't resolve 'fs' in '/home/node/app/src/utils'\"><pre class=\"notranslate\"><code class=\"notranslate\">ERROR in ./collections/Users.ts 174:36-48\nModule not found: Error: Can't resolve 'os' in '/home/node/app/collections'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"os\": require.resolve(\"os-browserify/browser\") }'\n\t- install 'os-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"os\": false }\nERROR in ./src/utils/downloadFile.ts 126:0-39\nModule not found: Error: Can't resolve 'fs' in '/home/node/app/src/utils'\n</code></pre></div>\n<p dir=\"auto\">I'm new with Pyload CMS, so I do not understand properly how it works. But I have assumption that Payload code shares between server-side and client-side, so if I add server-specific lib to collections it cause a problem on client-side.</p>\n<p dir=\"auto\"><strong>Question:</strong> How to load server-side libs (like <code class=\"notranslate\">fs</code> or <code class=\"notranslate\">os</code>) in collections only in case when code runs on the server?</p>\n<p dir=\"auto\">Thank you!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/2111",
    "id": "2111",
    "createdAt": "2023-02-16T18:27:58Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "jmas",
      "avatar": "https://avatars.githubusercontent.com/u/90701?v=4",
      "url": "https://github.com/jmas"
    },
    "comments": [
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmas/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmas\">@jmas</a> you're exactly right, you just need to alias your server-only code. Here are the docs that describe this in detail: <a href=\"https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules\" rel=\"nofollow\">https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules</a> and here's a real-world example of this: <a href=\"https://github.com/payloadcms/template-ecommerce/blob/main/src/payload.config.ts#L35\">https://github.com/payloadcms/template-ecommerce/blob/main/src/payload.config.ts#L35</a>. Would this work for you?</p>",
        "createdAt": "2023-02-16T18:36:42Z",
        "replies": [
          {
            "author": {
              "name": "jacobsfletch",
              "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
              "url": "https://github.com/jacobsfletch"
            },
            "body": "<p dir=\"auto\">So in your case, like this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\nexport default buildConfig({\n  admin: {\n    webpack: config =&gt; ({\n      ...config,\n      resolve: {\n        ...config.resolve,\n        alias: {\n          os: 'YOUR_MOCK_MODULE_PATH',\n          // OR extract your `beforeOperation` function into it's own file and alias THAT\n        }\n      }\n    })\n  }\n})\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-en\">buildConfig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">webpack</span>: <span class=\"pl-s1\">config</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      ...<span class=\"pl-s1\">config</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">resolve</span>: <span class=\"pl-kos\">{</span>\n        ...<span class=\"pl-s1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolve</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">alias</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">os</span>: <span class=\"pl-s\">'YOUR_MOCK_MODULE_PATH'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c\">// OR extract your `beforeOperation` function into it's own file and alias THAT</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div>",
            "createdAt": "2023-02-16T18:40:09Z"
          },
          {
            "author": {
              "name": "jmas",
              "avatar": "https://avatars.githubusercontent.com/u/90701?v=4",
              "url": "https://github.com/jmas"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a> Thank you for operative answer! I soved the problem, also I google better and found that plugin <a href=\"https://www.npmjs.com/package/payload-plugin-resolve-alias\" rel=\"nofollow\">https://www.npmjs.com/package/payload-plugin-resolve-alias</a> that looks like do the same but in more convenient way.</p>",
            "createdAt": "2023-02-16T19:03:21Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmas/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmas\">@jmas</a> you're exactly right, you just need to alias your server-only code. Here are the docs that describe this in detail: <a href=\"https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules\" rel=\"nofollow\">https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules</a> and here's a real-world example of this: <a href=\"https://github.com/payloadcms/template-ecommerce/blob/main/src/payload.config.ts#L35\">https://github.com/payloadcms/template-ecommerce/blob/main/src/payload.config.ts#L35</a>. Would this work for you?</p>",
      "createdAt": "2023-02-16T18:36:42Z",
      "chosenAt": "2023-02-16T19:03:24Z",
      "chosenBy": "jmas",
      "replies": [
        {
          "author": {
            "name": "jacobsfletch",
            "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
            "url": "https://github.com/jacobsfletch"
          },
          "body": "<p dir=\"auto\">So in your case, like this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\nexport default buildConfig({\n  admin: {\n    webpack: config =&gt; ({\n      ...config,\n      resolve: {\n        ...config.resolve,\n        alias: {\n          os: 'YOUR_MOCK_MODULE_PATH',\n          // OR extract your `beforeOperation` function into it's own file and alias THAT\n        }\n      }\n    })\n  }\n})\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-en\">buildConfig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">webpack</span>: <span class=\"pl-s1\">config</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      ...<span class=\"pl-s1\">config</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">resolve</span>: <span class=\"pl-kos\">{</span>\n        ...<span class=\"pl-s1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolve</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">alias</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">os</span>: <span class=\"pl-s\">'YOUR_MOCK_MODULE_PATH'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c\">// OR extract your `beforeOperation` function into it's own file and alias THAT</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div>",
          "createdAt": "2023-02-16T18:40:09Z"
        },
        {
          "author": {
            "name": "jmas",
            "avatar": "https://avatars.githubusercontent.com/u/90701?v=4",
            "url": "https://github.com/jmas"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a> Thank you for operative answer! I soved the problem, also I google better and found that plugin <a href=\"https://www.npmjs.com/package/payload-plugin-resolve-alias\" rel=\"nofollow\">https://www.npmjs.com/package/payload-plugin-resolve-alias</a> that looks like do the same but in more convenient way.</p>",
          "createdAt": "2023-02-16T19:03:21Z"
        }
      ]
    }
  },
  {
    "title": "richText field link to internal document - how to set browsable collections?",
    "body": "<p dir=\"auto\">Hi,<br>\nhow can I control which collections are available to be browsed when users want to add an internal link in a richText field?<br>\nSo something like</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n\ttype: 'relationship',\n\tname: 'internal',\n\tlabel: 'Document to link to',\n\trelationTo: ['pages', 'posts'],\n}\"><pre class=\"notranslate\"><span class=\"pl-kos\">{</span>\n\t<span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'internal'</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Document to link to'</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-c1\">relationTo</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'posts'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">... for the richText field. Sorry, maybe I'm missing something but I couldn't find anything in the docs nor in this forum.</p>\n<p dir=\"auto\">As you can see here in the first screenshot I can't select anything from the Posts collection.<br>\nBut as shown in the second screenshot I could add items to the Posts collection.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/79059627/219347236-afdfa224-ed5b-4690-b8fd-ec22ad6d21f4.png\"><img src=\"https://user-images.githubusercontent.com/79059627/219347236-afdfa224-ed5b-4690-b8fd-ec22ad6d21f4.png\" alt=\"Screenshot at 2023-02-16 11-59-11\" style=\"max-width: 100%;\"></a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/79059627/219347272-a81723da-b4ab-4dc5-98c5-6aebf407a37d.png\"><img src=\"https://user-images.githubusercontent.com/79059627/219347272-a81723da-b4ab-4dc5-98c5-6aebf407a37d.png\" alt=\"Screenshot at 2023-02-16 11-59-32\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/2095",
    "id": "2095",
    "createdAt": "2023-02-14T22:24:54Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "unonweb",
      "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
      "url": "https://github.com/unonweb"
    },
    "comments": [
      {
        "author": {
          "name": "unonweb",
          "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
          "url": "https://github.com/unonweb"
        },
        "body": "<p dir=\"auto\">Alright, I've got it: It has to do with the <strong>order of the collections</strong> in <em>payload.config.ts</em></p>\n<p dir=\"auto\">In the first example from within the pages collection richText fields can only link to Media, MediaCategories and Pages<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/79059627/219350232-d3955151-ffb4-4da3-bf30-e5196d194cb1.png\"><img src=\"https://user-images.githubusercontent.com/79059627/219350232-d3955151-ffb4-4da3-bf30-e5196d194cb1.png\" alt=\"Screenshot at 2023-02-16 12-13-42\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">In this example from within the pages collection richText fields can link to Media, MediaCategories, Pages, Posts and PostsCategories<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/79059627/219350239-57d205ce-e0bc-4e28-8fdf-2b096803fb10.png\"><img src=\"https://user-images.githubusercontent.com/79059627/219350239-57d205ce-e0bc-4e28-8fdf-2b096803fb10.png\" alt=\"Screenshot at 2023-02-16 12-14-08\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">If this behaviour is intended I think it should be described in the docs.</p>",
        "createdAt": "2023-02-16T11:17:33Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "unonweb",
        "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
        "url": "https://github.com/unonweb"
      },
      "body": "<p dir=\"auto\">Alright, I've got it: It has to do with the <strong>order of the collections</strong> in <em>payload.config.ts</em></p>\n<p dir=\"auto\">In the first example from within the pages collection richText fields can only link to Media, MediaCategories and Pages<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/79059627/219350232-d3955151-ffb4-4da3-bf30-e5196d194cb1.png\"><img src=\"https://user-images.githubusercontent.com/79059627/219350232-d3955151-ffb4-4da3-bf30-e5196d194cb1.png\" alt=\"Screenshot at 2023-02-16 12-13-42\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">In this example from within the pages collection richText fields can link to Media, MediaCategories, Pages, Posts and PostsCategories<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/79059627/219350239-57d205ce-e0bc-4e28-8fdf-2b096803fb10.png\"><img src=\"https://user-images.githubusercontent.com/79059627/219350239-57d205ce-e0bc-4e28-8fdf-2b096803fb10.png\" alt=\"Screenshot at 2023-02-16 12-14-08\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">If this behaviour is intended I think it should be described in the docs.</p>",
      "createdAt": "2023-02-16T11:17:33Z",
      "chosenAt": "2023-02-16T11:17:47Z",
      "chosenBy": "unonweb",
      "replies": null
    }
  },
  {
    "title": "How to resave all posts programmatically (migrate data)",
    "body": "<ul dir=\"auto\">\n<li>How do I resave all posts programmatically?</li>\n<li>How do I migrate docs after a schema change?</li>\n</ul>\n<p dir=\"auto\">These are common questions and fortunately pretty easy to solve using a migration script. All we have to do is spin up Payload, find all records within a given  collection, and then immediately update each. If needed, we can also modify the data before it gets updated:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const payload = require('payload');\n\nrequire('dotenv').config();\n\npayload.init({\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGO_URL,\n  local: true,\n});\n\nconst resaveCollection = async () =&gt; {\n  const args = process.argv.slice(2); // nodejs command line args are an array that begin at the third item\n  const [\n    collectionSlug,\n    overrides\n  ] = args || [];\n\n  const results = await payload.find({\n    collection: collectionSlug,\n    depth: 0,\n    limit: 700,\n  });\n\n  try {\n    await Promise.all(results.docs.map(async (result) =&gt; {\n      const { id } = result;\n\n      if (collectionSlug) {\n        try {\n          await payload.update({\n            collection: collectionSlug,\n            id,\n            data: {\n              ...overrides || {}\n            },\n          })\n\n          console.log(`Document in '${collectionSlug}' with id '${id}' updated successfully`);\n        } catch (e) {\n          payload.logger.error(`Document in '${collectionSlug}' with id '${id}' failed to update`);\n          payload.logger.error(e);\n        }\n      } else {\n        console.log(`No document found in '${collectionSlug}' with id '${id}'`);\n      }\n    }));\n  } catch (e) {\n    payload.logger.error('Something went wrong.');\n    payload.logger.error(e);\n  }\n\n  console.log('Complete');\n  process.exit(0);\n};\n\nresaveCollection();\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'payload'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dotenv'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">secret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_SECRET</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MONGO_URL</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">local</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">resaveCollection</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">args</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">argv</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">slice</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// nodejs command line args are an array that begin at the third item</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">[</span>\n    <span class=\"pl-s1\">collectionSlug</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">overrides</span>\n  <span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">args</span> <span class=\"pl-c1\">||</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">results</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">collection</span>: <span class=\"pl-s1\">collectionSlug</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">depth</span>: <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">limit</span>: <span class=\"pl-c1\">700</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-v\">Promise</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">all</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">results</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">docs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">result</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> id <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">result</span><span class=\"pl-kos\">;</span>\n\n      <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">collectionSlug</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">update</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">collection</span>: <span class=\"pl-s1\">collectionSlug</span><span class=\"pl-kos\">,</span>\n            id<span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n              ...<span class=\"pl-s1\">overrides</span> <span class=\"pl-c1\">||</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n          <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Document in '<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">collectionSlug</span><span class=\"pl-kos\">}</span></span>' with id '<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">id</span><span class=\"pl-kos\">}</span></span>' updated successfully`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Document in '<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">collectionSlug</span><span class=\"pl-kos\">}</span></span>' with id '<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">id</span><span class=\"pl-kos\">}</span></span>' failed to update`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`No document found in '<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">collectionSlug</span><span class=\"pl-kos\">}</span></span>' with id '<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">id</span><span class=\"pl-kos\">}</span></span>'`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Something went wrong.'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Complete'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exit</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">resaveCollection</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">To run it, send the slug of the collection along with optional overrides for node to execute:</p>\n<p dir=\"auto\"><code class=\"notranslate\">node scripts/resaveCollection pages</code></p>\n<p dir=\"auto\">^ Your specific file path may different. Update this based on your specifications. Also note that Payload may need to know the location of your config, see <a href=\"https://payloadcms.com/docs/configuration/overview#customizing-and-overriding-the-config-location\" rel=\"nofollow\">this page</a> for more detail.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/434",
    "id": "434",
    "createdAt": "2022-02-08T23:34:41Z",
    "upvotes": 5,
    "commentTotal": 1,
    "author": {
      "name": "jacobsfletch",
      "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
      "url": "https://github.com/jacobsfletch"
    },
    "comments": [
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\">If you're here needing to regenerate media after changing image sizes, check out this discussion: <a aria-label=\"Discussion #1834\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4740607\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1834\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1834/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/1834\">#1834</a></p>",
        "createdAt": "2023-01-09T22:35:25Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\">If you're here needing to regenerate media after changing image sizes, check out this discussion: <a aria-label=\"Discussion #1834\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4740607\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1834\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1834/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/1834\">#1834</a></p>",
      "createdAt": "2023-01-09T22:35:25Z",
      "chosenAt": "2023-02-09T16:19:42Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "How to use .env inside fork tests?",
    "body": "<p dir=\"auto\">I'm trying to contribute to the Payload repo by fixing an issue I reported. I already forked the project but I don't have MongoDB installed on my local machine, I use a remote MongoDB instance for my local development. So when I run <code class=\"notranslate\">yarn dev admin</code> I get an error because it is trying to connect to a local instance of MongoDB.</p>\n<p dir=\"auto\">Is there a way to use a <code class=\"notranslate\">.env</code> file to set the MONGO_URL? I see that the <code class=\"notranslate\">dev.ts</code> does use the <code class=\"notranslate\">process.env.MONGO_URL</code> environment variable but it doesn't load the variables inside my <code class=\"notranslate\">.env</code>, so every time I want to run a test, I have to write the full command:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"MONGO_URL=&quot;my_instance_url&quot; yarn dev admin\"><pre class=\"notranslate\"><code class=\"notranslate\">MONGO_URL=\"my_instance_url\" yarn dev admin\n</code></pre></div>\n<p dir=\"auto\">I know is not a big deal, but I guess it's more convenient to use a <code class=\"notranslate\">.env</code> file for that.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/2055",
    "id": "2055",
    "createdAt": "2023-02-10T15:02:49Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "ChrisGV04",
      "avatar": "https://avatars.githubusercontent.com/u/47041342?u=76f483c754eb2506445bb063e3c07c3b5935d384&v=4",
      "url": "https://github.com/ChrisGV04"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Currently, this is not possible with how we have it configured. In my mind, this would introduce variability into the tests unnecessarily.</p>\n<p dir=\"auto\">We do have the ability to use a MongoDB memory server if you were to pass <code class=\"notranslate\">NODE_ENV=test</code> as the prefix. This obviously doesn't resolve your ask for loading an .env file, though.</p>",
        "createdAt": "2023-02-10T20:43:09Z",
        "replies": [
          {
            "author": {
              "name": "ChrisGV04",
              "avatar": "https://avatars.githubusercontent.com/u/47041342?u=76f483c754eb2506445bb063e3c07c3b5935d384&v=4",
              "url": "https://github.com/ChrisGV04"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/denolfe/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/denolfe\">@denolfe</a> Understood! Thank you very much.</p>\n<p dir=\"auto\">I found a way to do it by setting the variable from the start command, so no big deal. It was good enough for my current setup</p>",
            "createdAt": "2023-02-10T21:24:04Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">Currently, this is not possible with how we have it configured. In my mind, this would introduce variability into the tests unnecessarily.</p>\n<p dir=\"auto\">We do have the ability to use a MongoDB memory server if you were to pass <code class=\"notranslate\">NODE_ENV=test</code> as the prefix. This obviously doesn't resolve your ask for loading an .env file, though.</p>",
      "createdAt": "2023-02-10T20:43:09Z",
      "chosenAt": "2023-02-10T21:24:07Z",
      "chosenBy": "ChrisGV04",
      "replies": [
        {
          "author": {
            "name": "ChrisGV04",
            "avatar": "https://avatars.githubusercontent.com/u/47041342?u=76f483c754eb2506445bb063e3c07c3b5935d384&v=4",
            "url": "https://github.com/ChrisGV04"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/denolfe/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/denolfe\">@denolfe</a> Understood! Thank you very much.</p>\n<p dir=\"auto\">I found a way to do it by setting the variable from the start command, so no big deal. It was good enough for my current setup</p>",
          "createdAt": "2023-02-10T21:24:04Z"
        }
      ]
    }
  },
  {
    "title": "payload cms scheduler",
    "body": "<p dir=\"auto\">I would ask if there is a standard approach for automatic, reoccurring actions in Payload? For example, when user is inactive since 7 days, deactivate him or similar things.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/2053",
    "id": "2053",
    "createdAt": "2023-02-10T10:40:06Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "dawidmachon",
      "avatar": "https://avatars.githubusercontent.com/u/44931854?v=4",
      "url": "https://github.com/dawidmachon"
    },
    "comments": [
      {
        "author": {
          "name": "ChrisGV04",
          "avatar": "https://avatars.githubusercontent.com/u/47041342?u=76f483c754eb2506445bb063e3c07c3b5935d384&v=4",
          "url": "https://github.com/ChrisGV04"
        },
        "body": "<p dir=\"auto\">I believe there's no built-in way to do that on Payload, however, since it's built on top of express and Node.js you are able to implement cron jobs and use the Payload Local API to achieve what you're looking for.</p>\n<p dir=\"auto\">You can look into <a href=\"https://www.npmjs.com/package/node-cron\" rel=\"nofollow\"><code class=\"notranslate\">node-cron</code></a> for a simple cron job implementation in Node.js.</p>\n<p dir=\"auto\">For the use case you mentioned, maybe you can run a cron job once at the beginning of every day to check for any inactive users since 7 days or more and suspend them using the Payload Local API.</p>",
        "createdAt": "2023-02-10T12:18:37Z",
        "replies": null
      },
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">We use node-cron in our public demo to clear the database and re-seed data every hour. Might be a good example to look at. <a href=\"https://github.com/payloadcms/public-demo/tree/master/src%2Fcron\">https://github.com/payloadcms/public-demo/tree/master/src%2Fcron</a></p>",
        "createdAt": "2023-02-10T12:29:52Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">We use node-cron in our public demo to clear the database and re-seed data every hour. Might be a good example to look at. <a href=\"https://github.com/payloadcms/public-demo/tree/master/src%2Fcron\">https://github.com/payloadcms/public-demo/tree/master/src%2Fcron</a></p>",
      "createdAt": "2023-02-10T12:29:52Z",
      "chosenAt": "2023-02-10T20:35:46Z",
      "chosenBy": "denolfe",
      "replies": null
    }
  },
  {
    "title": "Access sibling field in an array field from a custom component",
    "body": "<p dir=\"auto\">Hi! Consider I have the following collection Recipes:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import { CollectionConfig } from 'payload/types';\nimport IngredientUnit from '../components/IngredientUnit';\n\nconst Recipes: CollectionConfig = {\n  slug: 'recipes',\n  admin: {\n    useAsTitle: 'name',\n  },\n  fields: [\n    {\n      name: 'title',\n      type: 'text',\n    },\n    {\n        name: 'ingredients',\n        type: 'array',\n        fields: [\n            {\n                name: 'name',\n                type: 'text'\n            },\n            {\n                name: 'quantity',\n                type: 'text'\n            },\n            {\n                name: 'unit',\n                type: 'text',\n                admin: {\n                    components: {\n                        Field: IngredientUnit\n                    }\n                }\n            }\n        ]\n    }\n  ],\n}\n\nexport default Recipes;\"><pre class=\"notranslate\"><code class=\"notranslate\">import { CollectionConfig } from 'payload/types';\nimport IngredientUnit from '../components/IngredientUnit';\n\nconst Recipes: CollectionConfig = {\n  slug: 'recipes',\n  admin: {\n    useAsTitle: 'name',\n  },\n  fields: [\n    {\n      name: 'title',\n      type: 'text',\n    },\n    {\n        name: 'ingredients',\n        type: 'array',\n        fields: [\n            {\n                name: 'name',\n                type: 'text'\n            },\n            {\n                name: 'quantity',\n                type: 'text'\n            },\n            {\n                name: 'unit',\n                type: 'text',\n                admin: {\n                    components: {\n                        Field: IngredientUnit\n                    }\n                }\n            }\n        ]\n    }\n  ],\n}\n\nexport default Recipes;\n</code></pre></div>\n<p dir=\"auto\">How can I access the 'name' field inside the custom component 'IngredientUnit'? Using 'useFormFields' I am able to access the 'title' field, but not 'name'.</p>\n<p dir=\"auto\">Thank you!!!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1900",
    "id": "1900",
    "createdAt": "2023-01-17T09:51:25Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "cerize",
      "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
      "url": "https://github.com/cerize"
    },
    "comments": [
      {
        "author": {
          "name": "JessChowdhury",
          "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
          "url": "https://github.com/JessChowdhury"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/cerize/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cerize\">@cerize</a> - the useForm() function will allow you to access the sibling data. Not sure how your custom field is setup but it would look something like this:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/67977755/217899734-ed752024-b426-48e3-880f-172468dcad88.png\"><img src=\"https://user-images.githubusercontent.com/67977755/217899734-ed752024-b426-48e3-880f-172468dcad88.png\" alt=\"Screen Shot 2023-02-09 at 6 05 10 PM\" style=\"max-width: 100%;\"></a></p>",
        "createdAt": "2023-02-09T18:05:21Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "JessChowdhury",
        "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
        "url": "https://github.com/JessChowdhury"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/cerize/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cerize\">@cerize</a> - the useForm() function will allow you to access the sibling data. Not sure how your custom field is setup but it would look something like this:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/67977755/217899734-ed752024-b426-48e3-880f-172468dcad88.png\"><img src=\"https://user-images.githubusercontent.com/67977755/217899734-ed752024-b426-48e3-880f-172468dcad88.png\" alt=\"Screen Shot 2023-02-09 at 6 05 10 PM\" style=\"max-width: 100%;\"></a></p>",
      "createdAt": "2023-02-09T18:05:21Z",
      "chosenAt": "2023-02-17T18:27:32Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Access control for unpublishing",
    "body": "<p dir=\"auto\">Hello! Maybe I am missing something, but I could not find anything related to access control of the 'unpublish' action. Is it possible?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1996",
    "id": "1996",
    "createdAt": "2023-02-01T21:59:45Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "cerize",
      "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
      "url": "https://github.com/cerize"
    },
    "comments": [
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/cerize/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cerize\">@cerize</a> Hi! You can use the <code class=\"notranslate\">beforeChange</code> hook to check the document's <code class=\"notranslate\">_status</code>. If it went from <code class=\"notranslate\">published</code> to <code class=\"notranslate\">draft</code> then you can throw an API error. Something like this (untested):</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import APIError from &quot;payload/dist/errors/APIError&quot;;\n\nconst beforeChangeHook: GlobalBeforeChangeHook = async ({\n  data, // incoming data to update or create with\n  req, // full express request\n  originalDoc, // original document\n}) =&gt; {\n  if (originalDoc._status === 'published' &amp;&amp; data._status !== 'published') throw new APIError('You cannot do this!');\n  return data; // Return data to update the document with\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">APIError</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/dist/errors/APIError\"</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">beforeChangeHook</span>: <span class=\"pl-smi\">GlobalBeforeChangeHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  data<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// incoming data to update or create with</span>\n  req<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// full express request</span>\n  originalDoc<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// original document</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">originalDoc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">_status</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'published'</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">_status</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s\">'published'</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">APIError</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'You cannot do this!'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// Return data to update the document with</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Here are the docs for this hook: <a href=\"https://payloadcms.com/docs/hooks/globals#beforechange\" rel=\"nofollow\">https://payloadcms.com/docs/hooks/globals#beforechange</a></p>",
        "createdAt": "2023-02-01T22:10:33Z",
        "replies": [
          {
            "author": {
              "name": "cerize",
              "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
              "url": "https://github.com/cerize"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a> let me bug you one more time. Does a hook ever receive the _status 'changed'? It seems that if I publish a document, then make a random modification, the status goes back to 'draft' and I thought it would be 'changed': <a href=\"https://payloadcms.com/docs/versions/drafts#database-changes\" rel=\"nofollow\">https://payloadcms.com/docs/versions/drafts#database-changes</a>.  My use case is 'Do not allow changing the field x if the document was ever published.</p>",
            "createdAt": "2023-02-02T03:48:39Z"
          },
          {
            "author": {
              "name": "cerize",
              "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
              "url": "https://github.com/cerize"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a> there is also another scenario that would make the status go from <em>published</em> to <em>draft</em>. It's when something is published as someone just 'save draft'. So that may not be enough to distinguish 'unpublish'?</p>",
            "createdAt": "2023-02-03T22:34:07Z"
          },
          {
            "author": {
              "name": "jacobsfletch",
              "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
              "url": "https://github.com/jacobsfletch"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/cerize/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cerize\">@cerize</a> I believe the <code class=\"notranslate\">changed</code> status is virtual and doesn't ever save to the db. This is because a single document is never <code class=\"notranslate\">changed</code>—they can only every be <code class=\"notranslate\">draft</code> or <code class=\"notranslate\">published</code>.</p>\n<blockquote>\n<p dir=\"auto\">It's when something is published as someone just 'save draft'. So that may not be enough to distinguish 'unpublish'?</p>\n</blockquote>\n<p dir=\"auto\">Ok so you need to prevent them from unpublishing documents, but allow them to save drafts. You're right this is tricky, it's not immediately clear to me how we'd handle these cases.</p>",
            "createdAt": "2023-02-03T22:53:29Z"
          },
          {
            "author": {
              "name": "cerize",
              "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
              "url": "https://github.com/cerize"
            },
            "body": "<p dir=\"auto\">thanks for the clarification <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a>! Do you know if it's in the roadmap any change that would allow to target the 'unpublish' action?</p>",
            "createdAt": "2023-02-06T16:51:31Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">You could add a <code class=\"notranslate\">hidden: true</code> field for new field named <code class=\"notranslate\">wasPublished</code> that you give a <code class=\"notranslate\">beforeChange</code> that conditionally sets the field true <code class=\"notranslate\">if (value || _status === 'published')</code>. Then in a custom validation logic function on the locked in fields you could compare the <code class=\"notranslate\">wasPublished</code> value.</p>\n<p dir=\"auto\">Would that work for your scenario <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/cerize/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cerize\">@cerize</a>?</p>",
            "createdAt": "2023-02-06T18:50:09Z"
          },
          {
            "author": {
              "name": "jacobsfletch",
              "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
              "url": "https://github.com/jacobsfletch"
            },
            "body": "<p dir=\"auto\">^^ BOOM! <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/cerize/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cerize\">@cerize</a> you should give this a shot.</p>\n<blockquote>\n<p dir=\"auto\">Do you know if it's in the roadmap any change that would allow to target the 'unpublish' action?</p>\n</blockquote>\n<p dir=\"auto\">I believe it's this one: <a aria-label=\"Discussion #1324\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4525184\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1324\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1324/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/1324\">#1324</a></p>",
            "createdAt": "2023-02-09T15:27:05Z"
          },
          {
            "author": {
              "name": "cerize",
              "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
              "url": "https://github.com/cerize"
            },
            "body": "<p dir=\"auto\">Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> and <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a> , I will try!</p>",
            "createdAt": "2023-02-09T17:30:45Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/cerize/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cerize\">@cerize</a> Hi! You can use the <code class=\"notranslate\">beforeChange</code> hook to check the document's <code class=\"notranslate\">_status</code>. If it went from <code class=\"notranslate\">published</code> to <code class=\"notranslate\">draft</code> then you can throw an API error. Something like this (untested):</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import APIError from &quot;payload/dist/errors/APIError&quot;;\n\nconst beforeChangeHook: GlobalBeforeChangeHook = async ({\n  data, // incoming data to update or create with\n  req, // full express request\n  originalDoc, // original document\n}) =&gt; {\n  if (originalDoc._status === 'published' &amp;&amp; data._status !== 'published') throw new APIError('You cannot do this!');\n  return data; // Return data to update the document with\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">APIError</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/dist/errors/APIError\"</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">beforeChangeHook</span>: <span class=\"pl-smi\">GlobalBeforeChangeHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  data<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// incoming data to update or create with</span>\n  req<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// full express request</span>\n  originalDoc<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// original document</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">originalDoc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">_status</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'published'</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">_status</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s\">'published'</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">APIError</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'You cannot do this!'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// Return data to update the document with</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Here are the docs for this hook: <a href=\"https://payloadcms.com/docs/hooks/globals#beforechange\" rel=\"nofollow\">https://payloadcms.com/docs/hooks/globals#beforechange</a></p>",
      "createdAt": "2023-02-01T22:10:33Z",
      "chosenAt": "2023-02-09T15:55:59Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "cerize",
            "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
            "url": "https://github.com/cerize"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a> let me bug you one more time. Does a hook ever receive the _status 'changed'? It seems that if I publish a document, then make a random modification, the status goes back to 'draft' and I thought it would be 'changed': <a href=\"https://payloadcms.com/docs/versions/drafts#database-changes\" rel=\"nofollow\">https://payloadcms.com/docs/versions/drafts#database-changes</a>.  My use case is 'Do not allow changing the field x if the document was ever published.</p>",
          "createdAt": "2023-02-02T03:48:39Z"
        },
        {
          "author": {
            "name": "cerize",
            "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
            "url": "https://github.com/cerize"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a> there is also another scenario that would make the status go from <em>published</em> to <em>draft</em>. It's when something is published as someone just 'save draft'. So that may not be enough to distinguish 'unpublish'?</p>",
          "createdAt": "2023-02-03T22:34:07Z"
        },
        {
          "author": {
            "name": "jacobsfletch",
            "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
            "url": "https://github.com/jacobsfletch"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/cerize/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cerize\">@cerize</a> I believe the <code class=\"notranslate\">changed</code> status is virtual and doesn't ever save to the db. This is because a single document is never <code class=\"notranslate\">changed</code>—they can only every be <code class=\"notranslate\">draft</code> or <code class=\"notranslate\">published</code>.</p>\n<blockquote>\n<p dir=\"auto\">It's when something is published as someone just 'save draft'. So that may not be enough to distinguish 'unpublish'?</p>\n</blockquote>\n<p dir=\"auto\">Ok so you need to prevent them from unpublishing documents, but allow them to save drafts. You're right this is tricky, it's not immediately clear to me how we'd handle these cases.</p>",
          "createdAt": "2023-02-03T22:53:29Z"
        },
        {
          "author": {
            "name": "cerize",
            "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
            "url": "https://github.com/cerize"
          },
          "body": "<p dir=\"auto\">thanks for the clarification <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a>! Do you know if it's in the roadmap any change that would allow to target the 'unpublish' action?</p>",
          "createdAt": "2023-02-06T16:51:31Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">You could add a <code class=\"notranslate\">hidden: true</code> field for new field named <code class=\"notranslate\">wasPublished</code> that you give a <code class=\"notranslate\">beforeChange</code> that conditionally sets the field true <code class=\"notranslate\">if (value || _status === 'published')</code>. Then in a custom validation logic function on the locked in fields you could compare the <code class=\"notranslate\">wasPublished</code> value.</p>\n<p dir=\"auto\">Would that work for your scenario <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/cerize/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cerize\">@cerize</a>?</p>",
          "createdAt": "2023-02-06T18:50:09Z"
        },
        {
          "author": {
            "name": "jacobsfletch",
            "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
            "url": "https://github.com/jacobsfletch"
          },
          "body": "<p dir=\"auto\">^^ BOOM! <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/cerize/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cerize\">@cerize</a> you should give this a shot.</p>\n<blockquote>\n<p dir=\"auto\">Do you know if it's in the roadmap any change that would allow to target the 'unpublish' action?</p>\n</blockquote>\n<p dir=\"auto\">I believe it's this one: <a aria-label=\"Discussion #1324\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4525184\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1324\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1324/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/1324\">#1324</a></p>",
          "createdAt": "2023-02-09T15:27:05Z"
        },
        {
          "author": {
            "name": "cerize",
            "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
            "url": "https://github.com/cerize"
          },
          "body": "<p dir=\"auto\">Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> and <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a> , I will try!</p>",
          "createdAt": "2023-02-09T17:30:45Z"
        }
      ]
    }
  },
  {
    "title": "ratio field Why must one be selected?",
    "body": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16400882/217503227-44698e7f-fa98-4f67-8f58-b2c7a68fd2c5.png\"><img width=\"935\" alt=\"image\" src=\"https://user-images.githubusercontent.com/16400882/217503227-44698e7f-fa98-4f67-8f58-b2c7a68fd2c5.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16400882/217503306-fc5667be-dad1-4849-b759-360542fe2893.png\"><img width=\"425\" alt=\"image\" src=\"https://user-images.githubusercontent.com/16400882/217503306-fc5667be-dad1-4849-b759-360542fe2893.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">There are cases where neither is selected. This situation cannot be achieved with ratio</p>",
    "url": "https://github.com/payloadcms/payload/discussions/2039",
    "id": "2039",
    "createdAt": "2023-02-08T10:26:48Z",
    "upvotes": 1,
    "commentTotal": 4,
    "author": {
      "name": "zhounewz",
      "avatar": "https://avatars.githubusercontent.com/u/16400882?u=0b9839b373d35997a96ca00f71550153d6c8d945&v=4",
      "url": "https://github.com/zhounewz"
    },
    "comments": [
      {
        "author": {
          "name": "zhounewz",
          "avatar": "https://avatars.githubusercontent.com/u/16400882?u=0b9839b373d35997a96ca00f71550153d6c8d945&v=4",
          "url": "https://github.com/zhounewz"
        },
        "body": "<p dir=\"auto\">It can only be realized by select, but it is inconvenient</p>",
        "createdAt": "2023-02-08T10:27:26Z",
        "replies": [
          {
            "author": {
              "name": "JessChowdhury",
              "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
              "url": "https://github.com/JessChowdhury"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zhounewz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhounewz\">@zhounewz</a> change <code class=\"notranslate\">require</code> to <code class=\"notranslate\">required</code> and give that a shot.</p>",
            "createdAt": "2023-02-08T10:31:57Z"
          },
          {
            "author": {
              "name": "JessChowdhury",
              "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
              "url": "https://github.com/JessChowdhury"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zhounewz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhounewz\">@zhounewz</a> also if your options only need to be true and false, you could use a checkbox field here.</p>",
            "createdAt": "2023-02-08T10:32:52Z"
          }
        ]
      },
      {
        "author": {
          "name": "zhounewz",
          "avatar": "https://avatars.githubusercontent.com/u/16400882?u=0b9839b373d35997a96ca00f71550153d6c8d945&v=4",
          "url": "https://github.com/zhounewz"
        },
        "body": "<p dir=\"auto\">Changing from require to required didn't work.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16400882/217550395-dad5b363-a8bf-4ffd-a040-e14ff2e33c57.png\"><img width=\"359\" alt=\"image\" src=\"https://user-images.githubusercontent.com/16400882/217550395-dad5b363-a8bf-4ffd-a040-e14ff2e33c57.png\" style=\"max-width: 100%;\"></a><br>\nThere are 3 options for me, unselected, true or false.</p>",
        "createdAt": "2023-02-08T13:59:07Z",
        "replies": [
          {
            "author": {
              "name": "JessChowdhury",
              "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
              "url": "https://github.com/JessChowdhury"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zhounewz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhounewz\">@zhounewz</a> what version of payload are you on?</p>",
            "createdAt": "2023-02-08T14:16:56Z"
          }
        ]
      },
      {
        "author": {
          "name": "zhounewz",
          "avatar": "https://avatars.githubusercontent.com/u/16400882?u=0b9839b373d35997a96ca00f71550153d6c8d945&v=4",
          "url": "https://github.com/zhounewz"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/JessChowdhury/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JessChowdhury\">@JessChowdhury</a>  \"payload\": \"1.2.5\"</p>",
        "createdAt": "2023-02-09T01:41:18Z",
        "replies": null
      },
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">The required validation on radios was fixed in a more recent version. Upgrading Payload will help, but not completely fix your problem.</p>\n<p dir=\"auto\">Radio inputs in the browser don't work the way you want.  There is no way to deselect a value without adding a clear button. You need a third option for 'null' in your list it seems.</p>",
        "createdAt": "2023-02-09T02:06:08Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">The required validation on radios was fixed in a more recent version. Upgrading Payload will help, but not completely fix your problem.</p>\n<p dir=\"auto\">Radio inputs in the browser don't work the way you want.  There is no way to deselect a value without adding a clear button. You need a third option for 'null' in your list it seems.</p>",
      "createdAt": "2023-02-09T02:06:08Z",
      "chosenAt": "2023-02-09T16:34:26Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Is it possible to show/hide tabs depending on a condition?",
    "body": "<p dir=\"auto\">Currently, according to the type definition, a tab should support the <code class=\"notranslate\">admin</code> property, but it get's ignored and I couldn't find it in the documentation.</p>\n<p dir=\"auto\">I'm trying to build a table block, that allows the creation of tables.</p>\n<p dir=\"auto\">My idea was the following:<br>\nSpecify a <code class=\"notranslate\">numberOfColumns</code> field that allows numbers between 2 and 10.<br>\nDepending on that number, 2-10 tabs would show up below for each \"row\" in an array of \"rows\" to allow filling the cells.</p>\n<p dir=\"auto\">Is this possible? Do you have any other ideas how to realise a table block with the given fields or what a custom component would look like to achieve this?</p>\n<p dir=\"auto\">Thanks</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1664",
    "id": "1664",
    "createdAt": "2022-12-14T15:18:00Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "christian-reichart",
      "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
      "url": "https://github.com/christian-reichart"
    },
    "comments": [
      {
        "author": {
          "name": "JessChowdhury",
          "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
          "url": "https://github.com/JessChowdhury"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/christian-reichart/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/christian-reichart\">@christian-reichart</a> conditional tabs is on our roadmap here: <a aria-label=\"Discussion #1840\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4742155\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1840\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1840/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/1840\">#1840</a></p>",
        "createdAt": "2023-02-08T17:37:43Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "JessChowdhury",
        "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
        "url": "https://github.com/JessChowdhury"
      },
      "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/christian-reichart/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/christian-reichart\">@christian-reichart</a> conditional tabs is on our roadmap here: <a aria-label=\"Discussion #1840\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4742155\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1840\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1840/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/1840\">#1840</a></p>",
      "createdAt": "2023-02-08T17:37:43Z",
      "chosenAt": "2023-02-09T15:33:18Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "add custom css",
    "body": "<p dir=\"auto\">Hello there,</p>\n<p dir=\"auto\">I've tried to add my custom css according to the <a href=\"https://payloadcms.com/docs/admin/customizing-css#customizing-css-and-scss\" rel=\"nofollow\">docs</a>.<br>\nBut in the end the stylesheet isn't included (neither as inline nor as external). Does it work for you? Is there anything I need to consider?<br>\nIn the docs it looks very simple...</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1514",
    "id": "1514",
    "createdAt": "2022-11-27T13:55:47Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "unonweb",
      "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
      "url": "https://github.com/unonweb"
    },
    "comments": [
      {
        "author": {
          "name": "JessChowdhury",
          "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
          "url": "https://github.com/JessChowdhury"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/unonweb/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/unonweb\">@unonweb</a>,</p>\n<p dir=\"auto\">This could be a cache issue - could you try and run <code class=\"notranslate\">rm -rf node_modules/.cache</code> then restart your server and let me know how that goes.</p>",
        "createdAt": "2022-12-16T18:47:25Z",
        "replies": null
      },
      {
        "author": {
          "name": "mvdve",
          "avatar": "https://avatars.githubusercontent.com/u/10288383?v=4",
          "url": "https://github.com/mvdve"
        },
        "body": "<p dir=\"auto\">Cache was indeed the issue.</p>",
        "createdAt": "2023-02-08T17:04:41Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "JessChowdhury",
        "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
        "url": "https://github.com/JessChowdhury"
      },
      "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/unonweb/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/unonweb\">@unonweb</a>,</p>\n<p dir=\"auto\">This could be a cache issue - could you try and run <code class=\"notranslate\">rm -rf node_modules/.cache</code> then restart your server and let me know how that goes.</p>",
      "createdAt": "2022-12-16T18:47:25Z",
      "chosenAt": "2023-02-08T17:16:53Z",
      "chosenBy": "JessChowdhury",
      "replies": null
    }
  },
  {
    "title": "Graphql custom route",
    "body": "<p dir=\"auto\">Is it possible to change the route generation mechanism for graphql? I don't want my graphql url to start with <code class=\"notranslate\">/api</code>.<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/payloadcms/payload/blob/4a49640c3fc22ee74a2666cb90588b03de68644d/src/graphql/initPlayground.ts#L4-L15\">payload/src/graphql/initPlayground.ts</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 4 to 15\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/payloadcms/payload/commit/4a49640c3fc22ee74a2666cb90588b03de68644d\">4a49640</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L4\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4\"></td>\n          <td id=\"LC4\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">function</span> <span class=\"pl-en\">initPlayground</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">ctx</span>: <span class=\"pl-smi\">Payload</span><span class=\"pl-kos\">)</span>: <span class=\"pl-smi\"><span class=\"pl-k\">void</span></span> <span class=\"pl-kos\">{</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L5\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"5\"></td>\n          <td id=\"LC5\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">ctx</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">graphQL</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">disable</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-c1\">!</span><span class=\"pl-s1\">ctx</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">graphQL</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">disablePlaygroundInProduction</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">NODE_ENV</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'production'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">NODE_ENV</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s\">'production'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L6\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"6\"></td>\n          <td id=\"LC6\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-s1\">ctx</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">router</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">ctx</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">routes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">graphQLPlayground</span><span class=\"pl-kos\">,</span> <span class=\"pl-en\">graphQLPlayground</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L7\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"7\"></td>\n          <td id=\"LC7\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-c1\">endpoint</span>: <span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">ctx</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">routes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">api</span><span class=\"pl-kos\">}</span></span><span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">ctx</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">routes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">graphQL</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">,</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L8\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"8\"></td>\n          <td id=\"LC8\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-c\">// eslint-disable-next-line @typescript-eslint/ban-ts-comment</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L9\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"9\"></td>\n          <td id=\"LC9\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-c\">// <span class=\"pl-k\">@ts</span>-ignore ISettings interface has all properties required for some reason</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L10\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"10\"></td>\n          <td id=\"LC10\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-c1\">settings</span>: <span class=\"pl-kos\">{</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L11\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"11\"></td>\n          <td id=\"LC11\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s\">'request.credentials'</span>: <span class=\"pl-s\">'include'</span><span class=\"pl-kos\">,</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L12\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"12\"></td>\n          <td id=\"LC12\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L13\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"13\"></td>\n          <td id=\"LC13\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L14\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"14\"></td>\n          <td id=\"LC14\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-kos\">}</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L15\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"15\"></td>\n          <td id=\"LC15\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-kos\">}</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>",
    "url": "https://github.com/payloadcms/payload/discussions/2022",
    "id": "2022",
    "createdAt": "2023-02-06T12:58:34Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "guladima",
      "avatar": "https://avatars.githubusercontent.com/u/11425189?v=4",
      "url": "https://github.com/guladima"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">That isn't currently configurable directly. I haven't seen this asked before, but if this is a common thing we could consider how it might be done in the config.</p>\n<p dir=\"auto\">Alternatively, it may be possible to disable Payload's own graphQL using <code class=\"notranslate\">graphQL.disable: true</code> in your config and set it up separately in your app by importing payload's graphql handler and adding it to your express router under your own path.</p>\n<p dir=\"auto\">Payload sets up routes for the playground and graphql endpoints here:<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/payloadcms/payload/blob/4a49640c3fc22ee74a2666cb90588b03de68644d/src/initHTTP.ts#L56-L70\">payload/src/initHTTP.ts</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 56 to 70\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/payloadcms/payload/commit/4a49640c3fc22ee74a2666cb90588b03de68644d\">4a49640</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L56\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"56\"></td>\n          <td id=\"LC56\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">graphQL</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">disable</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L57\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"57\"></td>\n          <td id=\"LC57\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">router</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">use</span><span class=\"pl-kos\">(</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L58\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"58\"></td>\n          <td id=\"LC58\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">routes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">graphQL</span><span class=\"pl-kos\">,</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L59\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"59\"></td>\n          <td id=\"LC59\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">next</span><span class=\"pl-kos\">)</span>: <span class=\"pl-smi\"><span class=\"pl-k\">void</span></span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L60\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"60\"></td>\n          <td id=\"LC60\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">method</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'OPTIONS'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L61\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"61\"></td>\n          <td id=\"LC61\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">sendStatus</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">204</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L62\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"62\"></td>\n          <td id=\"LC62\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L63\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"63\"></td>\n          <td id=\"LC63\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-en\">next</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L64\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"64\"></td>\n          <td id=\"LC64\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-kos\">}</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L65\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"65\"></td>\n          <td id=\"LC65\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L66\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"66\"></td>\n          <td id=\"LC66\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-en\">identifyAPI</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'GraphQL'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L67\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"67\"></td>\n          <td id=\"LC67\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span>: <span class=\"pl-smi\">PayloadRequest</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span>: <span class=\"pl-smi\">Response</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">graphQLHandler</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L68\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"68\"></td>\n          <td id=\"LC68\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L69\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"69\"></td>\n          <td id=\"LC69\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-en\">initGraphQLPlayground</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L70\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"70\"></td>\n          <td id=\"LC70\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-kos\">}</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Disabling graphql will also skip registering of the schema, which you'll want to call also. I believe it could be done onInit in which you could pass it <code class=\"notranslate\">payload</code> instead of <code class=\"notranslate\">this</code>.<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/payloadcms/payload/blob/4a49640c3fc22ee74a2666cb90588b03de68644d/src/payload.ts#L194-L196\">payload/src/payload.ts</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 194 to 196\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/payloadcms/payload/commit/4a49640c3fc22ee74a2666cb90588b03de68644d\">4a49640</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L194\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"194\"></td>\n          <td id=\"LC194\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">!</span><span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">graphQL</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">disable</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L195\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"195\"></td>\n          <td id=\"LC195\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-en\">registerSchema</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">this</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L196\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"196\"></td>\n          <td id=\"LC196\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-kos\">}</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Since we don't export some of these files directly, you'll have to import them from 'payload/dist'.</p>\n<p dir=\"auto\">I haven't tried to do this and honestly, it probably isn't worth the effort unless this is a hard requirement for your project.</p>\n<p dir=\"auto\">I hope this helps, cheers!</p>",
        "createdAt": "2023-02-07T15:03:42Z",
        "replies": null
      },
      {
        "author": {
          "name": "guladima",
          "avatar": "https://avatars.githubusercontent.com/u/11425189?v=4",
          "url": "https://github.com/guladima"
        },
        "body": "<p dir=\"auto\">Finally i solve my problem.</p>\n<p dir=\"auto\">Here's my working solution:</p>\n<h3 dir=\"auto\">server.ts</h3>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import express, { NextFunction, Response } from &quot;express&quot;;\nimport payload from &quot;payload&quot;;\nimport graphQLPlayground from &quot;graphql-playground-middleware-express&quot;;\nimport registerSchema from &quot;payload/dist/graphql/registerSchema&quot;;\nimport identifyAPI from &quot;payload/dist/express/middleware/identifyAPI&quot;;\nimport graphQLHandler from &quot;payload/dist/graphql/graphQLHandler&quot;;\nimport { PayloadRequest } from &quot;payload/types&quot;;\n\nrequire(&quot;dotenv&quot;).config();\nconst app = express();\n\nconst start = async () =&gt; {\n  await payload.init({\n    secret: process.env.PAYLOAD_SECRET,\n    mongoURL: process.env.MONGODB_URI,\n    express: app,\n    onInit: async () =&gt; {\n      payload.logger.info(`Payload Admin URL: ${payload.getAdminURL()}`);\n      payload.logger.info(`Payload API URL: ${payload.getAPIURL()}`);\n    },\n  });\n\n  app.use(\n    payload.config.routes.graphQL,\n    (req, res, next) =&gt; {\n      if (req.method === &quot;OPTIONS&quot;) {\n        res.sendStatus(204);\n      } else {\n        next();\n      }\n    },\n    (\n      req: PayloadRequest &amp; { payload: { schemaRegistered?: boolean } },\n      _res: Response,\n      next: NextFunction\n    ) =&gt; {\n      if (!req.payload.schemaRegistered) {\n        registerSchema(req.payload);\n        req.payload.schemaRegistered = true;\n      }\n\n      next();\n    },\n    identifyAPI(&quot;GraphQL&quot;),\n    (req: PayloadRequest, res: Response) =&gt; graphQLHandler(req, res)(req, res)\n  );\n\n  app.get(\n    payload.config.routes.graphQLPlayground,\n    graphQLPlayground({\n      endpoint: payload.config.routes.graphQL,\n      settings: {\n        &quot;request.credentials&quot;: &quot;include&quot;,\n      },\n    })\n  );\n\n  app.listen(3000);\n};\n\nstart();\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">express</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">NextFunction</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">Response</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"express\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">graphQLPlayground</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"graphql-playground-middleware-express\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">registerSchema</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/dist/graphql/registerSchema\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">identifyAPI</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/dist/express/middleware/identifyAPI\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">graphQLHandler</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/dist/graphql/graphQLHandler\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">PayloadRequest</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/types\"</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"dotenv\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">app</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">express</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">secret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_SECRET</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MONGODB_URI</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">express</span>: <span class=\"pl-s1\">app</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">onInit</span>: <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">info</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Payload Admin URL: <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getAdminURL</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">info</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Payload API URL: <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getAPIURL</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">use</span><span class=\"pl-kos\">(</span>\n    <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">routes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">graphQL</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">next</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">method</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">\"OPTIONS\"</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">sendStatus</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">204</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">next</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">(</span>\n      <span class=\"pl-s1\">req</span>: <span class=\"pl-smi\">PayloadRequest</span> <span class=\"pl-c1\">&amp;</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">payload</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">schemaRegistered</span>?: <span class=\"pl-smi\">boolean</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-s1\">_res</span>: <span class=\"pl-smi\">Response</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-s1\">next</span>: <span class=\"pl-smi\">NextFunction</span>\n    <span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">schemaRegistered</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">registerSchema</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">payload</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">schemaRegistered</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span>\n\n      <span class=\"pl-en\">next</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">identifyAPI</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"GraphQL\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span>: <span class=\"pl-smi\">PayloadRequest</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span>: <span class=\"pl-smi\">Response</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">graphQLHandler</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span>\n    <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">routes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">graphQLPlayground</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">graphQLPlayground</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">endpoint</span>: <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">routes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">graphQL</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">settings</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s\">\"request.credentials\"</span>: <span class=\"pl-s\">\"include\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">listen</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">3000</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3 dir=\"auto\">payload.config.ts</h3>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"routes: {\n  admin: &quot;/admin&quot;,\n  api: &quot;/api&quot;,\n  graphQL: &quot;/graphql&quot;,\n  graphQLPlayground: &quot;/graphql-playground&quot;,\n},\ngraphQL: {\n  disable: true,\n  schemaOutputFile: path.resolve(__dirname, &quot;generated-schema.graphql&quot;),\n},\"><pre class=\"notranslate\"><span class=\"pl-s1\">routes</span>: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-s\">\"/admin\"</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">api</span>: <span class=\"pl-s\">\"/api\"</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">graphQL</span>: <span class=\"pl-s\">\"/graphql\"</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">graphQLPlayground</span>: <span class=\"pl-s\">\"/graphql-playground\"</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">graphQL</span>: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">disable</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">schemaOutputFile</span>: <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"generated-schema.graphql\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>",
        "createdAt": "2023-02-08T14:12:23Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "guladima",
        "avatar": "https://avatars.githubusercontent.com/u/11425189?v=4",
        "url": "https://github.com/guladima"
      },
      "body": "<p dir=\"auto\">Finally i solve my problem.</p>\n<p dir=\"auto\">Here's my working solution:</p>\n<h3 dir=\"auto\">server.ts</h3>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import express, { NextFunction, Response } from &quot;express&quot;;\nimport payload from &quot;payload&quot;;\nimport graphQLPlayground from &quot;graphql-playground-middleware-express&quot;;\nimport registerSchema from &quot;payload/dist/graphql/registerSchema&quot;;\nimport identifyAPI from &quot;payload/dist/express/middleware/identifyAPI&quot;;\nimport graphQLHandler from &quot;payload/dist/graphql/graphQLHandler&quot;;\nimport { PayloadRequest } from &quot;payload/types&quot;;\n\nrequire(&quot;dotenv&quot;).config();\nconst app = express();\n\nconst start = async () =&gt; {\n  await payload.init({\n    secret: process.env.PAYLOAD_SECRET,\n    mongoURL: process.env.MONGODB_URI,\n    express: app,\n    onInit: async () =&gt; {\n      payload.logger.info(`Payload Admin URL: ${payload.getAdminURL()}`);\n      payload.logger.info(`Payload API URL: ${payload.getAPIURL()}`);\n    },\n  });\n\n  app.use(\n    payload.config.routes.graphQL,\n    (req, res, next) =&gt; {\n      if (req.method === &quot;OPTIONS&quot;) {\n        res.sendStatus(204);\n      } else {\n        next();\n      }\n    },\n    (\n      req: PayloadRequest &amp; { payload: { schemaRegistered?: boolean } },\n      _res: Response,\n      next: NextFunction\n    ) =&gt; {\n      if (!req.payload.schemaRegistered) {\n        registerSchema(req.payload);\n        req.payload.schemaRegistered = true;\n      }\n\n      next();\n    },\n    identifyAPI(&quot;GraphQL&quot;),\n    (req: PayloadRequest, res: Response) =&gt; graphQLHandler(req, res)(req, res)\n  );\n\n  app.get(\n    payload.config.routes.graphQLPlayground,\n    graphQLPlayground({\n      endpoint: payload.config.routes.graphQL,\n      settings: {\n        &quot;request.credentials&quot;: &quot;include&quot;,\n      },\n    })\n  );\n\n  app.listen(3000);\n};\n\nstart();\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">express</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">NextFunction</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">Response</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"express\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">graphQLPlayground</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"graphql-playground-middleware-express\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">registerSchema</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/dist/graphql/registerSchema\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">identifyAPI</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/dist/express/middleware/identifyAPI\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">graphQLHandler</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/dist/graphql/graphQLHandler\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">PayloadRequest</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/types\"</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"dotenv\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">app</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">express</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">secret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_SECRET</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MONGODB_URI</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">express</span>: <span class=\"pl-s1\">app</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">onInit</span>: <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">info</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Payload Admin URL: <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getAdminURL</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">info</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Payload API URL: <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getAPIURL</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">use</span><span class=\"pl-kos\">(</span>\n    <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">routes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">graphQL</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">next</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">method</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">\"OPTIONS\"</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">sendStatus</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">204</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">next</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">(</span>\n      <span class=\"pl-s1\">req</span>: <span class=\"pl-smi\">PayloadRequest</span> <span class=\"pl-c1\">&amp;</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">payload</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">schemaRegistered</span>?: <span class=\"pl-smi\">boolean</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-s1\">_res</span>: <span class=\"pl-smi\">Response</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-s1\">next</span>: <span class=\"pl-smi\">NextFunction</span>\n    <span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">schemaRegistered</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">registerSchema</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">payload</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">schemaRegistered</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span>\n\n      <span class=\"pl-en\">next</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">identifyAPI</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"GraphQL\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span>: <span class=\"pl-smi\">PayloadRequest</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span>: <span class=\"pl-smi\">Response</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">graphQLHandler</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span>\n    <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">routes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">graphQLPlayground</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">graphQLPlayground</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">endpoint</span>: <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">routes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">graphQL</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">settings</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s\">\"request.credentials\"</span>: <span class=\"pl-s\">\"include\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">listen</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">3000</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3 dir=\"auto\">payload.config.ts</h3>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"routes: {\n  admin: &quot;/admin&quot;,\n  api: &quot;/api&quot;,\n  graphQL: &quot;/graphql&quot;,\n  graphQLPlayground: &quot;/graphql-playground&quot;,\n},\ngraphQL: {\n  disable: true,\n  schemaOutputFile: path.resolve(__dirname, &quot;generated-schema.graphql&quot;),\n},\"><pre class=\"notranslate\"><span class=\"pl-s1\">routes</span>: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-s\">\"/admin\"</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">api</span>: <span class=\"pl-s\">\"/api\"</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">graphQL</span>: <span class=\"pl-s\">\"/graphql\"</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">graphQLPlayground</span>: <span class=\"pl-s\">\"/graphql-playground\"</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">graphQL</span>: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">disable</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">schemaOutputFile</span>: <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"generated-schema.graphql\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>",
      "createdAt": "2023-02-08T14:12:23Z",
      "chosenAt": "2023-02-08T15:40:24Z",
      "chosenBy": "guladima",
      "replies": null
    }
  },
  {
    "title": "Extending type for GrahQL",
    "body": "<p dir=\"auto\">Hello all,</p>\n<p dir=\"auto\">I read about the \"Adding your own Queries and Mutations\" but I didn't find any explanation about extending an existing type.<br>\nFor example, I have collection called product where I have shopifyId field.<br>\nI would like to be able to update the product query to able to have a node \"shopify\"</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n  products {\n    shopifyId\n    shopify {\n      price\n    }\n  }\n}\"><pre lang=\"graqhql\" class=\"notranslate\"><code class=\"notranslate\">{\n  products {\n    shopifyId\n    shopify {\n      price\n    }\n  }\n}\n</code></pre></div>\n<p dir=\"auto\">Do you have way?</p>\n<p dir=\"auto\">I was thinking to override the schema, I found the <a href=\"https://github.com/payloadcms/payload/blob/145e1db05db0e71149ba74e95764970dfdfd8b6b/src/graphql/registerSchema.ts#L75\">code</a> but we should provide a way to merge the schema using for example <a href=\"https://the-guild.dev/graphql/tools/docs/schema-merging\" rel=\"nofollow\">@graphql-tools/merge</a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/2036",
    "id": "2036",
    "createdAt": "2023-02-07T20:38:10Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "b-barry",
      "avatar": "https://avatars.githubusercontent.com/u/3358788?u=dbf460474df3382f575e67cfad41ba0387d6401b&v=4",
      "url": "https://github.com/b-barry"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/b-barry/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/b-barry\">@b-barry</a> — you should not directly modify the auto-generated GraphQL types, but what you're doing should be possible by adding a field to your config itself. You can then set <code class=\"notranslate\">admin.disabled: true</code> on the field to have it hide from the admin UI entirely. And then you could fill the field's value dynamically with hooks / similar, therefore treating it as a \"virtual field\". We have a demo of this coming out shortly, so keep an eye out!</p>",
        "createdAt": "2023-02-07T20:55:00Z",
        "replies": [
          {
            "author": {
              "name": "b-barry",
              "avatar": "https://avatars.githubusercontent.com/u/3358788?u=dbf460474df3382f575e67cfad41ba0387d6401b&v=4",
              "url": "https://github.com/b-barry"
            },
            "body": "<p dir=\"auto\">Thanks for the quick response. About the hidden field, do you plan to save it the database ?<br>\nI prefer not to be sure to have the latest data</p>",
            "createdAt": "2023-02-07T21:42:31Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">You don’t need to save the field to the database, and you can populate it dynamically with hooks. That’s actually what I was intending and is a pattern that we use ourselves quite a bit. It works well and accomplishes exactly what you’re looking to do <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
            "createdAt": "2023-02-07T22:37:01Z"
          },
          {
            "author": {
              "name": "b-barry",
              "avatar": "https://avatars.githubusercontent.com/u/3358788?u=dbf460474df3382f575e67cfad41ba0387d6401b&v=4",
              "url": "https://github.com/b-barry"
            },
            "body": "<p dir=\"auto\">Super ! I am looking forward for your example.</p>\n<p dir=\"auto\">Thanks again for the response</p>",
            "createdAt": "2023-02-08T05:56:27Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/b-barry/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/b-barry\">@b-barry</a> — you should not directly modify the auto-generated GraphQL types, but what you're doing should be possible by adding a field to your config itself. You can then set <code class=\"notranslate\">admin.disabled: true</code> on the field to have it hide from the admin UI entirely. And then you could fill the field's value dynamically with hooks / similar, therefore treating it as a \"virtual field\". We have a demo of this coming out shortly, so keep an eye out!</p>",
      "createdAt": "2023-02-07T20:55:00Z",
      "chosenAt": "2023-02-17T18:27:47Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "b-barry",
            "avatar": "https://avatars.githubusercontent.com/u/3358788?u=dbf460474df3382f575e67cfad41ba0387d6401b&v=4",
            "url": "https://github.com/b-barry"
          },
          "body": "<p dir=\"auto\">Thanks for the quick response. About the hidden field, do you plan to save it the database ?<br>\nI prefer not to be sure to have the latest data</p>",
          "createdAt": "2023-02-07T21:42:31Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">You don’t need to save the field to the database, and you can populate it dynamically with hooks. That’s actually what I was intending and is a pattern that we use ourselves quite a bit. It works well and accomplishes exactly what you’re looking to do <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
          "createdAt": "2023-02-07T22:37:01Z"
        },
        {
          "author": {
            "name": "b-barry",
            "avatar": "https://avatars.githubusercontent.com/u/3358788?u=dbf460474df3382f575e67cfad41ba0387d6401b&v=4",
            "url": "https://github.com/b-barry"
          },
          "body": "<p dir=\"auto\">Super ! I am looking forward for your example.</p>\n<p dir=\"auto\">Thanks again for the response</p>",
          "createdAt": "2023-02-08T05:56:27Z"
        }
      ]
    }
  },
  {
    "title": "Payload doesn't start up",
    "body": "<h1 dir=\"auto\">Bug Report</h1>\n\n<p dir=\"auto\">Trying to start the project after using <code class=\"notranslate\">npx create-payload-app</code> inside a docker image (node:18-alpine) is impossible. The project does not start.</p>\n<p dir=\"auto\">this is the docs that I'm using <a href=\"https://payloadcms.com/docs/getting-started/installation\" rel=\"nofollow\">https://payloadcms.com/docs/getting-started/installation</a></p>\n<p dir=\"auto\">Is there something I'm doing wrong?, thanks for your help guys.</p>\n<h2 dir=\"auto\">Steps to Reproduce</h2>\n\n<ol dir=\"auto\">\n<li>Initialize docker container (node:18-alpine)</li>\n<li>Run <code class=\"notranslate\">npx create-payload-app</code></li>\n<li>Install completes successfully</li>\n<li>Run <code class=\"notranslate\">yarn dev</code></li>\n<li>Project doesn't start.</li>\n</ol>\n<h2 dir=\"auto\">Other Details</h2>\n\n<p dir=\"auto\">** Log using nodemon: **</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/home/node/app # npx create-payload-app\nNeed to install the following packages:\n  create-payload-app@0.3.24\nOk to proceed? (y) y\n\n  Welcome to Payload. Let's create a project! \n\n✔ Project name? … payload-cms\n✔ Choose project template › blog\n✔ Enter MongoDB connection … mongodb://secret:secretpass@mongodb:27017/payload?authSource=admin \n\n  Creating a new Payload app in /home/node/app/payload-cms\n\n✔ Project directory created\n✔ Dependencies installed\n✔ .env file created\n✔ Payload project successfully created\n\n  ★ Launch Application:\n\n    - cd ./payload-cms\n    - yarn dev\n\n  ★ Documentation:\n\n    - Getting Started: https://payloadcms.com/docs/getting-started/what-is-payload\n    - Configuration: https://payloadcms.com/docs/configuration/overview\n\n\nnpm notice \nnpm notice New minor version of npm available! 9.3.1 -&gt; 9.4.1\nnpm notice Changelog: https://github.com/npm/cli/releases/tag/v9.4.1\nnpm notice Run npm install -g npm@9.4.1 to update!\nnpm notice \n/home/node/app # cd ./payload-cms\n/home/node/app/trnds-cms # yarn dev\nyarn run v1.22.19\n$ cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts nodemon\n[nodemon] 2.0.20\n[nodemon] to restart at any time, enter `rs`\n[nodemon] watching path(s): *.*\n[nodemon] watching extensions: ts\n[nodemon] starting `ts-node src/server.ts`\n[nodemon] app crashed - waiting for file changes before starting...\"><pre class=\"notranslate\"><code class=\"notranslate\">/home/node/app # npx create-payload-app\nNeed to install the following packages:\n  create-payload-app@0.3.24\nOk to proceed? (y) y\n\n  Welcome to Payload. Let's create a project! \n\n✔ Project name? … payload-cms\n✔ Choose project template › blog\n✔ Enter MongoDB connection … mongodb://secret:secretpass@mongodb:27017/payload?authSource=admin \n\n  Creating a new Payload app in /home/node/app/payload-cms\n\n✔ Project directory created\n✔ Dependencies installed\n✔ .env file created\n✔ Payload project successfully created\n\n  ★ Launch Application:\n\n    - cd ./payload-cms\n    - yarn dev\n\n  ★ Documentation:\n\n    - Getting Started: https://payloadcms.com/docs/getting-started/what-is-payload\n    - Configuration: https://payloadcms.com/docs/configuration/overview\n\n\nnpm notice \nnpm notice New minor version of npm available! 9.3.1 -&gt; 9.4.1\nnpm notice Changelog: https://github.com/npm/cli/releases/tag/v9.4.1\nnpm notice Run npm install -g npm@9.4.1 to update!\nnpm notice \n/home/node/app # cd ./payload-cms\n/home/node/app/trnds-cms # yarn dev\nyarn run v1.22.19\n$ cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts nodemon\n[nodemon] 2.0.20\n[nodemon] to restart at any time, enter `rs`\n[nodemon] watching path(s): *.*\n[nodemon] watching extensions: ts\n[nodemon] starting `ts-node src/server.ts`\n[nodemon] app crashed - waiting for file changes before starting...\n</code></pre></div>\n<p dir=\"auto\"><strong>log using: ts-node with npx</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/home/node/app/payload-cms # npx ts-node ./src/server.ts\nIllegal instruction\"><pre class=\"notranslate\"><code class=\"notranslate\">/home/node/app/payload-cms # npx ts-node ./src/server.ts\nIllegal instruction\n</code></pre></div>\n<p dir=\"auto\"><strong>Log using: ts-node without npx</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/home/node/app/payload-cms # ts-node ./src/server.ts\nIllegal instruction\"><pre class=\"notranslate\"><code class=\"notranslate\">/home/node/app/payload-cms # ts-node ./src/server.ts\nIllegal instruction\n</code></pre></div>\n\n<h4 dir=\"auto\">src/server.ts</h4>\n<p dir=\"auto\">After remove payload.init from <code class=\"notranslate\">server.ts</code> the project starts. Which makes me think that the error could be related to the payload npm package. <g-emoji class=\"g-emoji\" alias=\"thinking\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f914.png\">🤔</g-emoji></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import express from 'express';\nimport payload from 'payload';\n\nrequire('dotenv').config();\nconst app = express();\n\n// Redirect root to Admin panel\napp.get('/', (_, res) =&gt; {\n  res.redirect('/admin');\n});\n\nconst start = async () =&gt; {\n  // Initialize Payload\n  // await payload.init({\n  //   secret: process.env.PAYLOAD_SECRET,\n  //   mongoURL: process.env.MONGODB_URI,\n  //   express: app,\n  //   onInit: async () =&gt; {\n  //     payload.logger.info(`Payload Admin URL: ${payload.getAdminURL()}`)\n  //   },\n  // })\n\n  // Add your own express routes here\n\n  app.listen(3000);\n}\n\nstart();\n\n\"><pre class=\"notranslate\"><code class=\"notranslate\">import express from 'express';\nimport payload from 'payload';\n\nrequire('dotenv').config();\nconst app = express();\n\n// Redirect root to Admin panel\napp.get('/', (_, res) =&gt; {\n  res.redirect('/admin');\n});\n\nconst start = async () =&gt; {\n  // Initialize Payload\n  // await payload.init({\n  //   secret: process.env.PAYLOAD_SECRET,\n  //   mongoURL: process.env.MONGODB_URI,\n  //   express: app,\n  //   onInit: async () =&gt; {\n  //     payload.logger.info(`Payload Admin URL: ${payload.getAdminURL()}`)\n  //   },\n  // })\n\n  // Add your own express routes here\n\n  app.listen(3000);\n}\n\nstart();\n\n\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/2033",
    "id": "2033",
    "createdAt": "2023-02-06T23:47:42Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "mauroencinas",
      "avatar": "https://avatars.githubusercontent.com/u/32255583?v=4",
      "url": "https://github.com/mauroencinas"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mauroencinas/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mauroencinas\">@mauroencinas</a> — this should be doable. I'd try and start your process manually, outside of <code class=\"notranslate\">nodemon</code>, to see if you can get a better error log. Run <code class=\"notranslate\">ts-node src/server.ts</code> and see what you get. Let us know!</p>",
        "createdAt": "2023-02-07T00:45:19Z",
        "replies": null
      },
      {
        "author": {
          "name": "mauroencinas",
          "avatar": "https://avatars.githubusercontent.com/u/32255583?v=4",
          "url": "https://github.com/mauroencinas"
        },
        "body": "<blockquote>\n<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mauroencinas/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mauroencinas\">@mauroencinas</a> — this should be doable. I'd try and start your process manually, outside of <code class=\"notranslate\">nodemon</code>, to see if you can get a better error log. Run <code class=\"notranslate\">ts-node src/server.ts</code> and see what you get. Let us know!</p>\n</blockquote>\n<p dir=\"auto\">Thank you very much <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> , you are very kind for your recommendation, I tried to do what you told me, and the result is <code class=\"notranslate\">Illegal Instruction</code>, I tried the command with and without npx</p>",
        "createdAt": "2023-02-07T01:06:32Z",
        "replies": null
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">OK. this is then likely not an issue with Payload and something that you should research regarding your Node 18 Docker image. I bet it has something to do with one of Payload's dependencies. Can you attempt to use another Docker image?</p>\n<p dir=\"auto\">I will convert this to a discussion as there is likely nothing that Payload can be done to fix this, although I'm happy to continue to help!</p>",
        "createdAt": "2023-02-07T15:29:07Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">OK. this is then likely not an issue with Payload and something that you should research regarding your Node 18 Docker image. I bet it has something to do with one of Payload's dependencies. Can you attempt to use another Docker image?</p>\n<p dir=\"auto\">I will convert this to a discussion as there is likely nothing that Payload can be done to fix this, although I'm happy to continue to help!</p>",
      "createdAt": "2023-02-07T15:29:07Z",
      "chosenAt": "2023-02-27T20:14:42Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Oauth BeforeLogin hook redirects to `Already Logged In`",
    "body": "<p dir=\"auto\">Hey!</p>\n<p dir=\"auto\">I am not that sure if this is a bug on the side of plugin code or payload, but maybe you will have some hints.</p>\n<p dir=\"auto\">In the plugin code, after successful oAuth I <code class=\"notranslate\">setToken</code> from <code class=\"notranslate\">useAuth</code> hook and then I use <code class=\"notranslate\">useNavigate</code> to navigate to <code class=\"notranslate\">admin</code> page.</p>\n<p dir=\"auto\">What I get is the screen below:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/92296835/199944719-9ed36beb-a892-4051-b7cb-c5a6fdae1016.png\"><img src=\"https://user-images.githubusercontent.com/92296835/199944719-9ed36beb-a892-4051-b7cb-c5a6fdae1016.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">clicking <code class=\"notranslate\">Back to Dashboard</code> works okay, so I am logged in and whole process was successful. However, for some reason the initial redirect kind of recognizes that I am logged in, but still implies that I am trying to do that again.</p>\n<p dir=\"auto\">If you have an idea if this might me my plugin-specific behaviour, or some Payload feature clashing with the hook, I would be very keen to get any type of feedback!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1347",
    "id": "1347",
    "createdAt": "2022-11-04T09:56:47Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "adam-mrozik",
      "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
      "url": "https://github.com/adam-mrozik"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Were you able to figure out what was going on in your plugin? I don't think it is a Payload specific issue.</p>\n<p dir=\"auto\">What you might be up against is that the user object isn't being updated in Payload. There isn't method on the auth provider to do this. I think what typically would happen is that you have a full redirect or page load to update the user coming from the 3rd party auth provider.</p>\n<p dir=\"auto\">I hope that helps!</p>",
        "createdAt": "2023-02-03T16:08:19Z",
        "replies": [
          {
            "author": {
              "name": "adam-mrozik",
              "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
              "url": "https://github.com/adam-mrozik"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> , partially - i just workaround it by reloading the page after successful login , which seems to work ok enough.</p>",
            "createdAt": "2023-02-04T12:41:34Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Were you able to figure out what was going on in your plugin? I don't think it is a Payload specific issue.</p>\n<p dir=\"auto\">What you might be up against is that the user object isn't being updated in Payload. There isn't method on the auth provider to do this. I think what typically would happen is that you have a full redirect or page load to update the user coming from the 3rd party auth provider.</p>\n<p dir=\"auto\">I hope that helps!</p>",
      "createdAt": "2023-02-03T16:08:19Z",
      "chosenAt": "2023-02-09T15:52:26Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "adam-mrozik",
            "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
            "url": "https://github.com/adam-mrozik"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> , partially - i just workaround it by reloading the page after successful login , which seems to work ok enough.</p>",
          "createdAt": "2023-02-04T12:41:34Z"
        }
      ]
    }
  },
  {
    "title": "Collection BeforeChange Hook - acess to auto-generated ID",
    "body": "<p dir=\"auto\">Hi,<br>\nI would ask if there is a smart way to access payload generated <code class=\"notranslate\">ID</code> for collection in <code class=\"notranslate\">CollectionBeforeChangeHook</code>?</p>\n<p dir=\"auto\">Because right now, imagine the situation:</p>\n<ul dir=\"auto\">\n<li>Collection <code class=\"notranslate\">Users</code> has relation to collection <code class=\"notranslate\">BankAccount</code> and in opposite way relation also exist. It is one to one always.</li>\n</ul>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Users{\n userId: &lt;payloadGenerated&gt;\n bankAccountId: &lt;idFromBankCollection&gt;\n}\n\nBankAccount{\n bankAccoutnId: &lt;payloadGenerated&gt;\n owner: &lt;idFromUserCollection&gt;\n}\"><pre class=\"notranslate\"><span class=\"pl-v\">Users</span><span class=\"pl-kos\">{</span>\n <span class=\"pl-s1\">userId</span>: <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">payloadGenerated</span><span class=\"pl-c1\">&gt;</span>\n bankAccountId: <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">idFromBankCollection</span><span class=\"pl-c1\">&gt;</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-v\">BankAccount</span><span class=\"pl-kos\">{</span>\n <span class=\"pl-s1\">bankAccoutnId</span>: <span class=\"pl-c1\">&lt;</span><span class=\"pl-s1\">payloadGenerated</span><span class=\"pl-c1\">&gt;</span>\n <span class=\"pl-s1\">owner</span>: <span class=\"pl-c1\">&lt;</span><span class=\"pl-s1\">idFromUserCollection</span><span class=\"pl-c1\">&gt;</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">For that case, I need two hooks:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">CollectionBeforeChange</code> on <code class=\"notranslate\">Users</code> to create as local API <code class=\"notranslate\">BankAccount document</code> and populate in <code class=\"notranslate\">Users</code> <code class=\"notranslate\">bankAccountId</code>.</li>\n<li><code class=\"notranslate\">CollectionAfterChange</code> on <code class=\"notranslate\">Users</code> to find and update as local API <code class=\"notranslate\">BankAccount document</code> with <code class=\"notranslate\">userId</code>.</li>\n</ul>\n<p dir=\"auto\">That is because in <code class=\"notranslate\">CollectionBeforeChangeHook</code> there is no pre-generated access to ID for not created yet User document. So is there a way to do it in a smarter way? Write own generation for ID on Users, and then use just one hook? But then I need own validations for checking if id is already existing?</p>\n<p dir=\"auto\">Maybe someone has better idea how to proceed with such cases? Or should I avoid bi-directional relations, and simple embedding them on users?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1962",
    "id": "1962",
    "createdAt": "2023-01-28T12:28:18Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "dawidmachon",
      "avatar": "https://avatars.githubusercontent.com/u/44931854?v=4",
      "url": "https://github.com/dawidmachon"
    },
    "comments": [
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/dawidmachon/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dawidmachon\">@dawidmachon</a> you're right in that if the operation is <code class=\"notranslate\">create</code>, there is not yet an ID to use. Your solution looks fine to me, does it work? Just to sum it up:</p>\n<ol dir=\"auto\">\n<li>Before a user is created, create a bank account and attach the <code class=\"notranslate\">bankAccountId</code> to the user</li>\n<li>After a user is created, lookup their bank account and update the <code class=\"notranslate\">owner</code> with their <code class=\"notranslate\">userId</code></li>\n</ol>\n<p dir=\"auto\">This will work for that initial connection but updates on either end of the relationship will also need to be wired in—and this may lead to infinite loops. There are ways around this, like maintaining a hidden <code class=\"notranslate\">skipHooks</code> field on the collection, I've done something similar to this in our <a href=\"https://github.com/payloadcms/plugin-stripe/blob/13ed91f0406341cd534e3c15555fe3f3224a7b61/src/hooks/syncExistingWithStripe.ts#L34\">Stripe plugin</a>. Others have run into this same need, though, and there's a community-supported plugin if you want to check it out: <a href=\"https://github.com/TimHal/pcms-backpop\">https://github.com/TimHal/pcms-backpop</a>. I have not tested this myself but it might work for you <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
        "createdAt": "2023-02-03T20:31:30Z",
        "replies": [
          {
            "author": {
              "name": "dawidmachon",
              "avatar": "https://avatars.githubusercontent.com/u/44931854?v=4",
              "url": "https://github.com/dawidmachon"
            },
            "body": "<p dir=\"auto\">great answer. Thanks a lot for your response! Great warning for infinite loops.<br>\nIt's working, but I was curious if there is a 'smarter' way to do this. ;) Thanks for plugin!</p>",
            "createdAt": "2023-02-03T23:06:50Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/dawidmachon/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dawidmachon\">@dawidmachon</a> you're right in that if the operation is <code class=\"notranslate\">create</code>, there is not yet an ID to use. Your solution looks fine to me, does it work? Just to sum it up:</p>\n<ol dir=\"auto\">\n<li>Before a user is created, create a bank account and attach the <code class=\"notranslate\">bankAccountId</code> to the user</li>\n<li>After a user is created, lookup their bank account and update the <code class=\"notranslate\">owner</code> with their <code class=\"notranslate\">userId</code></li>\n</ol>\n<p dir=\"auto\">This will work for that initial connection but updates on either end of the relationship will also need to be wired in—and this may lead to infinite loops. There are ways around this, like maintaining a hidden <code class=\"notranslate\">skipHooks</code> field on the collection, I've done something similar to this in our <a href=\"https://github.com/payloadcms/plugin-stripe/blob/13ed91f0406341cd534e3c15555fe3f3224a7b61/src/hooks/syncExistingWithStripe.ts#L34\">Stripe plugin</a>. Others have run into this same need, though, and there's a community-supported plugin if you want to check it out: <a href=\"https://github.com/TimHal/pcms-backpop\">https://github.com/TimHal/pcms-backpop</a>. I have not tested this myself but it might work for you <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
      "createdAt": "2023-02-03T20:31:30Z",
      "chosenAt": "2023-02-03T23:06:52Z",
      "chosenBy": "dawidmachon",
      "replies": [
        {
          "author": {
            "name": "dawidmachon",
            "avatar": "https://avatars.githubusercontent.com/u/44931854?v=4",
            "url": "https://github.com/dawidmachon"
          },
          "body": "<p dir=\"auto\">great answer. Thanks a lot for your response! Great warning for infinite loops.<br>\nIt's working, but I was curious if there is a 'smarter' way to do this. ;) Thanks for plugin!</p>",
          "createdAt": "2023-02-03T23:06:50Z"
        }
      ]
    }
  },
  {
    "title": "Can the entry generated by the Duplicate operation be specified as draft state?",
    "body": "<p dir=\"auto\">Can the entry generated by the Duplicate operation be specified as draft state?</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16400882/196084656-cd7fc768-51d0-4374-bd0e-54237954ae84.png\"><img width=\"406\" alt=\"image\" src=\"https://user-images.githubusercontent.com/16400882/196084656-cd7fc768-51d0-4374-bd0e-54237954ae84.png\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1268",
    "id": "1268",
    "createdAt": "2022-10-17T03:43:00Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "zhounewz",
      "avatar": "https://avatars.githubusercontent.com/u/16400882?u=0b9839b373d35997a96ca00f71550153d6c8d945&v=4",
      "url": "https://github.com/zhounewz"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zhounewz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhounewz\">@zhounewz</a>, this is now possible using the <code class=\"notranslate\">beforeDuplicate</code> <a href=\"https://payloadcms.com/docs/configuration/collections#admin-hooks\" rel=\"nofollow\">admin hook</a>.</p>\n<p dir=\"auto\">Here is an example of how this would look in your case:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const Posts: CollectionConfig = {\n  slug: 'posts',\n  admin: {\n    hooks: {\n      beforeDuplicate: ({ data }) =&gt; {\n        return {\n          ...data,\n          _status: 'draft',\n        };\n      },\n    },\n  },\n  versions: {\n    drafts: true,\n  },\n  fields: [\n    // ...\n  ],\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-smi\">Posts</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'posts'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-en\">beforeDuplicate</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> data <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n          ...<span class=\"pl-s1\">data</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">_status</span>: <span class=\"pl-s\">'draft'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">versions</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">drafts</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-c\">// ...</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Cheers!</p>",
        "createdAt": "2023-02-03T18:54:25Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zhounewz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhounewz\">@zhounewz</a>, this is now possible using the <code class=\"notranslate\">beforeDuplicate</code> <a href=\"https://payloadcms.com/docs/configuration/collections#admin-hooks\" rel=\"nofollow\">admin hook</a>.</p>\n<p dir=\"auto\">Here is an example of how this would look in your case:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const Posts: CollectionConfig = {\n  slug: 'posts',\n  admin: {\n    hooks: {\n      beforeDuplicate: ({ data }) =&gt; {\n        return {\n          ...data,\n          _status: 'draft',\n        };\n      },\n    },\n  },\n  versions: {\n    drafts: true,\n  },\n  fields: [\n    // ...\n  ],\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-smi\">Posts</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'posts'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-en\">beforeDuplicate</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> data <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n          ...<span class=\"pl-s1\">data</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">_status</span>: <span class=\"pl-s\">'draft'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">versions</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">drafts</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-c\">// ...</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Cheers!</p>",
      "createdAt": "2023-02-03T18:54:25Z",
      "chosenAt": "2023-02-06T23:17:23Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Question: Is there a recommended approach to split deployments?",
    "body": "<p dir=\"auto\">Hi all,</p>\n<p dir=\"auto\">Is there a recommended approach to split deployments, i.e. a separate deployment for Admin and API?</p>\n<p dir=\"auto\"><strong>Approaches we've considered</strong>:</p>\n<ul dir=\"auto\">\n<li>Use the <code class=\"notranslate\">disable</code> properties for Admin and GraphQL (but we weren't sure how to disable the REST API...)</li>\n<li>Disabling <a href=\"https://payloadcms.com/docs/access-control/overview\" rel=\"nofollow\">top level access</a> on internal deployment</li>\n</ul>\n<p dir=\"auto\"><strong>Use case</strong>:<br>\nMy team wants to externally expose the Admin panel, but keep the API internal—because our app hits a service that pulls from the CMS internally (+ Cloud CDN caching).</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1220",
    "id": "1220",
    "createdAt": "2022-10-07T15:16:13Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "andwrobs",
      "avatar": "https://avatars.githubusercontent.com/u/101012384?u=716f55d08cbb33242adb1ebadfad47def9e98881&v=4",
      "url": "https://github.com/andwrobs"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Yes, you can—Payload's admin UI gets built to the <code class=\"notranslate\">build</code> folder, and if you place all of those files on a separate host, you can deploy them separately. Just make sure you have the proper <code class=\"notranslate\">serverURL</code> set, pointing at the backend API location, when you build the admin panel files. <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
        "createdAt": "2023-02-03T16:25:20Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Yes, you can—Payload's admin UI gets built to the <code class=\"notranslate\">build</code> folder, and if you place all of those files on a separate host, you can deploy them separately. Just make sure you have the proper <code class=\"notranslate\">serverURL</code> set, pointing at the backend API location, when you build the admin panel files. <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
      "createdAt": "2023-02-03T16:25:20Z",
      "chosenAt": "2023-02-03T16:25:22Z",
      "chosenBy": "jmikrut",
      "replies": null
    }
  },
  {
    "title": "Can you specify the scope of other Documents, because I don't want to have articles embedded in articles",
    "body": "<h3 dir=\"auto\">Can you specify the scope of other Documents, because I don't want to have articles embedded in articles</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16400882/196903042-040d91bd-8faf-49f2-8122-5ca32642eb93.png\"><img width=\"814\" alt=\"image\" src=\"https://user-images.githubusercontent.com/16400882/196903042-040d91bd-8faf-49f2-8122-5ca32642eb93.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16400882/196903096-93ff4c03-5467-4480-a6d8-36d071ac1e4c.png\"><img width=\"840\" alt=\"image\" src=\"https://user-images.githubusercontent.com/16400882/196903096-93ff4c03-5467-4480-a6d8-36d071ac1e4c.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/fields/rich-text#relationship-element\" rel=\"nofollow\">https://payloadcms.com/docs/fields/rich-text#relationship-element</a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1281",
    "id": "1281",
    "createdAt": "2022-10-20T09:12:14Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "zhounewz",
      "avatar": "https://avatars.githubusercontent.com/u/16400882?u=0b9839b373d35997a96ca00f71550153d6c8d945&v=4",
      "url": "https://github.com/zhounewz"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Yes, you can use the <code class=\"notranslate\">admin.enableRichTextRelationship</code> property. Set it to false for any collection you don't want to be able to link to.</p>\n<p dir=\"auto\">Right now, rich text uploads offer a bit more granularity here, as you can specifically whitelist collections to be able to select from on a field-by-field basis. But in the future we should be able to add more granularity to do this with rich text relationships too. <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
        "createdAt": "2023-02-03T16:24:17Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Yes, you can use the <code class=\"notranslate\">admin.enableRichTextRelationship</code> property. Set it to false for any collection you don't want to be able to link to.</p>\n<p dir=\"auto\">Right now, rich text uploads offer a bit more granularity here, as you can specifically whitelist collections to be able to select from on a field-by-field basis. But in the future we should be able to add more granularity to do this with rich text relationships too. <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
      "createdAt": "2023-02-03T16:24:17Z",
      "chosenAt": "2023-02-03T16:24:19Z",
      "chosenBy": "jmikrut",
      "replies": null
    }
  },
  {
    "title": "How to construct \"not like\" logic with graphql api?",
    "body": "<p dir=\"auto\">Currently, I only see these operators in the query filter.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/197687694-bd77de56-af68-4fd2-91d5-24c8b3c48ca9.png\"><img width=\"910\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5801015/197687694-bd77de56-af68-4fd2-91d5-24c8b3c48ca9.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">I'm expecting sth like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"slug: {\n  not: {\n    contains: &quot;demo&quot;\n  }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">slug: {\n  not: {\n    contains: \"demo\"\n  }\n}\n</code></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/197688044-23a5ebc9-8fbc-4a56-a3b7-562c548e7be0.png\"><img width=\"874\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5801015/197688044-23a5ebc9-8fbc-4a56-a3b7-562c548e7be0.png\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1294",
    "id": "1294",
    "createdAt": "2022-10-25T05:13:16Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "Stupidism",
      "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
      "url": "https://github.com/Stupidism"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Stupidism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Stupidism\">@Stupidism</a> — we don't currently have an operator that could represent <code class=\"notranslate\">not like</code> but it could definitely be built. If you're up for making a PR, we would happily accept it!</p>",
        "createdAt": "2023-02-03T16:21:32Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Stupidism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Stupidism\">@Stupidism</a> — we don't currently have an operator that could represent <code class=\"notranslate\">not like</code> but it could definitely be built. If you're up for making a PR, we would happily accept it!</p>",
      "createdAt": "2023-02-03T16:21:32Z",
      "chosenAt": "2023-02-09T16:32:02Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "flattenFields doesn't work if field with sub-fields has a Name",
    "body": "<h1 dir=\"auto\">Bug Report</h1>\n\n<p dir=\"auto\">If collection config have fields with type:</p>\n<ul dir=\"auto\">\n<li>array</li>\n<li>row</li>\n<li>group</li>\n<li>collapsible</li>\n</ul>\n<p dir=\"auto\">And they have a name, flattenFields will skip sub-fields</p>\n<h2 dir=\"auto\">Steps to Reproduce</h2>\n\n<ol dir=\"auto\">\n<li>Create a colection config with array or group field</li>\n<li>Add name to the field</li>\n<li>Check the result of flattenFields</li>\n</ol>\n<h2 dir=\"auto\">Other Details</h2>\n<p dir=\"auto\">Caused by this <a href=\"https://github.com/payloadcms/payload/blob/master/src/utilities/flattenTopLevelFields.ts#L13\">check</a>, it'd be better to first check if field have a sub-fields despite having a name, then if it doesn't check for a name and return new array</p>\n\n",
    "url": "https://github.com/payloadcms/payload/discussions/1971",
    "id": "1971",
    "createdAt": "2023-01-30T14:24:18Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "HoneySpace",
      "avatar": "https://avatars.githubusercontent.com/u/51043116?v=4",
      "url": "https://github.com/HoneySpace"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/HoneySpace/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/HoneySpace\">@HoneySpace</a> — this is actually working as intended, although the function could be misleading. It does not flatten ALL fields, it only flattens the fields that exist within a non-named field.</p>\n<p dir=\"auto\">What are you looking to do? Can I help? Gonna convert this to a discussion to keep it going.</p>",
        "createdAt": "2023-01-30T15:10:06Z",
        "replies": [
          {
            "author": {
              "name": "HoneySpace",
              "avatar": "https://avatars.githubusercontent.com/u/51043116?v=4",
              "url": "https://github.com/HoneySpace"
            },
            "body": "<p dir=\"auto\">Well, I was actualy trying to extend search cappabilities, since Payload API supporst search in nested fields, all I needed was to change how fields get seleceted for building query</p>\n<p dir=\"auto\">I changed flatten fucntion so it flatten all fields and added extra function to crawl through first-level fields to add collection fields to relationship fields<br>\nNow I have very flexable search controled just by listSearchableFields</p>",
            "createdAt": "2023-02-01T14:57:09Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/HoneySpace/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/HoneySpace\">@HoneySpace</a> — this is actually working as intended, although the function could be misleading. It does not flatten ALL fields, it only flattens the fields that exist within a non-named field.</p>\n<p dir=\"auto\">What are you looking to do? Can I help? Gonna convert this to a discussion to keep it going.</p>",
      "createdAt": "2023-01-30T15:10:06Z",
      "chosenAt": "2023-02-27T20:22:09Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "HoneySpace",
            "avatar": "https://avatars.githubusercontent.com/u/51043116?v=4",
            "url": "https://github.com/HoneySpace"
          },
          "body": "<p dir=\"auto\">Well, I was actualy trying to extend search cappabilities, since Payload API supporst search in nested fields, all I needed was to change how fields get seleceted for building query</p>\n<p dir=\"auto\">I changed flatten fucntion so it flatten all fields and added extra function to crawl through first-level fields to add collection fields to relationship fields<br>\nNow I have very flexable search controled just by listSearchableFields</p>",
          "createdAt": "2023-02-01T14:57:09Z"
        }
      ]
    }
  },
  {
    "title": "PAYLOAD_PUBLIC not propagating to collections?",
    "body": "<p dir=\"auto\">Hey!</p>\n<p dir=\"auto\">Quick question from my side, perhaps I am doing something wrong here.</p>\n<p dir=\"auto\">I have an env var called <code class=\"notranslate\">PAYLOAD_PUBLIC_FRONTEND_URL</code>. I use it in one of my collections for the preview functionality:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    preview: (doc, { locale }) =&gt; {\n            if (doc?.slug) {\n              payload.logger.info(`${process.env.PAYLOAD_PUBLIC_FRONTEND_URL}/${locale}/post/${doc.slug}`)\n              return `${process.env.PAYLOAD_PUBLIC_FRONTEND_URL}/${locale}/post/${doc.slug}`;\n            }\n\n            return null;\n        },\"><pre class=\"notranslate\"><code class=\"notranslate\">    preview: (doc, { locale }) =&gt; {\n            if (doc?.slug) {\n              payload.logger.info(`${process.env.PAYLOAD_PUBLIC_FRONTEND_URL}/${locale}/post/${doc.slug}`)\n              return `${process.env.PAYLOAD_PUBLIC_FRONTEND_URL}/${locale}/post/${doc.slug}`;\n            }\n\n            return null;\n        },\n</code></pre></div>\n<p dir=\"auto\">When I run my app locally, environment variable gets propagated, but on PRODUCTION it is undefined. What is even weirder is that other environment vars I pass to my docker container work. What is yet even weirder is that the same variable in payload.init() gets logged with the actual value.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"payload\n  .init({\n    secret: process.env.CMS_SECRET,\n    mongoURL: process.env.MONGODB_URI,\n    express: server,\n    onInit: async () =&gt; {\n      payload.logger.info(`Payload Admin URL: ${payload.getAdminURL()}`);\n      payload.logger.info(`Frontend server URL: ${process.env.PAYLOAD_PUBLIC_FRONTEND_URL}`);\"><pre class=\"notranslate\"><code class=\"notranslate\">payload\n  .init({\n    secret: process.env.CMS_SECRET,\n    mongoURL: process.env.MONGODB_URI,\n    express: server,\n    onInit: async () =&gt; {\n      payload.logger.info(`Payload Admin URL: ${payload.getAdminURL()}`);\n      payload.logger.info(`Frontend server URL: ${process.env.PAYLOAD_PUBLIC_FRONTEND_URL}`);\n</code></pre></div>\n<p dir=\"auto\">Is there something that might be preventing collections to access process, but not <code class=\"notranslate\">payload.init</code>? I feel I might be missing something here</p>\n<p dir=\"auto\">Thanks for any kind of feedback!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1283",
    "id": "1283",
    "createdAt": "2022-10-20T16:41:29Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "adam-mrozik",
      "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
      "url": "https://github.com/adam-mrozik"
    },
    "comments": [
      {
        "author": {
          "name": "adam-mrozik",
          "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
          "url": "https://github.com/adam-mrozik"
        },
        "body": "<p dir=\"auto\">Addition:</p>\n<p dir=\"auto\">It works correctly if I supply this variable during docker-build. But this seems widely inconsistent, as it works in server.ts without it</p>",
        "createdAt": "2022-10-20T17:49:36Z",
        "replies": null
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/adam-mrozik/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/adam-mrozik\">@adam-mrozik</a> — I have some thoughts for you.</p>\n<p dir=\"auto\">Are you using <code class=\"notranslate\">dotenv</code>? Make sure that your <code class=\"notranslate\">dotenv</code> correctly points to your <code class=\"notranslate\">.env</code> file in both dev and production. Often times we've seen it where, for whatever reason, the folder structure differs from <code class=\"notranslate\">/src</code> to <code class=\"notranslate\">/dist</code> if using TS, and then <code class=\"notranslate\">dotenv</code> can no longer find your <code class=\"notranslate\">.env</code> file.</p>\n<p dir=\"auto\"><code class=\"notranslate\">dotenv</code> unfortunately won't error if it can't find the <code class=\"notranslate\">.env</code>....It just simply won't bind any variables.</p>\n<p dir=\"auto\">You can circumvent this problem by specifying a <code class=\"notranslate\">path</code> to <code class=\"notranslate\">dotenv</code> that you are SURE points to your <code class=\"notranslate\">.env</code> file in production cases.</p>",
        "createdAt": "2022-10-20T18:04:26Z",
        "replies": [
          {
            "author": {
              "name": "adam-mrozik",
              "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
              "url": "https://github.com/adam-mrozik"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> , thanks for the answer!<br>\nTo be honest, I thought having them just as environment variables would be sufficient. I do not copy any <code class=\"notranslate\">.env</code> file into production at all, I just have them all as bash variables. And it works perfectly in <code class=\"notranslate\">server.ts</code></p>\n<p dir=\"auto\">When I provide this variable as ENV during docker build, it works properly as well. So I assume <code class=\"notranslate\">.env</code> is an alternative, not something required</p>",
            "createdAt": "2022-10-21T08:52:14Z"
          },
          {
            "author": {
              "name": "adam-mrozik",
              "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
              "url": "https://github.com/adam-mrozik"
            },
            "body": "<p dir=\"auto\">I even created one file env.ts in root that just reads all the variables:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const ENV = {\nPAYLOAD_PUBLIC_FRONTEND_URL: process.env.PAYLOAD_PUBLIC_FRONTEND_URL, ...}\n\nexport default ENV;\"><pre class=\"notranslate\"><code class=\"notranslate\">const ENV = {\nPAYLOAD_PUBLIC_FRONTEND_URL: process.env.PAYLOAD_PUBLIC_FRONTEND_URL, ...}\n\nexport default ENV;\n</code></pre></div>\n<p dir=\"auto\">And, everything gets propagated from this file, Secret, mongoDB, etc... even when I went into the container, manually edited this file to log <code class=\"notranslate\">console.log(ENV.PAYLOAD_PUBLIC_FRONTEND_URL)</code> and did <code class=\"notranslate\">node env.js</code> on that file, it showed my URL. But for some reason, it fails when used inside a preview function.</p>\n<p dir=\"auto\">Variables are present in the env of my running container:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/92296835/197176973-89ee631f-a901-4790-a0a2-5beaaa76e989.png\"><img src=\"https://user-images.githubusercontent.com/92296835/197176973-89ee631f-a901-4790-a0a2-5beaaa76e989.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Again, the only thing that helps is if I add this variable as an env during the build time. Cannot get my head around what is happenning with that one in particular</p>",
            "createdAt": "2022-10-21T10:39:39Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">OK so here's what's happening.</p>\n<p dir=\"auto\"><strong>In the context of the server, environment variables are actual real-life variables that can be read from memory.</strong></p>\n<p dir=\"auto\">But the server's memory is in no way shared with the browser. So when you are using <code class=\"notranslate\">process.env.XXX</code> in the browser, that is a totally different \"construct\" that is generally built out as a global variable for you just for reasons of consistency.</p>\n<p dir=\"auto\">It's done by Webpack. And Webpack literally <em>writes your env variables</em> into your browser JS bundle <em>on build</em>. That's why we specify that any <strong>public</strong> variables (aka safe for anyone to read) should be strongly prefixed, clearly, with <code class=\"notranslate\">PAYLOAD_PUBLIC_</code>.</p>\n<p dir=\"auto\">But, with a full understanding of the above, you probably now see that those variables <em>must</em> be present while your bundle builds, because Webpack needs to write them directly into the JS bundle that it produces. This goes the same for any bundling framework - not just Webpack. So if you don't have your environment variable present while building Payload, then it will not be present in the browser.</p>\n<p dir=\"auto\">Does that make sense?</p>",
            "createdAt": "2022-10-21T13:10:52Z"
          },
          {
            "author": {
              "name": "adam-mrozik",
              "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
              "url": "https://github.com/adam-mrozik"
            },
            "body": "<p dir=\"auto\">Yeah, makes sense! Thanks for the explanation!</p>",
            "createdAt": "2022-10-27T12:32:30Z"
          },
          {
            "author": {
              "name": "dotellie",
              "avatar": "https://avatars.githubusercontent.com/u/4590037?u=a458f7cf1dd34c8e98854d4ba41e2f5efbd1d918&v=4",
              "url": "https://github.com/dotellie"
            },
            "body": "<p dir=\"auto\">Okay this caught me off guard I have to admit. Not that I haven't dealt with this kind of stuff before (in fact I remember fixing this exact problem at a previous workplace) but I guess it just surprised me that Payload hasn't implemented dynamic environment injection at runtime. Not having this makes configuration a bit of a pain in the sense that the Docker image isn't actually portable in the end when it's built. I might actually want to take a stab at fixing this I think if that's something that more than just me want. <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> what do you think?</p>",
            "createdAt": "2023-01-31T20:34:23Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/adam-mrozik/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/adam-mrozik\">@adam-mrozik</a> — I have some thoughts for you.</p>\n<p dir=\"auto\">Are you using <code class=\"notranslate\">dotenv</code>? Make sure that your <code class=\"notranslate\">dotenv</code> correctly points to your <code class=\"notranslate\">.env</code> file in both dev and production. Often times we've seen it where, for whatever reason, the folder structure differs from <code class=\"notranslate\">/src</code> to <code class=\"notranslate\">/dist</code> if using TS, and then <code class=\"notranslate\">dotenv</code> can no longer find your <code class=\"notranslate\">.env</code> file.</p>\n<p dir=\"auto\"><code class=\"notranslate\">dotenv</code> unfortunately won't error if it can't find the <code class=\"notranslate\">.env</code>....It just simply won't bind any variables.</p>\n<p dir=\"auto\">You can circumvent this problem by specifying a <code class=\"notranslate\">path</code> to <code class=\"notranslate\">dotenv</code> that you are SURE points to your <code class=\"notranslate\">.env</code> file in production cases.</p>",
      "createdAt": "2022-10-20T18:04:26Z",
      "chosenAt": "2022-10-27T12:31:59Z",
      "chosenBy": "adam-mrozik",
      "replies": [
        {
          "author": {
            "name": "adam-mrozik",
            "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
            "url": "https://github.com/adam-mrozik"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> , thanks for the answer!<br>\nTo be honest, I thought having them just as environment variables would be sufficient. I do not copy any <code class=\"notranslate\">.env</code> file into production at all, I just have them all as bash variables. And it works perfectly in <code class=\"notranslate\">server.ts</code></p>\n<p dir=\"auto\">When I provide this variable as ENV during docker build, it works properly as well. So I assume <code class=\"notranslate\">.env</code> is an alternative, not something required</p>",
          "createdAt": "2022-10-21T08:52:14Z"
        },
        {
          "author": {
            "name": "adam-mrozik",
            "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
            "url": "https://github.com/adam-mrozik"
          },
          "body": "<p dir=\"auto\">I even created one file env.ts in root that just reads all the variables:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const ENV = {\nPAYLOAD_PUBLIC_FRONTEND_URL: process.env.PAYLOAD_PUBLIC_FRONTEND_URL, ...}\n\nexport default ENV;\"><pre class=\"notranslate\"><code class=\"notranslate\">const ENV = {\nPAYLOAD_PUBLIC_FRONTEND_URL: process.env.PAYLOAD_PUBLIC_FRONTEND_URL, ...}\n\nexport default ENV;\n</code></pre></div>\n<p dir=\"auto\">And, everything gets propagated from this file, Secret, mongoDB, etc... even when I went into the container, manually edited this file to log <code class=\"notranslate\">console.log(ENV.PAYLOAD_PUBLIC_FRONTEND_URL)</code> and did <code class=\"notranslate\">node env.js</code> on that file, it showed my URL. But for some reason, it fails when used inside a preview function.</p>\n<p dir=\"auto\">Variables are present in the env of my running container:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/92296835/197176973-89ee631f-a901-4790-a0a2-5beaaa76e989.png\"><img src=\"https://user-images.githubusercontent.com/92296835/197176973-89ee631f-a901-4790-a0a2-5beaaa76e989.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Again, the only thing that helps is if I add this variable as an env during the build time. Cannot get my head around what is happenning with that one in particular</p>",
          "createdAt": "2022-10-21T10:39:39Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">OK so here's what's happening.</p>\n<p dir=\"auto\"><strong>In the context of the server, environment variables are actual real-life variables that can be read from memory.</strong></p>\n<p dir=\"auto\">But the server's memory is in no way shared with the browser. So when you are using <code class=\"notranslate\">process.env.XXX</code> in the browser, that is a totally different \"construct\" that is generally built out as a global variable for you just for reasons of consistency.</p>\n<p dir=\"auto\">It's done by Webpack. And Webpack literally <em>writes your env variables</em> into your browser JS bundle <em>on build</em>. That's why we specify that any <strong>public</strong> variables (aka safe for anyone to read) should be strongly prefixed, clearly, with <code class=\"notranslate\">PAYLOAD_PUBLIC_</code>.</p>\n<p dir=\"auto\">But, with a full understanding of the above, you probably now see that those variables <em>must</em> be present while your bundle builds, because Webpack needs to write them directly into the JS bundle that it produces. This goes the same for any bundling framework - not just Webpack. So if you don't have your environment variable present while building Payload, then it will not be present in the browser.</p>\n<p dir=\"auto\">Does that make sense?</p>",
          "createdAt": "2022-10-21T13:10:52Z"
        },
        {
          "author": {
            "name": "adam-mrozik",
            "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
            "url": "https://github.com/adam-mrozik"
          },
          "body": "<p dir=\"auto\">Yeah, makes sense! Thanks for the explanation!</p>",
          "createdAt": "2022-10-27T12:32:30Z"
        },
        {
          "author": {
            "name": "dotellie",
            "avatar": "https://avatars.githubusercontent.com/u/4590037?u=a458f7cf1dd34c8e98854d4ba41e2f5efbd1d918&v=4",
            "url": "https://github.com/dotellie"
          },
          "body": "<p dir=\"auto\">Okay this caught me off guard I have to admit. Not that I haven't dealt with this kind of stuff before (in fact I remember fixing this exact problem at a previous workplace) but I guess it just surprised me that Payload hasn't implemented dynamic environment injection at runtime. Not having this makes configuration a bit of a pain in the sense that the Docker image isn't actually portable in the end when it's built. I might actually want to take a stab at fixing this I think if that's something that more than just me want. <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> what do you think?</p>",
          "createdAt": "2023-01-31T20:34:23Z"
        }
      ]
    }
  },
  {
    "title": "Error:  Cannot find module 'C:\\Users\\......\\payload-cms\\server.js'",
    "body": "<h1 dir=\"auto\">Bug Report</h1>\n<p dir=\"auto\">I followed the quickstart instructions on <a href=\"https://payloadcms.com/docs/getting-started/installation\" rel=\"nofollow\">https://payloadcms.com/docs/getting-started/installation</a><br>\n` npx create-payload-app</p>\n<p dir=\"auto\">cd payload-cms</p>\n<p dir=\"auto\">npm install</p>\n<p dir=\"auto\">node server.js`</p>\n<p dir=\"auto\">where the directory name is payload-cms</p>\n<p dir=\"auto\">but get an error:</p>\n<p dir=\"auto\">`$ node server.js<br>\nnode:internal/modules/cjs/loader:936<br>\nthrow err;<br>\n^</p>\n<p dir=\"auto\">Error: Cannot find module 'C:\\Users.............\\payload-cms\\server.js'<br>\n←[90m    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)←[39m<br>\n←[90m    at Function.Module._load (node:internal/modules/cjs/loader:778:27)←[39m<br>\n←[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)←[39m<br>\n←[90m    at node:internal/main/run_main_module:17:47←[39m {<br>\ncode: ←[32m'MODULE_NOT_FOUND'←[39m,<br>\nrequireStack: []<br>\n}<br>\n`</p>\n<p dir=\"auto\">node version: v16.16.0</p>\n<p dir=\"auto\">I am on Windows, using powershell or gitbash</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1983",
    "id": "1983",
    "createdAt": "2023-01-30T19:38:20Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "sdomville",
      "avatar": "https://avatars.githubusercontent.com/u/21313034?v=4",
      "url": "https://github.com/sdomville"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">I think you're probably mixing up instructions from <code class=\"notranslate\">npx create-payload-app</code> and manual install. If you've used <code class=\"notranslate\">npx create-payload-app</code>, you will not need to run <code class=\"notranslate\">node server.js</code>, and rather, you should run <code class=\"notranslate\">npm run dev</code> or <code class=\"notranslate\">yarn dev</code>.</p>\n<p dir=\"auto\">The Node error you're seeing is because Node can't find your <code class=\"notranslate\">server.js</code> file. It will look in the folder that you're currently in. So for example, <code class=\"notranslate\">npx create-payload-app</code> will create a <code class=\"notranslate\">/src</code> directory, and your server will actually be in that folder instead—which will explain why Node can't find it in the root folder. Running <code class=\"notranslate\">yarn dev</code> or <code class=\"notranslate\">npm run dev</code> should resolve this.</p>\n<p dir=\"auto\">This is not an issue with Payload though, per se. So I'll convert this to a discussion, but we're happy to continue to help here!</p>",
        "createdAt": "2023-01-31T13:52:33Z",
        "replies": [
          {
            "author": {
              "name": "sdomville",
              "avatar": "https://avatars.githubusercontent.com/u/21313034?v=4",
              "url": "https://github.com/sdomville"
            },
            "body": "<p dir=\"auto\">Oh yes I was confused then and I am sure it's because the headers are all the same style. I would make everything under \"from scratch\" to be a subheader, if it helps others. Thank you!!</p>",
            "createdAt": "2023-01-31T15:49:25Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">I think you're probably mixing up instructions from <code class=\"notranslate\">npx create-payload-app</code> and manual install. If you've used <code class=\"notranslate\">npx create-payload-app</code>, you will not need to run <code class=\"notranslate\">node server.js</code>, and rather, you should run <code class=\"notranslate\">npm run dev</code> or <code class=\"notranslate\">yarn dev</code>.</p>\n<p dir=\"auto\">The Node error you're seeing is because Node can't find your <code class=\"notranslate\">server.js</code> file. It will look in the folder that you're currently in. So for example, <code class=\"notranslate\">npx create-payload-app</code> will create a <code class=\"notranslate\">/src</code> directory, and your server will actually be in that folder instead—which will explain why Node can't find it in the root folder. Running <code class=\"notranslate\">yarn dev</code> or <code class=\"notranslate\">npm run dev</code> should resolve this.</p>\n<p dir=\"auto\">This is not an issue with Payload though, per se. So I'll convert this to a discussion, but we're happy to continue to help here!</p>",
      "createdAt": "2023-01-31T13:52:33Z",
      "chosenAt": "2023-02-09T15:35:29Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "sdomville",
            "avatar": "https://avatars.githubusercontent.com/u/21313034?v=4",
            "url": "https://github.com/sdomville"
          },
          "body": "<p dir=\"auto\">Oh yes I was confused then and I am sure it's because the headers are all the same style. I would make everything under \"from scratch\" to be a subheader, if it helps others. Thank you!!</p>",
          "createdAt": "2023-01-31T15:49:25Z"
        }
      ]
    }
  },
  {
    "title": "Is there an Array string in Payload CMS?",
    "body": "<p dir=\"auto\">Hi, I tried to read the documentation, but I couldn't find it. Is there something to save array string to database?<br>\nI just want save array of strings<br>\nEx: <code class=\"notranslate\">[\"a\",\"b\",\"c\"]</code><br>\nI don't want save array of objects like this, just need array of strings here<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/15695252/210272435-2b0022c9-de6e-40ba-99a9-8430686ec1b3.png\"><img src=\"https://user-images.githubusercontent.com/15695252/210272435-2b0022c9-de6e-40ba-99a9-8430686ec1b3.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1791",
    "id": "1791",
    "createdAt": "2023-01-02T19:35:27Z",
    "upvotes": 2,
    "commentTotal": 2,
    "author": {
      "name": "IRediTOTO",
      "avatar": "https://avatars.githubusercontent.com/u/15695252?u=1db36b69ca11c742388f9de00dad6e489916e95e&v=4",
      "url": "https://github.com/IRediTOTO"
    },
    "comments": [
      {
        "author": {
          "name": "JessChowdhury",
          "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
          "url": "https://github.com/JessChowdhury"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/IRediTOTO/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/IRediTOTO\">@IRediTOTO</a>, this isn't currently supported but would definitely be useful in many cases. This question was also discussed on discord <a href=\"https://discord.com/channels/967097582721572934/1050348908729073685/1050348908729073685\" rel=\"nofollow\">here</a>. A potential workaround solution would be to:</p>\n<ol dir=\"auto\">\n<li>Create a hidden <code class=\"notranslate\">preferences</code> field</li>\n<li>On save, map the original array and return as an array of strings</li>\n<li>Pass this new array to your hidden field</li>\n</ol>\n<p dir=\"auto\">There might be more appropriate workarounds too if you want to share more information on what you're looking to achieve, let us know if you need further help here!</p>",
        "createdAt": "2023-01-10T11:31:54Z",
        "replies": [
          {
            "author": {
              "name": "IRediTOTO",
              "avatar": "https://avatars.githubusercontent.com/u/15695252?u=1db36b69ca11c742388f9de00dad6e489916e95e&v=4",
              "url": "https://github.com/IRediTOTO"
            },
            "body": "<p dir=\"auto\">Thank you for replied me and let me know. Ok fine, but I will wait for a that feature like that. This pretty basic, I think any Payload newbie will ask himself: where is the array??? :D</p>",
            "createdAt": "2023-01-10T19:20:42Z"
          },
          {
            "author": {
              "name": "gaboluque",
              "avatar": "https://avatars.githubusercontent.com/u/12043752?u=fe1841dc7414098c3a9a89cacea153ec66d7fba7&v=4",
              "url": "https://github.com/gaboluque"
            },
            "body": "<p dir=\"auto\">Payload newbie here, I think this could be really useful.</p>",
            "createdAt": "2023-01-31T00:47:45Z"
          },
          {
            "author": {
              "name": "jacobsfletch",
              "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
              "url": "https://github.com/jacobsfletch"
            },
            "body": "<p dir=\"auto\">The <code class=\"notranslate\">json</code> field might work for you: <a href=\"https://payloadcms.com/docs/fields/json#json-field\" rel=\"nofollow\">https://payloadcms.com/docs/fields/json#json-field</a></p>",
            "createdAt": "2023-01-31T01:42:08Z"
          }
        ]
      },
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\">The<code class=\"notranslate\">json</code> field might work for you: <a href=\"https://payloadcms.com/docs/fields/json#json-field\" rel=\"nofollow\">https://payloadcms.com/docs/fields/json#json-field</a></p>",
        "createdAt": "2023-01-31T01:43:35Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\">The<code class=\"notranslate\">json</code> field might work for you: <a href=\"https://payloadcms.com/docs/fields/json#json-field\" rel=\"nofollow\">https://payloadcms.com/docs/fields/json#json-field</a></p>",
      "createdAt": "2023-01-31T01:43:35Z",
      "chosenAt": "2023-02-09T16:31:01Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Using different type of editor",
    "body": "<p dir=\"auto\">Hey Guys,</p>\n<p dir=\"auto\">I just wanna ask if there is a possibility that I can use <a href=\"https://ckeditor.com/\" rel=\"nofollow\">ckeditor</a> instead of <a href=\"https://www.slatejs.org/\" rel=\"nofollow\">slatejs</a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1956",
    "id": "1956",
    "createdAt": "2023-01-26T07:45:15Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "mark-15",
      "avatar": "https://avatars.githubusercontent.com/u/5755012?v=4",
      "url": "https://github.com/mark-15"
    },
    "comments": [
      {
        "author": {
          "name": "zubricks",
          "avatar": "https://avatars.githubusercontent.com/u/26472106?u=0685baa5428b38d80caa347a8c467b90ade7f88f&v=4",
          "url": "https://github.com/zubricks"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mark-15/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mark-15\">@mark-15</a> anything is possible, though we don't officially support anything other than slate. We have a community member that built a <a href=\"https://github.com/payloadcms/payload/discussions/1772\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1772/hovercard\">plugin for Lexical,</a> but nothing for ckeditor at this time.</p>",
        "createdAt": "2023-01-30T22:04:46Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">To expand on this, using ckeditor would actually be quite easy. Because it stores its contents as a string, you would just need to make a custom Field component for any given text field.</p>\n<p dir=\"auto\">Then, within that custom field component, you would render ckeditor accordingly. Would be easy!</p>",
            "createdAt": "2023-01-30T22:27:50Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "zubricks",
        "avatar": "https://avatars.githubusercontent.com/u/26472106?u=0685baa5428b38d80caa347a8c467b90ade7f88f&v=4",
        "url": "https://github.com/zubricks"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mark-15/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mark-15\">@mark-15</a> anything is possible, though we don't officially support anything other than slate. We have a community member that built a <a href=\"https://github.com/payloadcms/payload/discussions/1772\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1772/hovercard\">plugin for Lexical,</a> but nothing for ckeditor at this time.</p>",
      "createdAt": "2023-01-30T22:04:46Z",
      "chosenAt": "2023-01-30T22:04:49Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">To expand on this, using ckeditor would actually be quite easy. Because it stores its contents as a string, you would just need to make a custom Field component for any given text field.</p>\n<p dir=\"auto\">Then, within that custom field component, you would render ckeditor accordingly. Would be easy!</p>",
          "createdAt": "2023-01-30T22:27:50Z"
        }
      ]
    }
  },
  {
    "title": "Support MySQL or PostgreSQL?",
    "body": "<p dir=\"auto\">Hello there,</p>\n<p dir=\"auto\">Is there a way to use MySQL/PostgreSQL as a database choice? I am interested in using <a href=\"https://planetscale.com/\" rel=\"nofollow\">https://planetscale.com/</a> as a database.</p>\n<p dir=\"auto\">Thank you</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1941",
    "id": "1941",
    "createdAt": "2023-01-23T21:40:56Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "hhimanshu",
      "avatar": "https://avatars.githubusercontent.com/u/6589036?u=b70e5e0fdb180b058cabddd3480a795d977e06f1&v=4",
      "url": "https://github.com/hhimanshu"
    },
    "comments": [
      {
        "author": {
          "name": "cpaczek",
          "avatar": "https://avatars.githubusercontent.com/u/25715982?u=a0ee4e742d4f1825d0958ef192a113d98171823a&v=4",
          "url": "https://github.com/cpaczek"
        },
        "body": "<p dir=\"auto\">No</p>",
        "createdAt": "2023-01-23T21:48:15Z",
        "replies": null
      },
      {
        "author": {
          "name": "zubricks",
          "avatar": "https://avatars.githubusercontent.com/u/26472106?u=0685baa5428b38d80caa347a8c467b90ade7f88f&v=4",
          "url": "https://github.com/zubricks"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/hhimanshu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hhimanshu\">@hhimanshu</a> not at the moment, but that is a item on our roadmap (multiple database support). -&gt; <a aria-label=\"Discussion #287\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3513774\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/287\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/287/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/287\">#287</a></p>",
        "createdAt": "2023-01-30T21:47:04Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "zubricks",
        "avatar": "https://avatars.githubusercontent.com/u/26472106?u=0685baa5428b38d80caa347a8c467b90ade7f88f&v=4",
        "url": "https://github.com/zubricks"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/hhimanshu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hhimanshu\">@hhimanshu</a> not at the moment, but that is a item on our roadmap (multiple database support). -&gt; <a aria-label=\"Discussion #287\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3513774\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/287\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/287/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/287\">#287</a></p>",
      "createdAt": "2023-01-30T21:47:04Z",
      "chosenAt": "2023-01-30T21:47:08Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "How add Google / Facebook login with payloadCMS?",
    "body": "<p dir=\"auto\">Hi, Can you you tell me an idea to add Google login button to <code class=\"notranslate\">login page</code> of payload CMS?<br>\nI am planning let end user login to dashboard.<br>\nIs there any way to do that?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1969",
    "id": "1969",
    "createdAt": "2023-01-30T10:10:07Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "IRediTOTO",
      "avatar": "https://avatars.githubusercontent.com/u/15695252?u=1db36b69ca11c742388f9de00dad6e489916e95e&v=4",
      "url": "https://github.com/IRediTOTO"
    },
    "comments": [
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/IRediTOTO/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/IRediTOTO\">@IRediTOTO</a> check out this comment: <a aria-label=\"Discussion #1555\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4615883\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1555\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1555/hovercard?comment_id=4276115\" href=\"https://github.com/payloadcms/payload/discussions/1555#discussioncomment-4276115\">#1555 (comment)</a></p>",
        "createdAt": "2023-01-30T15:07:08Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/IRediTOTO/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/IRediTOTO\">@IRediTOTO</a> check out this comment: <a aria-label=\"Discussion #1555\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4615883\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1555\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1555/hovercard?comment_id=4276115\" href=\"https://github.com/payloadcms/payload/discussions/1555#discussioncomment-4276115\">#1555 (comment)</a></p>",
      "createdAt": "2023-01-30T15:07:08Z",
      "chosenAt": "2023-01-30T22:09:04Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Unable to use `access` (does not affect localhost)",
    "body": "<h1 dir=\"auto\">Bug Report</h1>\n<p dir=\"auto\">On localhost, everything works as expected. But once I host my Payload implementation, I get a 403 on any access point that is not <code class=\"notranslate\">() =&gt; true</code>. (hosted on Northflank, <a href=\"https://northflank.com/guides/deploying-payload-cms\" rel=\"nofollow\">tutorial that I followed</a>)</p>\n<h2 dir=\"auto\">Steps to Reproduce</h2>\n<ol dir=\"auto\">\n<li><code class=\"notranslate\">npx create-payload-app</code></li>\n<li>copy-paste \"roles\" from <code class=\"notranslate\">Users.ts</code> and the files <code class=\"notranslate\">src/access/isAdmin.ts</code>+<code class=\"notranslate\">src/access/isLoggedIn.ts</code> from <a href=\"https://github.com/payloadcms/access-control-demo\">Payload CMS Access Control Demo</a></li>\n<li>update any Collection to use <code class=\"notranslate\">() =&gt; true</code> for <code class=\"notranslate\">read</code> access, and all other access points to use <code class=\"notranslate\">isAdmin</code></li>\n<li>test on localhost (I used Mongo DB Atlas as my DB)</li>\n<li>see that everything works as expected</li>\n<li>test on hosted environment (I used <a href=\"https://northflank.com/guides/deploying-payload-cms\" rel=\"nofollow\">Northflank</a>)</li>\n<li>see that all non-read events give 403 even though checks pass</li>\n</ol>\n<h2 dir=\"auto\">Other Details</h2>\n<p dir=\"auto\"><a href=\"https://github.com/Barbacoa08/fighter-advice-cms\">Link to WIP GitHub repo</a>.</p>\n<p dir=\"auto\">Example Access Code:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  access: {\n    create: isAdmin,\n    read: () =&gt; true,\n    update: isAdmin,\n    delete: isAdmin,\n  },\"><pre class=\"notranslate\"><code class=\"notranslate\">  access: {\n    create: isAdmin,\n    read: () =&gt; true,\n    update: isAdmin,\n    delete: isAdmin,\n  },\n</code></pre></div>\n<p dir=\"auto\">Example Access Code with output logs:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    create: isAdmin,\n    read: (args) =&gt; {\n      console.log(`has args: ${Boolean(args)}`);\n      console.log(`is logged in: ${isLoggedIn(args)}`);\n      console.log(`is admin: ${isAdmin(args)}`);\n      console.log(`is editor or admin: ${isEditorOrAdmin(args)}`);\n      console.log(`is admin or self: ${isAdminOrSelf(args)}`);\n\n      return true;\n    },\n    update: isAdmin,\n    delete: isAdmin,\"><pre class=\"notranslate\"><code class=\"notranslate\">    create: isAdmin,\n    read: (args) =&gt; {\n      console.log(`has args: ${Boolean(args)}`);\n      console.log(`is logged in: ${isLoggedIn(args)}`);\n      console.log(`is admin: ${isAdmin(args)}`);\n      console.log(`is editor or admin: ${isEditorOrAdmin(args)}`);\n      console.log(`is admin or self: ${isAdminOrSelf(args)}`);\n\n      return true;\n    },\n    update: isAdmin,\n    delete: isAdmin,\n</code></pre></div>\n<p dir=\"auto\">Example image of container logs from Northflank showing that the check are passing when hitting the <code class=\"notranslate\">read</code> access point, but failing with a 403 when any other point is hit:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/13157284/212972897-384af9af-4c75-4f95-be04-74e021782375.png\"><img src=\"https://user-images.githubusercontent.com/13157284/212972897-384af9af-4c75-4f95-be04-74e021782375.png\" alt=\"northflank-logs-example\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">other-other details</h3>\n<p dir=\"auto\">I did try setting all of my <code class=\"notranslate\">access</code> CRUD to just <code class=\"notranslate\">() =&gt; true</code>, and that worked in my hosted environment. But then of course anyone can do anything. So I do have a workaround for my editors, but it's pretty inconvenient as I can only allow them to edit for a small time frame.</p>\n<p dir=\"auto\">Finally, this is my first time using PayloadCMS, and I am hoping that I made some very simple mistake somewhere. Thank you in advance for you help!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1904",
    "id": "1904",
    "createdAt": "2023-01-17T17:53:47Z",
    "upvotes": 1,
    "commentTotal": 5,
    "author": {
      "name": "Barbacoa08",
      "avatar": "https://avatars.githubusercontent.com/u/13157284?u=78ff7d31c62732156767ff8d410f571b56008ada&v=4",
      "url": "https://github.com/Barbacoa08"
    },
    "comments": [
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Barbacoa08/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Barbacoa08\">@Barbacoa08</a> did you read the <a href=\"https://northflank.com/guides/deploying-payload-cms#common-issues\" rel=\"nofollow\">common issues</a> at the bottom of that article? It sounds very similar to your issue above, let us know and we can go from there <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
        "createdAt": "2023-01-17T18:16:10Z",
        "replies": null
      },
      {
        "author": {
          "name": "Barbacoa08",
          "avatar": "https://avatars.githubusercontent.com/u/13157284?u=78ff7d31c62732156767ff8d410f571b56008ada&v=4",
          "url": "https://github.com/Barbacoa08"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/JarrodMFlesch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JarrodMFlesch\">@JarrodMFlesch</a>, I did check the common issues and that wasn't it. I triple checked my DB connection string testing on both my localhost and my docker environment and it's the same in both.</p>",
        "createdAt": "2023-01-17T20:23:20Z",
        "replies": null
      },
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\">You have your <code class=\"notranslate\">serverURL</code> configured in your payload config right?</p>\n<p dir=\"auto\">I am going to turn this into a discussion as I don't think this is an issues with payload. Lets continue this convo there!</p>",
        "createdAt": "2023-01-17T20:26:36Z",
        "replies": [
          {
            "author": {
              "name": "Barbacoa08",
              "avatar": "https://avatars.githubusercontent.com/u/13157284?u=78ff7d31c62732156767ff8d410f571b56008ada&v=4",
              "url": "https://github.com/Barbacoa08"
            },
            "body": "<p dir=\"auto\">Correct, <a href=\"https://github.com/Barbacoa08/fighter-advice-cms/blob/main/src/server.ts\">my server.ts looks like</a>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import express from &quot;express&quot;;\nimport payload from &quot;payload&quot;;\n\nrequire(&quot;dotenv&quot;).config();\nconst app = express();\n\n// Redirect root to Admin panel\napp.get(&quot;/&quot;, (_, res) =&gt; {\n  res.redirect(&quot;/admin&quot;);\n});\n\n// Initialize Payload\npayload.init({\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGODB_URI,\n  express: app,\n  onInit: () =&gt; {\n    payload.logger.info(`Payload Admin URL: ${payload.getAdminURL()}`);\n  },\n});\n\n// Add your own express routes here\n\napp.listen(3000);\"><pre class=\"notranslate\"><code class=\"notranslate\">import express from \"express\";\nimport payload from \"payload\";\n\nrequire(\"dotenv\").config();\nconst app = express();\n\n// Redirect root to Admin panel\napp.get(\"/\", (_, res) =&gt; {\n  res.redirect(\"/admin\");\n});\n\n// Initialize Payload\npayload.init({\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGODB_URI,\n  express: app,\n  onInit: () =&gt; {\n    payload.logger.info(`Payload Admin URL: ${payload.getAdminURL()}`);\n  },\n});\n\n// Add your own express routes here\n\napp.listen(3000);\n</code></pre></div>",
            "createdAt": "2023-01-17T20:48:17Z"
          }
        ]
      },
      {
        "author": {
          "name": "Barbacoa08",
          "avatar": "https://avatars.githubusercontent.com/u/13157284?u=78ff7d31c62732156767ff8d410f571b56008ada&v=4",
          "url": "https://github.com/Barbacoa08"
        },
        "body": "<p dir=\"auto\">Alternatively, I am not strongly tied to any particular build system, is there a tutorial for setting up Payload CMS end-to-end? The only reason I went with Northflank was because they had a tutorial for how to fully setup Payload CMS including a DB and file storage. But if there is another, recommended, way, I'm happy to try it out.</p>\n<p dir=\"auto\">I've never setup a CMS before, so this is pretty new territory for me and I'm floundering a bit <g-emoji class=\"g-emoji\" alias=\"sweat_smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f605.png\">😅</g-emoji></p>",
        "createdAt": "2023-01-18T16:11:39Z",
        "replies": null
      },
      {
        "author": {
          "name": "Barbacoa08",
          "avatar": "https://avatars.githubusercontent.com/u/13157284?u=78ff7d31c62732156767ff8d410f571b56008ada&v=4",
          "url": "https://github.com/Barbacoa08"
        },
        "body": "<p dir=\"auto\">The issue I was having was that I wasn't adding <code class=\"notranslate\">http</code>/<code class=\"notranslate\">https</code> to my URLs in the <code class=\"notranslate\">csrf</code> section. <a href=\"https://github.com/payloadcms/payload/discussions/1918#discussioncomment-4781784\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1918/hovercard?comment_id=4781784\">As described by this comment</a> in a different conversation.</p>",
        "createdAt": "2023-01-27T22:10:04Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "Barbacoa08",
        "avatar": "https://avatars.githubusercontent.com/u/13157284?u=78ff7d31c62732156767ff8d410f571b56008ada&v=4",
        "url": "https://github.com/Barbacoa08"
      },
      "body": "<p dir=\"auto\">The issue I was having was that I wasn't adding <code class=\"notranslate\">http</code>/<code class=\"notranslate\">https</code> to my URLs in the <code class=\"notranslate\">csrf</code> section. <a href=\"https://github.com/payloadcms/payload/discussions/1918#discussioncomment-4781784\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1918/hovercard?comment_id=4781784\">As described by this comment</a> in a different conversation.</p>",
      "createdAt": "2023-01-27T22:10:04Z",
      "chosenAt": "2023-01-27T22:10:07Z",
      "chosenBy": "Barbacoa08",
      "replies": null
    }
  },
  {
    "title": "What does a path of a field look like?",
    "body": "<p dir=\"auto\">I might be missing something obvious, but I am unsure what a field path looks like, specially when you have tabs, groups, arrays.<br>\nPlease consider what I am trying to achieve and let me know if any of my assumptions look wrong:</p>\n<ul dir=\"auto\">\n<li>have a custom component to handle selecting ingredients (IngredientSelector)</li>\n<li>depending on the values selected inside this custom component, set the values for the readonly field 'inEach'. I made this field readonly so the user can not change it, its value is only set based on the ingredient selected</li>\n<li>I tried to use 'useField' inside IngredientSelector and call 'setValue' on the handler function when an ingredient is selected to set the value of 'inEach'</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const { value, setValue } = useField&lt;string&gt;('path')\"><pre class=\"notranslate\"><code class=\"notranslate\">const { value, setValue } = useField&lt;string&gt;('path')\n</code></pre></div>\n<p dir=\"auto\">What would be the field path for 'inEach' based on the config below?:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const Recipes: CollectionConfig = {\n  slug: 'recipes',\n  admin: {\n    useAsTitle: 'name',\n  },\n  fields: [\n    {\n        type: 'tabs',\n        tabs: [\n            {\n                label: 'TabA',\n                fields: [\n                    {\n                        name: 'name',\n                        type: 'text',\n                    }\n                ]\n            },\n            {\n                label: 'TabB',\n                fields: [\n                    {\n                        name: 'ingredients',\n                        type: 'array',\n                        fields: [\n                            {\n                                name: 'name',\n                                type: 'text'\n                            },\n                            {\n                                name: 'quantity',\n                                type: 'text'\n                            },\n                            {\n                                name: 'itemId',\n                                type: 'text',\n                                admin: {\n                                    components: {\n                                        Field: IngredientSelector\n                                    }\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        name: 'amount',\n                        label: 'Amount',\n                        type: 'group',\n                        admin: { readOnly: true },\n                        fields: [\n                          { name: 'inG', label: 'Grams', type: 'number' },\n                          { name: 'inMl', label: 'Millilitres', type: 'number' },\n                          { name: 'inEach', label: 'Each', type: 'number' }\n                        ]\n                    },\n                ]\n            }\n    ] }\n  ],\n}\n\nexport default Recipes;\"><pre class=\"notranslate\"><code class=\"notranslate\">const Recipes: CollectionConfig = {\n  slug: 'recipes',\n  admin: {\n    useAsTitle: 'name',\n  },\n  fields: [\n    {\n        type: 'tabs',\n        tabs: [\n            {\n                label: 'TabA',\n                fields: [\n                    {\n                        name: 'name',\n                        type: 'text',\n                    }\n                ]\n            },\n            {\n                label: 'TabB',\n                fields: [\n                    {\n                        name: 'ingredients',\n                        type: 'array',\n                        fields: [\n                            {\n                                name: 'name',\n                                type: 'text'\n                            },\n                            {\n                                name: 'quantity',\n                                type: 'text'\n                            },\n                            {\n                                name: 'itemId',\n                                type: 'text',\n                                admin: {\n                                    components: {\n                                        Field: IngredientSelector\n                                    }\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        name: 'amount',\n                        label: 'Amount',\n                        type: 'group',\n                        admin: { readOnly: true },\n                        fields: [\n                          { name: 'inG', label: 'Grams', type: 'number' },\n                          { name: 'inMl', label: 'Millilitres', type: 'number' },\n                          { name: 'inEach', label: 'Each', type: 'number' }\n                        ]\n                    },\n                ]\n            }\n    ] }\n  ],\n}\n\nexport default Recipes;\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/1910",
    "id": "1910",
    "createdAt": "2023-01-19T03:43:05Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "cerize",
      "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
      "url": "https://github.com/cerize"
    },
    "comments": [
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\">Since your tabs do not have a <code class=\"notranslate\">name</code> field, I believe the path would be <code class=\"notranslate\">amount.inEach</code></p>",
        "createdAt": "2023-01-19T03:57:20Z",
        "replies": [
          {
            "author": {
              "name": "cerize",
              "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
              "url": "https://github.com/cerize"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/JarrodMFlesch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JarrodMFlesch\">@JarrodMFlesch</a> Thanks a lot for your reply. So if I understand this correctly, as long as I put the 'name' field I can build the path using it no matter the kind of field? Does it matter that the parent of my custom field is an array?</p>",
            "createdAt": "2023-01-19T15:28:19Z"
          },
          {
            "author": {
              "name": "JarrodMFlesch",
              "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
              "url": "https://github.com/JarrodMFlesch"
            },
            "body": "<p dir=\"auto\">No problem!</p>\n<p dir=\"auto\">This is specific to <code class=\"notranslate\">tab</code> fields, which basically turns it into a group. Fields like <code class=\"notranslate\">row</code>, <code class=\"notranslate\">ui</code>, <code class=\"notranslate\">tabs</code> cannot have a name property, therefore are ignored when accessing a field by a path.</p>",
            "createdAt": "2023-01-19T15:41:35Z"
          },
          {
            "author": {
              "name": "cerize",
              "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
              "url": "https://github.com/cerize"
            },
            "body": "<p dir=\"auto\">Thanks again <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/JarrodMFlesch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JarrodMFlesch\">@JarrodMFlesch</a> . For people with the same problem as me, one easy way to figure out the path is to call <code class=\"notranslate\">const [fields, dispatchFields] = useAllFormFields()</code> and then console.log(fields) to see all paths.</p>",
            "createdAt": "2023-01-21T20:46:39Z"
          },
          {
            "author": {
              "name": "cerize",
              "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
              "url": "https://github.com/cerize"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/JarrodMFlesch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JarrodMFlesch\">@JarrodMFlesch</a>  How do I know my current position in the array?</p>",
            "createdAt": "2023-01-26T17:17:23Z"
          },
          {
            "author": {
              "name": "cerize",
              "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
              "url": "https://github.com/cerize"
            },
            "body": "<p dir=\"auto\">Answering my own question, a custom component in an array has a 'props' that contains a 'path' with the array position.</p>",
            "createdAt": "2023-01-27T15:59:29Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "JarrodMFlesch",
        "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
        "url": "https://github.com/JarrodMFlesch"
      },
      "body": "<p dir=\"auto\">Since your tabs do not have a <code class=\"notranslate\">name</code> field, I believe the path would be <code class=\"notranslate\">amount.inEach</code></p>",
      "createdAt": "2023-01-19T03:57:20Z",
      "chosenAt": "2023-01-21T20:46:59Z",
      "chosenBy": "cerize",
      "replies": [
        {
          "author": {
            "name": "cerize",
            "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
            "url": "https://github.com/cerize"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/JarrodMFlesch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JarrodMFlesch\">@JarrodMFlesch</a> Thanks a lot for your reply. So if I understand this correctly, as long as I put the 'name' field I can build the path using it no matter the kind of field? Does it matter that the parent of my custom field is an array?</p>",
          "createdAt": "2023-01-19T15:28:19Z"
        },
        {
          "author": {
            "name": "JarrodMFlesch",
            "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
            "url": "https://github.com/JarrodMFlesch"
          },
          "body": "<p dir=\"auto\">No problem!</p>\n<p dir=\"auto\">This is specific to <code class=\"notranslate\">tab</code> fields, which basically turns it into a group. Fields like <code class=\"notranslate\">row</code>, <code class=\"notranslate\">ui</code>, <code class=\"notranslate\">tabs</code> cannot have a name property, therefore are ignored when accessing a field by a path.</p>",
          "createdAt": "2023-01-19T15:41:35Z"
        },
        {
          "author": {
            "name": "cerize",
            "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
            "url": "https://github.com/cerize"
          },
          "body": "<p dir=\"auto\">Thanks again <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/JarrodMFlesch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JarrodMFlesch\">@JarrodMFlesch</a> . For people with the same problem as me, one easy way to figure out the path is to call <code class=\"notranslate\">const [fields, dispatchFields] = useAllFormFields()</code> and then console.log(fields) to see all paths.</p>",
          "createdAt": "2023-01-21T20:46:39Z"
        },
        {
          "author": {
            "name": "cerize",
            "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
            "url": "https://github.com/cerize"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/JarrodMFlesch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JarrodMFlesch\">@JarrodMFlesch</a>  How do I know my current position in the array?</p>",
          "createdAt": "2023-01-26T17:17:23Z"
        },
        {
          "author": {
            "name": "cerize",
            "avatar": "https://avatars.githubusercontent.com/u/12276027?u=bf6f213b909109b1968855a4bc231443137d9b6f&v=4",
            "url": "https://github.com/cerize"
          },
          "body": "<p dir=\"auto\">Answering my own question, a custom component in an array has a 'props' that contains a 'path' with the array position.</p>",
          "createdAt": "2023-01-27T15:59:29Z"
        }
      ]
    }
  },
  {
    "title": "What type for monetary values",
    "body": "<p dir=\"auto\">I would like to keep monetary (money/prices) in collections. Which type will be okay, number? But do I not lose precision on arithmetic problems?</p>\n<p dir=\"auto\">Can I create own implementation for field compliant with: <a href=\"https://www.mongodb.com/docs/manual/tutorial/model-monetary-data/\" rel=\"nofollow\">https://www.mongodb.com/docs/manual/tutorial/model-monetary-data/</a> ?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1958",
    "id": "1958",
    "createdAt": "2023-01-26T14:57:01Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "dawidmachon",
      "avatar": "https://avatars.githubusercontent.com/u/44931854?v=4",
      "url": "https://github.com/dawidmachon"
    },
    "comments": [
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/dawidmachon/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dawidmachon\">@dawidmachon</a> It is generally best practice to store monetary values in the smallest denomination, there are plenty of good articles out there explaining why this is the case.</p>\n<p dir=\"auto\">So personally I would opt to use the number field almost always (storing as cents), and then add a description that displays the amount in a dollar amount.</p>",
        "createdAt": "2023-01-26T15:49:24Z",
        "replies": [
          {
            "author": {
              "name": "jacobsfletch",
              "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
              "url": "https://github.com/jacobsfletch"
            },
            "body": "<p dir=\"auto\">Related: <a aria-label=\"Pull request #1924\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1549942496\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1924\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/1924/hovercard\" href=\"https://github.com/payloadcms/payload/pull/1924\">#1924</a></p>",
            "createdAt": "2023-01-26T16:21:26Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "JarrodMFlesch",
        "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
        "url": "https://github.com/JarrodMFlesch"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/dawidmachon/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dawidmachon\">@dawidmachon</a> It is generally best practice to store monetary values in the smallest denomination, there are plenty of good articles out there explaining why this is the case.</p>\n<p dir=\"auto\">So personally I would opt to use the number field almost always (storing as cents), and then add a description that displays the amount in a dollar amount.</p>",
      "createdAt": "2023-01-26T15:49:24Z",
      "chosenAt": "2023-01-27T17:48:56Z",
      "chosenBy": "dawidmachon",
      "replies": [
        {
          "author": {
            "name": "jacobsfletch",
            "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
            "url": "https://github.com/jacobsfletch"
          },
          "body": "<p dir=\"auto\">Related: <a aria-label=\"Pull request #1924\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1549942496\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1924\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/1924/hovercard\" href=\"https://github.com/payloadcms/payload/pull/1924\">#1924</a></p>",
          "createdAt": "2023-01-26T16:21:26Z"
        }
      ]
    }
  },
  {
    "title": "ERROR (payload): Forbidden: You are not allowed to perform this action.",
    "body": "<h1 dir=\"auto\">Bug Report</h1>\n<p dir=\"auto\">Hi, I deployed my payload-cms to docker on a vps, but after the first user registration I don't have access to anything. Everything works fine, no other errors in the container logs, but I can't create any new data in the collection due to <code class=\"notranslate\">\"ERROR (payload): Forbidden: You are not allowed to perform this action\".</code><br>\nThis only happens in a production environment, but running <code class=\"notranslate\">yarn serve</code> on a local machine doesn't present any problems.</p>\n<h2 dir=\"auto\">Steps to Reproduce</h2>\n<ol dir=\"auto\">\n<li>Account registration process</li>\n<li>Creation of a new category attempt</li>\n</ol>\n<h2 dir=\"auto\">Other Details</h2>\n<p dir=\"auto\">Payload version: 1.5.9</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1918",
    "id": "1918",
    "createdAt": "2023-01-19T15:52:05Z",
    "upvotes": 3,
    "commentTotal": 3,
    "author": {
      "name": "eduhdev12",
      "avatar": "https://avatars.githubusercontent.com/u/60825949?u=e8f37ef442f135928800cb9e2df51f6c4c6c8f79&v=4",
      "url": "https://github.com/eduhdev12"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/eduhdev12/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/eduhdev12\">@eduhdev12</a> — this is probably related to one of two things:</p>\n<ol dir=\"auto\">\n<li>your cookie config. You should open your inspector, look at the Network tab, and inspect the auth cookie that is being set. Make sure it doesn't get blocked for any reason. It could be that you have some cookie settings that are conflicting with your live instance.</li>\n<li>CSRF. Take a look at this link: <a href=\"https://payloadcms.com/docs/authentication/overview#csrf-protection\" rel=\"nofollow\">https://payloadcms.com/docs/authentication/overview#csrf-protection</a> - you may need to whitelist your production domain within your <code class=\"notranslate\">csrf</code> settings to allow the cookie to be read while on your production domain.</li>\n</ol>\n<p dir=\"auto\">I'll convert this to a discussion to keep conversation going as this is not a problem with Payload itself, but I'm more than happy to help!</p>",
        "createdAt": "2023-01-19T16:07:55Z",
        "replies": [
          {
            "author": {
              "name": "eduhdev12",
              "avatar": "https://avatars.githubusercontent.com/u/60825949?u=e8f37ef442f135928800cb9e2df51f6c4c6c8f79&v=4",
              "url": "https://github.com/eduhdev12"
            },
            "body": "<p dir=\"auto\">Thank you for these details, but sadly the <code class=\"notranslate\">csrf</code> setting didn't fix the issue and I can confirm that <code class=\"notranslate\">cookie</code> header is present in request!</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"cookie: payload-token=jwt\"><pre class=\"notranslate\"><code class=\"notranslate\">cookie: payload-token=jwt\n</code></pre></div>\n<p dir=\"auto\">The decoded jwt payload is good, but still no new results!<br>\nI really want to fix this issue, it's very important</p>",
            "createdAt": "2023-01-19T16:20:25Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Are there any yellow \"alert\" symbols on the cookie? what browser are you using?</p>\n<p dir=\"auto\">You should compare the Payload demo network panel cookies / requests to that of your prod instance.</p>\n<p dir=\"auto\">See my inspector here after logging into the demo:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6651896/213497665-1f7b36c8-3a03-441b-9b01-7c2a15e56d59.png\"><img width=\"1728\" alt=\"Screen Shot 2023-01-19 at 11 25 51 AM\" src=\"https://user-images.githubusercontent.com/6651896/213497665-1f7b36c8-3a03-441b-9b01-7c2a15e56d59.png\" style=\"max-width: 100%;\"></a></p>",
            "createdAt": "2023-01-19T16:26:43Z"
          },
          {
            "author": {
              "name": "eduhdev12",
              "avatar": "https://avatars.githubusercontent.com/u/60825949?u=e8f37ef442f135928800cb9e2df51f6c4c6c8f79&v=4",
              "url": "https://github.com/eduhdev12"
            },
            "body": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/60825949/213499021-1e5e673a-11b8-4654-beea-22cc772a7387.png\"><img src=\"https://user-images.githubusercontent.com/60825949/213499021-1e5e673a-11b8-4654-beea-22cc772a7387.png\" alt=\"mdJVFubdSr\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">The <code class=\"notranslate\">/api/access</code> request has no issues, the problem is when I try to create a new item in any collection even that create access is <code class=\"notranslate\">() =&gt; true</code></p>",
            "createdAt": "2023-01-19T16:32:48Z"
          },
          {
            "author": {
              "name": "eduhdev12",
              "avatar": "https://avatars.githubusercontent.com/u/60825949?u=e8f37ef442f135928800cb9e2df51f6c4c6c8f79&v=4",
              "url": "https://github.com/eduhdev12"
            },
            "body": "<p dir=\"auto\">This is the whole console log if it helps</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[16:28:49] ERROR (payload): Forbidden: You are not allowed to perform this action.\n    at new ExtendableError (/usr/src/app/node_modules/payload/dist/errors/APIError.js:22:15)\n    at new APIError (/usr/src/app/node_modules/payload/dist/errors/APIError.js:38:9)\n    at new Forbidden (/usr/src/app/node_modules/payload/dist/errors/Forbidden.js:10:9)\n    at executeAccess (/usr/src/app/node_modules/payload/dist/auth/executeAccess.js:9:23)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at async create (/usr/src/app/node_modules/payload/dist/collections/operations/create.js:37:9)\n    at async createHandler (/usr/src/app/node_modules/payload/dist/collections/requestHandlers/create.js:12:21)\"><pre class=\"notranslate\"><code class=\"notranslate\">[16:28:49] ERROR (payload): Forbidden: You are not allowed to perform this action.\n    at new ExtendableError (/usr/src/app/node_modules/payload/dist/errors/APIError.js:22:15)\n    at new APIError (/usr/src/app/node_modules/payload/dist/errors/APIError.js:38:9)\n    at new Forbidden (/usr/src/app/node_modules/payload/dist/errors/Forbidden.js:10:9)\n    at executeAccess (/usr/src/app/node_modules/payload/dist/auth/executeAccess.js:9:23)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at async create (/usr/src/app/node_modules/payload/dist/collections/operations/create.js:37:9)\n    at async createHandler (/usr/src/app/node_modules/payload/dist/collections/requestHandlers/create.js:12:21)\n</code></pre></div>",
            "createdAt": "2023-01-19T16:42:01Z"
          }
        ]
      },
      {
        "author": {
          "name": "Barbacoa08",
          "avatar": "https://avatars.githubusercontent.com/u/13157284?u=78ff7d31c62732156767ff8d410f571b56008ada&v=4",
          "url": "https://github.com/Barbacoa08"
        },
        "body": "<p dir=\"auto\">This sounds like the same issue that I'm running into (<a href=\"https://github.com/payloadcms/payload/discussions/1904\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1904/hovercard\">link to my discussion</a>).</p>\n<p dir=\"auto\">Related, the <a href=\"https://payloadcms.com/docs/deployment#Docker\" rel=\"nofollow\">deployment docs</a> is 404.</p>",
        "createdAt": "2023-01-19T16:27:38Z",
        "replies": [
          {
            "author": {
              "name": "eduhdev12",
              "avatar": "https://avatars.githubusercontent.com/u/60825949?u=e8f37ef442f135928800cb9e2df51f6c4c6c8f79&v=4",
              "url": "https://github.com/eduhdev12"
            },
            "body": "<p dir=\"auto\">Have you managed to fix it?</p>",
            "createdAt": "2023-01-19T16:35:56Z"
          },
          {
            "author": {
              "name": "Barbacoa08",
              "avatar": "https://avatars.githubusercontent.com/u/13157284?u=78ff7d31c62732156767ff8d410f571b56008ada&v=4",
              "url": "https://github.com/Barbacoa08"
            },
            "body": "<p dir=\"auto\">Nope <g-emoji class=\"g-emoji\" alias=\"disappointed\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f61e.png\">😞</g-emoji>. Still poking around trying to get it working. I can use <code class=\"notranslate\">() =&gt; true</code> to be able to make updates. So for now I'm just setting everything to <code class=\"notranslate\">() =&gt; true</code> while I make updates, than immediately reseting it back to <code class=\"notranslate\">isAdmin</code>/ect once I'm done making edits. Or just editing locally, as I'm also <em>only</em> seeing this happen in the prod environment, localhost works as expected.</p>",
            "createdAt": "2023-01-19T16:38:23Z"
          },
          {
            "author": {
              "name": "eduhdev12",
              "avatar": "https://avatars.githubusercontent.com/u/60825949?u=e8f37ef442f135928800cb9e2df51f6c4c6c8f79&v=4",
              "url": "https://github.com/eduhdev12"
            },
            "body": "<p dir=\"auto\">For me <code class=\"notranslate\">() =&gt; true</code> is not working at all in production, just on local env</p>",
            "createdAt": "2023-01-19T16:42:57Z"
          },
          {
            "author": {
              "name": "Barbacoa08",
              "avatar": "https://avatars.githubusercontent.com/u/13157284?u=78ff7d31c62732156767ff8d410f571b56008ada&v=4",
              "url": "https://github.com/Barbacoa08"
            },
            "body": "<p dir=\"auto\">Your <code class=\"notranslate\">payload.config.ts</code> has this line in it yes?<br>\n<code class=\"notranslate\">serverURL: process.env.PAYLOAD_PUBLIC_BASE_DNS</code></p>\n<p dir=\"auto\">And your <code class=\"notranslate\">PAYLOAD_PUBLIC_BASE_DNS</code> includes your UN+PW yes? MongoDB Atlas will look like this:<br>\n<code class=\"notranslate\">mongodb+srv://{username}&amp;{password}@{dbname}.ntzanfx.mongodb.net/?retryWrites=true&amp;w=majority</code></p>\n<p dir=\"auto\">BTW, the only tutorial I could find about hosting PayloadCMS was <a href=\"https://northflank.com/guides/deploying-payload-cms\" rel=\"nofollow\">at Northflank</a>. I'm running into a similar issue that you are, but I was able to get a bit further. And, it's free for something as simple as a POC.</p>",
            "createdAt": "2023-01-19T17:03:52Z"
          },
          {
            "author": {
              "name": "eduhdev12",
              "avatar": "https://avatars.githubusercontent.com/u/60825949?u=e8f37ef442f135928800cb9e2df51f6c4c6c8f79&v=4",
              "url": "https://github.com/eduhdev12"
            },
            "body": "<p dir=\"auto\">I am trying to see if the serverURL is the issue, but I am sure that mongodb is working because I tried to change something manually in database and it's reading the date, the problem is writing new data</p>\n<p dir=\"auto\">Do you include in the serverURL the <code class=\"notranslate\">http</code>/<code class=\"notranslate\">https</code> method?</p>",
            "createdAt": "2023-01-19T17:30:14Z"
          },
          {
            "author": {
              "name": "Barbacoa08",
              "avatar": "https://avatars.githubusercontent.com/u/13157284?u=78ff7d31c62732156767ff8d410f571b56008ada&v=4",
              "url": "https://github.com/Barbacoa08"
            },
            "body": "<p dir=\"auto\"><code class=\"notranslate\">https</code></p>",
            "createdAt": "2023-01-19T18:39:12Z"
          },
          {
            "author": {
              "name": "eduhdev12",
              "avatar": "https://avatars.githubusercontent.com/u/60825949?u=e8f37ef442f135928800cb9e2df51f6c4c6c8f79&v=4",
              "url": "https://github.com/eduhdev12"
            },
            "body": "<p dir=\"auto\">I made a little progress, now <code class=\"notranslate\">() =&gt; true</code> works good, but any access guard or checking if <code class=\"notranslate\">user</code> is undefined is not working at all, doing requests from the cms and I get the user as undefined all the time</p>",
            "createdAt": "2023-01-19T18:40:34Z"
          },
          {
            "author": {
              "name": "Barbacoa08",
              "avatar": "https://avatars.githubusercontent.com/u/13157284?u=78ff7d31c62732156767ff8d410f571b56008ada&v=4",
              "url": "https://github.com/Barbacoa08"
            },
            "body": "<p dir=\"auto\">Are you using a docker container? It sounds like you're in basically the same situation that I am now, and I'm wondering how close our projects are.</p>\n<p dir=\"auto\">My hosting environment is running a docker container. And I'm wondering if it's the docker container that's causing these auth issues.</p>\n<p dir=\"auto\">Also, do you have any <code class=\"notranslate\">csrf</code> and/or <code class=\"notranslate\">cors</code> settings in your <code class=\"notranslate\">payload.config.ts</code>?</p>",
            "createdAt": "2023-01-19T18:58:54Z"
          },
          {
            "author": {
              "name": "eduhdev12",
              "avatar": "https://avatars.githubusercontent.com/u/60825949?u=e8f37ef442f135928800cb9e2df51f6c4c6c8f79&v=4",
              "url": "https://github.com/eduhdev12"
            },
            "body": "<p dir=\"auto\">Yes, I am using a normal docker container and <code class=\"notranslate\">csrf</code>,  <code class=\"notranslate\">cors: \"*\"</code>, sometimes it makes a double call to create access and the first one is undefined and the second one contains the user, but the error comes up without any action.</p>",
            "createdAt": "2023-01-19T19:20:02Z"
          },
          {
            "author": {
              "name": "Barbacoa08",
              "avatar": "https://avatars.githubusercontent.com/u/13157284?u=78ff7d31c62732156767ff8d410f571b56008ada&v=4",
              "url": "https://github.com/Barbacoa08"
            },
            "body": "<p dir=\"auto\">Yup, that's what I'm seeing as well. I have my <code class=\"notranslate\">csrf</code> and <code class=\"notranslate\">cors</code> locked to my environment, but otherwise we seem to have the same setup and are seeing the same thing happen.</p>",
            "createdAt": "2023-01-19T20:52:39Z"
          }
        ]
      },
      {
        "author": {
          "name": "eduhdev12",
          "avatar": "https://avatars.githubusercontent.com/u/60825949?u=e8f37ef442f135928800cb9e2df51f6c4c6c8f79&v=4",
          "url": "https://github.com/eduhdev12"
        },
        "body": "<p dir=\"auto\">Hello, in my case someone helped me and changed the <code class=\"notranslate\">csrf</code> that must follow the prefix connection type if it's <code class=\"notranslate\">http</code> or <code class=\"notranslate\">https</code> and now seems to work flawlessly!</p>",
        "createdAt": "2023-01-25T21:01:15Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "eduhdev12",
        "avatar": "https://avatars.githubusercontent.com/u/60825949?u=e8f37ef442f135928800cb9e2df51f6c4c6c8f79&v=4",
        "url": "https://github.com/eduhdev12"
      },
      "body": "<p dir=\"auto\">Hello, in my case someone helped me and changed the <code class=\"notranslate\">csrf</code> that must follow the prefix connection type if it's <code class=\"notranslate\">http</code> or <code class=\"notranslate\">https</code> and now seems to work flawlessly!</p>",
      "createdAt": "2023-01-25T21:01:15Z",
      "chosenAt": "2023-01-25T21:01:23Z",
      "chosenBy": "eduhdev12",
      "replies": null
    }
  },
  {
    "title": "How to add composite unique condition",
    "body": "<p dir=\"auto\">How can I add a composite unique condition on two fields (author, slug)</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n  name: 'slug',\n  type: 'text',\n},\n{\n  name: 'author',\n  type: 'relationship',\n  relationTo: 'creators',\n},\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n  name: 'slug',\n  type: 'text',\n},\n{\n  name: 'author',\n  type: 'relationship',\n  relationTo: 'creators',\n},\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/1946",
    "id": "1946",
    "createdAt": "2023-01-24T16:23:45Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "rednithin",
      "avatar": "https://avatars.githubusercontent.com/u/14135943?u=87aedd143bb0210bcc2bac89522b5f7ff981410e&v=4",
      "url": "https://github.com/rednithin"
    },
    "comments": [
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rednithin/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rednithin\">@rednithin</a> you could make a third field that concatenates these two (with a hook), and mark that field as unique.</p>",
        "createdAt": "2023-01-25T15:05:33Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "JarrodMFlesch",
        "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
        "url": "https://github.com/JarrodMFlesch"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rednithin/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rednithin\">@rednithin</a> you could make a third field that concatenates these two (with a hook), and mark that field as unique.</p>",
      "createdAt": "2023-01-25T15:05:33Z",
      "chosenAt": "2023-01-30T21:49:37Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "How can I trigger a Github Action with the `afterChange` hook? - HTTP webhooks?",
    "body": "<p dir=\"auto\">Would it make sense to add a Setting in the Menu to easily add a URL to add a <a href=\"https://en.wikipedia.org/wiki/Webhook\" rel=\"nofollow\">Webhook</a>?</p>\n<p dir=\"auto\">Or should I hardcode the URL when I make the API call using the GitHub API to trigger a webhook event?</p>\n<ul dir=\"auto\">\n<li><a href=\"https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#repository_dispatch\">https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#repository_dispatch</a></li>\n<li><a href=\"https://blog.knoldus.com/manual-trigger-in-github-actions/\" rel=\"nofollow\">https://blog.knoldus.com/manual-trigger-in-github-actions/</a></li>\n</ul>\n<p dir=\"auto\">Context: I'm researching using this CMS to be able to trigger a static build of a Next.JS website made for SEO purposes.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1942",
    "id": "1942",
    "createdAt": "2023-01-24T12:18:03Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "gianpaj",
      "avatar": "https://avatars.githubusercontent.com/u/899175?u=dbe4495181af1751dcd5759a54b99fc3855033ab&v=4",
      "url": "https://github.com/gianpaj"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">All configuration is typically done in the payload config and/or an .env file. This is where you would configure the URL and any other values.</p>\n<p dir=\"auto\">For GitHub API, the way to interact programmatically would be to use <a href=\"https://github.com/octokit/octokit.js\">Octokit</a>. So within your hook, you would instantiate Octokit, then use whatever methods they have available - likely something to do with a workflow run.</p>",
        "createdAt": "2023-01-24T13:54:59Z",
        "replies": [
          {
            "author": {
              "name": "gianpaj",
              "avatar": "https://avatars.githubusercontent.com/u/899175?u=dbe4495181af1751dcd5759a54b99fc3855033ab&v=4",
              "url": "https://github.com/gianpaj"
            },
            "body": "<p dir=\"auto\">That's great! thanks so much:)</p>",
            "createdAt": "2023-01-24T19:15:39Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">All configuration is typically done in the payload config and/or an .env file. This is where you would configure the URL and any other values.</p>\n<p dir=\"auto\">For GitHub API, the way to interact programmatically would be to use <a href=\"https://github.com/octokit/octokit.js\">Octokit</a>. So within your hook, you would instantiate Octokit, then use whatever methods they have available - likely something to do with a workflow run.</p>",
      "createdAt": "2023-01-24T13:54:59Z",
      "chosenAt": "2023-01-30T21:49:29Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "gianpaj",
            "avatar": "https://avatars.githubusercontent.com/u/899175?u=dbe4495181af1751dcd5759a54b99fc3855033ab&v=4",
            "url": "https://github.com/gianpaj"
          },
          "body": "<p dir=\"auto\">That's great! thanks so much:)</p>",
          "createdAt": "2023-01-24T19:15:39Z"
        }
      ]
    }
  },
  {
    "title": "Getting req.user as null after logging in via GraphQL from client.",
    "body": "<h1 dir=\"auto\">Bug Report</h1>\n<p dir=\"auto\">I'm currently logging in on a collection using graphql. Right now the collection setup looks like this.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  auth: true, // Auth is enabled,\n\n  access: {\n    read: () =&gt; true,\n    create: () =&gt; true\n  },\"><pre lang=\"´ts\" class=\"notranslate\"><code class=\"notranslate\">  auth: true, // Auth is enabled,\n\n  access: {\n    read: () =&gt; true,\n    create: () =&gt; true\n  },\n</code></pre></div>\n<p dir=\"auto\">I'm using an Authorization header on the graphql requests that looks like</p>\n<p dir=\"auto\"><code class=\"notranslate\">{\"Authorization\": \"JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpb(...)\"}</code></p>\n<p dir=\"auto\">Using the token that I got back from logging in via graphql.</p>\n<p dir=\"auto\">When testing it in the graphql playground I'm getting null response on token and user. It seems like req.user is null when I debug the <code class=\"notranslate\">me</code>-operation. Any ideas what I'm doing wrong?</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  &quot;data&quot;: {\n    &quot;mePublicUser&quot;: {\n      &quot;token&quot;: null,\n      &quot;user&quot;: null\n    }\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-kos\">{</span>\n  <span class=\"pl-s\">\"data\"</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s\">\"mePublicUser\"</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s\">\"token\"</span>: <span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-s\">\"user\"</span>: <span class=\"pl-c1\">null</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/1881",
    "id": "1881",
    "createdAt": "2023-01-14T11:05:40Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "itzaks",
      "avatar": "https://avatars.githubusercontent.com/u/1019364?v=4",
      "url": "https://github.com/itzaks"
    },
    "comments": [
      {
        "author": {
          "name": "itzaks",
          "avatar": "https://avatars.githubusercontent.com/u/1019364?v=4",
          "url": "https://github.com/itzaks"
        },
        "body": "<p dir=\"auto\">After some digging I thought it had to do with the response cookie not being set from the server, since I hadn't configured <code class=\"notranslate\">credentials: 'include'</code> on my cors-graphql request, and then I configured the auth to look like this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  auth: {\n    cookies: {\n      secure: true,\n      sameSite: 'none'\n    }\n  },\"><pre class=\"notranslate\">  <span class=\"pl-s1\">auth</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">cookies</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">secure</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">sameSite</span>: <span class=\"pl-s\">'none'</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">I now see the cookie <code class=\"notranslate\">payload-token</code> in my response cookies, but still I'm getting null in the me-queries. What am I missing here?</p>",
        "createdAt": "2023-01-14T13:18:36Z",
        "replies": null
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">HEy <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/itzaks/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/itzaks\">@itzaks</a> —</p>\n<p dir=\"auto\">Couple clarifying things for ya quick:</p>\n<p dir=\"auto\">I believe you should only need to specify <code class=\"notranslate\">credentials: 'include'</code> on fetches if you are relying on Payload's HTTP-only cookie to authenticate.</p>\n<p dir=\"auto\">But if you are specifying the <code class=\"notranslate\">Authorization</code> header directly, that will override the HTTP cookie.  So it seems to me like you might be trying to do both here.</p>\n<p dir=\"auto\">Anyway, that's just background info.</p>\n<p dir=\"auto\">I just tried to recreate your issue on the Payload demo (<a href=\"https://demo.payloadcms.com/api/graphql-playground\" rel=\"nofollow\">https://demo.payloadcms.com/api/graphql-playground</a>) but I can't. I even used Postman to run a <code class=\"notranslate\">meUser</code> directly from the demo's GraphQL endpoint.</p>\n<p dir=\"auto\">I expect something else is amiss here, and it's just a small issue with your setup. If you can create a minimally reproducible repo, I am happy to help diagnose further! Let's keep the convo going in a discussion.</p>",
        "createdAt": "2023-01-15T13:49:37Z",
        "replies": [
          {
            "author": {
              "name": "itzaks",
              "avatar": "https://avatars.githubusercontent.com/u/1019364?v=4",
              "url": "https://github.com/itzaks"
            },
            "body": "<p dir=\"auto\">Thanks for clarifying <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>! Makes sense.</p>\n<p dir=\"auto\">When digging down into a bare minimum reproduction, I found that the cause of this issue is another Collection that has a different, custom, authentication strategy.</p>\n<p dir=\"auto\">These following lines are responsible for setting up the auth strategy for my separate <code class=\"notranslate\">ClientUser</code> collection.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\n  auth: {\n    disableLocalStrategy: true,\n    strategies: [{\n      strategy: (ctx) =&gt;\n        new MagicLoginStrategy(ctx, 'client-user', process.env.MAGIC_LINK_SECRET),\n      name: 'magicLogin'\n    }]\n  },\"><pre class=\"notranslate\">  <span class=\"pl-s1\">auth</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">disableLocalStrategy</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">strategies</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-en\">strategy</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">ctx</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span>\n        <span class=\"pl-k\">new</span> <span class=\"pl-smi\">MagicLoginStrategy</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">ctx</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'client-user'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MAGIC_LINK_SECRET</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'magicLogin'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">If I change it to simply <code class=\"notranslate\">auth: true</code>, my me-queries resolve as usual. Any ideas on what I'm doing wrong here?</p>",
            "createdAt": "2023-01-17T23:26:45Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Honestly it’s probably that auth strategy. Not knowing the specifics, I bet that it hijacks requests and redirects you somewhere if you are not logged in - therefore not allowing our built in auth strategies to run.</p>\n<p dir=\"auto\">One thing I would say is that most auth strategies are not built to authenticate API routes AND UI routes. Probably the cause of why your strategy isn’t working.</p>",
            "createdAt": "2023-01-17T23:53:13Z"
          },
          {
            "author": {
              "name": "itzaks",
              "avatar": "https://avatars.githubusercontent.com/u/1019364?v=4",
              "url": "https://github.com/itzaks"
            },
            "body": "<p dir=\"auto\">Sounds fair. I wrote the strategy myself so it's probably something to look through then. But I'm curious as to why it affects a collection it shouldn't even be used on?</p>",
            "createdAt": "2023-01-18T00:09:33Z"
          },
          {
            "author": {
              "name": "itzaks",
              "avatar": "https://avatars.githubusercontent.com/u/1019364?v=4",
              "url": "https://github.com/itzaks"
            },
            "body": "<p dir=\"auto\">I marked it as answered now :-) however I think there is something going on with using multiple auth strategies that could be worth looking in to.</p>",
            "createdAt": "2023-01-19T08:53:34Z"
          }
        ]
      },
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\">Related: <a aria-label=\"Discussion #1902\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4765185\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1902\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1902/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/1902\">#1902</a></p>",
        "createdAt": "2023-01-24T18:44:29Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">HEy <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/itzaks/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/itzaks\">@itzaks</a> —</p>\n<p dir=\"auto\">Couple clarifying things for ya quick:</p>\n<p dir=\"auto\">I believe you should only need to specify <code class=\"notranslate\">credentials: 'include'</code> on fetches if you are relying on Payload's HTTP-only cookie to authenticate.</p>\n<p dir=\"auto\">But if you are specifying the <code class=\"notranslate\">Authorization</code> header directly, that will override the HTTP cookie.  So it seems to me like you might be trying to do both here.</p>\n<p dir=\"auto\">Anyway, that's just background info.</p>\n<p dir=\"auto\">I just tried to recreate your issue on the Payload demo (<a href=\"https://demo.payloadcms.com/api/graphql-playground\" rel=\"nofollow\">https://demo.payloadcms.com/api/graphql-playground</a>) but I can't. I even used Postman to run a <code class=\"notranslate\">meUser</code> directly from the demo's GraphQL endpoint.</p>\n<p dir=\"auto\">I expect something else is amiss here, and it's just a small issue with your setup. If you can create a minimally reproducible repo, I am happy to help diagnose further! Let's keep the convo going in a discussion.</p>",
      "createdAt": "2023-01-15T13:49:37Z",
      "chosenAt": "2023-01-19T08:52:22Z",
      "chosenBy": "itzaks",
      "replies": [
        {
          "author": {
            "name": "itzaks",
            "avatar": "https://avatars.githubusercontent.com/u/1019364?v=4",
            "url": "https://github.com/itzaks"
          },
          "body": "<p dir=\"auto\">Thanks for clarifying <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>! Makes sense.</p>\n<p dir=\"auto\">When digging down into a bare minimum reproduction, I found that the cause of this issue is another Collection that has a different, custom, authentication strategy.</p>\n<p dir=\"auto\">These following lines are responsible for setting up the auth strategy for my separate <code class=\"notranslate\">ClientUser</code> collection.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\n  auth: {\n    disableLocalStrategy: true,\n    strategies: [{\n      strategy: (ctx) =&gt;\n        new MagicLoginStrategy(ctx, 'client-user', process.env.MAGIC_LINK_SECRET),\n      name: 'magicLogin'\n    }]\n  },\"><pre class=\"notranslate\">  <span class=\"pl-s1\">auth</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">disableLocalStrategy</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">strategies</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-en\">strategy</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">ctx</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span>\n        <span class=\"pl-k\">new</span> <span class=\"pl-smi\">MagicLoginStrategy</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">ctx</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'client-user'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MAGIC_LINK_SECRET</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'magicLogin'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">If I change it to simply <code class=\"notranslate\">auth: true</code>, my me-queries resolve as usual. Any ideas on what I'm doing wrong here?</p>",
          "createdAt": "2023-01-17T23:26:45Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Honestly it’s probably that auth strategy. Not knowing the specifics, I bet that it hijacks requests and redirects you somewhere if you are not logged in - therefore not allowing our built in auth strategies to run.</p>\n<p dir=\"auto\">One thing I would say is that most auth strategies are not built to authenticate API routes AND UI routes. Probably the cause of why your strategy isn’t working.</p>",
          "createdAt": "2023-01-17T23:53:13Z"
        },
        {
          "author": {
            "name": "itzaks",
            "avatar": "https://avatars.githubusercontent.com/u/1019364?v=4",
            "url": "https://github.com/itzaks"
          },
          "body": "<p dir=\"auto\">Sounds fair. I wrote the strategy myself so it's probably something to look through then. But I'm curious as to why it affects a collection it shouldn't even be used on?</p>",
          "createdAt": "2023-01-18T00:09:33Z"
        },
        {
          "author": {
            "name": "itzaks",
            "avatar": "https://avatars.githubusercontent.com/u/1019364?v=4",
            "url": "https://github.com/itzaks"
          },
          "body": "<p dir=\"auto\">I marked it as answered now :-) however I think there is something going on with using multiple auth strategies that could be worth looking in to.</p>",
          "createdAt": "2023-01-19T08:53:34Z"
        }
      ]
    }
  },
  {
    "title": "Can't set fileSize limit to Upload collection",
    "body": "<p dir=\"auto\">I'm a bit confused about the docs. I understand how to set a global limit but I want different limits in different upload collections: ie I have an images collection and a videos collection. In my videos collection I tried adding both <code class=\"notranslate\">filesize</code> and <code class=\"notranslate\">fileSize</code> (different case in the docs) in upload but it throws errors. Then there is an example in the global config in which it's inside a limit object, it also throws errors.</p>\n<p dir=\"auto\"><strong>Videos.js</strong></p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"...\naccess: {},\nupload: {\n  mimeTypes: ['video/mp4'],\n  fileSize: 5000000, // 5MB, written in bytes\n}\"><pre class=\"notranslate\">...\naccess: <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">upload</span>: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">mimeTypes</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'video/mp4'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fileSize</span>: <span class=\"pl-c1\">5000000</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// 5MB, written in bytes</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Throws <code class=\"notranslate\">Collection \"videos\" &gt; \"upload.fileSize\" is not allowed</code></p>\n<p dir=\"auto\"><strong>Videos.js</strong></p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"...\naccess: {},\nupload: {\n  mimeTypes: ['video/mp4'],\n  limits: {\n    fileSize: 5000000, // 5MB, written in bytes\n  }\n}\"><pre class=\"notranslate\">...\naccess: <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">upload</span>: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">mimeTypes</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'video/mp4'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">limits</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">fileSize</span>: <span class=\"pl-c1\">5000000</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// 5MB, written in bytes</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Also throws <code class=\"notranslate\">Collection \"videos\" &gt; \"upload.limits\" is not allowed</code></p>\n<p dir=\"auto\">What would the correct way to declare this be? Thanks in advance, <g-emoji class=\"g-emoji\" alias=\"sparkling_heart\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f496.png\">💖</g-emoji> payload</p>",
    "url": "https://github.com/payloadcms/payload/discussions/682",
    "id": "682",
    "createdAt": "2022-06-24T15:24:14Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "gonzam88",
      "avatar": "https://avatars.githubusercontent.com/u/6289953?u=964dbaf32492efedc92230ee51de16ffac6a9684&v=4",
      "url": "https://github.com/gonzam88"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/gonzam88/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gonzam88\">@gonzam88</a> — I see what you're looking to do. And I think this is a totally reasonable request.</p>\n<p dir=\"auto\">As you've noticed, you can only specify <em><strong>global</strong></em> upload filesize limitations, but you can extend the built-in <code class=\"notranslate\">filesize</code> field with a <code class=\"notranslate\">filesize</code> field of your own, complete with a custom validation function that will enforce max upload sizes for you.</p>\n<p dir=\"auto\">Here's the built-in <code class=\"notranslate\">filesize</code> field:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const filesize = {\n    name: 'filesize',\n    label: 'File Size',\n    type: 'number',\n    admin: {\n      readOnly: true,\n      disabled: true,\n    },\n  };\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">filesize</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'filesize'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'File Size'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">readOnly</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">disabled</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Just add that to your collection's base level with a custom validation function and then you're off to the races!</p>",
        "createdAt": "2022-06-29T18:22:54Z",
        "replies": [
          {
            "author": {
              "name": "synziv",
              "avatar": "https://avatars.githubusercontent.com/u/33548174?v=4",
              "url": "https://github.com/synziv"
            },
            "body": "<p dir=\"auto\">I don't understand how to implement this. Can you give a bit more informations on where to add the filesize const in the collection and where to use it?</p>",
            "createdAt": "2023-01-23T21:07:17Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/gonzam88/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gonzam88\">@gonzam88</a> — I see what you're looking to do. And I think this is a totally reasonable request.</p>\n<p dir=\"auto\">As you've noticed, you can only specify <em><strong>global</strong></em> upload filesize limitations, but you can extend the built-in <code class=\"notranslate\">filesize</code> field with a <code class=\"notranslate\">filesize</code> field of your own, complete with a custom validation function that will enforce max upload sizes for you.</p>\n<p dir=\"auto\">Here's the built-in <code class=\"notranslate\">filesize</code> field:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const filesize = {\n    name: 'filesize',\n    label: 'File Size',\n    type: 'number',\n    admin: {\n      readOnly: true,\n      disabled: true,\n    },\n  };\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">filesize</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'filesize'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'File Size'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">readOnly</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">disabled</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Just add that to your collection's base level with a custom validation function and then you're off to the races!</p>",
      "createdAt": "2022-06-29T18:22:54Z",
      "chosenAt": "2023-01-30T21:48:36Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "synziv",
            "avatar": "https://avatars.githubusercontent.com/u/33548174?v=4",
            "url": "https://github.com/synziv"
          },
          "body": "<p dir=\"auto\">I don't understand how to implement this. Can you give a bit more informations on where to add the filesize const in the collection and where to use it?</p>",
          "createdAt": "2023-01-23T21:07:17Z"
        }
      ]
    }
  },
  {
    "title": "Best way to \"reupload\" all images in a collection to trigger hooks and new sizes?",
    "body": "<p dir=\"auto\">I've added new sizes, an \"filename renaming\" beforeOperation hook and a \"base64 placeholder string\" beforeChange hook to one of my upload collections.</p>\n<p dir=\"auto\">What's the best way to \"recreate\" all the existing files to generate new images, a new filename and the base64 placeholder?</p>\n<p dir=\"auto\">Thanks for any hints!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1934",
    "id": "1934",
    "createdAt": "2023-01-22T19:22:18Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "christian-reichart",
      "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
      "url": "https://github.com/christian-reichart"
    },
    "comments": [
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/christian-reichart/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/christian-reichart\">@christian-reichart</a> check out <a aria-label=\"Discussion #1834\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4740607\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1834\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1834/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/1834\">#1834</a></p>",
        "createdAt": "2023-01-22T19:52:03Z",
        "replies": [
          {
            "author": {
              "name": "christian-reichart",
              "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
              "url": "https://github.com/christian-reichart"
            },
            "body": "<p dir=\"auto\">Oh wow thank you, will try this soon!</p>",
            "createdAt": "2023-01-22T20:31:14Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/christian-reichart/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/christian-reichart\">@christian-reichart</a> check out <a aria-label=\"Discussion #1834\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4740607\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1834\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1834/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/1834\">#1834</a></p>",
      "createdAt": "2023-01-22T19:52:03Z",
      "chosenAt": "2023-01-22T20:31:01Z",
      "chosenBy": "christian-reichart",
      "replies": [
        {
          "author": {
            "name": "christian-reichart",
            "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
            "url": "https://github.com/christian-reichart"
          },
          "body": "<p dir=\"auto\">Oh wow thank you, will try this soon!</p>",
          "createdAt": "2023-01-22T20:31:14Z"
        }
      ]
    }
  },
  {
    "title": "parent/child content modelling",
    "body": "<p dir=\"auto\">hi all. i've got a content modelling question - thanks in advance!</p>\n<p dir=\"auto\">i'm building a site which is a knowledge-base for our design system. i'm trying to create a type of page called a <code class=\"notranslate\">Foundations</code> page. A <code class=\"notranslate\">Foundations</code> page has no content of its own, but will have a number of child pages displayed as tabs. the tabs will have their own urls, so e.g.</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">foundations/typography/introduction</code></li>\n<li><code class=\"notranslate\">foundations/typography/patterns</code></li>\n<li>etc</li>\n</ul>\n<p dir=\"auto\">the url for the foundations page will redirect to the first tab, i.e. <code class=\"notranslate\">foundations/typography</code> will redirect to <code class=\"notranslate\">foundations/typography/introduction</code>.</p>\n<p dir=\"auto\">my question is, how to model this.</p>\n<p dir=\"auto\">i've tried creating a <code class=\"notranslate\">Foundations</code> collection with a <code class=\"notranslate\">relationship</code> field with a <code class=\"notranslate\">hasMany</code> <code class=\"notranslate\">relationTo</code> a <code class=\"notranslate\">Pages</code> collection, which contains the sub-pages. the problem with this is that the pages then are re-usable, and it becomes possible to have a sub page sitting underneath multiple <code class=\"notranslate\">Foundations</code> pages, which i'd like to disallow. it's also not possible to see from the child page what its parent is - potentially confusing to an editor if we have multiple pages with a title of \"Introduction\" say.</p>\n<p dir=\"auto\">i can do it the other way round - a <code class=\"notranslate\">Pages</code> document could have a <code class=\"notranslate\">relationship</code> field with a <code class=\"notranslate\">relationTo</code> the <code class=\"notranslate\">Foundations</code> collection, but then the <code class=\"notranslate\">Foundations</code> document doesn't know what its children are, and there's no way to order the children from the <code class=\"notranslate\">Foundations</code> document.</p>\n<p dir=\"auto\">the third thing i tried was to have a <code class=\"notranslate\">blocks</code> field on the <code class=\"notranslate\">Foundations</code> collection allowing the user to add the content for each tabbed page as a separate block directly on the <code class=\"notranslate\">Foundations</code> document. this solves the above problems, but it means that the UI becomes unwieldy - the content for multiple (possibly quite long) pages will all be displayed on the same page. the blocks seem to be collapsed by default which makes it better, but if an editor un-collapses more than one it gets a bit confusing. considering everything though, i think this is the best option i've come up with.</p>\n<p dir=\"auto\">are there any better ways of doing this? any thoughts gratefully received</p>\n<p dir=\"auto\">(i did see this <a href=\"https://github.com/payloadcms/plugin-nested-docs\">nested docs plugin</a> which looks interesting, but i don't think fits my use case because i only want to allow one level of parent-child relation, and because the parent and child wouldn't fit into the same collection)</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1888",
    "id": "1888",
    "createdAt": "2023-01-16T14:37:35Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "Hives",
      "avatar": "https://avatars.githubusercontent.com/u/847307?u=e42ec05a8904510358c4d1a6572f80869c5dce02&v=4",
      "url": "https://github.com/Hives"
    },
    "comments": [
      {
        "author": {
          "name": "JessChowdhury",
          "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
          "url": "https://github.com/JessChowdhury"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Hives/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Hives\">@Hives</a>,</p>\n<p dir=\"auto\">I would recommend using / reading more on the <a href=\"https://github.com/payloadcms/plugin-nested-docs\">nested docs plugin</a>.</p>\n<p dir=\"auto\">With this plugin, you would create your content structure using just a Pages collection. You would create a <strong>Foundation</strong> page, add no content. Create a <strong>Typography</strong> page, and select <strong>Foundation</strong> as the Parent Page. You can then create pages for Introduction, Patterns etc and assign their Parent Page to <strong>Typography</strong>.</p>\n<p dir=\"auto\">This plugin will satisfy many of the issues you listed above:</p>\n<ul dir=\"auto\">\n<li>Each page will know it's parent / child relations</li>\n<li>Content is separated out into different documents, so you don't end up with one unwieldy page</li>\n<li>You'll be able to use the parent / child data to set more readable titles like <code class=\"notranslate\">Foundation &gt; Typography &gt; Introduction</code></li>\n</ul>\n<p dir=\"auto\">I think this would be suitable for your use case but if I have missed something or you see a reason this wouldn't work for you - let me know and we can continue to discuss.</p>",
        "createdAt": "2023-01-16T17:32:48Z",
        "replies": null
      },
      {
        "author": {
          "name": "Hives",
          "avatar": "https://avatars.githubusercontent.com/u/847307?u=e42ec05a8904510358c4d1a6572f80869c5dce02&v=4",
          "url": "https://github.com/Hives"
        },
        "body": "<p dir=\"auto\">thanks! will take a look tomorrow and see how i get on</p>",
        "createdAt": "2023-01-16T17:50:33Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "JessChowdhury",
        "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
        "url": "https://github.com/JessChowdhury"
      },
      "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Hives/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Hives\">@Hives</a>,</p>\n<p dir=\"auto\">I would recommend using / reading more on the <a href=\"https://github.com/payloadcms/plugin-nested-docs\">nested docs plugin</a>.</p>\n<p dir=\"auto\">With this plugin, you would create your content structure using just a Pages collection. You would create a <strong>Foundation</strong> page, add no content. Create a <strong>Typography</strong> page, and select <strong>Foundation</strong> as the Parent Page. You can then create pages for Introduction, Patterns etc and assign their Parent Page to <strong>Typography</strong>.</p>\n<p dir=\"auto\">This plugin will satisfy many of the issues you listed above:</p>\n<ul dir=\"auto\">\n<li>Each page will know it's parent / child relations</li>\n<li>Content is separated out into different documents, so you don't end up with one unwieldy page</li>\n<li>You'll be able to use the parent / child data to set more readable titles like <code class=\"notranslate\">Foundation &gt; Typography &gt; Introduction</code></li>\n</ul>\n<p dir=\"auto\">I think this would be suitable for your use case but if I have missed something or you see a reason this wouldn't work for you - let me know and we can continue to discuss.</p>",
      "createdAt": "2023-01-16T17:32:48Z",
      "chosenAt": "2023-02-09T16:20:35Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "document data in groups not accessible in conditional statements in other groups",
    "body": "<h1 dir=\"auto\">Bug Report</h1>\n<p dir=\"auto\">When using conditional statements on fields within a group, data from other groups returns undefined causing the application to crash on page load.</p>\n<p dir=\"auto\">an example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import { CollectionConfig } from &quot;payload/types&quot;;\n\nexport const TestConfig: CollectionConfig = {\n    slug: 'testconfig',\n    fields: [\n      {\n        name: 'testGroup1',\n        type: 'group',\n        fields: [\n          {\n            name: 'testField1',\n            type: 'text',\n          }\n        ]\n      },\n      {\n        name: 'testGroup2',\n        type: 'group',\n        fields: [\n          {\n            name: 'testField2',\n            type: 'text',\n            admin:{\n              condition: (data) =&gt; {\n                if (\n                  data.testGroup1.testField1\n                ) {\n                  return true;\n                } else {\n                  return false;\n                }\n              },\n            }\n          }\n        ]\n      },\n    ]\n  }\"><pre class=\"notranslate\"><code class=\"notranslate\">import { CollectionConfig } from \"payload/types\";\n\nexport const TestConfig: CollectionConfig = {\n    slug: 'testconfig',\n    fields: [\n      {\n        name: 'testGroup1',\n        type: 'group',\n        fields: [\n          {\n            name: 'testField1',\n            type: 'text',\n          }\n        ]\n      },\n      {\n        name: 'testGroup2',\n        type: 'group',\n        fields: [\n          {\n            name: 'testField2',\n            type: 'text',\n            admin:{\n              condition: (data) =&gt; {\n                if (\n                  data.testGroup1.testField1\n                ) {\n                  return true;\n                } else {\n                  return false;\n                }\n              },\n            }\n          }\n        ]\n      },\n    ]\n  }\n</code></pre></div>\n<p dir=\"auto\">The conditional statement on the testField2 field does not evaluate correctly when creating a new document. The conditional statement can access the data when editing existing documents where testField1 is already populated, while it crashes the page when creating a new document</p>\n<h2 dir=\"auto\">Steps to Reproduce</h2>\n<ol dir=\"auto\">\n<li>Create a collection with two top level groups.</li>\n<li>Define a field in the first group.</li>\n<li>Define a field in the second group with a conditional statement dependent on the field in the first group.</li>\n<li>Create a new document in the collection.</li>\n</ol>\n<h2 dir=\"auto\">Other Details</h2>\n<p dir=\"auto\">I'm currently running Payload 1.5.8</p>\n<p dir=\"auto\">New document error stack trace:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"TestConfig.ts:48 Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'testField1')\n    at Object.condition (TestConfig.ts:48:51)\n    at iterateFields.js:12:1\n    at Array.forEach (&lt;anonymous&gt;)\n    at iterateFields (iterateFields.js:8:1)\n    at addFieldStatePromise (addFieldStatePromise.js:142:1)\n    at async Promise.all (index 0)\n    at async iterateFields (iterateFields.js:28:1)\n    at async Promise.all (index 1)\n    at async addFieldStatePromise (addFieldStatePromise.js:196:1)\n    at async Promise.all (index 0)\"><pre class=\"notranslate\"><code class=\"notranslate\">TestConfig.ts:48 Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'testField1')\n    at Object.condition (TestConfig.ts:48:51)\n    at iterateFields.js:12:1\n    at Array.forEach (&lt;anonymous&gt;)\n    at iterateFields (iterateFields.js:8:1)\n    at addFieldStatePromise (addFieldStatePromise.js:142:1)\n    at async Promise.all (index 0)\n    at async iterateFields (iterateFields.js:28:1)\n    at async Promise.all (index 1)\n    at async addFieldStatePromise (addFieldStatePromise.js:196:1)\n    at async Promise.all (index 0)\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/1891",
    "id": "1891",
    "createdAt": "2023-01-14T23:44:03Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "ToneseekerMusical",
      "avatar": "https://avatars.githubusercontent.com/u/105748910?v=4",
      "url": "https://github.com/ToneseekerMusical"
    },
    "comments": [
      {
        "author": {
          "name": "ToneseekerMusical",
          "avatar": "https://avatars.githubusercontent.com/u/105748910?v=4",
          "url": "https://github.com/ToneseekerMusical"
        },
        "body": "<p dir=\"auto\">Additionally, the following code crashes the application on editing existing documents, even if it has the <code class=\"notranslate\">roles</code> field set:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"export const Users: CollectionConfig = {\n  slug: 'users',\n  auth: true,\n  admin: {\n    useAsTitle: 'email',\n    disableDuplicate: true,\n  },\n  access: {\n    create: () =&gt; true,\n    read: isAdminOrPartnerAdmin,\n    update: isAdminPartnerAdminOrSelf,\n    delete: isAdminPartnerAdminOrSelf,\n  },\n  fields: [\n    {\n      type: 'tabs',\n      tabs: [\n        {\n          label: 'User Info',\n          fields: [\n            {\n              type: 'group',\n              name: 'userInfo',\n              label: ' ',\n              fields: [\n                {\n                  type: 'row',\n                  fields: [\n                    {\n                      name: 'roles',\n                      type: 'select',\n                      required: true,\n                      hasMany: true,\n                      access: {\n                        read: () =&gt; true,\n                        create: isAdminOrPartnerAdminFieldLevel,\n                        update: isAdminOrPartnerAdminFieldLevel,\n                      },\n                      defaultValue: 'customer',\n                      options: [\n                        {\n                          label: 'Admin',\n                          value: 'admin',\n                        },\n                        {\n                          label: 'Employee',\n                          value: 'employee',\n                        },\n                        {\n                          label: 'Customer',\n                          value: 'customer',\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n          ]\n        },\n        {\n          label: 'Instruments',\n          fields: [\n            {\n              name: 'instrumentInfo',\n              type: 'group',\n              label: ' ',\n              admin: {\n                condition: (data, siblingData) =&gt; {\n                  if (\n                    data.userInfo.roles &amp;&amp;\n                    (data.userInfo.roles.includes('employee') ||\n                      data.userInfo.roles.includes('customer'))\n                  ) {\n                    return true;\n                  } else {\n                    return false;\n                  }\n                },\n              },\n              fields: [\n                {\n                  name: 'instruments',\n                  type: 'relationship',\n                  relationTo: 'instrument',\n                  hasMany: true,\n                  required: false,\n                  access: {\n                    read: () =&gt; true,\n                    create: isAdminFieldLevel,\n                    update: isAdminFieldLevel,\n                  },\n                },\n                {\n                  name: 'registerInstrument',\n                  type: 'text',\n                  admin: {\n                    condition: (data, siblingData) =&gt; {\n                      console.log(data.userInfo.roles)\n                      if (data.userInfo.roles  &amp;&amp;\n                      data.userInfo.roles.includes('customer') {\n                        return true;\n                      } else {\n                        return false;\n                      }\n                    },\n                  },\n                },\n              ],\n            }\n          ],\n        },\n      ],\n    },\n  ],\n};\"><pre class=\"notranslate\"><code class=\"notranslate\">export const Users: CollectionConfig = {\n  slug: 'users',\n  auth: true,\n  admin: {\n    useAsTitle: 'email',\n    disableDuplicate: true,\n  },\n  access: {\n    create: () =&gt; true,\n    read: isAdminOrPartnerAdmin,\n    update: isAdminPartnerAdminOrSelf,\n    delete: isAdminPartnerAdminOrSelf,\n  },\n  fields: [\n    {\n      type: 'tabs',\n      tabs: [\n        {\n          label: 'User Info',\n          fields: [\n            {\n              type: 'group',\n              name: 'userInfo',\n              label: ' ',\n              fields: [\n                {\n                  type: 'row',\n                  fields: [\n                    {\n                      name: 'roles',\n                      type: 'select',\n                      required: true,\n                      hasMany: true,\n                      access: {\n                        read: () =&gt; true,\n                        create: isAdminOrPartnerAdminFieldLevel,\n                        update: isAdminOrPartnerAdminFieldLevel,\n                      },\n                      defaultValue: 'customer',\n                      options: [\n                        {\n                          label: 'Admin',\n                          value: 'admin',\n                        },\n                        {\n                          label: 'Employee',\n                          value: 'employee',\n                        },\n                        {\n                          label: 'Customer',\n                          value: 'customer',\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n          ]\n        },\n        {\n          label: 'Instruments',\n          fields: [\n            {\n              name: 'instrumentInfo',\n              type: 'group',\n              label: ' ',\n              admin: {\n                condition: (data, siblingData) =&gt; {\n                  if (\n                    data.userInfo.roles &amp;&amp;\n                    (data.userInfo.roles.includes('employee') ||\n                      data.userInfo.roles.includes('customer'))\n                  ) {\n                    return true;\n                  } else {\n                    return false;\n                  }\n                },\n              },\n              fields: [\n                {\n                  name: 'instruments',\n                  type: 'relationship',\n                  relationTo: 'instrument',\n                  hasMany: true,\n                  required: false,\n                  access: {\n                    read: () =&gt; true,\n                    create: isAdminFieldLevel,\n                    update: isAdminFieldLevel,\n                  },\n                },\n                {\n                  name: 'registerInstrument',\n                  type: 'text',\n                  admin: {\n                    condition: (data, siblingData) =&gt; {\n                      console.log(data.userInfo.roles)\n                      if (data.userInfo.roles  &amp;&amp;\n                      data.userInfo.roles.includes('customer') {\n                        return true;\n                      } else {\n                        return false;\n                      }\n                    },\n                  },\n                },\n              ],\n            }\n          ],\n        },\n      ],\n    },\n  ],\n};\n</code></pre></div>\n<p dir=\"auto\">the field that is causing the crash is <code class=\"notranslate\">registerInstrument</code>, when the conditional statement is removed, you can edit existing and create new users, and when the conditional statement is present, you cannot edit existing or create new users. The <code class=\"notranslate\">console.log</code> however, returns the value of the <code class=\"notranslate\">roles</code> field when attempting to edit existing users.</p>",
        "createdAt": "2023-01-15T16:38:33Z",
        "replies": null
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ToneseekerMusical/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ToneseekerMusical\">@ToneseekerMusical</a> — this is actually intended behavior, because when you create a document, <em><strong>there is no data yet</strong></em>. You should write your conditions so that you access those nested properties safely, in case there is no data. For example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"          {\n            name: 'testField2',\n            type: 'text',\n            admin:{\n              condition: (data) =&gt; {\n                if (\n                  data.testGroup1?.testField1 // added ?. instead of . \n                ) {\n                  return true;\n                } else {\n                  return false;\n                }\n              },\n            }\n          }\"><pre class=\"notranslate\"><code class=\"notranslate\">          {\n            name: 'testField2',\n            type: 'text',\n            admin:{\n              condition: (data) =&gt; {\n                if (\n                  data.testGroup1?.testField1 // added ?. instead of . \n                ) {\n                  return true;\n                } else {\n                  return false;\n                }\n              },\n            }\n          }\n</code></pre></div>\n<p dir=\"auto\">Does that make sense? I will convert this to a discussion so we can keep conversation going.</p>\n<p dir=\"auto\">Overall though it's a good practice to safely access nested data in conditions, because of the exact thing you're running into. The data structure might not be there yet!</p>",
        "createdAt": "2023-01-16T16:02:40Z",
        "replies": [
          {
            "author": {
              "name": "ToneseekerMusical",
              "avatar": "https://avatars.githubusercontent.com/u/105748910?v=4",
              "url": "https://github.com/ToneseekerMusical"
            },
            "body": "<p dir=\"auto\">It makes complete sense, I'm just dumb! I'll be sure to keep that in mind moving forward. This is the first time I've ever ran into this, and because I've never had my conditional statements return undefined despite never accessing them safely, I thought it was a bug. I appreciate the help!</p>",
            "createdAt": "2023-01-16T16:41:07Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ToneseekerMusical/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ToneseekerMusical\">@ToneseekerMusical</a> — this is actually intended behavior, because when you create a document, <em><strong>there is no data yet</strong></em>. You should write your conditions so that you access those nested properties safely, in case there is no data. For example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"          {\n            name: 'testField2',\n            type: 'text',\n            admin:{\n              condition: (data) =&gt; {\n                if (\n                  data.testGroup1?.testField1 // added ?. instead of . \n                ) {\n                  return true;\n                } else {\n                  return false;\n                }\n              },\n            }\n          }\"><pre class=\"notranslate\"><code class=\"notranslate\">          {\n            name: 'testField2',\n            type: 'text',\n            admin:{\n              condition: (data) =&gt; {\n                if (\n                  data.testGroup1?.testField1 // added ?. instead of . \n                ) {\n                  return true;\n                } else {\n                  return false;\n                }\n              },\n            }\n          }\n</code></pre></div>\n<p dir=\"auto\">Does that make sense? I will convert this to a discussion so we can keep conversation going.</p>\n<p dir=\"auto\">Overall though it's a good practice to safely access nested data in conditions, because of the exact thing you're running into. The data structure might not be there yet!</p>",
      "createdAt": "2023-01-16T16:02:40Z",
      "chosenAt": "2023-01-16T16:16:25Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "ToneseekerMusical",
            "avatar": "https://avatars.githubusercontent.com/u/105748910?v=4",
            "url": "https://github.com/ToneseekerMusical"
          },
          "body": "<p dir=\"auto\">It makes complete sense, I'm just dumb! I'll be sure to keep that in mind moving forward. This is the first time I've ever ran into this, and because I've never had my conditional statements return undefined despite never accessing them safely, I thought it was a bug. I appreciate the help!</p>",
          "createdAt": "2023-01-16T16:41:07Z"
        }
      ]
    }
  },
  {
    "title": "Recursive Blocks",
    "body": "<p dir=\"auto\">I'm basically building a page builder of all my react components and loving it so far.</p>\n<p dir=\"auto\">I iterate all my react components, and create a 'block' of each one. However the only problem is react components allow children, and I'd love for each block to have its own field which has additional blocks (which are components of that same library). However, then I would enter this weird recursive case where I continously iterate and hit no stopping point.</p>\n<p dir=\"auto\">Does anyone of a solution for how to accomplish such a thing? Does my problem make sense?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1275",
    "id": "1275",
    "createdAt": "2022-10-19T02:34:46Z",
    "upvotes": 2,
    "commentTotal": 2,
    "author": {
      "name": "joecaraccio",
      "avatar": "https://avatars.githubusercontent.com/u/966352?u=7926efde25b0e9eb7a77fc259ed1ab737c32ed78&v=4",
      "url": "https://github.com/joecaraccio"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">HELL yes I have a solution for you.</p>\n<p dir=\"auto\">You need to import all of your React block components <em><strong>only at the top level where the first \"blocks\" are rendered,</strong></em> and then pass them through each additional layer of blocks as either props or with context. But the trick is to only import them once, at the top level, and then needle them through the rest of the way. So say you have a <code class=\"notranslate\">RenderBlocks</code> component or similar. <em><strong>THAT</strong></em> component needs to accept your block components as props or retrieve them via context.</p>\n<p dir=\"auto\">We had to do this internally in Payload with our field components themselves, because fields can render other fields and then boom - recursion. It's a common problem with programming in general!</p>",
        "createdAt": "2022-10-19T12:49:40Z",
        "replies": [
          {
            "author": {
              "name": "joecaraccio",
              "avatar": "https://avatars.githubusercontent.com/u/966352?u=7926efde25b0e9eb7a77fc259ed1ab737c32ed78&v=4",
              "url": "https://github.com/joecaraccio"
            },
            "body": "<p dir=\"auto\">Thanks for the reply! You're refering to the payload side of this right? I'm struggling a little bit to wrap my head around how I would basically make a 'Page' Type, that would have a Blocks collection, that would continuously let me recurse blocks all the way down.</p>\n<p dir=\"auto\">or is there some sort of pass thru (props/context) ability within payload?</p>",
            "createdAt": "2022-10-20T01:43:52Z"
          },
          {
            "author": {
              "name": "joecaraccio",
              "avatar": "https://avatars.githubusercontent.com/u/966352?u=7926efde25b0e9eb7a77fc259ed1ab737c32ed78&v=4",
              "url": "https://github.com/joecaraccio"
            },
            "body": "<p dir=\"auto\">Saying react makes me think you are talking the client react side but i'm just very confused</p>",
            "createdAt": "2022-10-20T01:47:22Z"
          }
        ]
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">I was talking about the React side. But if this is an issue in your Payload config and that is what you are referring to, the same principles would apply there too.</p>",
        "createdAt": "2022-10-20T12:16:12Z",
        "replies": [
          {
            "author": {
              "name": "joecaraccio",
              "avatar": "https://avatars.githubusercontent.com/u/966352?u=7926efde25b0e9eb7a77fc259ed1ab737c32ed78&v=4",
              "url": "https://github.com/joecaraccio"
            },
            "body": "<p dir=\"auto\">Ah okay gotcha. Are there any examples of anyone doing this?</p>\n<p dir=\"auto\">Just trying to think about how a Payload block can has itself as a potential block without blowing up the stack...and struggling!</p>",
            "createdAt": "2022-10-20T16:11:50Z"
          },
          {
            "author": {
              "name": "ozbeksu",
              "avatar": "https://avatars.githubusercontent.com/u/3136994?u=d92ae0aa22cc7f2d8bb8563559531b2869880168&v=4",
              "url": "https://github.com/ozbeksu"
            },
            "body": "<p dir=\"auto\">Hi there,<br>\nI was also trying to solve the same issue. I basically solved it with recursion.</p>\n<p dir=\"auto\">You can have a look at the gist link below.</p>\n<p dir=\"auto\">There is a collection for Navigation and a block for Link. For brevity, i only added name field to link block but as you know you can customize it as you see fit. Hope this helps.</p>\n<p dir=\"auto\"><a href=\"https://gist.github.com/ozbeksu/4873ad5d65f6770079edf9a000028a6c\">https://gist.github.com/ozbeksu/4873ad5d65f6770079edf9a000028a6c</a></p>",
            "createdAt": "2023-01-03T18:50:09Z"
          },
          {
            "author": {
              "name": "andwrobs",
              "avatar": "https://avatars.githubusercontent.com/u/101012384?u=716f55d08cbb33242adb1ebadfad47def9e98881&v=4",
              "url": "https://github.com/andwrobs"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ozbeksu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ozbeksu\">@ozbeksu</a> you rock man totally saved me a chunk of hours this weekend!!!</p>",
            "createdAt": "2023-01-15T18:12:30Z"
          },
          {
            "author": {
              "name": "andwrobs",
              "avatar": "https://avatars.githubusercontent.com/u/101012384?u=716f55d08cbb33242adb1ebadfad47def9e98881&v=4",
              "url": "https://github.com/andwrobs"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> would you be open to including a note on this pattern somewhere in the docs here: <a href=\"https://payloadcms.com/docs/fields/blocks#blocks-field\" rel=\"nofollow\">blocks field docs</a>?</p>\n<p dir=\"auto\">needed this for chatbot flows/conversations modeling, any recursive document or graph data structures are serviced really well with this pattern from my pov</p>",
            "createdAt": "2023-01-15T18:14:15Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">HELL yes I have a solution for you.</p>\n<p dir=\"auto\">You need to import all of your React block components <em><strong>only at the top level where the first \"blocks\" are rendered,</strong></em> and then pass them through each additional layer of blocks as either props or with context. But the trick is to only import them once, at the top level, and then needle them through the rest of the way. So say you have a <code class=\"notranslate\">RenderBlocks</code> component or similar. <em><strong>THAT</strong></em> component needs to accept your block components as props or retrieve them via context.</p>\n<p dir=\"auto\">We had to do this internally in Payload with our field components themselves, because fields can render other fields and then boom - recursion. It's a common problem with programming in general!</p>",
      "createdAt": "2022-10-19T12:49:40Z",
      "chosenAt": "2023-01-16T16:18:05Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "joecaraccio",
            "avatar": "https://avatars.githubusercontent.com/u/966352?u=7926efde25b0e9eb7a77fc259ed1ab737c32ed78&v=4",
            "url": "https://github.com/joecaraccio"
          },
          "body": "<p dir=\"auto\">Thanks for the reply! You're refering to the payload side of this right? I'm struggling a little bit to wrap my head around how I would basically make a 'Page' Type, that would have a Blocks collection, that would continuously let me recurse blocks all the way down.</p>\n<p dir=\"auto\">or is there some sort of pass thru (props/context) ability within payload?</p>",
          "createdAt": "2022-10-20T01:43:52Z"
        },
        {
          "author": {
            "name": "joecaraccio",
            "avatar": "https://avatars.githubusercontent.com/u/966352?u=7926efde25b0e9eb7a77fc259ed1ab737c32ed78&v=4",
            "url": "https://github.com/joecaraccio"
          },
          "body": "<p dir=\"auto\">Saying react makes me think you are talking the client react side but i'm just very confused</p>",
          "createdAt": "2022-10-20T01:47:22Z"
        }
      ]
    }
  },
  {
    "title": "Is there a working example of the preview button?",
    "body": "<p dir=\"auto\">I'm having some difficulty understanding how the preview button works.</p>\n<p dir=\"auto\">I usually reference the current Payload website for how things are done, but the preview functionality is currently broken on it. None of the examples seem to use preview either.</p>\n<p dir=\"auto\">At one time it seems that preview did work on the Payload website:<br>\n<a href=\"https://github.com/payloadcms/website/search?q=preview&amp;type=commits\">https://github.com/payloadcms/website/search?q=preview&amp;type=commits</a></p>\n<p dir=\"auto\">These commits got me most of the way there. I'm successfully passing the JWT token to the static props, it redirects me to the slug's page, but I continue to see the published content.</p>\n<p dir=\"auto\">I'm not using GraphQL, just plain ol' REST.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const pageQuery = await fetch(`${process.env.NEXT_PUBLIC_CMS_URL}/api/pages?where[slug][equals]=${slug}`, {\n    headers: {\n      ...preview ? {\n        Authorization: `JWT ${payloadToken}` // when previewing, send the payload token to bypass draft access control\n      } : {}\n    }\n  }).then(\n    (res) =&gt; res.json(),\n  );\"><pre class=\"notranslate\"><code class=\"notranslate\">const pageQuery = await fetch(`${process.env.NEXT_PUBLIC_CMS_URL}/api/pages?where[slug][equals]=${slug}`, {\n    headers: {\n      ...preview ? {\n        Authorization: `JWT ${payloadToken}` // when previewing, send the payload token to bypass draft access control\n      } : {}\n    }\n  }).then(\n    (res) =&gt; res.json(),\n  );\n</code></pre></div>\n<p dir=\"auto\">Any ideas? Been working on this for days.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1875",
    "id": "1875",
    "createdAt": "2023-01-14T02:19:32Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "samtietjen",
      "avatar": "https://avatars.githubusercontent.com/u/4971280?u=9ff035a29d294e47b3109f00e6a9eec46f32fa8c&v=4",
      "url": "https://github.com/samtietjen"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Ahhh yeah the payload site is on next 13’s app folder, which doesn’t support preview yet… Or at least it didn’t when we built the site. I haven’t checked into it lately. Regardless I think you are pointing to a good example that we need to make and we can do it with good old Next’s pages folder.</p>\n<p dir=\"auto\">I think we could probably get started on this first thing next week because I think it’s super necessary. Give us a bit here and I’ll get back to you!</p>",
        "createdAt": "2023-01-14T02:22:44Z",
        "replies": [
          {
            "author": {
              "name": "samtietjen",
              "avatar": "https://avatars.githubusercontent.com/u/4971280?u=9ff035a29d294e47b3109f00e6a9eec46f32fa8c&v=4",
              "url": "https://github.com/samtietjen"
            },
            "body": "<p dir=\"auto\">Appreciate it! It isn't a huge deal for me, but it is for the designers I work with. It can be tough to visualize exactly what blocks do if you haven't made them yourself. I'll keep an eye out.</p>",
            "createdAt": "2023-01-14T03:06:49Z"
          }
        ]
      },
      {
        "author": {
          "name": "iamprompt",
          "avatar": "https://avatars.githubusercontent.com/u/26927973?v=4",
          "url": "https://github.com/iamprompt"
        },
        "body": "<p dir=\"auto\">I think you might need draft=true parameters in the url to show the draft content alongside with JWT token</p>",
        "createdAt": "2023-01-14T07:50:34Z",
        "replies": [
          {
            "author": {
              "name": "samtietjen",
              "avatar": "https://avatars.githubusercontent.com/u/4971280?u=9ff035a29d294e47b3109f00e6a9eec46f32fa8c&v=4",
              "url": "https://github.com/samtietjen"
            },
            "body": "<p dir=\"auto\">Hm. When I add \"&amp;draft=true\" my query fetches the most recent draft instead of the current published version of the page. This is the case for everyone visiting the site (logged in or not).</p>",
            "createdAt": "2023-01-14T14:21:40Z"
          },
          {
            "author": {
              "name": "iamprompt",
              "avatar": "https://avatars.githubusercontent.com/u/26927973?v=4",
              "url": "https://github.com/iamprompt"
            },
            "body": "<p dir=\"auto\">Did you add the read access control to allow only published content for the one who didn't login and always return the content if the person who requested is logged in?</p>",
            "createdAt": "2023-01-14T14:24:47Z"
          },
          {
            "author": {
              "name": "samtietjen",
              "avatar": "https://avatars.githubusercontent.com/u/4971280?u=9ff035a29d294e47b3109f00e6a9eec46f32fa8c&v=4",
              "url": "https://github.com/samtietjen"
            },
            "body": "<p dir=\"auto\">Okay so I got it to work under the following conditions: you save the current state as a draft, you press preview, it shows the draft. The issue here is that anyone logged in is just going to see the most recent draft of each page. I'm sure there's some sort of logic to match a user with their draft, but then that user would still be browsing a site of their drafts when they might not want to be. Shouldn't preview be returning a preview of the current state of the inputs and not saved drafts?</p>\n<p dir=\"auto\">Apologies, still very new to Payload and figuring things out.</p>",
            "createdAt": "2023-01-14T15:17:19Z"
          },
          {
            "author": {
              "name": "iamprompt",
              "avatar": "https://avatars.githubusercontent.com/u/26927973?v=4",
              "url": "https://github.com/iamprompt"
            },
            "body": "<p dir=\"auto\">Did you use Nextjs for the website? If so, you can actually specified path of the preview to let the user click on the button and add jwt token to the preview data to use to fetch the data and also you can add the header bar for user to exit from the preview mode, otherwise just show the published one.</p>",
            "createdAt": "2023-01-14T15:26:22Z"
          },
          {
            "author": {
              "name": "samtietjen",
              "avatar": "https://avatars.githubusercontent.com/u/4971280?u=9ff035a29d294e47b3109f00e6a9eec46f32fa8c&v=4",
              "url": "https://github.com/samtietjen"
            },
            "body": "<p dir=\"auto\">Yep! Using a preview API route, capturing JWT and the preview variable in getStaticProps. The one thing that I didn't setup is the payload admin bar, which if I'm understanding correctly, lets you decide if you're viewing a draft or not. To be clear though, the preview button will always show the most recent draft, correct? It isn't sending the current state of the inputs as props in some sort of way.</p>",
            "createdAt": "2023-01-14T15:39:15Z"
          },
          {
            "author": {
              "name": "iamprompt",
              "avatar": "https://avatars.githubusercontent.com/u/26927973?v=4",
              "url": "https://github.com/iamprompt"
            },
            "body": "<p dir=\"auto\">I haven't set the payload admin bar either. But what I set up is the bar with the Link of the api to clear the preview data and redirect back to the same page, that's it. And yes, the preview button in payload is the link to preview page, so that we need to press save before we go to the preview page to see the latest change.</p>\n<p dir=\"auto\">I think, it would be better UX to trigger save automatically when press 'preview' button.</p>",
            "createdAt": "2023-01-14T15:46:44Z"
          },
          {
            "author": {
              "name": "samtietjen",
              "avatar": "https://avatars.githubusercontent.com/u/4971280?u=9ff035a29d294e47b3109f00e6a9eec46f32fa8c&v=4",
              "url": "https://github.com/samtietjen"
            },
            "body": "<p dir=\"auto\">Ahhhh I'm learning! I'm guessing you might accumulate a lot of drafts. Probably isn't an issue, but are there any methods to clean this up? There doesn't seem to be any ability to delete them in the UI. Unless I'm missing it.</p>\n<p dir=\"auto\">Thanks so much for all of your help!</p>",
            "createdAt": "2023-01-14T16:10:11Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Ahhh yeah the payload site is on next 13’s app folder, which doesn’t support preview yet… Or at least it didn’t when we built the site. I haven’t checked into it lately. Regardless I think you are pointing to a good example that we need to make and we can do it with good old Next’s pages folder.</p>\n<p dir=\"auto\">I think we could probably get started on this first thing next week because I think it’s super necessary. Give us a bit here and I’ll get back to you!</p>",
      "createdAt": "2023-01-14T02:22:44Z",
      "chosenAt": "2023-01-16T16:19:31Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "samtietjen",
            "avatar": "https://avatars.githubusercontent.com/u/4971280?u=9ff035a29d294e47b3109f00e6a9eec46f32fa8c&v=4",
            "url": "https://github.com/samtietjen"
          },
          "body": "<p dir=\"auto\">Appreciate it! It isn't a huge deal for me, but it is for the designers I work with. It can be tough to visualize exactly what blocks do if you haven't made them yourself. I'll keep an eye out.</p>",
          "createdAt": "2023-01-14T03:06:49Z"
        }
      ]
    }
  },
  {
    "title": "Rename File On Upload? Not Overwriting Other Uploads",
    "body": "<p dir=\"auto\">To prevent uploads from overwriting each other in our media folder, is there a way to generate a unique name for a file upon upload?</p>\n<blockquote>\n<p dir=\"auto\">Example:<br>\nUploading <code class=\"notranslate\">unknown.jpg</code> (again) would be renamed to <code class=\"notranslate\">[random-hash].jpg</code> on the server</p>\n</blockquote>\n<p dir=\"auto\">Would this be accomplished by means of a middleware or something I'm missing?</p>\n<p dir=\"auto\">Aka: <code class=\"notranslate\">handlers</code> in the Upload Options described here: <a href=\"https://payloadcms.com/docs/upload/overview#enabling-uploads\" rel=\"nofollow\">https://payloadcms.com/docs/upload/overview#enabling-uploads</a></p>\n<p dir=\"auto\">Thank you for responses / feedback!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1153",
    "id": "1153",
    "createdAt": "2022-09-21T14:03:50Z",
    "upvotes": 2,
    "commentTotal": 3,
    "author": {
      "name": "andrewstanton",
      "avatar": "https://avatars.githubusercontent.com/u/1765624?u=f8c6dc460c7614a8e79a913caaf919ef414bcd55&v=4",
      "url": "https://github.com/andrewstanton"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Uploaded files having the same name as something already in storage will be renamed with a <code class=\"notranslate\">-n</code> suffix for uniqueness such that <code class=\"notranslate\">unknown.jpg</code> uploaded a 2nd time is saved as <code class=\"notranslate\">unknown-1.jpg</code>. This should be happening automatically for you. If that is not the case you can open a bug for this issue.</p>\n<p dir=\"auto\">If you prefer to have a unique hash instead, you'd need to do a bit of work which I can go into some detail if you want.</p>\n<p dir=\"auto\">Let me know what you think!</p>",
        "createdAt": "2022-09-21T16:24:17Z",
        "replies": null
      },
      {
        "author": {
          "name": "SimonVreman",
          "avatar": "https://avatars.githubusercontent.com/u/35310171?u=e83c767df09ed18a57727e981a20c89e27a8452b&v=4",
          "url": "https://github.com/SimonVreman"
        },
        "body": "<p dir=\"auto\">Adding to this, it looks like a <a href=\"https://payloadcms.com/docs/hooks/collections#beforeoperation\" rel=\"nofollow\"><code class=\"notranslate\">beforeOperation</code></a> hook on the collection is also suitable for this. A quick and dirty example:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"beforeOperation: [async ({ args }) =&gt; {\n  const files = args.req?.files;\n  if (files &amp;&amp; files.file &amp;&amp; files.file.name) {\n    const parts = files.file.name.split('.');\n    files.file.name = `${(Math.random() + 1).toString(36).substring(2)}.${parts[parts.length - 1]}`;\n  }\n}]\"><pre class=\"notranslate\">beforeOperation: <span class=\"pl-kos\">[</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> args <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">files</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">req</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">files</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">files</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">parts</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">split</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'.'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Math</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">random</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toString</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">36</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">substring</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span></span>.<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">parts</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">parts</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">length</span> <span class=\"pl-c1\">-</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span></pre></div>\n<p dir=\"auto\">It just replaces the filename in the request before anything is saved. Note that this does not at all guarantee that the filename is unique, although depending on usage collision are probably rare anyway and in case they do happen we can rely on the built-in functionality of adding the <code class=\"notranslate\">-n</code> suffix as Dan pointed out.</p>\n<p dir=\"auto\">Using <code class=\"notranslate\">handlers</code> on the upload might be 'better', but I prefer using a hook to stay consistent with the rest of my application.</p>",
        "createdAt": "2022-10-07T07:31:52Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">+1. This is probably what I'd do. Hell yeah, <code class=\"notranslate\">beforeOperation</code>! The use cases for that one are less than the <code class=\"notranslate\">beforeChange</code>, etc. but I always knew there were use cases out there!!!</p>",
            "createdAt": "2022-10-07T12:47:00Z"
          },
          {
            "author": {
              "name": "andwrobs",
              "avatar": "https://avatars.githubusercontent.com/u/101012384?u=716f55d08cbb33242adb1ebadfad47def9e98881&v=4",
              "url": "https://github.com/andwrobs"
            },
            "body": "<p dir=\"auto\">fwiw stumbled on this discussion searching for a way to encode upload filenames that had spaces in them.</p>\n<p dir=\"auto\">good for this purpose too right?</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"hooks: {\n    beforeOperation: [\n      async ({ args }) =&gt; {\n        const files = args.req?.files;\n        if (files &amp;&amp; files.file &amp;&amp; files.file.name) {\n          files.file.name = encodeURIComponent(files.file.name);\n        }\n      }\n    ]\n  },\n\"><pre class=\"notranslate\"><span class=\"pl-s1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">beforeOperation</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> args <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">files</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">req</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">files</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">files</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">encodeURIComponent</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>",
            "createdAt": "2022-10-28T01:53:22Z"
          }
        ]
      },
      {
        "author": {
          "name": "christian-reichart",
          "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
          "url": "https://github.com/christian-reichart"
        },
        "body": "<p dir=\"auto\">I found this thread because I want to sanitize filenames to not include spaces.<br>\nSince uploads always have a URL attached, should this maybe be a core functionality?</p>\n<p dir=\"auto\">something like <code class=\"notranslate\">sanitizeFilename: true</code>?</p>\n<p dir=\"auto\">Solved it like this if anyone cares:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { CollectionBeforeOperationHook } from 'payload/types'\n\n/**\n * Sanitizes the filename for upload collections to not include spaces or special characters\n */\nexport const sanitizeFileName: CollectionBeforeOperationHook = async ({\n  args,\n}) =&gt; {\n  const files = args.req?.files\n  if (\n    files !== undefined &amp;&amp;\n    files !== null &amp;&amp;\n    typeof files === 'object' &amp;&amp;\n    files.file !== undefined &amp;&amp;\n    files.file !== null &amp;&amp;\n    typeof files.file === 'object' &amp;&amp;\n    files.file.name !== undefined &amp;&amp;\n    files.file.name !== null &amp;&amp;\n    typeof files.file.name === 'string'\n  ) {\n    files.file.name = files.file.name.replace(/[^a-z0-9.]/gi, '_').toLowerCase()\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">CollectionBeforeOperationHook</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span>\n\n<span class=\"pl-c\">/**</span>\n<span class=\"pl-c\"> * Sanitizes the filename for upload collections to not include spaces or special characters</span>\n<span class=\"pl-c\"> */</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">sanitizeFileName</span>: <span class=\"pl-v\">CollectionBeforeOperationHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  args<span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">files</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">req</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">files</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span>\n    <span class=\"pl-s1\">files</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">undefined</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-s1\">files</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">files</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'object'</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">undefined</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'object'</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">undefined</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'string'</span>\n  <span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">replace</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-kos\">[</span>^a-z0-9.<span class=\"pl-kos\">]</span><span class=\"pl-c1\">/</span>gi</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'_'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toLowerCase</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>",
        "createdAt": "2023-01-13T12:26:26Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "christian-reichart",
        "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
        "url": "https://github.com/christian-reichart"
      },
      "body": "<p dir=\"auto\">I found this thread because I want to sanitize filenames to not include spaces.<br>\nSince uploads always have a URL attached, should this maybe be a core functionality?</p>\n<p dir=\"auto\">something like <code class=\"notranslate\">sanitizeFilename: true</code>?</p>\n<p dir=\"auto\">Solved it like this if anyone cares:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { CollectionBeforeOperationHook } from 'payload/types'\n\n/**\n * Sanitizes the filename for upload collections to not include spaces or special characters\n */\nexport const sanitizeFileName: CollectionBeforeOperationHook = async ({\n  args,\n}) =&gt; {\n  const files = args.req?.files\n  if (\n    files !== undefined &amp;&amp;\n    files !== null &amp;&amp;\n    typeof files === 'object' &amp;&amp;\n    files.file !== undefined &amp;&amp;\n    files.file !== null &amp;&amp;\n    typeof files.file === 'object' &amp;&amp;\n    files.file.name !== undefined &amp;&amp;\n    files.file.name !== null &amp;&amp;\n    typeof files.file.name === 'string'\n  ) {\n    files.file.name = files.file.name.replace(/[^a-z0-9.]/gi, '_').toLowerCase()\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">CollectionBeforeOperationHook</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span>\n\n<span class=\"pl-c\">/**</span>\n<span class=\"pl-c\"> * Sanitizes the filename for upload collections to not include spaces or special characters</span>\n<span class=\"pl-c\"> */</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">sanitizeFileName</span>: <span class=\"pl-v\">CollectionBeforeOperationHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  args<span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">files</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">req</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">files</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span>\n    <span class=\"pl-s1\">files</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">undefined</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-s1\">files</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">files</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'object'</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">undefined</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'object'</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">undefined</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-c1\">&amp;&amp;</span>\n    <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'string'</span>\n  <span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">replace</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-kos\">[</span>^a-z0-9.<span class=\"pl-kos\">]</span><span class=\"pl-c1\">/</span>gi</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'_'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toLowerCase</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>",
      "createdAt": "2023-01-13T12:26:26Z",
      "chosenAt": "2023-02-09T16:19:55Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "rich-text upload-element: impossible to restrict access to media collection",
    "body": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">I'm using multiple upload-enables media collections (one for every user).<br>\nWithin the a user's media collection I've stated in the code that only this specific user has access to it.<br>\nEverything works fine in this multi-user setup except for one thing:</p>\n<p dir=\"auto\">When trying to reference the user's media collection from the richText field (upload element) Payload goes through ALL upload enables collections trying to access them. Of course my current user is not allowed to access the media collections of all other users. So my readAccess function denies access (as it does when trying to read any collection of another user).<br>\nBut here an error is thrown:<br>\n\"Forbidden: You are not allowed to perform this action.\"<br>\nAnd the popup from the richtText's upload element remains empty.</p>\n<p dir=\"auto\">I don't know if this is a bug or if my multi-user setup is totally wrong.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1820",
    "id": "1820",
    "createdAt": "2023-01-07T10:10:14Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "unonweb",
      "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
      "url": "https://github.com/unonweb"
    },
    "comments": [
      {
        "author": {
          "name": "unonweb",
          "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
          "url": "https://github.com/unonweb"
        },
        "body": "<p dir=\"auto\">The full error thrown is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[08:21:02] ERROR (payload): Forbidden: You are not allowed to perform this action.\n    at new ExtendableError (/home/frida/code/web/payloadcms/unonweb/node_modules/payload/dist/errors/APIError.js:22:15)\n    at new APIError (/home/frida/code/web/payloadcms/unonweb/node_modules/payload/dist/errors/APIError.js:38:9)\n    at new Forbidden (/home/frida/code/web/payloadcms/unonweb/node_modules/payload/dist/errors/Forbidden.js:10:9)\n    at executeAccess (/home/frida/code/web/payloadcms/unonweb/node_modules/payload/dist/auth/executeAccess.js:9:23)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async find (/home/frida/code/web/payloadcms/unonweb/node_modules/payload/dist/collections/operations/find.js:53:24)\n    at async findHandler (/home/frida/code/web/payloadcms/unonweb/node_modules/payload/dist/collections/requestHandlers/find.js:19:24\"><pre class=\"notranslate\"><code class=\"notranslate\">[08:21:02] ERROR (payload): Forbidden: You are not allowed to perform this action.\n    at new ExtendableError (/home/frida/code/web/payloadcms/unonweb/node_modules/payload/dist/errors/APIError.js:22:15)\n    at new APIError (/home/frida/code/web/payloadcms/unonweb/node_modules/payload/dist/errors/APIError.js:38:9)\n    at new Forbidden (/home/frida/code/web/payloadcms/unonweb/node_modules/payload/dist/errors/Forbidden.js:10:9)\n    at executeAccess (/home/frida/code/web/payloadcms/unonweb/node_modules/payload/dist/auth/executeAccess.js:9:23)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async find (/home/frida/code/web/payloadcms/unonweb/node_modules/payload/dist/collections/operations/find.js:53:24)\n    at async findHandler (/home/frida/code/web/payloadcms/unonweb/node_modules/payload/dist/collections/requestHandlers/find.js:19:24\n</code></pre></div>\n<p dir=\"auto\">In my opinion there should be no error, so we can have a multi-user setup with multiple media collections which are only accessible by the current user.</p>\n<p dir=\"auto\">Alternatively there could be a property like <code class=\"notranslate\">relation-to</code> for the rich-text field so we can specify which media collections to browse.</p>",
        "createdAt": "2023-01-11T08:24:43Z",
        "replies": null
      },
      {
        "author": {
          "name": "unonweb",
          "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
          "url": "https://github.com/unonweb"
        },
        "body": "<p dir=\"auto\">Alright, in the meantin I've realized that I'm NOT supposed to separate user data on a collection level but on a doc level.<br>\nThis is because you can only return query constraints (by access functions) on a doc level.</p>\n<p dir=\"auto\">For the sake of completeness I document here what I did wrong:</p>\n<p dir=\"auto\">I had a 'pages, 'media', etc collection for every user.<br>\nWithin the collections I hard coded the access restrictions.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// my access function\nfunction allowSpecificUsers({ req }, allowedUsers = []) {\n\ttry {\n\t\t//...\n\t\tif (allowedUsers.includes(req?.user?.name)) {\n\t\t\treturn true\n\t\t} else {\n\t\t\tconsole.log(`[access] requesting collection &quot;${req?.collection?.config?.slug}&quot; user NOT allowed: &quot;${req?.user?.name}&quot;`)\n\t\t\treturn false\n\t\t}\n\t} catch (err) {\n\t\tconsole.error(err)\n\t}\n}\n// withing the collection (Donald Duck's collection)\naccess: {\n\t\tread: ({ req }) =&gt; allowSpecificUsers({ req }, 'Donald Duck')\n\t},\n}\"><pre class=\"notranslate\"><span class=\"pl-c\">// my access function</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">allowSpecificUsers</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">allowedUsers</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\t<span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-c\">//...</span>\n\t\t<span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">allowedUsers</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">includes</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\t\t\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span>\n\t\t<span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>\n\t\t\t<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`[access] requesting collection \"<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">collection</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">slug</span><span class=\"pl-kos\">}</span></span>\" user NOT allowed: \"<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">}</span></span>\"`</span><span class=\"pl-kos\">)</span>\n\t\t\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>\n\t\t<span class=\"pl-kos\">}</span>\n\t<span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span>\n\t<span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-c\">// withing the collection (Donald Duck's collection)</span>\n<span class=\"pl-s1\">access</span>: <span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">allowSpecificUsers</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Donald Duck'</span><span class=\"pl-kos\">)</span>\n\t<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">This kind of setup worked fine until I encountered the error that I described above.</p>",
        "createdAt": "2023-01-12T12:59:18Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "unonweb",
        "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
        "url": "https://github.com/unonweb"
      },
      "body": "<p dir=\"auto\">Alright, in the meantin I've realized that I'm NOT supposed to separate user data on a collection level but on a doc level.<br>\nThis is because you can only return query constraints (by access functions) on a doc level.</p>\n<p dir=\"auto\">For the sake of completeness I document here what I did wrong:</p>\n<p dir=\"auto\">I had a 'pages, 'media', etc collection for every user.<br>\nWithin the collections I hard coded the access restrictions.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// my access function\nfunction allowSpecificUsers({ req }, allowedUsers = []) {\n\ttry {\n\t\t//...\n\t\tif (allowedUsers.includes(req?.user?.name)) {\n\t\t\treturn true\n\t\t} else {\n\t\t\tconsole.log(`[access] requesting collection &quot;${req?.collection?.config?.slug}&quot; user NOT allowed: &quot;${req?.user?.name}&quot;`)\n\t\t\treturn false\n\t\t}\n\t} catch (err) {\n\t\tconsole.error(err)\n\t}\n}\n// withing the collection (Donald Duck's collection)\naccess: {\n\t\tread: ({ req }) =&gt; allowSpecificUsers({ req }, 'Donald Duck')\n\t},\n}\"><pre class=\"notranslate\"><span class=\"pl-c\">// my access function</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">allowSpecificUsers</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">allowedUsers</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\t<span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-c\">//...</span>\n\t\t<span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">allowedUsers</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">includes</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\t\t\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span>\n\t\t<span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>\n\t\t\t<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`[access] requesting collection \"<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">collection</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">slug</span><span class=\"pl-kos\">}</span></span>\" user NOT allowed: \"<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">}</span></span>\"`</span><span class=\"pl-kos\">)</span>\n\t\t\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>\n\t\t<span class=\"pl-kos\">}</span>\n\t<span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span>\n\t<span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-c\">// withing the collection (Donald Duck's collection)</span>\n<span class=\"pl-s1\">access</span>: <span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">allowSpecificUsers</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Donald Duck'</span><span class=\"pl-kos\">)</span>\n\t<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">This kind of setup worked fine until I encountered the error that I described above.</p>",
      "createdAt": "2023-01-12T12:59:18Z",
      "chosenAt": "2023-01-12T12:59:22Z",
      "chosenBy": "unonweb",
      "replies": null
    }
  },
  {
    "title": "How to define TS for access and others thing?",
    "body": "<p dir=\"auto\">Hi, I am trying define typescript for <code class=\"notranslate\">access</code> in <code class=\"notranslate\">CollectionConfig</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const User = CollectionConfig={\n...\naccess: {\n    read: ({ req: { user } }) =&gt; {  // How to define ts for user var here ?\n      return true;\n    },\n  },\n  ...\n\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">const User = CollectionConfig={\n...\naccess: {\n    read: ({ req: { user } }) =&gt; {  // How to define ts for user var here ?\n      return true;\n    },\n  },\n  ...\n\n}\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/1788",
    "id": "1788",
    "createdAt": "2023-01-02T18:09:29Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "IRediTOTO",
      "avatar": "https://avatars.githubusercontent.com/u/15695252?u=1db36b69ca11c742388f9de00dad6e489916e95e&v=4",
      "url": "https://github.com/IRediTOTO"
    },
    "comments": [
      {
        "author": {
          "name": "JessChowdhury",
          "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
          "url": "https://github.com/JessChowdhury"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/IRediTOTO/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/IRediTOTO\">@IRediTOTO</a> - <a href=\"https://payloadcms.com/blog/announcing-generated-types\" rel=\"nofollow\">this blog post</a> should get you on track!</p>\n<p dir=\"auto\">After running <code class=\"notranslate\">payload generate:types</code> you should be able to import <code class=\"notranslate\">user</code> from your generated types file and use this in your code above.</p>",
        "createdAt": "2023-01-10T10:59:25Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "JessChowdhury",
        "avatar": "https://avatars.githubusercontent.com/u/67977755?u=08788f09f2505f810283c828fbff42eed6e8c37d&v=4",
        "url": "https://github.com/JessChowdhury"
      },
      "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/IRediTOTO/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/IRediTOTO\">@IRediTOTO</a> - <a href=\"https://payloadcms.com/blog/announcing-generated-types\" rel=\"nofollow\">this blog post</a> should get you on track!</p>\n<p dir=\"auto\">After running <code class=\"notranslate\">payload generate:types</code> you should be able to import <code class=\"notranslate\">user</code> from your generated types file and use this in your code above.</p>",
      "createdAt": "2023-01-10T10:59:25Z",
      "chosenAt": "2023-01-16T16:20:05Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Graphql loaded draft pages with draft: false specified",
    "body": "<p dir=\"auto\">It looks a bug to me that I can query out draft pages with following query in the official demo page:<br>\n<a href=\"https://demo.payloadcms.com/api/graphql-playground\" rel=\"nofollow\">https://demo.payloadcms.com/api/graphql-playground</a></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"# Write your query or mutation here\nquery getPages {\n  Pages(draft: false) {\n    docs {\n      slug\n      _status\n    }\n  }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\"># Write your query or mutation here\nquery getPages {\n  Pages(draft: false) {\n    docs {\n      slug\n      _status\n    }\n  }\n}\n</code></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/197689102-8736a606-f481-4862-a981-fa075262010d.png\"><img width=\"1319\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5801015/197689102-8736a606-f481-4862-a981-fa075262010d.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">I found out I need to add one more filter like this, but I'm still confused</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"query getPages {\n  Pages(draft: false, where:{ _status:{ equals: published } }) {\n    docs {\n      slug\n      _status\n    }\n  }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">query getPages {\n  Pages(draft: false, where:{ _status:{ equals: published } }) {\n    docs {\n      slug\n      _status\n    }\n  }\n}\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/1295",
    "id": "1295",
    "createdAt": "2022-10-25T05:22:21Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "Stupidism",
      "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
      "url": "https://github.com/Stupidism"
    },
    "comments": [
      {
        "author": {
          "name": "PatrikKozak",
          "avatar": "https://avatars.githubusercontent.com/u/35232443?u=9400d206c871808dfeaa1e3151669b6852900c63&v=4",
          "url": "https://github.com/PatrikKozak"
        },
        "body": "<p dir=\"auto\">Related and closed with <a aria-label=\"Issue #1566\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1472313023\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1566\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/1566/hovercard\" href=\"https://github.com/payloadcms/payload/issues/1566\">#1566</a></p>",
        "createdAt": "2023-01-09T21:16:29Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "PatrikKozak",
        "avatar": "https://avatars.githubusercontent.com/u/35232443?u=9400d206c871808dfeaa1e3151669b6852900c63&v=4",
        "url": "https://github.com/PatrikKozak"
      },
      "body": "<p dir=\"auto\">Related and closed with <a aria-label=\"Issue #1566\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1472313023\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1566\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/1566/hovercard\" href=\"https://github.com/payloadcms/payload/issues/1566\">#1566</a></p>",
      "createdAt": "2023-01-09T21:16:29Z",
      "chosenAt": "2023-01-09T21:16:32Z",
      "chosenBy": "PatrikKozak",
      "replies": null
    }
  },
  {
    "title": "Export \"AuthContext\" and \"useAuth\" in \"payload/auth\"",
    "body": "<p dir=\"auto\">I am playing around with the admin.avatar configuration and it was very difficult to spot the proper location for <code class=\"notranslate\">useAuth</code> (similarly to what happens here: <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/graphics/Account/Gravatar.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/graphics/Account/Gravatar.tsx</a>).</p>\n<p dir=\"auto\">I was able to import <code class=\"notranslate\">useAuth</code> from <code class=\"notranslate\">payload/dist/admin/components/utilities/Auth</code> but it's pretty nested.</p>\n<p dir=\"auto\">Would it be possible to move the <code class=\"notranslate\">useAuth</code> into <code class=\"notranslate\">payload/auth</code>?</p>\n<p dir=\"auto\">Thanks</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1249",
    "id": "1249",
    "createdAt": "2022-10-13T09:11:33Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "finkinfridom",
      "avatar": "https://avatars.githubusercontent.com/u/6241121?u=4eb3163bccdda63312cce209a93e74364f624ad7&v=4",
      "url": "https://github.com/finkinfridom"
    },
    "comments": [
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/finkinfridom/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/finkinfridom\">@finkinfridom</a> absolutely! It's in our roadmap to significantly improve our component library, including how components are exported as you mentioned, and also documentation. Here's a related discussion: <a aria-label=\"Discussion #1729\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4680440\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1729\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1729/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/1729\">#1729</a></p>\n<p dir=\"auto\">If you need this right away we'd be happy to accept a PR!</p>",
        "createdAt": "2023-01-09T20:51:19Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/finkinfridom/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/finkinfridom\">@finkinfridom</a> absolutely! It's in our roadmap to significantly improve our component library, including how components are exported as you mentioned, and also documentation. Here's a related discussion: <a aria-label=\"Discussion #1729\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4680440\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1729\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1729/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/1729\">#1729</a></p>\n<p dir=\"auto\">If you need this right away we'd be happy to accept a PR!</p>",
      "createdAt": "2023-01-09T20:51:19Z",
      "chosenAt": "2023-01-16T16:15:28Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "How can you provide field level access in the admin UI based on the context of the record being displayed?",
    "body": "<p dir=\"auto\">Suppose you have a task assignment system where any user can create a task (the task owner) and assign it to any other user (the task assignee). A task collection might consist of title, description and isCompleted fields, in addition to the task owner and task assignee.</p>\n<p dir=\"auto\">Using the field access hooks, how would one be able to limit editing of the task title description, and assignee to the task owner, while the task assignee can only update the isCompleted field?</p>\n<p dir=\"auto\">It looks like field access hooks are called one time to determine whether or not a field is enabled in the admin UI, and you can only return true or false without any context of the record being displayed.  The only solution I've been able to come up with is to return true in absence of any record context, rendering all fields are editable by any user, with an error only being generated when attempting to Save the record, since that is the only point at which the context of the record is provided to the access hook.</p>\n<p dir=\"auto\">Thanks!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1293",
    "id": "1293",
    "createdAt": "2022-10-24T16:05:06Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "nborko",
      "avatar": "https://avatars.githubusercontent.com/u/333142?v=4",
      "url": "https://github.com/nborko"
    },
    "comments": [
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<blockquote>\n<p dir=\"auto\">The only solution I've been able to come up with is to return true in absence of any record context, rendering all fields are editable by any user, with an error only being generated when attempting to Save the record, since that is the only point at which the context of the record is provided to the access hook.</p>\n</blockquote>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/nborko/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nborko\">@nborko</a> this is spot on. There's no way for us to determine the task owner until the record is saved and access control is needed at the API level. Once the document has been create you have data to control access with as expected.</p>",
        "createdAt": "2023-01-09T20:36:53Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<blockquote>\n<p dir=\"auto\">The only solution I've been able to come up with is to return true in absence of any record context, rendering all fields are editable by any user, with an error only being generated when attempting to Save the record, since that is the only point at which the context of the record is provided to the access hook.</p>\n</blockquote>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/nborko/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nborko\">@nborko</a> this is spot on. There's no way for us to determine the task owner until the record is saved and access control is needed at the API level. Once the document has been create you have data to control access with as expected.</p>",
      "createdAt": "2023-01-09T20:36:53Z",
      "chosenAt": "2023-01-16T16:14:12Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Return of afterRead hook for relationship field",
    "body": "<p dir=\"auto\">Hi there :)</p>\n<p dir=\"auto\">Here I'm with another question...</p>\n<p dir=\"auto\">What is the expected return in the <code class=\"notranslate\">afterRead</code> hook?</p>\n<p dir=\"auto\">Not sure if my configuration is wrong or something, but I created a field inside a block that based on some other field this should be populated in the API call.</p>\n<p dir=\"auto\">This is my example:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import payload from &quot;payload&quot;;\nimport { Block, FieldHook } from &quot;payload/types&quot;;\nimport { Type as MediaType } from &quot;../../collections/Media&quot;;\nimport { Type as TagType } from &quot;../../collections/Tags&quot;;\n\nexport type Type = {\n  blockType: &quot;media&quot;;\n  blockName?: string;\n  media: MediaType[];\n  tag: TagType[];\n};\n\nconst afterReadHook: FieldHook&lt;any, string[], any&gt; = async (\n  args\n): Promise&lt;string[]&gt; =&gt; {\n  const { value, siblingData, data, req } = args;\n\n  if (req.user?.collection === &quot;users&quot;) {\n    return value;\n  }\n\n  console.log({ siblingData, value });\n  const media = await payload.find({\n    collection: &quot;media&quot;,\n    where: {\n      tags: {\n        in: siblingData.tag.join(&quot;,&quot;),\n      },\n    },\n  });\n\n  console.log({ media: media.docs });\n\n  return media.docs.map(({ id }) =&gt; id);\n};\n\nexport const MediaList: Block = {\n  slug: &quot;mediaList&quot;,\n  labels: {\n    singular: &quot;Media List Block&quot;,\n    plural: &quot;Media List Blocks&quot;,\n  },\n  fields: [\n    {\n      name: &quot;tag&quot;,\n      label: &quot;Tag&quot;,\n      type: &quot;relationship&quot;,\n      relationTo: &quot;tags&quot;,\n      hasMany: true,\n      required: true,\n    },\n    {\n      name: &quot;media&quot;,\n      label: &quot;Media&quot;,\n      type: &quot;relationship&quot;,\n      relationTo: &quot;media&quot;,\n      hasMany: true,\n      admin: {\n        disabled: true,\n      },\n      hooks: {\n        afterRead: [afterReadHook],\n      },\n    },\n  ],\n};\n\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">Block</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">FieldHook</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/types\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">Type</span> <span class=\"pl-k\">as</span> <span class=\"pl-smi\">MediaType</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"../../collections/Media\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">Type</span> <span class=\"pl-k\">as</span> <span class=\"pl-smi\">TagType</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"../../collections/Tags\"</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">type</span> <span class=\"pl-smi\">Type</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">blockType</span>: <span class=\"pl-s\">\"media\"</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-c1\">blockName</span>?: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-c1\">media</span>: <span class=\"pl-smi\">MediaType</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-c1\">tag</span>: <span class=\"pl-smi\">TagType</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">afterReadHook</span>: <span class=\"pl-smi\">FieldHook</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">any</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">string</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">any</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span>\n  <span class=\"pl-s1\">args</span>\n<span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">Promise</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">string</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> value<span class=\"pl-kos\">,</span> siblingData<span class=\"pl-kos\">,</span> data<span class=\"pl-kos\">,</span> req <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">collection</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">\"users\"</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">value</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> siblingData<span class=\"pl-kos\">,</span> value <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">media</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">\"media\"</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">where</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">tags</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">in</span>: <span class=\"pl-s1\">siblingData</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">tag</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">join</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\",\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">media</span>: <span class=\"pl-s1\">media</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">docs</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-s1\">media</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">docs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> id <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">id</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-smi\">MediaList</span>: <span class=\"pl-smi\">Block</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">\"mediaList\"</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">labels</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">singular</span>: <span class=\"pl-s\">\"Media List Block\"</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">plural</span>: <span class=\"pl-s\">\"Media List Blocks\"</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">\"tag\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">\"Tag\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"relationship\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">\"tags\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">hasMany</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">\"media\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">\"Media\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"relationship\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">\"media\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">hasMany</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">disabled</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">afterRead</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s1\">afterReadHook</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">In this case, I would like to fetch all media with given tags specified in the field <code class=\"notranslate\">tag</code> and return in the field <code class=\"notranslate\">media</code> when this API is called.</p>\n<p dir=\"auto\">As of now, it only works if in the return of <code class=\"notranslate\">afterRead</code> hook I return an array of ids, but then it's not getting populated automatically.</p>\n<p dir=\"auto\">Is it a valid use case for Payload or some of my code/configurations are wrong in this case?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1354",
    "id": "1354",
    "createdAt": "2022-11-07T20:33:13Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "thebergamo",
      "avatar": "https://avatars.githubusercontent.com/u/1778730?u=5d0fdfbb4cd69ac726c3bbe8d608afc451c9d494&v=4",
      "url": "https://github.com/thebergamo"
    },
    "comments": [
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/thebergamo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/thebergamo\">@thebergamo</a> the <code class=\"notranslate\">afterRead</code> hook should return a modified document. For reference, here's the types for that hook:  </p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/payloadcms/payload/blob/aee7d36f1d16b7f4c676034050e96065c313c12f/src/fields/hooks/afterRead/index.ts#L7\">payload/src/fields/hooks/afterRead/index.ts</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 7\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/payloadcms/payload/commit/aee7d36f1d16b7f4c676034050e96065c313c12f\">aee7d36</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L7\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"7\"></td>\n          <td id=\"LC7\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">type</span> <span class=\"pl-smi\">Args</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n and here are the related docs: <a href=\"https://payloadcms.com/docs/hooks/fields#field-hooks\" rel=\"nofollow\">https://payloadcms.com/docs/hooks/fields#field-hooks</a><p></p>\n<p dir=\"auto\">So your hook should look something like this (not tested):</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const afterReadHook: FieldHook&lt;any, string[], any&gt; = async (\n  args\n): Promise&lt;string[]&gt; =&gt; {\n  const { doc, req } = args;\n\n  if (req.user?.collection === &quot;users&quot;) {\n    return doc;\n  }\n\n  const media = await payload.find({\n    collection: &quot;media&quot;,\n    where: {\n      tags: {\n        in: doc.tag.join(&quot;,&quot;),\n      },\n    },\n  });\n\n  return {\n    ...doc,\n    media: media.docs.map((doc) =&gt; doc.id),\n  }\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">afterReadHook</span>: <span class=\"pl-smi\">FieldHook</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">any</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">string</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">any</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span>\n  <span class=\"pl-s1\">args</span>\n<span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">Promise</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">string</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> doc<span class=\"pl-kos\">,</span> req <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">collection</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">\"users\"</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">doc</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">media</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">\"media\"</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">where</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">tags</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">in</span>: <span class=\"pl-s1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">tag</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">join</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\",\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n    ...<span class=\"pl-s1\">doc</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">media</span>: <span class=\"pl-s1\">media</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">docs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">doc</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>",
        "createdAt": "2023-01-09T20:05:20Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/thebergamo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/thebergamo\">@thebergamo</a> the <code class=\"notranslate\">afterRead</code> hook should return a modified document. For reference, here's the types for that hook:  </p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/payloadcms/payload/blob/aee7d36f1d16b7f4c676034050e96065c313c12f/src/fields/hooks/afterRead/index.ts#L7\">payload/src/fields/hooks/afterRead/index.ts</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 7\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/payloadcms/payload/commit/aee7d36f1d16b7f4c676034050e96065c313c12f\">aee7d36</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L7\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"7\"></td>\n          <td id=\"LC7\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">type</span> <span class=\"pl-smi\">Args</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n and here are the related docs: <a href=\"https://payloadcms.com/docs/hooks/fields#field-hooks\" rel=\"nofollow\">https://payloadcms.com/docs/hooks/fields#field-hooks</a><p></p>\n<p dir=\"auto\">So your hook should look something like this (not tested):</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const afterReadHook: FieldHook&lt;any, string[], any&gt; = async (\n  args\n): Promise&lt;string[]&gt; =&gt; {\n  const { doc, req } = args;\n\n  if (req.user?.collection === &quot;users&quot;) {\n    return doc;\n  }\n\n  const media = await payload.find({\n    collection: &quot;media&quot;,\n    where: {\n      tags: {\n        in: doc.tag.join(&quot;,&quot;),\n      },\n    },\n  });\n\n  return {\n    ...doc,\n    media: media.docs.map((doc) =&gt; doc.id),\n  }\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">afterReadHook</span>: <span class=\"pl-smi\">FieldHook</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">any</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">string</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">any</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span>\n  <span class=\"pl-s1\">args</span>\n<span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">Promise</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">string</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> doc<span class=\"pl-kos\">,</span> req <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">collection</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">\"users\"</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">doc</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">media</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">\"media\"</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">where</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">tags</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">in</span>: <span class=\"pl-s1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">tag</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">join</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\",\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n    ...<span class=\"pl-s1\">doc</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">media</span>: <span class=\"pl-s1\">media</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">docs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">doc</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>",
      "createdAt": "2023-01-09T20:05:20Z",
      "chosenAt": "2023-01-16T16:13:47Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "How to add URL to forgot password email? And how to custom that email?",
    "body": "<p dir=\"auto\">Hi, I'm trying to send and custom email. Is there a function in PayloadCMS ready to send email<br>\nEx:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"payload.email.send(&quot;abc@gmail.com&quot;,{\nbody: &quot;Here is custom html&quot;,...\n})\"><pre class=\"notranslate\"><code class=\"notranslate\">payload.email.send(\"abc@gmail.com\",{\nbody: \"Here is custom html\",...\n})\n</code></pre></div>\n<p dir=\"auto\">When I recieved email forgot password, I lost the domain, how can I config it?<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/15695252/210269914-9caebbb8-b46b-4644-bf4c-61f4035eb756.png\"><img src=\"https://user-images.githubusercontent.com/15695252/210269914-9caebbb8-b46b-4644-bf4c-61f4035eb756.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1790",
    "id": "1790",
    "createdAt": "2023-01-02T18:59:55Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "IRediTOTO",
      "avatar": "https://avatars.githubusercontent.com/u/15695252?u=1db36b69ca11c742388f9de00dad6e489916e95e&v=4",
      "url": "https://github.com/IRediTOTO"
    },
    "comments": [
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/IRediTOTO/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/IRediTOTO\">@IRediTOTO</a>, yes you can send email with Payload using the <code class=\"notranslate\">payload.sendEmail</code> method as long as email has been configured. Here's the docs related to that: <a href=\"https://payloadcms.com/docs/email/overview#email-functionality\" rel=\"nofollow\">https://payloadcms.com/docs/email/overview#email-functionality</a></p>\n<p dir=\"auto\">Then you can generate your own email using <code class=\"notranslate\">auth.forgotPassword.generateEmailHTML</code> on your auth collection's config — more on that here: <a href=\"https://payloadcms.com/docs/authentication/config#forgot-password\" rel=\"nofollow\">https://payloadcms.com/docs/authentication/config#forgot-password</a></p>",
        "createdAt": "2023-01-09T19:53:17Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/IRediTOTO/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/IRediTOTO\">@IRediTOTO</a>, yes you can send email with Payload using the <code class=\"notranslate\">payload.sendEmail</code> method as long as email has been configured. Here's the docs related to that: <a href=\"https://payloadcms.com/docs/email/overview#email-functionality\" rel=\"nofollow\">https://payloadcms.com/docs/email/overview#email-functionality</a></p>\n<p dir=\"auto\">Then you can generate your own email using <code class=\"notranslate\">auth.forgotPassword.generateEmailHTML</code> on your auth collection's config — more on that here: <a href=\"https://payloadcms.com/docs/authentication/config#forgot-password\" rel=\"nofollow\">https://payloadcms.com/docs/authentication/config#forgot-password</a></p>",
      "createdAt": "2023-01-09T19:53:17Z",
      "chosenAt": "2023-01-10T06:42:08Z",
      "chosenBy": "IRediTOTO",
      "replies": null
    }
  },
  {
    "title": "Automatically filtering collections by site (multisite setup)",
    "body": "<p dir=\"auto\">Hey guys!</p>\n<p dir=\"auto\">I've been working a feature for a client that wants to use 1 payload instance for all his sites.<br>\nSo far I added a <code class=\"notranslate\">sites</code> collection and every collection (such as <code class=\"notranslate\">pages</code>) has a <code class=\"notranslate\">site</code> relation.</p>\n<p dir=\"auto\">I've added a Context for setting your currently active site:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import React, {\n    useState, createContext, useContext, useEffect,\n} from 'react';\n\nconst Context = createContext({\n    currentSite: null,\n    setCurrentSite: () =&gt; {},\n} as SiteContext);\n\nexport const SiteProvider: React.FC&lt;{ children: React.ReactNode }&gt; = ({ children }) =&gt; {\n    const [currentSite, setCurrentSite] = useState&lt;string | null&gt;();\n\n    useEffect(() =&gt; {\n        const site = localStorage.getItem('currentSite');\n\n        if (site) {\n            setCurrentSite(site);\n        }\n    });\n\n    const setSite = (site: string | null) =&gt; {\n        localStorage.setItem('currentSite', site);\n        setCurrentSite(site);\n    }\n\n    return (\n        &lt;Context.Provider value={{\n            currentSite,\n            setCurrentSite: setSite,\n        }}&gt;\n            {children}\n        &lt;/Context.Provider&gt;\n    );\n};\n\nclass SiteContext {\n    currentSite: string | null;\n    setCurrentSite: (string) =&gt; void;\n}\n\ntype UseSite = () =&gt; SiteContext;\n\nexport const useSite: UseSite = () =&gt; useContext(Context);\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">React</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">useState</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">createContext</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">useContext</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">useEffect</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">Context</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">createContext</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">currentSite</span>: <span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">setCurrentSite</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span> <span class=\"pl-k\">as</span> <span class=\"pl-smi\">SiteContext</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-smi\">SiteProvider</span>: <span class=\"pl-smi\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-smi\">FC</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">children</span>: <span class=\"pl-smi\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-smi\">ReactNode</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> children <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">currentSite</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">setCurrentSite</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useState</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">string</span> <span class=\"pl-c1\">|</span> <span class=\"pl-c1\">null</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-en\">useEffect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">site</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">localStorage</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getItem</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'currentSite'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">site</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-en\">setCurrentSite</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">site</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-en\">setSite</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">site</span>: <span class=\"pl-smi\">string</span> <span class=\"pl-c1\">|</span> <span class=\"pl-c1\">null</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">localStorage</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">setItem</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'currentSite'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">site</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-en\">setCurrentSite</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">site</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-smi\">Context</span><span class=\"pl-kos\">.</span><span class=\"pl-smi\">Provider</span> <span class=\"pl-smi\">value</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">currentSite</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">setCurrentSite</span>: <span class=\"pl-smi\">setSite</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-c1\">&gt;</span>\n            <span class=\"pl-kos\">{</span>children<span class=\"pl-kos\">}</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span>Context.Provider&gt;</span><span class=\"pl-c1\"></span>\n    <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">SiteContext</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">currentSite</span>: <span class=\"pl-smi\">string</span> <span class=\"pl-c1\">|</span> <span class=\"pl-c1\">null</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-c1\">setCurrentSite</span>: <span class=\"pl-kos\">(</span><span class=\"pl-smi\">string</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-k\">void</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">type</span> <span class=\"pl-smi\">UseSite</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-smi\">SiteContext</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">useSite</span>: <span class=\"pl-smi\">UseSite</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">useContext</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">Context</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">And added a simple dropdown below the logo to pick one of the sites.</p>\n<p dir=\"auto\">Now I want to enable the \"<code class=\"notranslate\">collection.filters.where.site = currentSite</code>\" filter by default on some of the collections, but I have trouble finding where to do this. Any tips?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1833",
    "id": "1833",
    "createdAt": "2023-01-09T19:24:03Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "falko100",
      "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
      "url": "https://github.com/falko100"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/falko100/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/falko100\">@falko100</a> — that type of \"filter\" would be referred to as a query constraint, and that is generally accomplished via some backend logic in either a field hook or an access control operation.</p>\n<p dir=\"auto\">There are lots of ways to do this - but I think how I'd do it is persist something to the user when you switch the selected site - like... a <code class=\"notranslate\">select</code> field on the user or similar.</p>\n<p dir=\"auto\">And then write all your access control to look at which site the user has selected, and return your query constraint based on that. Does that make sense?</p>",
        "createdAt": "2023-01-09T19:38:53Z",
        "replies": [
          {
            "author": {
              "name": "falko100",
              "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
              "url": "https://github.com/falko100"
            },
            "body": "<p dir=\"auto\">Ahh perfect. I was close but got confused.<br>\nI finally put it here:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const Pages: CollectionConfig = {\n  slug: 'pages',\n  access: {\n    read: ({ req: { user }}) =&gt; {\n      if (user) {\n        return {\n          site: {\n            equals: user.currentSite.id,\n          }\n        }\n      }\n\n      return true;\n    },\n    ...\n  },\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-smi\">Pages</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">req</span>: <span class=\"pl-kos\">{</span> user <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">site</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">equals</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">currentSite</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span>\n\n      <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    ...\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">My problem was that I was trying to do this all in the frontend.</p>",
            "createdAt": "2023-01-09T19:53:06Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/falko100/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/falko100\">@falko100</a> — that type of \"filter\" would be referred to as a query constraint, and that is generally accomplished via some backend logic in either a field hook or an access control operation.</p>\n<p dir=\"auto\">There are lots of ways to do this - but I think how I'd do it is persist something to the user when you switch the selected site - like... a <code class=\"notranslate\">select</code> field on the user or similar.</p>\n<p dir=\"auto\">And then write all your access control to look at which site the user has selected, and return your query constraint based on that. Does that make sense?</p>",
      "createdAt": "2023-01-09T19:38:53Z",
      "chosenAt": "2023-01-09T19:51:14Z",
      "chosenBy": "falko100",
      "replies": [
        {
          "author": {
            "name": "falko100",
            "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
            "url": "https://github.com/falko100"
          },
          "body": "<p dir=\"auto\">Ahh perfect. I was close but got confused.<br>\nI finally put it here:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const Pages: CollectionConfig = {\n  slug: 'pages',\n  access: {\n    read: ({ req: { user }}) =&gt; {\n      if (user) {\n        return {\n          site: {\n            equals: user.currentSite.id,\n          }\n        }\n      }\n\n      return true;\n    },\n    ...\n  },\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-smi\">Pages</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">req</span>: <span class=\"pl-kos\">{</span> user <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">site</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">equals</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">currentSite</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span>\n\n      <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    ...\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">My problem was that I was trying to do this all in the frontend.</p>",
          "createdAt": "2023-01-09T19:53:06Z"
        }
      ]
    }
  },
  {
    "title": "Bug: \"admin\" is allowed on NamedTab type, but its value is ignored & NamedTab always included",
    "body": "<p dir=\"auto\">Hi Team Payload,</p>\n<p dir=\"auto\">It appears that while \"admin\" is allowed on a NamedTab type, that its value gets ignored.</p>\n<p dir=\"auto\">If this is better meant as an issue, happy to delete and repost.</p>\n<hr>\n<p dir=\"auto\"><strong>For reference:</strong></p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">NamedTab type below shows that \"admin\" property is included from union w/ FieldBase</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">export declare type NamedTab = TabBase &amp; FieldBase;</code></li>\n</ul>\n</li>\n<li>\n<p dir=\"auto\">Here's a snapshot of what I'm trying to do — dynamically include the relevant tabs based on a enumerated layout property</p>\n<ul dir=\"auto\">\n<li>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/101012384/197018230-fac88810-72cb-4a18-9142-6e9dafc6a219.png\"><img width=\"654\" alt=\"Screen Shot 2022-10-20 at 1 28 06 PM\" src=\"https://user-images.githubusercontent.com/101012384/197018230-fac88810-72cb-4a18-9142-6e9dafc6a219.png\" style=\"max-width: 100%;\"></a>\n</li>\n</ul>\n</li>\n<li>\n<p dir=\"auto\">Results = still present even with always false value</p>\n<ul dir=\"auto\">\n<li>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/101012384/197018214-c0305ac0-8c0c-4398-8ca9-2162ce75bc71.png\"><img width=\"259\" alt=\"Screen Shot 2022-10-20 at 1 28 24 PM\" src=\"https://user-images.githubusercontent.com/101012384/197018214-c0305ac0-8c0c-4398-8ca9-2162ce75bc71.png\" style=\"max-width: 100%;\"></a>\n</li>\n</ul>\n</li>\n</ul>",
    "url": "https://github.com/payloadcms/payload/discussions/1284",
    "id": "1284",
    "createdAt": "2022-10-20T17:35:46Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "andwrobs",
      "avatar": "https://avatars.githubusercontent.com/u/101012384?u=716f55d08cbb33242adb1ebadfad47def9e98881&v=4",
      "url": "https://github.com/andwrobs"
    },
    "comments": [
      {
        "author": {
          "name": "PatrikKozak",
          "avatar": "https://avatars.githubusercontent.com/u/35232443?u=9400d206c871808dfeaa1e3151669b6852900c63&v=4",
          "url": "https://github.com/PatrikKozak"
        },
        "body": "<p dir=\"auto\">Hey @andwrobs — currently <strong>conditions</strong> are not meant to work on <code class=\"notranslate\">tabs</code>. So we will need to omit that property from <code class=\"notranslate\">FieldBase</code>. However, enabling it would be a good <em>feature request</em> and we will keep it on the radar!</p>",
        "createdAt": "2023-01-09T19:23:17Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "PatrikKozak",
        "avatar": "https://avatars.githubusercontent.com/u/35232443?u=9400d206c871808dfeaa1e3151669b6852900c63&v=4",
        "url": "https://github.com/PatrikKozak"
      },
      "body": "<p dir=\"auto\">Hey @andwrobs — currently <strong>conditions</strong> are not meant to work on <code class=\"notranslate\">tabs</code>. So we will need to omit that property from <code class=\"notranslate\">FieldBase</code>. However, enabling it would be a good <em>feature request</em> and we will keep it on the radar!</p>",
      "createdAt": "2023-01-09T19:23:17Z",
      "chosenAt": "2023-01-09T21:22:10Z",
      "chosenBy": "PatrikKozak",
      "replies": null
    }
  },
  {
    "title": "How to asssociate parent to children so children has the id of parent?",
    "body": "<p dir=\"auto\">Hi! I'm trying to create a relation between a Task and a Step. I got the part where the Task has a relationTo Step, but i cannot find how to give the step collection the id of the parent(the task associated) I've tried using collection hooks, but the object is partial and i only got the id of the step, not the actual object : <code class=\"notranslate\">steps: [ { value: '639b487524769b06297d5b25', relationTo: 'steps' } ],</code>.</p>\n<p dir=\"auto\">I want to know it the collection hooks is the way to go and how i would access the step object from the hook in the task collection or if there is a better way to do this.</p>\n<p dir=\"auto\">Thanks!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1679",
    "id": "1679",
    "createdAt": "2022-12-15T17:29:18Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "synziv",
      "avatar": "https://avatars.githubusercontent.com/u/33548174?v=4",
      "url": "https://github.com/synziv"
    },
    "comments": [
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\">You will need to perform a <code class=\"notranslate\">payload.findByID</code> (<a href=\"https://payloadcms.com/docs/local-api/overview#accessing-payload\" rel=\"nofollow\">see here</a>) operation to look up the entire step document.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// Note: there will be a more eloquent way to do this, since you will likely want to loop and get all steps?\nconst fullDoc = await payload.findByID({ collection: 'steps', id: step[0].value });\"><pre class=\"notranslate\"><span class=\"pl-c\">// Note: there will be a more eloquent way to do this, since you will likely want to loop and get all steps?</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">fullDoc</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">findByID</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'steps'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">step</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>",
        "createdAt": "2023-01-09T17:02:29Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "JarrodMFlesch",
        "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
        "url": "https://github.com/JarrodMFlesch"
      },
      "body": "<p dir=\"auto\">You will need to perform a <code class=\"notranslate\">payload.findByID</code> (<a href=\"https://payloadcms.com/docs/local-api/overview#accessing-payload\" rel=\"nofollow\">see here</a>) operation to look up the entire step document.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// Note: there will be a more eloquent way to do this, since you will likely want to loop and get all steps?\nconst fullDoc = await payload.findByID({ collection: 'steps', id: step[0].value });\"><pre class=\"notranslate\"><span class=\"pl-c\">// Note: there will be a more eloquent way to do this, since you will likely want to loop and get all steps?</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">fullDoc</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">findByID</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'steps'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">step</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>",
      "createdAt": "2023-01-09T17:02:29Z",
      "chosenAt": "2023-01-16T16:11:44Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "ValidationError: The following field is invalid",
    "body": "<h3 dir=\"auto\">Collections</h3>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const Surah: CollectionConfig = {\n    slug: &quot;surah&quot;,\n    admin: {\n        useAsTitle: &quot;name&quot;,\n        defaultColumns: [\n            &quot;name&quot;,\n            &quot;id&quot;,\n            'variations',\n            &quot;publishDate&quot;,\n            'status'\n        ],\n        group: &quot;Content&quot;\n    },\n    access: {\n        read: ({ req: { user } }) =&gt; { \n            if (user) {\n                return true;\n            }\n\n            return {\n                and: [\n                    {\n                        publishDate: {\n                            less_than: new Date().toJSON(),\n                        },\n                        _status: {\n                            equals: 'published',\n                        },\n                    },\n                ],\n            };\n        }\n    },\n    versions: {\n        drafts: true,\n    },\n    fields: [\n        {\n            name: &quot;name&quot;,\n            type: &quot;text&quot;,\n            localized: true,\n        },\n{\n            name: 'quranPage',\n            type: 'relationship',\n            relationTo: 'quranPage'\n            required: true,\n            hasMany: true,\n            admin: {\n                position: 'sidebar',\n            },\n        },\n    ]\n}\nexport default Surah;\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-v\">Surah</span>: <span class=\"pl-v\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">\"surah\"</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">\"name\"</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">defaultColumns</span>: <span class=\"pl-kos\">[</span>\n            <span class=\"pl-s\">\"name\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-s\">\"id\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-s\">'variations'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-s\">\"publishDate\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-s\">'status'</span>\n        <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">group</span>: <span class=\"pl-s\">\"Content\"</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">req</span>: <span class=\"pl-kos\">{</span> user <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span> \n            <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-kos\">}</span>\n\n            <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">and</span>: <span class=\"pl-kos\">[</span>\n                    <span class=\"pl-kos\">{</span>\n                        <span class=\"pl-c1\">publishDate</span>: <span class=\"pl-kos\">{</span>\n                            <span class=\"pl-c1\">less_than</span>: <span class=\"pl-k\">new</span> <span class=\"pl-v\">Date</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toJSON</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n                        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n                        <span class=\"pl-c1\">_status</span>: <span class=\"pl-kos\">{</span>\n                            <span class=\"pl-c1\">equals</span>: <span class=\"pl-s\">'published'</span><span class=\"pl-kos\">,</span>\n                        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n                    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">versions</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">drafts</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">\"name\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"text\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">localized</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'quranPage'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'quranPage'</span>\n            <span class=\"pl-s1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">hasMany</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">position</span>: <span class=\"pl-s\">'sidebar'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-v\">Surah</span><span class=\"pl-kos\">;</span></pre></div>\n<h3 dir=\"auto\">Variations Collection</h3>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const QuranPage: CollectionConfig = {\n    slug: 'quranPage',\n    admin: {\n        useAsTitle: 'name',\n        defaultColumns: ['name', 'id', 'archived'],\n        group: 'Content',\n    },\n    access: {\n        read: () =&gt; true,\n    },\n    fields: [\n        {\n            name: 'name',\n            type: 'text',\n            localized: true,\n        },\n        {\n            name: 'summary',\n            type: 'ui',\n            admin: {\n                position: 'sidebar',\n                components: {\n                    Field: QuranPageSummary,\n                }\n            }\n        }\n    ],\n}\n\nexport default QuranPage;\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-v\">QuranPage</span>: <span class=\"pl-v\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'quranPage'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'name'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">defaultColumns</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'name'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'id'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'archived'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">group</span>: <span class=\"pl-s\">'Content'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'name'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">localized</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'summary'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'ui'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">position</span>: <span class=\"pl-s\">'sidebar'</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">components</span>: <span class=\"pl-kos\">{</span>\n                    <span class=\"pl-c1\">Field</span>: <span class=\"pl-v\">QuranPageSummary</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-v\">QuranPage</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">When I try to save this collection this showing <code class=\"notranslate\">ValidationError</code> Error</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"[16:30:52] ERROR (payload): ValidationError: The following field is invalid: quranPage\n    at new ExtendableError (E:\\MERN Project\\quranicdeen\\quranicdeen-admin\\node_modules\\payload\\src\\errors\\APIError.ts:26:11)\n    at new APIError (E:\\MERN Project\\quranicdeen\\quranicdeen-admin\\node_modules\\payload\\src\\errors\\APIError.ts:43:5)\n    at new ValidationError (E:\\MERN Project\\quranicdeen\\quranicdeen-admin\\node_modules\\payload\\src\\errors\\ValidationError.ts:8:5)\n    at beforeChange (E:\\MERN Project\\quranicdeen\\quranicdeen-admin\\node_modules\\payload\\src\\fields\\hooks\\beforeChange\\index.ts:52:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at update (E:\\MERN Project\\quranicdeen\\quranicdeen-admin\\node_modules\\payload\\src\\collections\\operations\\update.ts:202:16)\n    at updateHandler (E:\\MERN Project\\quranicdeen\\quranicdeen-admin\\node_modules\\payload\\src\\collections\\requestHandlers\\update.ts:23:17)\"><pre class=\"notranslate\">[16:30:52] ERROR (payload): ValidationError: The following field is invalid: quranPage\n    at new ExtendableError (E:<span class=\"pl-cce\">\\M</span>ERN Project<span class=\"pl-cce\">\\q</span>uranicdeen<span class=\"pl-cce\">\\q</span>uranicdeen-admin<span class=\"pl-cce\">\\n</span>ode_modules<span class=\"pl-cce\">\\p</span>ayload<span class=\"pl-cce\">\\s</span>rc<span class=\"pl-cce\">\\e</span>rrors<span class=\"pl-cce\">\\A</span>PIError.ts:26:11)\n    at new APIError (E:<span class=\"pl-cce\">\\M</span>ERN Project<span class=\"pl-cce\">\\q</span>uranicdeen<span class=\"pl-cce\">\\q</span>uranicdeen-admin<span class=\"pl-cce\">\\n</span>ode_modules<span class=\"pl-cce\">\\p</span>ayload<span class=\"pl-cce\">\\s</span>rc<span class=\"pl-cce\">\\e</span>rrors<span class=\"pl-cce\">\\A</span>PIError.ts:43:5)\n    at new ValidationError (E:<span class=\"pl-cce\">\\M</span>ERN Project<span class=\"pl-cce\">\\q</span>uranicdeen<span class=\"pl-cce\">\\q</span>uranicdeen-admin<span class=\"pl-cce\">\\n</span>ode_modules<span class=\"pl-cce\">\\p</span>ayload<span class=\"pl-cce\">\\s</span>rc<span class=\"pl-cce\">\\e</span>rrors<span class=\"pl-cce\">\\V</span>alidationError.ts:8:5)\n    at beforeChange (E:<span class=\"pl-cce\">\\M</span>ERN Project<span class=\"pl-cce\">\\q</span>uranicdeen<span class=\"pl-cce\">\\q</span>uranicdeen-admin<span class=\"pl-cce\">\\n</span>ode_modules<span class=\"pl-cce\">\\p</span>ayload<span class=\"pl-cce\">\\s</span>rc<span class=\"pl-cce\">\\f</span>ields<span class=\"pl-cce\">\\h</span>ooks<span class=\"pl-cce\">\\b</span>eforeChange<span class=\"pl-cce\">\\i</span>ndex.ts:52:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at update (E:<span class=\"pl-cce\">\\M</span>ERN Project<span class=\"pl-cce\">\\q</span>uranicdeen<span class=\"pl-cce\">\\q</span>uranicdeen-admin<span class=\"pl-cce\">\\n</span>ode_modules<span class=\"pl-cce\">\\p</span>ayload<span class=\"pl-cce\">\\s</span>rc<span class=\"pl-cce\">\\c</span>ollections<span class=\"pl-cce\">\\o</span>perations<span class=\"pl-cce\">\\u</span>pdate.ts:202:16)\n    at updateHandler (E:<span class=\"pl-cce\">\\M</span>ERN Project<span class=\"pl-cce\">\\q</span>uranicdeen<span class=\"pl-cce\">\\q</span>uranicdeen-admin<span class=\"pl-cce\">\\n</span>ode_modules<span class=\"pl-cce\">\\p</span>ayload<span class=\"pl-cce\">\\s</span>rc<span class=\"pl-cce\">\\c</span>ollections<span class=\"pl-cce\">\\r</span>equestHandlers<span class=\"pl-cce\">\\u</span>pdate.ts:23:17)</pre></div>\n<h2 dir=\"auto\">MongoDb</h2>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/15661765/210401754-d438a05b-ef9c-402b-b0c0-2e4392f24a5e.png\"><img src=\"https://user-images.githubusercontent.com/15661765/210401754-d438a05b-ef9c-402b-b0c0-2e4392f24a5e.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1800",
    "id": "1800",
    "createdAt": "2023-01-03T16:44:37Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "shakibdshy",
      "avatar": "https://avatars.githubusercontent.com/u/15661765?u=2904c898c7bd02771c481429445e7cc43fb76a2b&v=4",
      "url": "https://github.com/shakibdshy"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/shakibdshy/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shakibdshy\">@shakibdshy</a> — this does not appear to be an issue with Payload and is more likely related to your config itself. I'm going to convert this to a discussion but we can keep conversation going there.</p>\n<p dir=\"auto\">I do not see a field called <code class=\"notranslate\">quranPage</code> anywhere in the configs that you've provided. Where is that field located? This error is generated by Payload when a provided field's value is not valid.</p>",
        "createdAt": "2023-01-03T16:50:34Z",
        "replies": [
          {
            "author": {
              "name": "shakibdshy",
              "avatar": "https://avatars.githubusercontent.com/u/15661765?u=2904c898c7bd02771c481429445e7cc43fb76a2b&v=4",
              "url": "https://github.com/shakibdshy"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>  It's my bad. I'm already editing this post. Can you please check it now?</p>",
            "createdAt": "2023-01-03T16:58:29Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/shakibdshy/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shakibdshy\">@shakibdshy</a> — this does not appear to be an issue with Payload and is more likely related to your config itself. I'm going to convert this to a discussion but we can keep conversation going there.</p>\n<p dir=\"auto\">I do not see a field called <code class=\"notranslate\">quranPage</code> anywhere in the configs that you've provided. Where is that field located? This error is generated by Payload when a provided field's value is not valid.</p>",
      "createdAt": "2023-01-03T16:50:34Z",
      "chosenAt": "2023-02-27T20:20:30Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "shakibdshy",
            "avatar": "https://avatars.githubusercontent.com/u/15661765?u=2904c898c7bd02771c481429445e7cc43fb76a2b&v=4",
            "url": "https://github.com/shakibdshy"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>  It's my bad. I'm already editing this post. Can you please check it now?</p>",
          "createdAt": "2023-01-03T16:58:29Z"
        }
      ]
    }
  },
  {
    "title": "Why don't Payload integrated FE ?",
    "body": "<p dir=\"auto\">I saw PayloadCMS video on Youtube<br>\nBut why don't you add FE too ? We can do all in one like NextJS (FE and BE)<br>\nExample: abc.com for FE<br>\nand abc.com/admin for BE ?<br>\nI just wonder why.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1783",
    "id": "1783",
    "createdAt": "2023-01-02T10:48:06Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "IRediTOTO",
      "avatar": "https://avatars.githubusercontent.com/u/15695252?u=1db36b69ca11c742388f9de00dad6e489916e95e&v=4",
      "url": "https://github.com/IRediTOTO"
    },
    "comments": [
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/IRediTOTO/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/IRediTOTO\">@IRediTOTO</a> this is totally possible, and really just a matter of preference. One way to do this is to configure Payload to serve your FE by sharing the Express server. Here's an example of how this is done: <a href=\"https://github.com/payloadcms/nextjs-custom-server\">https://github.com/payloadcms/nextjs-custom-server</a></p>",
        "createdAt": "2023-01-02T14:12:27Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/IRediTOTO/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/IRediTOTO\">@IRediTOTO</a> this is totally possible, and really just a matter of preference. One way to do this is to configure Payload to serve your FE by sharing the Express server. Here's an example of how this is done: <a href=\"https://github.com/payloadcms/nextjs-custom-server\">https://github.com/payloadcms/nextjs-custom-server</a></p>",
      "createdAt": "2023-01-02T14:12:27Z",
      "chosenAt": "2023-01-02T14:54:12Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Images access forbidden",
    "body": "<p dir=\"auto\">Hey,</p>\n<p dir=\"auto\">Probably something easy on my part, but for some reason I am getting below error on my frontend when trying to access images from CMS:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Forbidden: You are not allowed to perform this action.\n    at new ExtendableError (/app/node_modules/.pnpm/payload@1.2.4_mwhvu7sfp6vq5ryuwb6hlbjfka/node_modules/payload/src/errors/APIError.ts:26:11)\n    at new APIError (/app/node_modules/.pnpm/payload@1.2.4_mwhvu7sfp6vq5ryuwb6hlbjfka/node_modules/payload/src/errors/APIError.ts:43:5)\n    at new Forbidden (/app/node_modules/.pnpm/payload@1.2.4_mwhvu7sfp6vq5ryuwb6hlbjfka/node_modules/payload/src/errors/Forbidden.ts:7:5)\n    at executeAccess (/app/node_modules/.pnpm/payload@1.2.4_mwhvu7sfp6vq5ryuwb6hlbjfka/node_modules/payload/src/auth/executeAccess.ts:9:43)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /app/node_modules/.pnpm/payload@1.2.4_mwhvu7sfp6vq5ryuwb6hlbjfka/node_modules/payload/src/auth/getExecuteStaticAccess.ts:14:28\"><pre class=\"notranslate\"><code class=\"notranslate\">Forbidden: You are not allowed to perform this action.\n    at new ExtendableError (/app/node_modules/.pnpm/payload@1.2.4_mwhvu7sfp6vq5ryuwb6hlbjfka/node_modules/payload/src/errors/APIError.ts:26:11)\n    at new APIError (/app/node_modules/.pnpm/payload@1.2.4_mwhvu7sfp6vq5ryuwb6hlbjfka/node_modules/payload/src/errors/APIError.ts:43:5)\n    at new Forbidden (/app/node_modules/.pnpm/payload@1.2.4_mwhvu7sfp6vq5ryuwb6hlbjfka/node_modules/payload/src/errors/Forbidden.ts:7:5)\n    at executeAccess (/app/node_modules/.pnpm/payload@1.2.4_mwhvu7sfp6vq5ryuwb6hlbjfka/node_modules/payload/src/auth/executeAccess.ts:9:43)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /app/node_modules/.pnpm/payload@1.2.4_mwhvu7sfp6vq5ryuwb6hlbjfka/node_modules/payload/src/auth/getExecuteStaticAccess.ts:14:28\n</code></pre></div>\n<p dir=\"auto\">All my collections are accessed using the same client and basic Authentication with JWT token.</p>\n<p dir=\"auto\">Below is my Image Collection config:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"export const Images: CollectionConfig = {\n  slug: 'images',\n  admin: {\n    useAsTitle: 'filename',\n  },\n  upload: {\n    staticURL: '/media',\n    staticDir: 'media',\n    adminThumbnail: 'thumbnail',\n    mimeTypes: ['image/*'],\n  },\n  fields: [...\n  ],\n};\"><pre class=\"notranslate\"><code class=\"notranslate\">export const Images: CollectionConfig = {\n  slug: 'images',\n  admin: {\n    useAsTitle: 'filename',\n  },\n  upload: {\n    staticURL: '/media',\n    staticDir: 'media',\n    adminThumbnail: 'thumbnail',\n    mimeTypes: ['image/*'],\n  },\n  fields: [...\n  ],\n};\n</code></pre></div>\n<p dir=\"auto\">I am also using CloudStorage access for non-local application:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"plugins: [\n    cloudStorage({\n      collections: {\n        [Images.slug]: {\n          adapter:\n            process.env.AWS_ASSET_STORAGE_ENABLED === 'true' ? S3Adapter : null,\n        },\n      },\n    })\"><pre class=\"notranslate\"><code class=\"notranslate\">plugins: [\n    cloudStorage({\n      collections: {\n        [Images.slug]: {\n          adapter:\n            process.env.AWS_ASSET_STORAGE_ENABLED === 'true' ? S3Adapter : null,\n        },\n      },\n    })\n</code></pre></div>\n<p dir=\"auto\">Probably something easy, but I cannot locate it. All the other collections are normally retrieved.<br>\nWhat is even more strange is when I login to CMS via UI, images on Frontend start suddenly appearing (?)</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1676",
    "id": "1676",
    "createdAt": "2022-12-15T15:45:37Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "adam-mrozik",
      "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
      "url": "https://github.com/adam-mrozik"
    },
    "comments": [
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\">This makes sense, you should define a read access control on your image collection, like so:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"access: {\n  read: () =&gt; true\n}\"><pre class=\"notranslate\">access: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Access control defaults to checking if a user exists on the request, which is why they appear when you are logged in.</p>",
        "createdAt": "2022-12-15T16:10:17Z",
        "replies": null
      },
      {
        "author": {
          "name": "adam-mrozik",
          "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
          "url": "https://github.com/adam-mrozik"
        },
        "body": "<p dir=\"auto\">Just a note, if anyone encounters it as well:</p>\n<p dir=\"auto\">While this might have been partially an issue as well, my main issue was oauthproxy wall I had on my Frontend and CMS. Weird that it only affected images, but lifting oauth wall from <code class=\"notranslate\">/images</code> path did the trick</p>\n<p dir=\"auto\">Thanks for the answer though!</p>",
        "createdAt": "2023-01-02T10:47:49Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "JarrodMFlesch",
        "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
        "url": "https://github.com/JarrodMFlesch"
      },
      "body": "<p dir=\"auto\">This makes sense, you should define a read access control on your image collection, like so:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"access: {\n  read: () =&gt; true\n}\"><pre class=\"notranslate\">access: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Access control defaults to checking if a user exists on the request, which is why they appear when you are logged in.</p>",
      "createdAt": "2022-12-15T16:10:17Z",
      "chosenAt": "2022-12-22T18:48:59Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Getting Webpack Error that suddenly appeared this morning. At a loss on how to fix.",
    "body": "<p dir=\"auto\">Hello all!</p>\n<p dir=\"auto\">This morningI woke up pumped to work on a pet project and suddenly Payload just sprung like 15 errors talking about serving static files (I normally use Vite so Webpack is a completely different beast to me).</p>\n<p dir=\"auto\">Anyway, here is the error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"in ./node_modules/body-parser/lib/read.js 20:11-26\nModule not found: Error: Can't resolve 'zlib' in '/my/path/to/project/node_modules/body-parser/lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { &quot;zlib&quot;: require.resolve(&quot;browserify-zlib&quot;) }'\n\t- install 'browserify-zlib'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { &quot;zlib&quot;: false }\nERROR in ./node_modules/body-parser/lib/types/urlencoded.js 228:12-34\nModule not found: Error: Can't resolve 'querystring' in '/my/path/to/project/node_modules/body-parser/lib/types'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { &quot;querystring&quot;: require.resolve(&quot;querystring-es3&quot;) }'\n\t- install 'querystring-es3'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { &quot;querystring&quot;: false }\nERROR in ./node_modules/destroy/index.js 16:17-41\nModule not found: Error: Can't resolve 'fs' in '/my/path/to/project/node_modules/destroy'\nERROR in ./node_modules/destroy/index.js 17:13-30\nModule not found: Error: Can't resolve 'stream' in '/my/path/to/project/node_modules/destroy'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { &quot;stream&quot;: require.resolve(&quot;stream-browserify&quot;) }'\n\t- install 'stream-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { &quot;stream&quot;: false }\nERROR in ./node_modules/destroy/index.js 18:11-26\nModule not found: Error: Can't resolve 'zlib' in '/my/path/to/project/node_modules/destroy'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { &quot;zlib&quot;: require.resolve(&quot;browserify-zlib&quot;) }'\n\t- install 'browserify-zlib'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { &quot;zlib&quot;: false }\nERROR in ./node_modules/etag/index.js 22:12-31\nModule not found: Error: Can't resolve 'fs' in '/my/path/to/project/node_modules/etag'\nERROR in ./node_modules/express/lib/request.js 18:11-30\nModule not found: Error: Can't resolve 'net' in '/my/path/to/project/node_modules/express/lib'\nERROR in ./node_modules/express/lib/utils.js 24:18-40\nModule not found: Error: Can't resolve 'querystring' in '/my/path/to/project/node_modules/express/lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { &quot;querystring&quot;: require.resolve(&quot;querystring-es3&quot;) }'\n\t- install 'querystring-es3'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { &quot;querystring&quot;: false }\nERROR in ./node_modules/express/lib/view.js 18:9-22\nModule not found: Error: Can't resolve 'fs' in '/my/path/to/project/node_modules/express/lib'\nERROR in ./node_modules/mime/mime.js 2:9-22\nModule not found: Error: Can't resolve 'fs' in '/my/path/to/project/node_modules/mime'\nERROR in ./node_modules/parseurl/index.js 15:10-24\nModule not found: Error: Can't resolve 'url' in '/my/path/to/project/node_modules/parseurl'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { &quot;url&quot;: require.resolve(&quot;url/&quot;) }'\n\t- install 'url'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { &quot;url&quot;: false }\nERROR in ./node_modules/send/index.js 23:9-22\nModule not found: Error: Can't resolve 'fs' in '/my/path/to/project/node_modules/send'\nERROR in ./node_modules/send/index.js 30:13-30\nModule not found: Error: Can't resolve 'stream' in '/my/path/to/project/node_modules/send'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { &quot;stream&quot;: require.resolve(&quot;stream-browserify&quot;) }'\n\t- install 'stream-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { &quot;stream&quot;: false }\nERROR in ./node_modules/send/index.js 31:11-26\nModule not found: Error: Can't resolve 'util' in '/my/path/to/project/node_modules/send'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { &quot;util&quot;: require.resolve(&quot;util/&quot;) }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { &quot;util&quot;: false }\nERROR in ./node_modules/serve-static/index.js 21:10-24\nModule not found: Error: Can't resolve 'url' in '/my/path/to/project/node_modules/serve-static'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { &quot;url&quot;: require.resolve(&quot;url/&quot;) }'\n\t- install 'url'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { &quot;url&quot;: false }\"><pre class=\"notranslate\"><code class=\"notranslate\">in ./node_modules/body-parser/lib/read.js 20:11-26\nModule not found: Error: Can't resolve 'zlib' in '/my/path/to/project/node_modules/body-parser/lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"zlib\": require.resolve(\"browserify-zlib\") }'\n\t- install 'browserify-zlib'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"zlib\": false }\nERROR in ./node_modules/body-parser/lib/types/urlencoded.js 228:12-34\nModule not found: Error: Can't resolve 'querystring' in '/my/path/to/project/node_modules/body-parser/lib/types'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"querystring\": require.resolve(\"querystring-es3\") }'\n\t- install 'querystring-es3'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"querystring\": false }\nERROR in ./node_modules/destroy/index.js 16:17-41\nModule not found: Error: Can't resolve 'fs' in '/my/path/to/project/node_modules/destroy'\nERROR in ./node_modules/destroy/index.js 17:13-30\nModule not found: Error: Can't resolve 'stream' in '/my/path/to/project/node_modules/destroy'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"stream\": require.resolve(\"stream-browserify\") }'\n\t- install 'stream-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"stream\": false }\nERROR in ./node_modules/destroy/index.js 18:11-26\nModule not found: Error: Can't resolve 'zlib' in '/my/path/to/project/node_modules/destroy'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"zlib\": require.resolve(\"browserify-zlib\") }'\n\t- install 'browserify-zlib'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"zlib\": false }\nERROR in ./node_modules/etag/index.js 22:12-31\nModule not found: Error: Can't resolve 'fs' in '/my/path/to/project/node_modules/etag'\nERROR in ./node_modules/express/lib/request.js 18:11-30\nModule not found: Error: Can't resolve 'net' in '/my/path/to/project/node_modules/express/lib'\nERROR in ./node_modules/express/lib/utils.js 24:18-40\nModule not found: Error: Can't resolve 'querystring' in '/my/path/to/project/node_modules/express/lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"querystring\": require.resolve(\"querystring-es3\") }'\n\t- install 'querystring-es3'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"querystring\": false }\nERROR in ./node_modules/express/lib/view.js 18:9-22\nModule not found: Error: Can't resolve 'fs' in '/my/path/to/project/node_modules/express/lib'\nERROR in ./node_modules/mime/mime.js 2:9-22\nModule not found: Error: Can't resolve 'fs' in '/my/path/to/project/node_modules/mime'\nERROR in ./node_modules/parseurl/index.js 15:10-24\nModule not found: Error: Can't resolve 'url' in '/my/path/to/project/node_modules/parseurl'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"url\": require.resolve(\"url/\") }'\n\t- install 'url'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"url\": false }\nERROR in ./node_modules/send/index.js 23:9-22\nModule not found: Error: Can't resolve 'fs' in '/my/path/to/project/node_modules/send'\nERROR in ./node_modules/send/index.js 30:13-30\nModule not found: Error: Can't resolve 'stream' in '/my/path/to/project/node_modules/send'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"stream\": require.resolve(\"stream-browserify\") }'\n\t- install 'stream-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"stream\": false }\nERROR in ./node_modules/send/index.js 31:11-26\nModule not found: Error: Can't resolve 'util' in '/my/path/to/project/node_modules/send'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\nERROR in ./node_modules/serve-static/index.js 21:10-24\nModule not found: Error: Can't resolve 'url' in '/my/path/to/project/node_modules/serve-static'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"url\": require.resolve(\"url/\") }'\n\t- install 'url'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"url\": false }\n</code></pre></div>\n<p dir=\"auto\">Everything was working perfectly yesterday and when I just booted up my local dev server, all of this blasted me in the face and won't let me continue until this is fixed. I have no idea where to start with this one. <g-emoji class=\"g-emoji\" alias=\"disappointed\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f61e.png\">😞</g-emoji></p>\n<p dir=\"auto\">UPDATE &amp; SOLUTION:</p>\n<p dir=\"auto\">VSCode's Autocomplete imported expresses query which was conflicting with a variable I had. Yay embarrassing dev moments!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1781",
    "id": "1781",
    "createdAt": "2022-12-31T15:38:54Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "paper-krane",
      "avatar": "https://avatars.githubusercontent.com/u/20448279?u=4925b641fa174d182fcca24997ac9feff60c6a04&v=4",
      "url": "https://github.com/paper-krane"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Glad you were able to find the solution! <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
        "createdAt": "2023-01-01T16:58:50Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">Glad you were able to find the solution! <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
      "createdAt": "2023-01-01T16:58:50Z",
      "chosenAt": "2023-01-01T16:58:54Z",
      "chosenBy": "denolfe",
      "replies": null
    }
  },
  {
    "title": "Creating a UI Field to display chart data",
    "body": "<p dir=\"auto\">I'm trying to create a <code class=\"notranslate\">group</code> field with a set of sliders to control numerical values and a <code class=\"notranslate\">ui</code> field do display the result of these values in a chart that updates dynamically as you change the group values.</p>\n<p dir=\"auto\">My Group Field looks something like this...</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const MyChartField: GroupField = {\n  name: 'my-chart-field',\n  type: 'group',\n  required: true,\n  fields: [\n    {\n      name: 'Preview',\n      type: 'ui',\n      admin: {\n        components: {\n          Cell: (args) =&gt; {\n            console.log('cell', args)\n            return &lt;div&gt;Cell&lt;/div&gt;\n          },\n          Field: (args) =&gt; {\n            // Uncommenting the following hooks causes infinite re-renders\n\n            // Get the `x` field state.\n            // const x = useFormFields(\n            //   ([fields, dispatch]) =&gt; fields['my-chart-field.x']\n            // )\n\n            // Get the `y` field state.\n            // const y = useFormFields(\n            //   ([fields, dispatch]) =&gt; fields['my-chart-field.y']\n            // )\n\n\n            console.log('field', args)\n            return &lt;div&gt;Field&lt;/div&gt;\n          },\n        },\n      },\n    },\n    Slider({ name: 'x' }),\n    Slider({ name: 'y' }),\n  ],\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-smi\">MyChartField</span>: <span class=\"pl-smi\">GroupField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'my-chart-field'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'group'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'Preview'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'ui'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">components</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-en\">Cell</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'cell'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span>\n            <span class=\"pl-k\">return</span> <span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">div</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-smi\">Cell</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span>div&gt;</span><span class=\"pl-c1\"></span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-en\">Field</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c\">// Uncommenting the following hooks causes infinite re-renders</span>\n\n            <span class=\"pl-c\">// Get the `x` field state.</span>\n            <span class=\"pl-c\">// const x = useFormFields(</span>\n            <span class=\"pl-c\">//   ([fields, dispatch]) =&gt; fields['my-chart-field.x']</span>\n            <span class=\"pl-c\">// )</span>\n\n            <span class=\"pl-c\">// Get the `y` field state.</span>\n            <span class=\"pl-c\">// const y = useFormFields(</span>\n            <span class=\"pl-c\">//   ([fields, dispatch]) =&gt; fields['my-chart-field.y']</span>\n            <span class=\"pl-c\">// )</span>\n\n\n            <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'field'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span>\n            <span class=\"pl-k\">return</span> <span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">div</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-smi\">Field</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span>div&gt;</span><span class=\"pl-c1\"></span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-smi\">Slider</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'x'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-smi\">Slider</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'y'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">My issue is that whenever I try to access sibling data from within the <code class=\"notranslate\">admin.components.Field</code> of a <code class=\"notranslate\">ui</code> field config my UI component continuously rerenders. What am I doing wrong? Or is there some other way to achieve something similar?</p>\n<p dir=\"auto\">Thanks in advance!</p>\n<p dir=\"auto\"><strong>UPDATE:</strong><br>\nTurned out to be my custom <code class=\"notranslate\">Slider</code> component used in conjunction with my custom UI component. Still investigating why. When the <code class=\"notranslate\">Slider</code> fields are replaced with simple <code class=\"notranslate\">number</code> fields, everything works as expected.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1723",
    "id": "1723",
    "createdAt": "2022-12-20T04:41:33Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "asibilia",
      "avatar": "https://avatars.githubusercontent.com/u/5579814?u=474c911a811329c3ba153de638f8a70314dbc0c2&v=4",
      "url": "https://github.com/asibilia"
    },
    "comments": [
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/asibilia/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asibilia\">@asibilia</a> can you throw this into another file and then import that component here? I am unsure about using react right in the config file itself. Let me know if you get around to giving that a shot!</p>",
        "createdAt": "2022-12-22T20:26:21Z",
        "replies": [
          {
            "author": {
              "name": "asibilia",
              "avatar": "https://avatars.githubusercontent.com/u/5579814?u=474c911a811329c3ba153de638f8a70314dbc0c2&v=4",
              "url": "https://github.com/asibilia"
            },
            "body": "<p dir=\"auto\">Unfortunately, that doesn't seem to change anything. I actually had the <code class=\"notranslate\">Field</code> component abstracted out to a separate file already but inlined it in the code snippet for clarity.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// my-chart-group-field.ts\nconst MyChartField: GroupField = {\n  name: 'my-chart-field',\n  type: 'group',\n  required: true,\n  fields: [\n    {\n      name: 'Preview',\n      type: 'ui',\n      admin: {\n        components: {\n          Cell: (args) =&gt; {\n            console.log('cell', args)\n            return &lt;div&gt;Cell&lt;/div&gt;\n          },\n          Field: MyChartUIField,\n        },\n      },\n    },\n    Slider({ name: 'x' }),\n    Slider({ name: 'y' }),\n  ],\n}\n\n// my-chart-ui-field.tsx\nconst MyChartUIField: FunctionComponent&lt;{ path: string }&gt; = ({ path }) =&gt; {\n    // Uncommenting the following hooks causes infinite re-renders\n    \n    // Get the `x` field state.\n    // const x = useFormFields(\n    //   ([fields, dispatch]) =&gt; fields.x\n    // )\n    \n    // Get the `y` field state.\n    // const y = useFormFields(\n    //   ([fields, dispatch]) =&gt; fields.y\n    // )\n    \n    \n    console.log('field', args)\n    return &lt;div&gt;Field&lt;/div&gt;\n}\n\nexport default React.memo(ProjectilePreview, isEqual)\n\"><pre class=\"notranslate\"><span class=\"pl-c\">// my-chart-group-field.ts</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">MyChartField</span>: <span class=\"pl-smi\">GroupField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'my-chart-field'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'group'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'Preview'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'ui'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">components</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-en\">Cell</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'cell'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span>\n            <span class=\"pl-k\">return</span> <span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">div</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-smi\">Cell</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span>div&gt;</span><span class=\"pl-c1\"></span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">Field</span>: <span class=\"pl-smi\">MyChartUIField</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-smi\">Slider</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'x'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-smi\">Slider</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'y'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-c\">// my-chart-ui-field.tsx</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">MyChartUIField</span>: <span class=\"pl-smi\">FunctionComponent</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-smi\">string</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> path <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// Uncommenting the following hooks causes infinite re-renders</span>\n    \n    <span class=\"pl-c\">// Get the `x` field state.</span>\n    <span class=\"pl-c\">// const x = useFormFields(</span>\n    <span class=\"pl-c\">//   ([fields, dispatch]) =&gt; fields.x</span>\n    <span class=\"pl-c\">// )</span>\n    \n    <span class=\"pl-c\">// Get the `y` field state.</span>\n    <span class=\"pl-c\">// const y = useFormFields(</span>\n    <span class=\"pl-c\">//   ([fields, dispatch]) =&gt; fields.y</span>\n    <span class=\"pl-c\">// )</span>\n    \n    \n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'field'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">div</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-smi\">Field</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span>div&gt;</span><span class=\"pl-c1\"></span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">memo</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">ProjectilePreview</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">isEqual</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">I've also memoized the child <code class=\"notranslate\">Field</code> component just in case it was caused by the props changing (which doesn't have any effect)</p>",
            "createdAt": "2022-12-23T00:10:29Z"
          },
          {
            "author": {
              "name": "JarrodMFlesch",
              "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
              "url": "https://github.com/JarrodMFlesch"
            },
            "body": "<p dir=\"auto\">I am curious what the Slider field is doing, does that have a custom component? I just threw an example together just like yours and I am not seeing infinite re-renders.</p>",
            "createdAt": "2022-12-23T13:49:32Z"
          },
          {
            "author": {
              "name": "asibilia",
              "avatar": "https://avatars.githubusercontent.com/u/5579814?u=474c911a811329c3ba153de638f8a70314dbc0c2&v=4",
              "url": "https://github.com/asibilia"
            },
            "body": "<p dir=\"auto\">Okay, so i think you're onto something... If i replace my custom slider components with just a simple number input I don't get the re-rendering when using <code class=\"notranslate\">useFormFields</code> in the UI field.</p>\n<p dir=\"auto\">Here's how I have my slider component set up, I must be doing something wrong...</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"slider/\n  - cell.tsx &lt;-- Cell\n  - config.ts \n  - input.tsx &lt;-- Field\"><pre class=\"notranslate\"><code class=\"notranslate\">slider/\n  - cell.tsx &lt;-- Cell\n  - config.ts \n  - input.tsx &lt;-- Field\n</code></pre></div>\n<div class=\"highlight highlight-source-tsx notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// slider/cell.tsx\nimport React from 'react'\nimport type { FunctionComponent } from 'react'\n\nimport type { SliderCellProps } from './types'\nimport './styles.scss'\n\nconst Cell: FunctionComponent&lt;SliderCellProps&gt; = (props) =&gt; {\n  const { cellData } = props\n\n  if (!cellData) return null\n\n  return (\n    &lt;input className=&quot;slider-cell&quot; type=&quot;slider&quot; value={cellData} disabled /&gt;\n  )\n}\n\nexport default Cell\"><pre class=\"notranslate\"><span class=\"pl-c\">// slider/cell.tsx</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">React</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">type</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">FunctionComponent</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">type</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">SliderCellProps</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./types'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s\">'./styles.scss'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">Cell</span>: <span class=\"pl-smi\">FunctionComponent</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">SliderCellProps</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">props</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> cellData <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">props</span>\n\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">cellData</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">input</span> <span class=\"pl-c1\">className</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"slider-cell\"</span> <span class=\"pl-c1\">type</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"slider\"</span> <span class=\"pl-c1\">value</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">cellData</span><span class=\"pl-kos\">}</span> <span class=\"pl-c1\">disabled</span> <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n  <span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">Cell</span></pre></div>\n<div class=\"highlight highlight-source-tsx notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// slider/input.tsx\nimport React from 'react'\nimport type { FunctionComponent } from 'react'\n\nimport { useFieldType } from 'payload/components/forms'\nimport { Label } from 'payload/components/forms'\n\nimport { validateNumberInRange } from './config'\nimport { SliderInputProps } from './types'\n\nimport './styles.scss'\n\nconst BASE_CLASS = 'slider'\n\nconst Input: FunctionComponent&lt;SliderInputProps&gt; = (props) =&gt; {\n  const { path, label, required, min, max, admin } = props\n\n  const { value = 0, setValue } = useFieldType&lt;number&gt;({\n    path,\n    validate: validateNumberInRange(min, max),\n  })\n\n  return (\n    &lt;div className={BASE_CLASS}&gt;\n      &lt;Label htmlFor={path} label={label} required={required} /&gt;\n      &lt;input\n        className={`${BASE_CLASS}__input`}\n        type=&quot;range&quot;\n        onChange={(e) =&gt; setValue(e.target.value)}\n        value={value}\n        min={min}\n        max={max}\n        step={admin.step}\n      /&gt;\n    &lt;/div&gt;\n  )\n}\nexport default Input\n\"><pre class=\"notranslate\"><span class=\"pl-c\">// slider/input.tsx</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">React</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">type</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">FunctionComponent</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">useFieldType</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/forms'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">Label</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/forms'</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">validateNumberInRange</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./config'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">SliderInputProps</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./types'</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s\">'./styles.scss'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">BASE_CLASS</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'slider'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">Input</span>: <span class=\"pl-smi\">FunctionComponent</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">SliderInputProps</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">props</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> path<span class=\"pl-kos\">,</span> label<span class=\"pl-kos\">,</span> required<span class=\"pl-kos\">,</span> min<span class=\"pl-kos\">,</span> max<span class=\"pl-kos\">,</span> admin <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">props</span>\n\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> value <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> setValue <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useFieldType</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">number</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    path<span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">validate</span>: <span class=\"pl-en\">validateNumberInRange</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">min</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">max</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">div</span> <span class=\"pl-c1\">className</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-smi\">BASE_CLASS</span><span class=\"pl-kos\">}</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-smi\">Label</span> <span class=\"pl-c1\">htmlFor</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">path</span><span class=\"pl-kos\">}</span> <span class=\"pl-c1\">label</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">label</span><span class=\"pl-kos\">}</span> <span class=\"pl-c1\">required</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">required</span><span class=\"pl-kos\">}</span> <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">input</span>\n        <span class=\"pl-c1\">className</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-smi\">BASE_CLASS</span><span class=\"pl-kos\">}</span></span>__input`</span><span class=\"pl-kos\">}</span>\n        <span class=\"pl-c1\">type</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"range\"</span>\n        <span class=\"pl-c1\">onChange</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">setValue</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">target</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span>\n        <span class=\"pl-c1\">value</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">}</span>\n        <span class=\"pl-c1\">min</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">min</span><span class=\"pl-kos\">}</span>\n        <span class=\"pl-c1\">max</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">max</span><span class=\"pl-kos\">}</span>\n        <span class=\"pl-c1\">step</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">admin</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">step</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n  <span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">Input</span></pre></div>\n<div class=\"highlight highlight-source-tsx notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// slider/config.ts\nimport get from 'lodash/get'\nimport type { Field, NumberField } from 'payload/types'\n\nimport Cell from './cell'\nimport Input from './input'\n\nexport const validateNumberInRange =\n  (min = 0, max = 100) =&gt;\n  (value: number): true | string =&gt; {\n    return (\n      (value &gt;= min &amp;&amp; value &lt;= max) || 'Value must be between the min and max'\n    )\n  }\n\ntype SliderProps = Omit&lt;NumberField, 'type'&gt;\nconst Slider = ({\n  name,\n  min = 0,\n  max = 100,\n  ...overrides\n}: SliderProps): Field =&gt; ({\n  required: true,\n  ...(overrides ?? {}),\n  name,\n  type: 'number',\n  validate: validateNumberInRange(min, max),\n  min,\n  max,\n  admin: {\n    step: get(overrides, ['admin', 'step'], 5),\n    components: {\n      Field: Input,\n      Cell,\n    },\n  },\n})\n\nexport default Slider\n\"><pre class=\"notranslate\"><span class=\"pl-c\">// slider/config.ts</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">get</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'lodash/get'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">type</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">Field</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">NumberField</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">Cell</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./cell'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">Input</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./input'</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">validateNumberInRange</span> <span class=\"pl-c1\">=</span>\n  <span class=\"pl-kos\">(</span><span class=\"pl-s1\">min</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">max</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">100</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span>\n  <span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span>: <span class=\"pl-smi\">number</span><span class=\"pl-kos\">)</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-c1\">|</span> <span class=\"pl-smi\">string</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>\n      <span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span> <span class=\"pl-c1\">&gt;=</span> <span class=\"pl-s1\">min</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">value</span> <span class=\"pl-c1\">&lt;=</span> <span class=\"pl-s1\">max</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s\">'Value must be between the min and max'</span>\n    <span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">type</span> <span class=\"pl-smi\">SliderProps</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">Omit</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">NumberField</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'type'</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">Slider</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  name<span class=\"pl-kos\">,</span>\n  min <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span>\n  max <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">100</span><span class=\"pl-kos\">,</span>\n  ...<span class=\"pl-s1\">overrides</span>\n<span class=\"pl-kos\">}</span>: <span class=\"pl-smi\">SliderProps</span><span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">Field</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  ...<span class=\"pl-kos\">(</span><span class=\"pl-s1\">overrides</span> <span class=\"pl-c1\">??</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  name<span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">validate</span>: <span class=\"pl-en\">validateNumberInRange</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">min</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">max</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  min<span class=\"pl-kos\">,</span>\n  max<span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">step</span>: <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">overrides</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s\">'admin'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'step'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">5</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">components</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">Field</span>: <span class=\"pl-smi\">Input</span><span class=\"pl-kos\">,</span>\n      Cell<span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">Slider</span></pre></div>",
            "createdAt": "2022-12-23T15:06:26Z"
          },
          {
            "author": {
              "name": "asibilia",
              "avatar": "https://avatars.githubusercontent.com/u/5579814?u=474c911a811329c3ba153de638f8a70314dbc0c2&v=4",
              "url": "https://github.com/asibilia"
            },
            "body": "<p dir=\"auto\">In case anyone is wondering, it seems to be related to the use of <code class=\"notranslate\">useFieldType</code> inside <code class=\"notranslate\">slider/input.tsx</code>. If I change that to <code class=\"notranslate\">useField</code> everything works as expected.</p>",
            "createdAt": "2022-12-30T14:54:01Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "JarrodMFlesch",
        "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
        "url": "https://github.com/JarrodMFlesch"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/asibilia/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asibilia\">@asibilia</a> can you throw this into another file and then import that component here? I am unsure about using react right in the config file itself. Let me know if you get around to giving that a shot!</p>",
      "createdAt": "2022-12-22T20:26:21Z",
      "chosenAt": "2022-12-29T15:23:26Z",
      "chosenBy": "asibilia",
      "replies": [
        {
          "author": {
            "name": "asibilia",
            "avatar": "https://avatars.githubusercontent.com/u/5579814?u=474c911a811329c3ba153de638f8a70314dbc0c2&v=4",
            "url": "https://github.com/asibilia"
          },
          "body": "<p dir=\"auto\">Unfortunately, that doesn't seem to change anything. I actually had the <code class=\"notranslate\">Field</code> component abstracted out to a separate file already but inlined it in the code snippet for clarity.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// my-chart-group-field.ts\nconst MyChartField: GroupField = {\n  name: 'my-chart-field',\n  type: 'group',\n  required: true,\n  fields: [\n    {\n      name: 'Preview',\n      type: 'ui',\n      admin: {\n        components: {\n          Cell: (args) =&gt; {\n            console.log('cell', args)\n            return &lt;div&gt;Cell&lt;/div&gt;\n          },\n          Field: MyChartUIField,\n        },\n      },\n    },\n    Slider({ name: 'x' }),\n    Slider({ name: 'y' }),\n  ],\n}\n\n// my-chart-ui-field.tsx\nconst MyChartUIField: FunctionComponent&lt;{ path: string }&gt; = ({ path }) =&gt; {\n    // Uncommenting the following hooks causes infinite re-renders\n    \n    // Get the `x` field state.\n    // const x = useFormFields(\n    //   ([fields, dispatch]) =&gt; fields.x\n    // )\n    \n    // Get the `y` field state.\n    // const y = useFormFields(\n    //   ([fields, dispatch]) =&gt; fields.y\n    // )\n    \n    \n    console.log('field', args)\n    return &lt;div&gt;Field&lt;/div&gt;\n}\n\nexport default React.memo(ProjectilePreview, isEqual)\n\"><pre class=\"notranslate\"><span class=\"pl-c\">// my-chart-group-field.ts</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">MyChartField</span>: <span class=\"pl-smi\">GroupField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'my-chart-field'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'group'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'Preview'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'ui'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">components</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-en\">Cell</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'cell'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span>\n            <span class=\"pl-k\">return</span> <span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">div</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-smi\">Cell</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span>div&gt;</span><span class=\"pl-c1\"></span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">Field</span>: <span class=\"pl-smi\">MyChartUIField</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-smi\">Slider</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'x'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-smi\">Slider</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'y'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-c\">// my-chart-ui-field.tsx</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">MyChartUIField</span>: <span class=\"pl-smi\">FunctionComponent</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-smi\">string</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> path <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// Uncommenting the following hooks causes infinite re-renders</span>\n    \n    <span class=\"pl-c\">// Get the `x` field state.</span>\n    <span class=\"pl-c\">// const x = useFormFields(</span>\n    <span class=\"pl-c\">//   ([fields, dispatch]) =&gt; fields.x</span>\n    <span class=\"pl-c\">// )</span>\n    \n    <span class=\"pl-c\">// Get the `y` field state.</span>\n    <span class=\"pl-c\">// const y = useFormFields(</span>\n    <span class=\"pl-c\">//   ([fields, dispatch]) =&gt; fields.y</span>\n    <span class=\"pl-c\">// )</span>\n    \n    \n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'field'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">div</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-smi\">Field</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span>div&gt;</span><span class=\"pl-c1\"></span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">memo</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">ProjectilePreview</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">isEqual</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">I've also memoized the child <code class=\"notranslate\">Field</code> component just in case it was caused by the props changing (which doesn't have any effect)</p>",
          "createdAt": "2022-12-23T00:10:29Z"
        },
        {
          "author": {
            "name": "JarrodMFlesch",
            "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
            "url": "https://github.com/JarrodMFlesch"
          },
          "body": "<p dir=\"auto\">I am curious what the Slider field is doing, does that have a custom component? I just threw an example together just like yours and I am not seeing infinite re-renders.</p>",
          "createdAt": "2022-12-23T13:49:32Z"
        },
        {
          "author": {
            "name": "asibilia",
            "avatar": "https://avatars.githubusercontent.com/u/5579814?u=474c911a811329c3ba153de638f8a70314dbc0c2&v=4",
            "url": "https://github.com/asibilia"
          },
          "body": "<p dir=\"auto\">Okay, so i think you're onto something... If i replace my custom slider components with just a simple number input I don't get the re-rendering when using <code class=\"notranslate\">useFormFields</code> in the UI field.</p>\n<p dir=\"auto\">Here's how I have my slider component set up, I must be doing something wrong...</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"slider/\n  - cell.tsx &lt;-- Cell\n  - config.ts \n  - input.tsx &lt;-- Field\"><pre class=\"notranslate\"><code class=\"notranslate\">slider/\n  - cell.tsx &lt;-- Cell\n  - config.ts \n  - input.tsx &lt;-- Field\n</code></pre></div>\n<div class=\"highlight highlight-source-tsx notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// slider/cell.tsx\nimport React from 'react'\nimport type { FunctionComponent } from 'react'\n\nimport type { SliderCellProps } from './types'\nimport './styles.scss'\n\nconst Cell: FunctionComponent&lt;SliderCellProps&gt; = (props) =&gt; {\n  const { cellData } = props\n\n  if (!cellData) return null\n\n  return (\n    &lt;input className=&quot;slider-cell&quot; type=&quot;slider&quot; value={cellData} disabled /&gt;\n  )\n}\n\nexport default Cell\"><pre class=\"notranslate\"><span class=\"pl-c\">// slider/cell.tsx</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">React</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">type</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">FunctionComponent</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">type</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">SliderCellProps</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./types'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s\">'./styles.scss'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">Cell</span>: <span class=\"pl-smi\">FunctionComponent</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">SliderCellProps</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">props</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> cellData <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">props</span>\n\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">cellData</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">input</span> <span class=\"pl-c1\">className</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"slider-cell\"</span> <span class=\"pl-c1\">type</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"slider\"</span> <span class=\"pl-c1\">value</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">cellData</span><span class=\"pl-kos\">}</span> <span class=\"pl-c1\">disabled</span> <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n  <span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">Cell</span></pre></div>\n<div class=\"highlight highlight-source-tsx notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// slider/input.tsx\nimport React from 'react'\nimport type { FunctionComponent } from 'react'\n\nimport { useFieldType } from 'payload/components/forms'\nimport { Label } from 'payload/components/forms'\n\nimport { validateNumberInRange } from './config'\nimport { SliderInputProps } from './types'\n\nimport './styles.scss'\n\nconst BASE_CLASS = 'slider'\n\nconst Input: FunctionComponent&lt;SliderInputProps&gt; = (props) =&gt; {\n  const { path, label, required, min, max, admin } = props\n\n  const { value = 0, setValue } = useFieldType&lt;number&gt;({\n    path,\n    validate: validateNumberInRange(min, max),\n  })\n\n  return (\n    &lt;div className={BASE_CLASS}&gt;\n      &lt;Label htmlFor={path} label={label} required={required} /&gt;\n      &lt;input\n        className={`${BASE_CLASS}__input`}\n        type=&quot;range&quot;\n        onChange={(e) =&gt; setValue(e.target.value)}\n        value={value}\n        min={min}\n        max={max}\n        step={admin.step}\n      /&gt;\n    &lt;/div&gt;\n  )\n}\nexport default Input\n\"><pre class=\"notranslate\"><span class=\"pl-c\">// slider/input.tsx</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">React</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">type</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">FunctionComponent</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">useFieldType</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/forms'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">Label</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/forms'</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">validateNumberInRange</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./config'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">SliderInputProps</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./types'</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s\">'./styles.scss'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">BASE_CLASS</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'slider'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">Input</span>: <span class=\"pl-smi\">FunctionComponent</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">SliderInputProps</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">props</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> path<span class=\"pl-kos\">,</span> label<span class=\"pl-kos\">,</span> required<span class=\"pl-kos\">,</span> min<span class=\"pl-kos\">,</span> max<span class=\"pl-kos\">,</span> admin <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">props</span>\n\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> value <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> setValue <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useFieldType</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">number</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    path<span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">validate</span>: <span class=\"pl-en\">validateNumberInRange</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">min</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">max</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">div</span> <span class=\"pl-c1\">className</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-smi\">BASE_CLASS</span><span class=\"pl-kos\">}</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-smi\">Label</span> <span class=\"pl-c1\">htmlFor</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">path</span><span class=\"pl-kos\">}</span> <span class=\"pl-c1\">label</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">label</span><span class=\"pl-kos\">}</span> <span class=\"pl-c1\">required</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">required</span><span class=\"pl-kos\">}</span> <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">input</span>\n        <span class=\"pl-c1\">className</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-smi\">BASE_CLASS</span><span class=\"pl-kos\">}</span></span>__input`</span><span class=\"pl-kos\">}</span>\n        <span class=\"pl-c1\">type</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"range\"</span>\n        <span class=\"pl-c1\">onChange</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">setValue</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">target</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span>\n        <span class=\"pl-c1\">value</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">}</span>\n        <span class=\"pl-c1\">min</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">min</span><span class=\"pl-kos\">}</span>\n        <span class=\"pl-c1\">max</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">max</span><span class=\"pl-kos\">}</span>\n        <span class=\"pl-c1\">step</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">admin</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">step</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n  <span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">Input</span></pre></div>\n<div class=\"highlight highlight-source-tsx notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// slider/config.ts\nimport get from 'lodash/get'\nimport type { Field, NumberField } from 'payload/types'\n\nimport Cell from './cell'\nimport Input from './input'\n\nexport const validateNumberInRange =\n  (min = 0, max = 100) =&gt;\n  (value: number): true | string =&gt; {\n    return (\n      (value &gt;= min &amp;&amp; value &lt;= max) || 'Value must be between the min and max'\n    )\n  }\n\ntype SliderProps = Omit&lt;NumberField, 'type'&gt;\nconst Slider = ({\n  name,\n  min = 0,\n  max = 100,\n  ...overrides\n}: SliderProps): Field =&gt; ({\n  required: true,\n  ...(overrides ?? {}),\n  name,\n  type: 'number',\n  validate: validateNumberInRange(min, max),\n  min,\n  max,\n  admin: {\n    step: get(overrides, ['admin', 'step'], 5),\n    components: {\n      Field: Input,\n      Cell,\n    },\n  },\n})\n\nexport default Slider\n\"><pre class=\"notranslate\"><span class=\"pl-c\">// slider/config.ts</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">get</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'lodash/get'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">type</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">Field</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">NumberField</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">Cell</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./cell'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">Input</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./input'</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">validateNumberInRange</span> <span class=\"pl-c1\">=</span>\n  <span class=\"pl-kos\">(</span><span class=\"pl-s1\">min</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">max</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">100</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span>\n  <span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span>: <span class=\"pl-smi\">number</span><span class=\"pl-kos\">)</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-c1\">|</span> <span class=\"pl-smi\">string</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>\n      <span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span> <span class=\"pl-c1\">&gt;=</span> <span class=\"pl-s1\">min</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">value</span> <span class=\"pl-c1\">&lt;=</span> <span class=\"pl-s1\">max</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s\">'Value must be between the min and max'</span>\n    <span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">type</span> <span class=\"pl-smi\">SliderProps</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">Omit</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">NumberField</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'type'</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">Slider</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  name<span class=\"pl-kos\">,</span>\n  min <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span>\n  max <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">100</span><span class=\"pl-kos\">,</span>\n  ...<span class=\"pl-s1\">overrides</span>\n<span class=\"pl-kos\">}</span>: <span class=\"pl-smi\">SliderProps</span><span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">Field</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  ...<span class=\"pl-kos\">(</span><span class=\"pl-s1\">overrides</span> <span class=\"pl-c1\">??</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  name<span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">validate</span>: <span class=\"pl-en\">validateNumberInRange</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">min</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">max</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  min<span class=\"pl-kos\">,</span>\n  max<span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">step</span>: <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">overrides</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s\">'admin'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'step'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">5</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">components</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">Field</span>: <span class=\"pl-smi\">Input</span><span class=\"pl-kos\">,</span>\n      Cell<span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">Slider</span></pre></div>",
          "createdAt": "2022-12-23T15:06:26Z"
        },
        {
          "author": {
            "name": "asibilia",
            "avatar": "https://avatars.githubusercontent.com/u/5579814?u=474c911a811329c3ba153de638f8a70314dbc0c2&v=4",
            "url": "https://github.com/asibilia"
          },
          "body": "<p dir=\"auto\">In case anyone is wondering, it seems to be related to the use of <code class=\"notranslate\">useFieldType</code> inside <code class=\"notranslate\">slider/input.tsx</code>. If I change that to <code class=\"notranslate\">useField</code> everything works as expected.</p>",
          "createdAt": "2022-12-30T14:54:01Z"
        }
      ]
    }
  },
  {
    "title": "Date Field: Timezone differs between admin panel input, and rest response",
    "body": "<h1 dir=\"auto\">Bug Report</h1>\n<p dir=\"auto\">Date provided in Date Field is inconsistant with it's response form provided via Rest API. Propable cause is the timezone difference.</p>\n<h2 dir=\"auto\">Expected Behavior</h2>\n<p dir=\"auto\">I provide data via Data Field. The provided date is like 24.05.2022, 10:00 AM. The rest response should be exactly the same.</p>\n<h2 dir=\"auto\">Current Behavior</h2>\n<p dir=\"auto\">The date in response is however : 24.05.2022, 8:00 AM - two hours prior to what I've provided.</p>\n<h2 dir=\"auto\">Possible Solution</h2>\n<p dir=\"auto\">Check the timezone of Admin frontend and adjust the timezone stamp accordingly, or build functionality to adjust timezone of API response via admin. If I understand correctly, at this point the response date is set via server time, which may differ from the timezone of the browser in whicz admin is working.</p>\n<h2 dir=\"auto\">Steps to Reproduce</h2>\n<ol dir=\"auto\">\n<li>Create Date Field in collection.</li>\n<li>Provide date to the field via admin panel.</li>\n<li>Chech the rest response of the field. In my case, the response is different.</li>\n</ol>\n<h2 dir=\"auto\">Detailed Description</h2>\n<p dir=\"auto\">Current Payload version, Latest Chrome browser, UTC+1 timezone. Payload hostedn on Heroku, without the ability to granular control of the timezone of server.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/726",
    "id": "726",
    "createdAt": "2022-04-11T05:24:32Z",
    "upvotes": 1,
    "commentTotal": 5,
    "author": {
      "name": "quornik",
      "avatar": "https://avatars.githubusercontent.com/u/6187408?u=d66adadfca3437186e25abaafe51af799025e358&v=4",
      "url": "https://github.com/quornik"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Thanks for reporting this <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/quornik/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/quornik\">@quornik</a>. We're considering what the configuration settings will be for timezone and what effects it will have for the admin UI and APIs to solve the issue. We'll update again when we have a plan or fix ready.</p>",
        "createdAt": "2022-04-12T03:45:54Z",
        "replies": null
      },
      {
        "author": {
          "name": "quornik",
          "avatar": "https://avatars.githubusercontent.com/u/6187408?u=d66adadfca3437186e25abaafe51af799025e358&v=4",
          "url": "https://github.com/quornik"
        },
        "body": "<p dir=\"auto\">Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a>.<br>\nYou should also consider if I haven't rushed to quickly to call it a bug. Maybe it works properly and what it actually needs is just slightly updated documentation to the field. A warning of some kind that one should always localize the response.</p>\n<p dir=\"auto\">If you think about it, the best practice is to <strong>adjust the timezone always on frontend</strong>, after the dateObject has been received and befere it is displayed, because the user's context should determine the way date is interpreted &amp; displayed.</p>\n<p dir=\"auto\">The scenario in which I had a problem with the way it works now, was this particular situation that I did not localize the response date before displaying. In every other situation it works fine.</p>",
        "createdAt": "2022-04-12T04:51:05Z",
        "replies": null
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<blockquote>\n<p dir=\"auto\">If you think about it, the best practice is to adjust the timezone always on frontend, after the dateObject has been received and befere it is displayed, because the user's context should determine the way date is interpreted &amp; displayed.</p>\n</blockquote>\n<p dir=\"auto\">Exactly, <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/quornik/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/quornik\">@quornik</a>. This isn't really a bug <em>per se</em>, rather, it's a potentially useful admin UX enhancement.</p>\n<p dir=\"auto\">We're thinking through how to make this happen as Dan said and will report back here once we have more!</p>",
        "createdAt": "2022-04-12T13:42:02Z",
        "replies": null
      },
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Since we deterimined there isn't anything in Payload to <em>fix</em> I'm moving this to a discussion for others to see.</p>",
        "createdAt": "2022-07-07T13:55:20Z",
        "replies": null
      },
      {
        "author": {
          "name": "lucaslcode",
          "avatar": "https://avatars.githubusercontent.com/u/32044095?u=12f07ec4b620706a75d6ca72607cf95ec01bb614&v=4",
          "url": "https://github.com/lucaslcode"
        },
        "body": "<p dir=\"auto\">Here's a use case that doesn't fit the current setup too well - I'm adding events using payload, however the events I'm adding take place in a different timezone to where I am currently.</p>\n<p dir=\"auto\">It seems payload converts my local time to UTC and stores that - it means I have to do some calculating to input the time I want as it would be in my current timezone.</p>\n<p dir=\"auto\">I think a possible solution would be to have the ability to select the timezone of the time you are entering, though I'm not sure if <code class=\"notranslate\">react-datepicker</code> supports this.</p>",
        "createdAt": "2022-12-30T06:49:15Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Since we deterimined there isn't anything in Payload to <em>fix</em> I'm moving this to a discussion for others to see.</p>",
      "createdAt": "2022-07-07T13:55:20Z",
      "chosenAt": "2022-07-07T14:38:02Z",
      "chosenBy": "denolfe",
      "replies": null
    }
  },
  {
    "title": "Chained Select Fields",
    "body": "<p dir=\"auto\">Hi All,</p>\n<p dir=\"auto\">I have two select fields that I need to \"chain\".</p>\n<p dir=\"auto\">It is a basic project management tool and it has the following collections: \"Organizations\", \"Projects\", \"Tasks\".</p>\n<p dir=\"auto\">In the tasks collection I have one field \"organizations\" that is a relationship and displays all organizations. The other is \"projects\" which is also a relationship and displays all projects. I would like to make it such that when you select a specific organization, the projects list will only display the projects of that organization.</p>\n<p dir=\"auto\">I could do this in a traditional monolith with an Ajax call and a subsequent filter on the projects list via a query. I am totally at a loss how to solve this in Payload though.</p>\n<p dir=\"auto\">Any help would be greatly appreciated. Thanks!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1449",
    "id": "1449",
    "createdAt": "2022-11-18T15:34:42Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "etmartinkazoo",
      "avatar": "https://avatars.githubusercontent.com/u/13721164?u=2e62be9691a37ada0a05aad8cc0bdb2c64b2db07&v=4",
      "url": "https://github.com/etmartinkazoo"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">This is what the <code class=\"notranslate\">filterOptions</code> property is for on the relationship field.<br>\nYou will return a query on your projects field's filterOptions to only get the projects equal to the organization ID that is selected from your data or siblingData.</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/fields/relationship#filtering-relationship-options\" rel=\"nofollow\">https://payloadcms.com/docs/fields/relationship#filtering-relationship-options</a></p>",
        "createdAt": "2022-11-18T17:30:13Z",
        "replies": [
          {
            "author": {
              "name": "etmartinkazoo",
              "avatar": "https://avatars.githubusercontent.com/u/13721164?u=2e62be9691a37ada0a05aad8cc0bdb2c64b2db07&v=4",
              "url": "https://github.com/etmartinkazoo"
            },
            "body": "<p dir=\"auto\">Okay, that is helpful. I've been in that part of the docs and have the following:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n      name: 'projects',\n      type: 'relationship',\n      relationTo: 'projects',\n      filterOptions: ({ siblingData }) =&gt; {\n        return {\n          'id': { equal: siblingData.organization }\n        }\n      },\n},\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n      name: 'projects',\n      type: 'relationship',\n      relationTo: 'projects',\n      filterOptions: ({ siblingData }) =&gt; {\n        return {\n          'id': { equal: siblingData.organization }\n        }\n      },\n},\n</code></pre></div>\n<p dir=\"auto\">Hope you are staying warm in the Michigan snowstorm!</p>",
            "createdAt": "2022-11-18T18:18:47Z"
          },
          {
            "author": {
              "name": "etmartinkazoo",
              "avatar": "https://avatars.githubusercontent.com/u/13721164?u=2e62be9691a37ada0a05aad8cc0bdb2c64b2db07&v=4",
              "url": "https://github.com/etmartinkazoo"
            },
            "body": "<p dir=\"auto\">Okay, I have it working now with the following:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const projectsField = {\n  name: 'project',\n  admin: {\n    position: 'sidebar'\n  },\n  type: 'relationship',\n  relationTo: 'projects',\n  filterOptions: ({ siblingData }) =&gt; {\n    return {\n      'organization': { equals: siblingData.organization }\n    }\n  },\n};\"><pre class=\"notranslate\"><code class=\"notranslate\">const projectsField = {\n  name: 'project',\n  admin: {\n    position: 'sidebar'\n  },\n  type: 'relationship',\n  relationTo: 'projects',\n  filterOptions: ({ siblingData }) =&gt; {\n    return {\n      'organization': { equals: siblingData.organization }\n    }\n  },\n};\n</code></pre></div>\n<p dir=\"auto\">The only issue is that I have to save the record first and it only filters after clicking save.</p>",
            "createdAt": "2022-11-18T18:22:46Z"
          },
          {
            "author": {
              "name": "etmartinkazoo",
              "avatar": "https://avatars.githubusercontent.com/u/13721164?u=2e62be9691a37ada0a05aad8cc0bdb2c64b2db07&v=4",
              "url": "https://github.com/etmartinkazoo"
            },
            "body": "<p dir=\"auto\">I'm also wondering if the newly announced <code class=\"notranslate\">use-context-selector</code> (<a href=\"https://payloadcms.com/blog/launch-week-day-4\" rel=\"nofollow\">https://payloadcms.com/blog/launch-week-day-4</a>) might be of help in this scenario?</p>",
            "createdAt": "2022-11-18T19:22:16Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Thanks for the update. That issue is something we need to address. Would you want to create a new issue for it?</p>",
            "createdAt": "2022-11-18T20:08:02Z"
          },
          {
            "author": {
              "name": "etmartinkazoo",
              "avatar": "https://avatars.githubusercontent.com/u/13721164?u=2e62be9691a37ada0a05aad8cc0bdb2c64b2db07&v=4",
              "url": "https://github.com/etmartinkazoo"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> - Sure thing, I'll create an issue now.</p>",
            "createdAt": "2022-11-18T20:36:19Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Thanks! Have a great weekend and stay warm!</p>",
            "createdAt": "2022-11-18T21:53:50Z"
          },
          {
            "author": {
              "name": "etmartinkazoo",
              "avatar": "https://avatars.githubusercontent.com/u/13721164?u=2e62be9691a37ada0a05aad8cc0bdb2c64b2db07&v=4",
              "url": "https://github.com/etmartinkazoo"
            },
            "body": "<p dir=\"auto\">I had to help a friend get their truck with snow plow this evening and it was terrible out; less than 10 feet of visibility on the interstate. Definitely pretty from indoors but not safe otherwise.</p>",
            "createdAt": "2022-11-19T03:09:05Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">This is what the <code class=\"notranslate\">filterOptions</code> property is for on the relationship field.<br>\nYou will return a query on your projects field's filterOptions to only get the projects equal to the organization ID that is selected from your data or siblingData.</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/fields/relationship#filtering-relationship-options\" rel=\"nofollow\">https://payloadcms.com/docs/fields/relationship#filtering-relationship-options</a></p>",
      "createdAt": "2022-11-18T17:30:13Z",
      "chosenAt": "2022-12-14T16:32:28Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "etmartinkazoo",
            "avatar": "https://avatars.githubusercontent.com/u/13721164?u=2e62be9691a37ada0a05aad8cc0bdb2c64b2db07&v=4",
            "url": "https://github.com/etmartinkazoo"
          },
          "body": "<p dir=\"auto\">Okay, that is helpful. I've been in that part of the docs and have the following:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n      name: 'projects',\n      type: 'relationship',\n      relationTo: 'projects',\n      filterOptions: ({ siblingData }) =&gt; {\n        return {\n          'id': { equal: siblingData.organization }\n        }\n      },\n},\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n      name: 'projects',\n      type: 'relationship',\n      relationTo: 'projects',\n      filterOptions: ({ siblingData }) =&gt; {\n        return {\n          'id': { equal: siblingData.organization }\n        }\n      },\n},\n</code></pre></div>\n<p dir=\"auto\">Hope you are staying warm in the Michigan snowstorm!</p>",
          "createdAt": "2022-11-18T18:18:47Z"
        },
        {
          "author": {
            "name": "etmartinkazoo",
            "avatar": "https://avatars.githubusercontent.com/u/13721164?u=2e62be9691a37ada0a05aad8cc0bdb2c64b2db07&v=4",
            "url": "https://github.com/etmartinkazoo"
          },
          "body": "<p dir=\"auto\">Okay, I have it working now with the following:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const projectsField = {\n  name: 'project',\n  admin: {\n    position: 'sidebar'\n  },\n  type: 'relationship',\n  relationTo: 'projects',\n  filterOptions: ({ siblingData }) =&gt; {\n    return {\n      'organization': { equals: siblingData.organization }\n    }\n  },\n};\"><pre class=\"notranslate\"><code class=\"notranslate\">const projectsField = {\n  name: 'project',\n  admin: {\n    position: 'sidebar'\n  },\n  type: 'relationship',\n  relationTo: 'projects',\n  filterOptions: ({ siblingData }) =&gt; {\n    return {\n      'organization': { equals: siblingData.organization }\n    }\n  },\n};\n</code></pre></div>\n<p dir=\"auto\">The only issue is that I have to save the record first and it only filters after clicking save.</p>",
          "createdAt": "2022-11-18T18:22:46Z"
        },
        {
          "author": {
            "name": "etmartinkazoo",
            "avatar": "https://avatars.githubusercontent.com/u/13721164?u=2e62be9691a37ada0a05aad8cc0bdb2c64b2db07&v=4",
            "url": "https://github.com/etmartinkazoo"
          },
          "body": "<p dir=\"auto\">I'm also wondering if the newly announced <code class=\"notranslate\">use-context-selector</code> (<a href=\"https://payloadcms.com/blog/launch-week-day-4\" rel=\"nofollow\">https://payloadcms.com/blog/launch-week-day-4</a>) might be of help in this scenario?</p>",
          "createdAt": "2022-11-18T19:22:16Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Thanks for the update. That issue is something we need to address. Would you want to create a new issue for it?</p>",
          "createdAt": "2022-11-18T20:08:02Z"
        },
        {
          "author": {
            "name": "etmartinkazoo",
            "avatar": "https://avatars.githubusercontent.com/u/13721164?u=2e62be9691a37ada0a05aad8cc0bdb2c64b2db07&v=4",
            "url": "https://github.com/etmartinkazoo"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> - Sure thing, I'll create an issue now.</p>",
          "createdAt": "2022-11-18T20:36:19Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Thanks! Have a great weekend and stay warm!</p>",
          "createdAt": "2022-11-18T21:53:50Z"
        },
        {
          "author": {
            "name": "etmartinkazoo",
            "avatar": "https://avatars.githubusercontent.com/u/13721164?u=2e62be9691a37ada0a05aad8cc0bdb2c64b2db07&v=4",
            "url": "https://github.com/etmartinkazoo"
          },
          "body": "<p dir=\"auto\">I had to help a friend get their truck with snow plow this evening and it was terrible out; less than 10 feet of visibility on the interstate. Definitely pretty from indoors but not safe otherwise.</p>",
          "createdAt": "2022-11-19T03:09:05Z"
        }
      ]
    }
  },
  {
    "title": "guidance for payload.update() when updating Relationship field",
    "body": "<p dir=\"auto\">Hi Payload team. I haven't been able to find substantial documentation for payload.update() when the updated field is</p>\n<ol dir=\"auto\">\n<li>a <code class=\"notranslate\">relationship</code> field</li>\n<li><code class=\"notranslate\">hasMany: true</code></li>\n<li><code class=\"notranslate\">relationshipTo: [ // more than one collection // ]</code></li>\n</ol>\n<p dir=\"auto\">The gist: I have a parent-child relationship between items of various collections (mixed-content tree). I want to re-parent the updated item by removing the child from the old parent's <code class=\"notranslate\">child</code> field and then add it to the new parent's <code class=\"notranslate\">child</code> field.</p>\n<p dir=\"auto\">I have a hook set up to do this, but I cannot for the life of me figure out what the call to <code class=\"notranslate\">payload.update(...)</code> is expecting to receive.</p>\n<p dir=\"auto\">If I manually add entries to the <code class=\"notranslate\">child</code> field for an item in the admin GUI then I get back an array in the <code class=\"notranslate\">child</code> field. This is sensible:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[\n  {\n    relationTo: 'pages',\n    value: {\n      parent: [Object],\n      title: 'Parent Page',\n      renderings: [],\n      children: [],\n      createdAt: '2021-06-20T06:04:33.461Z',\n      updatedAt: '2021-06-22T01:08:52.412Z',\n      id: '60ceda71361a3300191cfd4b'\n    }\n  },\n  {\n    relationTo: 'pages',\n    value: {\n      parent: [Object],\n      title: 'Sub Page',\n      renderings: [],\n      children: [],\n      createdAt: '2021-06-20T06:05:13.529Z',\n      updatedAt: '2021-06-22T00:57:55.799Z',\n      id: '60ceda99361a3300191cfd7b'\n    }\n  }\n]\"><pre class=\"notranslate\"><code class=\"notranslate\">[\n  {\n    relationTo: 'pages',\n    value: {\n      parent: [Object],\n      title: 'Parent Page',\n      renderings: [],\n      children: [],\n      createdAt: '2021-06-20T06:04:33.461Z',\n      updatedAt: '2021-06-22T01:08:52.412Z',\n      id: '60ceda71361a3300191cfd4b'\n    }\n  },\n  {\n    relationTo: 'pages',\n    value: {\n      parent: [Object],\n      title: 'Sub Page',\n      renderings: [],\n      children: [],\n      createdAt: '2021-06-20T06:05:13.529Z',\n      updatedAt: '2021-06-22T00:57:55.799Z',\n      id: '60ceda99361a3300191cfd7b'\n    }\n  }\n]\n</code></pre></div>\n<p dir=\"auto\">I would expect I can update this list by removing an item from the array or appending another object with the form</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n  relationTo: 'datasource-folders',\n  value: {\n    id: '60ceda71361a3300191caa12'\n  }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n  relationTo: 'datasource-folders',\n  value: {\n    id: '60ceda71361a3300191caa12'\n  }\n}\n</code></pre></div>\n<p dir=\"auto\">however this will not save.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"payload.update({\n      collection: originalParent.type,\n      id: originalParent.id,\n      data: {\n        children: updatedChildren // the array above\n      }\n    });\"><pre class=\"notranslate\"><code class=\"notranslate\">payload.update({\n      collection: originalParent.type,\n      id: originalParent.id,\n      data: {\n        children: updatedChildren // the array above\n      }\n    });\n</code></pre></div>\n<p dir=\"auto\">The error provided</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\n\"><pre class=\"notranslate\"><code class=\"notranslate\">Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\n\n</code></pre></div>\n<p dir=\"auto\">makes it seem like Payload is expecting to receive data in the format</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[\n  ...\n  {\n    relationTo: 'datasource-folders',\n    value: '60ceda71361a3300191caa12'\n  },\n]\"><pre class=\"notranslate\"><code class=\"notranslate\">[\n  ...\n  {\n    relationTo: 'datasource-folders',\n    value: '60ceda71361a3300191caa12'\n  },\n]\n</code></pre></div>\n<p dir=\"auto\">however this is cursed. It doesn't work either and causes new craziness that encouraged me to drop the collection in Mongo and start fresh.</p>\n<hr>\n<p dir=\"auto\">It would be great if you could point me to documentation for updating <code class=\"notranslate\">relationship</code> fields, especially where <code class=\"notranslate\">hasMany: true</code> and <code class=\"notranslate\">relationTo: [ // multiple collections // ]</code>.</p>\n<p dir=\"auto\">If there isn't documentation but you're willing to explain it I would be happy to put in a PR for a documentation update.</p>\n<p dir=\"auto\">TYSM</p>",
    "url": "https://github.com/payloadcms/payload/discussions/204",
    "id": "204",
    "createdAt": "2021-06-22T01:44:49Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "RobertAlbus",
      "avatar": "https://avatars.githubusercontent.com/u/42300645?v=4",
      "url": "https://github.com/RobertAlbus"
    },
    "comments": [
      {
        "author": {
          "name": "Ontopic",
          "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
          "url": "https://github.com/Ontopic"
        },
        "body": "<p dir=\"auto\">I feel you should look into hooks as quick advice. At least that's how I created something similar.</p>",
        "createdAt": "2021-06-22T12:23:01Z",
        "replies": [
          {
            "author": {
              "name": "RobertAlbus",
              "avatar": "https://avatars.githubusercontent.com/u/42300645?v=4",
              "url": "https://github.com/RobertAlbus"
            },
            "body": "<p dir=\"auto\">Yes thanks for the suggestion <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Ontopic/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Ontopic\">@Ontopic</a> I am using hooks to implement this. Getting the hooks to fire was pretty straight forward, it's the interaction with the local API inside the hook where I am having no luck.</p>",
            "createdAt": "2021-06-22T17:21:52Z"
          }
        ]
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/RobertAlbus/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/RobertAlbus\">@RobertAlbus</a> — I can shine some light on this for you!</p>\n<p dir=\"auto\">First up, from your question above, this snippet is an example for how a <code class=\"notranslate\">hasMany: true</code> and <code class=\"notranslate\">relationTo: [ ]</code> relationship will look <strong>when it is populated by the <code class=\"notranslate\">depth</code> parameter</strong>:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"[\n  {\n    relationTo: 'pages',\n    value: {\n      parent: [Object],\n      title: 'Sub Page',\n      renderings: [],\n      children: [],\n      createdAt: '2021-06-20T06:05:13.529Z',\n      updatedAt: '2021-06-22T00:57:55.799Z',\n      id: '60ceda99361a3300191cfd7b'\n    }\n  }\n]\"><pre class=\"notranslate\"><span class=\"pl-kos\">[</span>\n  <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">value</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">parent</span>: <span class=\"pl-kos\">[</span><span class=\"pl-v\">Object</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">title</span>: <span class=\"pl-s\">'Sub Page'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">renderings</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">children</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">createdAt</span>: <span class=\"pl-s\">'2021-06-20T06:05:13.529Z'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">updatedAt</span>: <span class=\"pl-s\">'2021-06-22T00:57:55.799Z'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">id</span>: <span class=\"pl-s\">'60ceda99361a3300191cfd7b'</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">]</span></pre></div>\n<p dir=\"auto\"><strong>However</strong>, the actual data that is stored in the database looks like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"[\n  {\n    relationTo: 'pages',\n    value: ObjectID('60ceda99361a3300191cfd7b'),\n  }\n]\"><pre class=\"notranslate\"><span class=\"pl-kos\">[</span>\n  <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">value</span>: <span class=\"pl-v\">ObjectID</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'60ceda99361a3300191cfd7b'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">]</span></pre></div>\n<p dir=\"auto\">So, to update, you need to send it data just like you mentioned:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"[\n  ...\n  {\n    relationTo: 'datasource-folders',\n    value: '60ceda71361a3300191caa12'\n  },\n]\"><pre class=\"notranslate\"><span class=\"pl-kos\">[</span>\n  ...\n  <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'datasource-folders'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">value</span>: <span class=\"pl-s\">'60ceda71361a3300191caa12'</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">]</span></pre></div>\n<p dir=\"auto\">What is the error that is displaying when you try to <code class=\"notranslate\">update</code> with this data? From my perspective this looks exactly right!</p>",
        "createdAt": "2021-06-22T12:30:09Z",
        "replies": [
          {
            "author": {
              "name": "RobertAlbus",
              "avatar": "https://avatars.githubusercontent.com/u/42300645?v=4",
              "url": "https://github.com/RobertAlbus"
            },
            "body": "<p dir=\"auto\">This is super helpful <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>. Thanks for clarifying the expected shape for updating a relationship field with <code class=\"notranslate\">hasMany: true</code>.</p>\n<p dir=\"auto\">The error I see when I submit an update</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const updatedChildren = [\n  ...\n  {\n    relationTo: 'datasource-folders',\n    value: '60ceda71361a3300191caa12'\n  },\n]; \n// this array can also be empty\n\npayload.update({\n      collection: originalParent.type,\n      id: originalParent.id,\n      data: {\n        children: updatedChildren\n      },\n    });\"><pre class=\"notranslate\"><code class=\"notranslate\">const updatedChildren = [\n  ...\n  {\n    relationTo: 'datasource-folders',\n    value: '60ceda71361a3300191caa12'\n  },\n]; \n// this array can also be empty\n\npayload.update({\n      collection: originalParent.type,\n      id: originalParent.id,\n      data: {\n        children: updatedChildren\n      },\n    });\n</code></pre></div>\n<p dir=\"auto\">to either  remove or add an item to the relationship field, the server crashes with the following stack trace</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"app_1  | /node_modules/payload/dist/fields/relationshipPopulationPromise.js:19\napp_1  |                 idString = idString.toString();\napp_1  |                                     ^\napp_1  | \napp_1  | TypeError: Cannot read property 'toString' of undefined\napp_1  |     at populate (/node_modules/payload/src/fields/relationshipPopulationPromise.ts:46:29)\napp_1  |     at rowPromise (/node_modules/payload/src/fields/relationshipPopulationPromise.ts:105:17)\napp_1  |     at /node_modules/payload/src/fields/relationshipPopulationPromise.ts:119:24\napp_1  |     at Array.forEach (&lt;anonymous&gt;)\napp_1  |     at /node_modules/payload/src/fields/relationshipPopulationPromise.ts:102:22\napp_1  |     at /node_modules/payload/src/fields/performFieldOperations.ts:118:86\napp_1  |     at Array.map (&lt;anonymous&gt;)\napp_1  |     at Payload.performFieldOperations (/node_modules/payload/src/fields/performFieldOperations.ts:118:66)\napp_1  |     at processTicksAndRejections (node:internal/process/task_queues:96:5)\napp_1  |     at Payload.update (/node_modules/payload/src/collections/operations/update.ts:272:12)\"><pre class=\"notranslate\"><code class=\"notranslate\">app_1  | /node_modules/payload/dist/fields/relationshipPopulationPromise.js:19\napp_1  |                 idString = idString.toString();\napp_1  |                                     ^\napp_1  | \napp_1  | TypeError: Cannot read property 'toString' of undefined\napp_1  |     at populate (/node_modules/payload/src/fields/relationshipPopulationPromise.ts:46:29)\napp_1  |     at rowPromise (/node_modules/payload/src/fields/relationshipPopulationPromise.ts:105:17)\napp_1  |     at /node_modules/payload/src/fields/relationshipPopulationPromise.ts:119:24\napp_1  |     at Array.forEach (&lt;anonymous&gt;)\napp_1  |     at /node_modules/payload/src/fields/relationshipPopulationPromise.ts:102:22\napp_1  |     at /node_modules/payload/src/fields/performFieldOperations.ts:118:86\napp_1  |     at Array.map (&lt;anonymous&gt;)\napp_1  |     at Payload.performFieldOperations (/node_modules/payload/src/fields/performFieldOperations.ts:118:66)\napp_1  |     at processTicksAndRejections (node:internal/process/task_queues:96:5)\napp_1  |     at Payload.update (/node_modules/payload/src/collections/operations/update.ts:272:12)\n</code></pre></div>\n<p dir=\"auto\">After this the admin panel starts to behave weird. The page that displays the collection list for the recently-associated item does not show <strong>any</strong> items, except for every 3 or 4 page refreshes. The app throws the same stack trace as above on every page refresh for this collection's list view.</p>\n<p dir=\"auto\">I feel like I am just missing something basic but the stack trace, Payload source, documentation, and reviewing my code just aren't leading me where I need to go.</p>",
            "createdAt": "2021-06-22T20:56:55Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/RobertAlbus/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/RobertAlbus\">@RobertAlbus</a> — can you hook me up with your collection config?</p>\n<p dir=\"auto\">I will do some testing with it. Should be able to figure this out. Nothing jumps out at me as being incorrect with the code that you've provided thus far!</p>",
            "createdAt": "2021-06-22T21:02:03Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/RobertAlbus/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/RobertAlbus\">@RobertAlbus</a> another thought... one thing I am thinking is that you might have some bad data <em><strong>somewhere</strong></em> in your database.</p>\n<p dir=\"auto\">The error that you sent would make sense if the shape of a document somewhere was bad. It's attempting to convert a Mongo ObjectID to a string and clearly failing. We will go ahead and add in a fix to that case to hopefully make everything a bit more stable for future users. But in the interim, I'd poke through your database for any documents affected by this update for an old or bad data shape.</p>",
            "createdAt": "2021-06-22T21:09:08Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/RobertAlbus/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/RobertAlbus\">@RobertAlbus</a> I thought I'd just blow you up. You got me thinking.</p>\n<p dir=\"auto\">Just deployed <code class=\"notranslate\">0.7.2</code> which safely accesses the <code class=\"notranslate\">toString</code> method which was erroring out on what I imagine is potentially bad data. I'd be curious to see three things:</p>\n<ol dir=\"auto\">\n<li>Your config so I can test myself</li>\n<li>If this fixes your issue (I imagine it will \"side-step\" it)</li>\n<li>If you found any bad data in your DB</li>\n</ol>",
            "createdAt": "2021-06-22T21:19:39Z"
          },
          {
            "author": {
              "name": "RobertAlbus",
              "avatar": "https://avatars.githubusercontent.com/u/42300645?v=4",
              "url": "https://github.com/RobertAlbus"
            },
            "body": "<ol dir=\"auto\">\n<li>my config is split up across a number for source files and some of it is also built dynamically. It might be easiest if I share <a href=\"https://github.com/RobertAlbus/kto-cms/tree/payload-poc\">a link to source code</a> if you're good with that.</li>\n<li>this didn't fix the issue but the error changed</li>\n<li>I did find malformed data in the item I added the new relationship entry to:\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n    &quot;_id&quot;:&quot;ObjectId(&quot;&quot;60d3b796ad579d0018fe1b27&quot;&quot;)&quot;,\n    &quot;title&quot;:&quot;Kontralto Consulting Corp&quot;,\n    &quot;children&quot;:[\n        {   // should have an ID but doesn't\n            &quot;relationTo&quot;:&quot;pages&quot;\n        }\n    ],\n    &quot;createdAt&quot;:&quot;ISODate(&quot;&quot;2021-06-23T22:37:10.681Z&quot;&quot;)&quot;,\n    &quot;updatedAt&quot;:&quot;ISODate(&quot;&quot;2021-06-23T22:39:25.322Z&quot;&quot;)&quot;,\n    &quot;__v&quot;:0\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n    \"_id\":\"ObjectId(\"\"60d3b796ad579d0018fe1b27\"\")\",\n    \"title\":\"Kontralto Consulting Corp\",\n    \"children\":[\n        {   // should have an ID but doesn't\n            \"relationTo\":\"pages\"\n        }\n    ],\n    \"createdAt\":\"ISODate(\"\"2021-06-23T22:37:10.681Z\"\")\",\n    \"updatedAt\":\"ISODate(\"\"2021-06-23T22:39:25.322Z\"\")\",\n    \"__v\":0\n}\n</code></pre></div>\n</li>\n</ol>",
            "createdAt": "2021-06-23T23:16:16Z"
          },
          {
            "author": {
              "name": "Ontopic",
              "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
              "url": "https://github.com/Ontopic"
            },
            "body": "<p dir=\"auto\">I personally run into this every now and then, then I reseed my database. Not sure if that's an option for you, but otherwise fixes issues like this quite often.</p>",
            "createdAt": "2021-06-25T12:57:10Z"
          },
          {
            "author": {
              "name": "Ontopic",
              "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
              "url": "https://github.com/Ontopic"
            },
            "body": "<p dir=\"auto\">Thanks for sharing your repo, interesting research in there!</p>",
            "createdAt": "2021-06-25T13:00:59Z"
          },
          {
            "author": {
              "name": "RobertAlbus",
              "avatar": "https://avatars.githubusercontent.com/u/42300645?v=4",
              "url": "https://github.com/RobertAlbus"
            },
            "body": "<blockquote>\n<p dir=\"auto\">then I reseed my database</p>\n</blockquote>\n<p dir=\"auto\">Thanks for the prompt, I blew away the database and tried again for sanity's sake. Sanity not found :P it happens with a fresh database without fail.</p>",
            "createdAt": "2021-06-25T15:47:21Z"
          },
          {
            "author": {
              "name": "Ontopic",
              "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
              "url": "https://github.com/Ontopic"
            },
            "body": "<p dir=\"auto\">I'm gonna be trying to get your repo to run and see what I can find. I personally only have experience with keeping one-to-one relationships in sync, which went fine, but one-to-many is definitely something I need to play around with anyway, for sanity's sake <g-emoji class=\"g-emoji\" alias=\"upside_down_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f643.png\">🙃</g-emoji>  Imagine what Payload could do with 39M...</p>",
            "createdAt": "2021-06-26T05:20:12Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/RobertAlbus/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/RobertAlbus\">@RobertAlbus</a>,</p>\n<p dir=\"auto\">Thank you so much for sharing your repo, I like how you're building your collections and sharing functionality between them. This kind of smart achitecture is exactly the kinds of creative solutions we hoped people would do with Payload CMS.</p>\n<p dir=\"auto\">I found the bug! I noticed that the call to update the parent in  with the children objects is being given the id of the parent and not the child document. Here is a screenshot of my debugger before the call to payload.update() in your hook:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6434612/123667625-527a0b00-d808-11eb-8459-329079630b92.png\"><img src=\"https://user-images.githubusercontent.com/6434612/123667625-527a0b00-d808-11eb-8459-329079630b92.png\" alt=\"image (1)\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">One important mention, You're using the <code class=\"notranslate\">beforeChange</code> hook but new documents will not have an id yet. To do what you want, you'll need to change the hooks to run <code class=\"notranslate\">afterChange</code> instead of <code class=\"notranslate\">beforeChange</code> at least for new documents. Then you'll be able to use the correct child id for children relationships when you update the parent document.</p>\n<p dir=\"auto\">I hope this helps, let us know how it goes!</p>",
            "createdAt": "2021-06-28T16:13:28Z"
          },
          {
            "author": {
              "name": "RobertAlbus",
              "avatar": "https://avatars.githubusercontent.com/u/42300645?v=4",
              "url": "https://github.com/RobertAlbus"
            },
            "body": "<p dir=\"auto\">Thanks for the response <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a>. I see what you're pointing out there.</p>\n<p dir=\"auto\">My next steps were to move those hooks from beforeChange to afterChange. The issue was still present so I changed the hooks from field hooks to afterChange collection hooks but the issue of malformed data is still present.</p>\n<p dir=\"auto\">doc</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n  id: '60dce0b06a737200188df539',\n  parent: { relationTo: 'sites', value: '60dce0a56a737200188df506' },\n  heading: 'My Page',\n  renderings: [],\n  children: [],\n  createdAt: '2021-06-30T21:22:56.678Z',\n  updatedAt: '2021-06-30T21:22:56.678Z'\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n  id: '60dce0b06a737200188df539',\n  parent: { relationTo: 'sites', value: '60dce0a56a737200188df506' },\n  heading: 'My Page',\n  renderings: [],\n  children: [],\n  createdAt: '2021-06-30T21:22:56.678Z',\n  updatedAt: '2021-06-30T21:22:56.678Z'\n}\n</code></pre></div>\n<p dir=\"auto\">parent</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n  id: '60dce0a56a737200188df506',\n  title: 'Kontralto Consulting Corp',\n  children: [],\n  createdAt: '2021-06-30T21:22:45.113Z',\n  updatedAt: '2021-06-30T21:22:45.113Z'\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n  id: '60dce0a56a737200188df506',\n  title: 'Kontralto Consulting Corp',\n  children: [],\n  createdAt: '2021-06-30T21:22:45.113Z',\n  updatedAt: '2021-06-30T21:22:45.113Z'\n}\n</code></pre></div>\n<p dir=\"auto\">updated children list</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[ { relationTo: 'pages', id: '60dce0b06a737200188df539' } ]\"><pre class=\"notranslate\"><code class=\"notranslate\">[ { relationTo: 'pages', id: '60dce0b06a737200188df539' } ]\n</code></pre></div>\n<p dir=\"auto\">api call</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"payload.update({\n  collection: 'sites',\n  id: '60dce0a56a737200188df506',\n  data: { children: [ { relationTo: 'pages', id: '60dce0b06a737200188df539' } ] }\n})\"><pre class=\"notranslate\"><code class=\"notranslate\">payload.update({\n  collection: 'sites',\n  id: '60dce0a56a737200188df506',\n  data: { children: [ { relationTo: 'pages', id: '60dce0b06a737200188df539' } ] }\n})\n</code></pre></div>\n<p dir=\"auto\">database content</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&gt; db.sites.find()\n{ &quot;_id&quot; : ObjectId(&quot;60dce0a56a737200188df506&quot;), &quot;title&quot; : &quot;Kontralto Consulting Corp&quot;, &quot;children&quot; : [ { &quot;relationTo&quot; : &quot;pages&quot; } ], &quot;createdAt&quot; : ISODate(&quot;2021-06-30T21:22:45.113Z&quot;), &quot;updatedAt&quot; : ISODate(&quot;2021-06-30T21:22:56.718Z&quot;), &quot;__v&quot; : 0 }\n&gt; db.pages.find()\n{ &quot;_id&quot; : ObjectId(&quot;60dce0b06a737200188df539&quot;), &quot;parent&quot; : { &quot;relationTo&quot; : &quot;sites&quot;, &quot;value&quot; : ObjectId(&quot;60dce0a56a737200188df506&quot;) }, &quot;heading&quot; : &quot;My Page&quot;, &quot;renderings&quot; : [ ], &quot;children&quot; : [ ], &quot;createdAt&quot; : ISODate(&quot;2021-06-30T21:22:56.678Z&quot;), &quot;updatedAt&quot; : ISODate(&quot;2021-06-30T21:22:56.678Z&quot;), &quot;__v&quot; : 0 }\"><pre class=\"notranslate\"><code class=\"notranslate\">&gt; db.sites.find()\n{ \"_id\" : ObjectId(\"60dce0a56a737200188df506\"), \"title\" : \"Kontralto Consulting Corp\", \"children\" : [ { \"relationTo\" : \"pages\" } ], \"createdAt\" : ISODate(\"2021-06-30T21:22:45.113Z\"), \"updatedAt\" : ISODate(\"2021-06-30T21:22:56.718Z\"), \"__v\" : 0 }\n&gt; db.pages.find()\n{ \"_id\" : ObjectId(\"60dce0b06a737200188df539\"), \"parent\" : { \"relationTo\" : \"sites\", \"value\" : ObjectId(\"60dce0a56a737200188df506\") }, \"heading\" : \"My Page\", \"renderings\" : [ ], \"children\" : [ ], \"createdAt\" : ISODate(\"2021-06-30T21:22:56.678Z\"), \"updatedAt\" : ISODate(\"2021-06-30T21:22:56.678Z\"), \"__v\" : 0 }\n</code></pre></div>\n<p dir=\"auto\">My apologies for continuing to bump this discussion - I really want to figure this out... I must just have something wrong.</p>",
            "createdAt": "2021-06-30T21:56:23Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/RobertAlbus/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/RobertAlbus\">@RobertAlbus</a>, No problem!<br>\nI just made a PR to your repo that fixes the bug, though you'll want to clean it up. The problem was the relationship object for the children was being sent as <code class=\"notranslate\">id</code> instead of <code class=\"notranslate\">value</code>. After making this change I was able to save a Page with a relationship to a Site without error and the database appears to be correct with both relationships being populated.</p>\n<p dir=\"auto\"><a aria-label=\"Pull request #1\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"934934311\" data-permission-text=\"Title is private\" data-url=\"https://github.com/RobertAlbus/kto-cms/issues/1\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/RobertAlbus/kto-cms/pull/1/hovercard\" href=\"https://github.com/RobertAlbus/kto-cms/pull/1\">RobertAlbus/kto-cms#1</a></p>\n<p dir=\"auto\">We have a plan to update the documentation because I too was confused by this until I dug deeper. Beyond that we can work on adding validation so <code class=\"notranslate\">value</code> is required for relationTo of multiple types. That would have caught this immediately.</p>",
            "createdAt": "2021-07-01T15:04:35Z"
          },
          {
            "author": {
              "name": "RobertAlbus",
              "avatar": "https://avatars.githubusercontent.com/u/42300645?v=4",
              "url": "https://github.com/RobertAlbus"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> ! This is fantastic. Thank you for digging into that. I checked out your branch and like what I see. Very instructive.</p>\n<p dir=\"auto\">I agree with updating the docs and adding validation. If you want to ping me for a review on either of those please feel free.</p>",
            "createdAt": "2021-07-01T19:37:02Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Cool! Here is a PR for the documentation changes: <a aria-label=\"Pull request #214\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"935168072\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/214\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/214/hovercard\" href=\"https://github.com/payloadcms/payload/pull/214\">#214</a></p>",
            "createdAt": "2021-07-01T19:58:53Z"
          }
        ]
      },
      {
        "author": {
          "name": "lrkcode",
          "avatar": "https://avatars.githubusercontent.com/u/17694189?v=4",
          "url": "https://github.com/lrkcode"
        },
        "body": "<div class=\"email-fragment\">收到。                  卢润恺</div>",
        "createdAt": "2022-12-28T23:33:01Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "Ontopic",
        "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
        "url": "https://github.com/Ontopic"
      },
      "body": "<p dir=\"auto\">I feel you should look into hooks as quick advice. At least that's how I created something similar.</p>",
      "createdAt": "2021-06-22T12:23:01Z",
      "chosenAt": "2022-12-09T16:42:38Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "RobertAlbus",
            "avatar": "https://avatars.githubusercontent.com/u/42300645?v=4",
            "url": "https://github.com/RobertAlbus"
          },
          "body": "<p dir=\"auto\">Yes thanks for the suggestion <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Ontopic/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Ontopic\">@Ontopic</a> I am using hooks to implement this. Getting the hooks to fire was pretty straight forward, it's the interaction with the local API inside the hook where I am having no luck.</p>",
          "createdAt": "2021-06-22T17:21:52Z"
        }
      ]
    }
  },
  {
    "title": "simple solution: modify value of relationship field within afterRead hook",
    "body": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">as there are some threads about the <em>relationship &amp; afterRead hook</em> matter I'd like to share my findings:</p>\n<p dir=\"auto\">Related Threads:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/payloadcms/payload/discussions/1042\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1042/hovercard\">Possibility to only have certain fields included in relationship</a></li>\n<li><a href=\"https://github.com/payloadcms/payload/discussions/1354\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1354/hovercard\">Return of afterRead hook for relationship field</a></li>\n</ul>\n<p dir=\"auto\">The relationship field:</p>\n<ul dir=\"auto\">\n<li>stores <code class=\"notranslate\">relationTo: 'collection-slug'</code> and <code class=\"notranslate\">value: 'collection-id'</code></li>\n<li>is populated <em>after</em> the afterRead hook</li>\n</ul>\n<p dir=\"auto\">The afterRead hook...</p>\n<ul dir=\"auto\">\n<li>is called <em>both</em> by the admin UI <em>and</em> server side functions</li>\n<li>is called <em>before</em> relationships are populated</li>\n<li>may return a modified result</li>\n</ul>\n<p dir=\"auto\"><strong>If we want to modify the value of the relationship field when it's queried</strong> (which means in the afterRead hook), we face the following issue:<br>\nWe need to include the original relationship data when the admin UI reads the field (otherwise it breaks).<br>\nBut <em>if</em> we include <code class=\"notranslate\">relationTo</code> and <code class=\"notranslate\">value</code> properties, the relationship field is going to be populated automatically.</p>\n<p dir=\"auto\">The solutions is:</p>\n<ol dir=\"auto\">\n<li>Set <code class=\"notranslate\">maxDepth: 0</code> which practically disables the automatic population of the field.</li>\n<li>Populate the field manually whithin a afterRead hook</li>\n</ol>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const relationshipField = {\n\ttype: 'relationship',\n\tname: 'internal',\n\tlabel: 'Document to link to',\n\trelationTo: ['pages'],\n\trequired: true,\n\tmaxDepth: 0, // &lt;-- important\n\thooks: {\n\t\tafterRead: [\n\t\t\t(args) =&gt; extractFieldsFromRelationship(args, ['url'])\n\t\t]\n\t}\n}\n\nasync function extractFieldsFromRelationship(args, topLevelFields = []) {\n\t// afterRead\n\n\tif (typeof args.value === 'undefined') return\n\n\tconst refCollection = args.value.relationTo\n\tconst refID = args.value.value\n\n\tconst doc = await payload.findByID({\n\t\tcollection: refCollection,\n\t\tid: refID,\n\t\tdepth: 1,\n\t})\n\t\n\tconst extract = {}\n\n\ttopLevelFields.map(field =&gt; {\n\t\tif (doc[field]) extract[field] = doc[field]\n\t})\n\n\t// include this - otherwise the admin UI will not work properly\n\textract.relationTo = refCollection \n\textract.value = refID\n\n\t//return doc // This is the default way. The whole doc is included.\n\treturn extract\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">relationshipField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n\t<span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'internal'</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Document to link to'</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-c1\">relationTo</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-c1\">maxDepth</span>: <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// &lt;-- important</span>\n\t<span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-c1\">afterRead</span>: <span class=\"pl-kos\">[</span>\n\t\t\t<span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">extractFieldsFromRelationship</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s\">'url'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n\t\t<span class=\"pl-kos\">]</span>\n\t<span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">extractFieldsFromRelationship</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">topLevelFields</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\t<span class=\"pl-c\">// afterRead</span>\n\n\t<span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'undefined'</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">return</span>\n\n\t<span class=\"pl-k\">const</span> <span class=\"pl-s1\">refCollection</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">relationTo</span>\n\t<span class=\"pl-k\">const</span> <span class=\"pl-s1\">refID</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span>\n\n\t<span class=\"pl-k\">const</span> <span class=\"pl-s1\">doc</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">findByID</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-c1\">collection</span>: <span class=\"pl-s1\">refCollection</span><span class=\"pl-kos\">,</span>\n\t\t<span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">refID</span><span class=\"pl-kos\">,</span>\n\t\t<span class=\"pl-c1\">depth</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\t\n\t<span class=\"pl-k\">const</span> <span class=\"pl-s1\">extract</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span>\n\n\t<span class=\"pl-s1\">topLevelFields</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">field</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">doc</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">field</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span> <span class=\"pl-s1\">extract</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">field</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">doc</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">field</span><span class=\"pl-kos\">]</span>\n\t<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n\t<span class=\"pl-c\">// include this - otherwise the admin UI will not work properly</span>\n\t<span class=\"pl-s1\">extract</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">relationTo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">refCollection</span> \n\t<span class=\"pl-s1\">extract</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">refID</span>\n\n\t<span class=\"pl-c\">//return doc // This is the default way. The whole doc is included.</span>\n\t<span class=\"pl-k\">return</span> <span class=\"pl-s1\">extract</span>\n<span class=\"pl-kos\">}</span></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/1684",
    "id": "1684",
    "createdAt": "2022-12-16T13:14:34Z",
    "upvotes": 2,
    "commentTotal": 2,
    "author": {
      "name": "unonweb",
      "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
      "url": "https://github.com/unonweb"
    },
    "comments": [
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/unonweb/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/unonweb\">@unonweb</a> this is great!! The only thing that jumps out at me are that it seems like you should <em>not</em> have to set <code class=\"notranslate\">maxDepth: 0</code> — because this requires you to make that extra query from within your hook. The entire document is already present in the args, so couldn't you just strip out the irrelevant fields without querying your relationship again?</p>\n<p dir=\"auto\">That first discussion you linked has some pretty good information, for others who stumble by. Namely, doing this will break GraphQL, and that this is really where GraphQL shines.</p>\n<p dir=\"auto\">Thank you for this thorough example!</p>",
        "createdAt": "2022-12-22T20:19:32Z",
        "replies": null
      },
      {
        "author": {
          "name": "christian-reichart",
          "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
          "url": "https://github.com/christian-reichart"
        },
        "body": "<p dir=\"auto\">Thanks for that tip!<br>\nAlso related, solves that really elegantly: <a aria-label=\"Pull request #1288\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1419351601\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1288\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/1288/hovercard\" href=\"https://github.com/payloadcms/payload/pull/1288\">#1288</a></p>\n<p dir=\"auto\">I think using REST has a lot of benefits over GraphQL for certain cases, but it's currently handicapped by the relationships because of this select issue, also when using an internal link inside the Rich Text for example.</p>",
        "createdAt": "2022-12-26T13:37:25Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/unonweb/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/unonweb\">@unonweb</a> this is great!! The only thing that jumps out at me are that it seems like you should <em>not</em> have to set <code class=\"notranslate\">maxDepth: 0</code> — because this requires you to make that extra query from within your hook. The entire document is already present in the args, so couldn't you just strip out the irrelevant fields without querying your relationship again?</p>\n<p dir=\"auto\">That first discussion you linked has some pretty good information, for others who stumble by. Namely, doing this will break GraphQL, and that this is really where GraphQL shines.</p>\n<p dir=\"auto\">Thank you for this thorough example!</p>",
      "createdAt": "2022-12-22T20:19:32Z",
      "chosenAt": "2023-02-09T15:36:50Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "How to update current document in afterRead hook?",
    "body": "<p dir=\"auto\">Merry Christmas to you all!</p>\n<p dir=\"auto\">Here is a problem I currently have:<br>\nI'm trying to use Payload to sort of \"cache\" data from an external API and refetch it after a certain amount of time.</p>\n<p dir=\"auto\">Setup:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const MyGlobal: GlobalConfig = {\n  slug: 'my-global',\n  fields: [\n          {\n            name: 'apiRequestKey',\n            type: 'text',\n            hooks: {\n              beforeChange: [populateData],\n              afterRead: [populateData],\n            },\n          }\n          {\n            name: 'updatedAt',\n            type: 'date',\n            admin: {\n              hidden: true,\n            },\n          },\n          {\n            name: 'apiData',\n            type: 'number',\n            admin: {\n              hidden: true,\n            },\n          },\n  ]\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-v\">MyGlobal</span>: <span class=\"pl-v\">GlobalConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'my-global'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n          <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'apiRequestKey'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n              <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s1\">populateData</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">afterRead</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s1\">populateData</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">}</span>\n          <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'updatedAt'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'date'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n              <span class=\"pl-c1\">hidden</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'apiData'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n              <span class=\"pl-c1\">hidden</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Inside the hook, I check if updatedAt is expired, and refetch the apiData from an external API. Now if I try to use the local API with <code class=\"notranslate\">payload.updateGlobal()</code> to write the new data and current timestamp in the database, the update function will trigger the afterRead hook again, before the data is changed, causing an infinite loop.</p>\n<p dir=\"auto\">Possible solutions would be:</p>\n<ul dir=\"auto\">\n<li>To use a separate collection which stores the updatedAt timestamp, but this could cause some race coditions</li>\n<li>To somehow detect the request that is coming from inside the hook (I tried overwriting the user, but this doesn't work it seems)</li>\n<li>To have some ability to disable/overwrite hooks/field hooks when using the local API (I think this is currently not possible)</li>\n</ul>\n<p dir=\"auto\">Does anybody have an idea for an elegant solution to this problem? Any help is appreciated.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1764",
    "id": "1764",
    "createdAt": "2022-12-24T09:12:02Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "christian-reichart",
      "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
      "url": "https://github.com/christian-reichart"
    },
    "comments": [
      {
        "author": {
          "name": "christian-reichart",
          "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
          "url": "https://github.com/christian-reichart"
        },
        "body": "<p dir=\"auto\">I solved it for now using an early return with</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"req.payloadAPI === 'local' &amp;&amp; operation === 'read'\"><pre class=\"notranslate\"><code class=\"notranslate\">req.payloadAPI === 'local' &amp;&amp; operation === 'read'\n</code></pre></div>\n<p dir=\"auto\">However, I would still be interested in suggestions for other solutions, since the potential for an endless loop is still present, if the data changes in a specific way. I would still prefer to be able to disable hooks on the update call.</p>",
        "createdAt": "2022-12-28T11:14:09Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "christian-reichart",
        "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
        "url": "https://github.com/christian-reichart"
      },
      "body": "<p dir=\"auto\">I solved it for now using an early return with</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"req.payloadAPI === 'local' &amp;&amp; operation === 'read'\"><pre class=\"notranslate\"><code class=\"notranslate\">req.payloadAPI === 'local' &amp;&amp; operation === 'read'\n</code></pre></div>\n<p dir=\"auto\">However, I would still be interested in suggestions for other solutions, since the potential for an endless loop is still present, if the data changes in a specific way. I would still prefer to be able to disable hooks on the update call.</p>",
      "createdAt": "2022-12-28T11:14:09Z",
      "chosenAt": "2022-12-28T11:14:13Z",
      "chosenBy": "christian-reichart",
      "replies": null
    }
  },
  {
    "title": "How does the fallback-locale suppose to work with blocks field?",
    "body": "<p dir=\"auto\">I struggle to work with fallback locale functionality and REST API. From what I observed so far, it does not work as I would expect and I don't know what am I doing wrong.<br>\nMy collection has the blocks field defiintion as follows:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n  type:'blocks',\n  name: 'blocks',\n  label: 'Bloki z treścią',\n  localized: true,\n  blocks: [\n    Richtext,\n    Columns,\n    GalleryColumns,\n    LargePhoto,\n  ]\n},\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n  type:'blocks',\n  name: 'blocks',\n  label: 'Bloki z treścią',\n  localized: true,\n  blocks: [\n    Richtext,\n    Columns,\n    GalleryColumns,\n    LargePhoto,\n  ]\n},\n</code></pre></div>\n<ul dir=\"auto\">\n<li>It does not work for common queries like <code class=\"notranslate\">?where[slug][equals]=slug-string?locale=en&amp;fallback-locale=pl</code> it only works when I query with <code class=\"notranslate\">/api/model/[itemId]?locale=en&amp;fallback-locale=pl</code>, and with <code class=\"notranslate\">/api/model?locale=en&amp;fallback-locale=pl</code> but this is something I can actually understand why, even if it does create a headache.</li>\n<li>It does not seem to work for blocks field, even if the one is <code class=\"notranslate\">localized: true</code> and filled with data on locale which supposed to be the fallback one. The fields inside blocks are not <code class=\"notranslate\">localized: true</code> as I figured that - logically - if the wrapping element (blocks field) is localized, that inner elements shouldn't be. It works on the UI - switching locale on admin to empty one, provides me with the blank blocks field, ready to be filled. However, i thought that leaving it as blank, should fill the content from the fallback on API request?</li>\n</ul>\n<p dir=\"auto\">Current packeges version of mine:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  &quot;dependencies&quot;: {\n    &quot;@payloadcms/plugin-seo&quot;: &quot;^1.0.9&quot;,\n    &quot;dotenv&quot;: &quot;^16.0.3&quot;,\n    &quot;express&quot;: &quot;^4.18.2&quot;,\n    &quot;nodemailer&quot;: &quot;^6.8.0&quot;,\n    &quot;nodemailer-sendgrid&quot;: &quot;^1.0.3&quot;,\n    &quot;payload&quot;: &quot;^1.2.0&quot;,\n    &quot;payload-s3-upload&quot;: &quot;^1.1.2&quot;\n  },\n  &quot;devDependencies&quot;: {\n    &quot;nodemon&quot;: &quot;^2.0.20&quot;\n  }\n\"><pre class=\"notranslate\"><code class=\"notranslate\">  \"dependencies\": {\n    \"@payloadcms/plugin-seo\": \"^1.0.9\",\n    \"dotenv\": \"^16.0.3\",\n    \"express\": \"^4.18.2\",\n    \"nodemailer\": \"^6.8.0\",\n    \"nodemailer-sendgrid\": \"^1.0.3\",\n    \"payload\": \"^1.2.0\",\n    \"payload-s3-upload\": \"^1.1.2\"\n  },\n  \"devDependencies\": {\n    \"nodemon\": \"^2.0.20\"\n  }\n\n</code></pre></div>\n<p dir=\"auto\">and config has localization provided as:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"localization: {\n    locales: [\n      'pl',\n      'en'\n    ],\n    defaultLocale: 'pl',\n    fallback: true,\n  },\"><pre class=\"notranslate\"><code class=\"notranslate\">localization: {\n    locales: [\n      'pl',\n      'en'\n    ],\n    defaultLocale: 'pl',\n    fallback: true,\n  },\n</code></pre></div>\n<p dir=\"auto\">How can I force this mechanism to return blocks field with data from fallback locale?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1694",
    "id": "1694",
    "createdAt": "2022-12-17T19:13:57Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "quornik",
      "avatar": "https://avatars.githubusercontent.com/u/6187408?u=d66adadfca3437186e25abaafe51af799025e358&v=4",
      "url": "https://github.com/quornik"
    },
    "comments": [
      {
        "author": {
          "name": "quornik",
          "avatar": "https://avatars.githubusercontent.com/u/6187408?u=d66adadfca3437186e25abaafe51af799025e358&v=4",
          "url": "https://github.com/quornik"
        },
        "body": "<p dir=\"auto\">Oh! I got something!<br>\nThe blocks field with <code class=\"notranslate\">localized: true</code> writes itself to the database WITH locales as arrays. Even if the locales are empty arrays, it just does so. Therefore, the mechanism on which fallback-locale searches for empty records in one locale, to fill it with data from the fallback, is tricked to thinking that i've already filled the locale data with something. But it is just empty array.</p>\n<p dir=\"auto\">So the question is: How to force the blocks field not to write it so? Is it a bug or is it a feature? :)</p>",
        "createdAt": "2022-12-17T21:02:20Z",
        "replies": null
      },
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Thanks for opening up <a href=\"https://github.com/payloadcms/payload/issues/1695\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/1695/hovercard\">issue 1695</a>, adding the link here for visibility.</p>",
        "createdAt": "2022-12-23T13:57:46Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Thanks for opening up <a href=\"https://github.com/payloadcms/payload/issues/1695\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/1695/hovercard\">issue 1695</a>, adding the link here for visibility.</p>",
      "createdAt": "2022-12-23T13:57:46Z",
      "chosenAt": "2023-02-09T15:47:20Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "User CSV Import for a Collection",
    "body": "<p dir=\"auto\">What is the best way to go about adding a CSV import to a Collection for Users?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1660",
    "id": "1660",
    "createdAt": "2022-12-13T16:02:33Z",
    "upvotes": 6,
    "commentTotal": 1,
    "author": {
      "name": "jj22wham",
      "avatar": "https://avatars.githubusercontent.com/u/120492666?v=4",
      "url": "https://github.com/jj22wham"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">I can think of two good ways to get this done. I typically write an import script that starts up Payload with <code class=\"notranslate\">local: true</code>, reads the CSV file and loops over the rows, mapping data to a data object and calls save on your collection(s). The other option is more work, but you can create a custom endpoint that handles the import from an uploaded file along with adding a custom component in Payload to the UI for users to submit data to.</p>\n<p dir=\"auto\">Here is a limited example of what I've used for an import script:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import dotenv from 'dotenv';\nimport path from 'path';\nimport csv from 'csvtojson';\nimport payload from 'payload';\nimport { User } from '../payload-types';\nimport { UserSource } from './types'; // I like to make types as all strings of my CSV data so that I know I have the field names correct, especially from legacy systems with poor naming conventions.\n\ndotenv.config();\npayload.init({\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGO_URL,\n  local: true,\n});\n\n(async () =&gt; {\n  const usersSource: { [key: string]: UserSource } = {};\n  const csvPath = path.resolve(__dirname, 'source/users.csv');\n  csv()\n    .fromFile(csvPath)\n    .then(async (fromCSV) =&gt; {\n      fromCSV.forEach((source: UserSource) =&gt; {\n        usersSource[source.id] = source;\n      });\n      // eslint-disable-next-line no-restricted-syntax\n      for (const key of Object.keys(usersSource)) {\n        const source = usersSource[key];\n\n        const data: Omit&lt;User, 'id' | 'createdAt' | 'updatedAt'&gt; = {\n          id: source.ID,\n          email: source.EMAIL,\n          name: source.NAME,\n          // other fields you might have\n        };\n        try {\n          // eslint-disable-next-line no-await-in-loop\n          await payload.create({\n            collection: 'users',\n            overrideAccess: true,\n            data,\n          });\n          console.log('created: ', data.email);\n        } catch (e) {\n          console.log(e);\n          // eslint-disable-next-line no-continue\n          console.log('skip: ', data.name);\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n        console.log('DONE');\n      }\n    })\n    .then(() =&gt; process.exit(0));\n})();\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">dotenv</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'dotenv'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">path</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'path'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">csv</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'csvtojson'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">User</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../payload-types'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">UserSource</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./types'</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// I like to make types as all strings of my CSV data so that I know I have the field names correct, especially from legacy systems with poor naming conventions.</span>\n\n<span class=\"pl-s1\">dotenv</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">secret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_SECRET</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MONGO_URL</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">local</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">usersSource</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">key</span>: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">]</span>: <span class=\"pl-smi\">UserSource</span> <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">csvPath</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'source/users.csv'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-en\">csv</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-kos\">.</span><span class=\"pl-en\">fromFile</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">csvPath</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">fromCSV</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s1\">fromCSV</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">forEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">source</span>: <span class=\"pl-smi\">UserSource</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">usersSource</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">source</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">source</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-c\">// eslint-disable-next-line no-restricted-syntax</span>\n      <span class=\"pl-k\">for</span> <span class=\"pl-kos\">(</span><span class=\"pl-k\">const</span> <span class=\"pl-s1\">key</span> <span class=\"pl-k\">of</span> <span class=\"pl-smi\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">keys</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">usersSource</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">source</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">usersSource</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">key</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">data</span>: <span class=\"pl-smi\">Omit</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">User</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'id'</span> <span class=\"pl-c1\">|</span> <span class=\"pl-s\">'createdAt'</span> <span class=\"pl-c1\">|</span> <span class=\"pl-s\">'updatedAt'</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">source</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">ID</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">email</span>: <span class=\"pl-s1\">source</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">EMAIL</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">name</span>: <span class=\"pl-s1\">source</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">NAME</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c\">// other fields you might have</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c\">// eslint-disable-next-line no-await-in-loop</span>\n          <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'users'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">overrideAccess</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n            data<span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'created: '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">email</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-c\">// eslint-disable-next-line no-continue</span>\n          <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'skip: '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-c\">// eslint-disable-next-line no-continue</span>\n          <span class=\"pl-k\">continue</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'DONE'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exit</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">This is a ts file, which you can run with <code class=\"notranslate\">npx ts-node -T imports/users.ts</code> modifying the path for the directory you want.</p>\n<p dir=\"auto\">These tend to get longer and more complex if you need to also save relationships, but it all be handled this way as well.</p>\n<p dir=\"auto\">For users specfically, if you're using the local authentication (default) auth, you'll want to have a workflow for users to reset their passwords with a token for first time on the new system.</p>\n<p dir=\"auto\">Hopefully this gives you what you need. If you need any help we do offer enterprise support agreements that cover this kind of work.</p>",
        "createdAt": "2022-12-23T13:54:13Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">I can think of two good ways to get this done. I typically write an import script that starts up Payload with <code class=\"notranslate\">local: true</code>, reads the CSV file and loops over the rows, mapping data to a data object and calls save on your collection(s). The other option is more work, but you can create a custom endpoint that handles the import from an uploaded file along with adding a custom component in Payload to the UI for users to submit data to.</p>\n<p dir=\"auto\">Here is a limited example of what I've used for an import script:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import dotenv from 'dotenv';\nimport path from 'path';\nimport csv from 'csvtojson';\nimport payload from 'payload';\nimport { User } from '../payload-types';\nimport { UserSource } from './types'; // I like to make types as all strings of my CSV data so that I know I have the field names correct, especially from legacy systems with poor naming conventions.\n\ndotenv.config();\npayload.init({\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGO_URL,\n  local: true,\n});\n\n(async () =&gt; {\n  const usersSource: { [key: string]: UserSource } = {};\n  const csvPath = path.resolve(__dirname, 'source/users.csv');\n  csv()\n    .fromFile(csvPath)\n    .then(async (fromCSV) =&gt; {\n      fromCSV.forEach((source: UserSource) =&gt; {\n        usersSource[source.id] = source;\n      });\n      // eslint-disable-next-line no-restricted-syntax\n      for (const key of Object.keys(usersSource)) {\n        const source = usersSource[key];\n\n        const data: Omit&lt;User, 'id' | 'createdAt' | 'updatedAt'&gt; = {\n          id: source.ID,\n          email: source.EMAIL,\n          name: source.NAME,\n          // other fields you might have\n        };\n        try {\n          // eslint-disable-next-line no-await-in-loop\n          await payload.create({\n            collection: 'users',\n            overrideAccess: true,\n            data,\n          });\n          console.log('created: ', data.email);\n        } catch (e) {\n          console.log(e);\n          // eslint-disable-next-line no-continue\n          console.log('skip: ', data.name);\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n        console.log('DONE');\n      }\n    })\n    .then(() =&gt; process.exit(0));\n})();\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">dotenv</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'dotenv'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">path</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'path'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">csv</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'csvtojson'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">User</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../payload-types'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">UserSource</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./types'</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// I like to make types as all strings of my CSV data so that I know I have the field names correct, especially from legacy systems with poor naming conventions.</span>\n\n<span class=\"pl-s1\">dotenv</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">secret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_SECRET</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MONGO_URL</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">local</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">usersSource</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">key</span>: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">]</span>: <span class=\"pl-smi\">UserSource</span> <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">csvPath</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'source/users.csv'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-en\">csv</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-kos\">.</span><span class=\"pl-en\">fromFile</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">csvPath</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">fromCSV</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s1\">fromCSV</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">forEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">source</span>: <span class=\"pl-smi\">UserSource</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">usersSource</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">source</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">source</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-c\">// eslint-disable-next-line no-restricted-syntax</span>\n      <span class=\"pl-k\">for</span> <span class=\"pl-kos\">(</span><span class=\"pl-k\">const</span> <span class=\"pl-s1\">key</span> <span class=\"pl-k\">of</span> <span class=\"pl-smi\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">keys</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">usersSource</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">source</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">usersSource</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">key</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">data</span>: <span class=\"pl-smi\">Omit</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">User</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'id'</span> <span class=\"pl-c1\">|</span> <span class=\"pl-s\">'createdAt'</span> <span class=\"pl-c1\">|</span> <span class=\"pl-s\">'updatedAt'</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">source</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">ID</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">email</span>: <span class=\"pl-s1\">source</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">EMAIL</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">name</span>: <span class=\"pl-s1\">source</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">NAME</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c\">// other fields you might have</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c\">// eslint-disable-next-line no-await-in-loop</span>\n          <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'users'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">overrideAccess</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n            data<span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'created: '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">email</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-c\">// eslint-disable-next-line no-continue</span>\n          <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'skip: '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-c\">// eslint-disable-next-line no-continue</span>\n          <span class=\"pl-k\">continue</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'DONE'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exit</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">This is a ts file, which you can run with <code class=\"notranslate\">npx ts-node -T imports/users.ts</code> modifying the path for the directory you want.</p>\n<p dir=\"auto\">These tend to get longer and more complex if you need to also save relationships, but it all be handled this way as well.</p>\n<p dir=\"auto\">For users specfically, if you're using the local authentication (default) auth, you'll want to have a workflow for users to reset their passwords with a token for first time on the new system.</p>\n<p dir=\"auto\">Hopefully this gives you what you need. If you need any help we do offer enterprise support agreements that cover this kind of work.</p>",
      "createdAt": "2022-12-23T13:54:13Z",
      "chosenAt": "2023-01-25T17:21:06Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Is it possible to count posts/pages by group by a category field?",
    "body": "<p dir=\"auto\">I have a tab switch to show two different categories of articles with the total num shown in tab title.</p>\n<p dir=\"auto\"><a href=\"https://getjerry.com/data-and-studies\" rel=\"nofollow\">https://getjerry.com/data-and-studies</a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/205555762-eb3cdb62-fea8-4fb0-916e-9be25d9bf015.png\"><img width=\"967\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5801015/205555762-eb3cdb62-fea8-4fb0-916e-9be25d9bf015.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Now I'm using two queries to fetch these two counts separately.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"countStudies: Articles(\n    where: {\n      category: { equals: &quot;studies&quot; }\n      slug: { not_in: $excludeSlugs }\n      noCard: { not_equals: true }\n      _status: $_status\n    }\n    page: $page\n    limit: $limit\n    sort: &quot;-publishDate&quot;\n  ) {\n    totalDocs\n  }\n  countTrendsReports: Articles(\n    where: {\n      category: { equals: &quot;trends-reports&quot; }\n      slug: { not_in: $excludeSlugs }\n      noCard: { not_equals: true }\n      _status: $_status\n    }\n    page: $page\n    limit: $limit\n    sort: &quot;-publishDate&quot;\n  ) {\n    totalDocs\n  }\"><pre class=\"notranslate\"><code class=\"notranslate\">countStudies: Articles(\n    where: {\n      category: { equals: \"studies\" }\n      slug: { not_in: $excludeSlugs }\n      noCard: { not_equals: true }\n      _status: $_status\n    }\n    page: $page\n    limit: $limit\n    sort: \"-publishDate\"\n  ) {\n    totalDocs\n  }\n  countTrendsReports: Articles(\n    where: {\n      category: { equals: \"trends-reports\" }\n      slug: { not_in: $excludeSlugs }\n      noCard: { not_equals: true }\n      _status: $_status\n    }\n    page: $page\n    limit: $limit\n    sort: \"-publishDate\"\n  ) {\n    totalDocs\n  }\n</code></pre></div>\n<p dir=\"auto\">It works, but I'm wondering if there's a more elegant(one query) or extensible(if I need all categories) way to do this.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1588",
    "id": "1588",
    "createdAt": "2022-12-05T05:24:53Z",
    "upvotes": 2,
    "commentTotal": 2,
    "author": {
      "name": "Stupidism",
      "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
      "url": "https://github.com/Stupidism"
    },
    "comments": [
      {
        "author": {
          "name": "ChrisGV04",
          "avatar": "https://avatars.githubusercontent.com/u/47041342?u=76f483c754eb2506445bb063e3c07c3b5935d384&v=4",
          "url": "https://github.com/ChrisGV04"
        },
        "body": "<p dir=\"auto\">I'm having the exact same situation. The only thing I could think of was if there was some sort of bi-directional field in the relationship between the collections. For example: In the <code class=\"notranslate\">Articles</code> collection there's a <code class=\"notranslate\">category</code> field and on the <code class=\"notranslate\">Category</code> collection there's a <code class=\"notranslate\">articles</code> field with <code class=\"notranslate\">hasMany: true</code>.</p>\n<p dir=\"auto\">Other CMS like Strapi and Directus handle this with the \"one-to-one\", \"one-to-many\" and \"many-to-many\" technique, which automatically maintains both fields I mentioned before as a nice relationship. However, I imagine that it's easier on those CMS because they use SQL databases but Payload uses MongoDB that's NoSQL.</p>",
        "createdAt": "2022-12-14T03:55:42Z",
        "replies": null
      },
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Stupidism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Stupidism\">@Stupidism</a> there's currently no API for this, however, you could wire up your own <a href=\"https://payloadcms.com/docs/rest-api/overview#custom-endpoints\" rel=\"nofollow\">custom endpoint</a> to consolidate multiple queries. It would look like this: your front-end makes a single request to your Payload server, it uses the <a href=\"https://payloadcms.com/docs/local-api/overview#local-api\" rel=\"nofollow\">Local API</a> to query \"studies\" and \"trend reports\" similarly to your example above, then it returns both results back to you in a single response.</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ChrisGV04/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ChrisGV04\">@ChrisGV04</a> I think what you're talking about to is slightly different, although a <em>great idea</em>. This is already <a href=\"https://github.com/payloadcms/payload/discussions/357\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/357/hovercard\">some discussion around bidirectional/inversed relationships</a>, check it out!</p>",
        "createdAt": "2022-12-22T19:44:29Z",
        "replies": [
          {
            "author": {
              "name": "ChrisGV04",
              "avatar": "https://avatars.githubusercontent.com/u/47041342?u=76f483c754eb2506445bb063e3c07c3b5935d384&v=4",
              "url": "https://github.com/ChrisGV04"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a> That's right. The solution I proposed is the way I have seen that some other CMS manage it, but I understand it's a different topic.</p>\n<p dir=\"auto\">However your proposed solution is a good option. I personally use MongoDB aggregations in a custom route to perform these counts.</p>\n<p dir=\"auto\">Great work on Payload btw! My favorite CMS by far</p>",
            "createdAt": "2022-12-22T22:35:42Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Stupidism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Stupidism\">@Stupidism</a> there's currently no API for this, however, you could wire up your own <a href=\"https://payloadcms.com/docs/rest-api/overview#custom-endpoints\" rel=\"nofollow\">custom endpoint</a> to consolidate multiple queries. It would look like this: your front-end makes a single request to your Payload server, it uses the <a href=\"https://payloadcms.com/docs/local-api/overview#local-api\" rel=\"nofollow\">Local API</a> to query \"studies\" and \"trend reports\" similarly to your example above, then it returns both results back to you in a single response.</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ChrisGV04/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ChrisGV04\">@ChrisGV04</a> I think what you're talking about to is slightly different, although a <em>great idea</em>. This is already <a href=\"https://github.com/payloadcms/payload/discussions/357\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/357/hovercard\">some discussion around bidirectional/inversed relationships</a>, check it out!</p>",
      "createdAt": "2022-12-22T19:44:29Z",
      "chosenAt": "2023-01-25T17:20:53Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "ChrisGV04",
            "avatar": "https://avatars.githubusercontent.com/u/47041342?u=76f483c754eb2506445bb063e3c07c3b5935d384&v=4",
            "url": "https://github.com/ChrisGV04"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a> That's right. The solution I proposed is the way I have seen that some other CMS manage it, but I understand it's a different topic.</p>\n<p dir=\"auto\">However your proposed solution is a good option. I personally use MongoDB aggregations in a custom route to perform these counts.</p>\n<p dir=\"auto\">Great work on Payload btw! My favorite CMS by far</p>",
          "createdAt": "2022-12-22T22:35:42Z"
        }
      ]
    }
  },
  {
    "title": "Changing Field uniqueness after content has been created, changes do not take effect?",
    "body": "<p dir=\"auto\">I made a field \"unique\". Now content has already been created and I realized I can't duplicate the document because of this field. I then removed the unique prop, but the validation still kicks in, it doesn't matter if I create a new document or edit an old one.</p>\n<p dir=\"auto\">Does this have to do with the version history of already created files? Is this a bug? Can I fix this without clearing parts of the database?</p>\n<p dir=\"auto\">Thanks for any help.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1724",
    "id": "1724",
    "createdAt": "2022-12-20T12:45:34Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "christian-reichart",
      "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
      "url": "https://github.com/christian-reichart"
    },
    "comments": [
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/christian-reichart/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/christian-reichart\">@christian-reichart</a> You should be able to connect to your db and then remove the index that gets created for <code class=\"notranslate\">unique</code> fields. Are you using something like MongoDB Compass? You just need to go to the collection, then click the indexes tab and remove the index related to your unique field <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
        "createdAt": "2022-12-20T13:15:01Z",
        "replies": [
          {
            "author": {
              "name": "christian-reichart",
              "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
              "url": "https://github.com/christian-reichart"
            },
            "body": "<p dir=\"auto\">Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/JarrodMFlesch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JarrodMFlesch\">@JarrodMFlesch</a>  for the answer! The problem currently exists on a staging environment were I haven't set up direct access to the db yet. Will try this once I have set this up.</p>\n<p dir=\"auto\">Just to clarify and understand the problem: Is this something that was looked over and can be fixed in a future version of Payload? Or does this fall und the general topic of db migration and is not seen as part of Payload (although automated migrations would be awesome! :D)</p>",
            "createdAt": "2022-12-20T15:58:11Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/christian-reichart/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/christian-reichart\">@christian-reichart</a>, you inspired me to do a proof of concept of a Payload project with migrations! See <a href=\"https://github.com/payloadcms/migrate-mongo-example\">https://github.com/payloadcms/migrate-mongo-example</a>.</p>\n<p dir=\"auto\">It certainly isn't automatic based on changes, but I don't think that would be possible anyways.</p>\n<p dir=\"auto\">I'll write a blog post on and depending on reception, would love to get your feedback on it when it is live. I would consider adding this workflow to the Payload docs, but I don't know that this goes into the core just yet.</p>",
            "createdAt": "2022-12-22T14:47:29Z"
          },
          {
            "author": {
              "name": "christian-reichart",
              "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
              "url": "https://github.com/christian-reichart"
            },
            "body": "<p dir=\"auto\">Wow this is really helpful and looks awesome! Thanks so much! Excited for the blog post.</p>",
            "createdAt": "2022-12-22T17:15:10Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "JarrodMFlesch",
        "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
        "url": "https://github.com/JarrodMFlesch"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/christian-reichart/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/christian-reichart\">@christian-reichart</a> You should be able to connect to your db and then remove the index that gets created for <code class=\"notranslate\">unique</code> fields. Are you using something like MongoDB Compass? You just need to go to the collection, then click the indexes tab and remove the index related to your unique field <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
      "createdAt": "2022-12-20T13:15:01Z",
      "chosenAt": "2022-12-22T18:49:44Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "christian-reichart",
            "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
            "url": "https://github.com/christian-reichart"
          },
          "body": "<p dir=\"auto\">Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/JarrodMFlesch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JarrodMFlesch\">@JarrodMFlesch</a>  for the answer! The problem currently exists on a staging environment were I haven't set up direct access to the db yet. Will try this once I have set this up.</p>\n<p dir=\"auto\">Just to clarify and understand the problem: Is this something that was looked over and can be fixed in a future version of Payload? Or does this fall und the general topic of db migration and is not seen as part of Payload (although automated migrations would be awesome! :D)</p>",
          "createdAt": "2022-12-20T15:58:11Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/christian-reichart/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/christian-reichart\">@christian-reichart</a>, you inspired me to do a proof of concept of a Payload project with migrations! See <a href=\"https://github.com/payloadcms/migrate-mongo-example\">https://github.com/payloadcms/migrate-mongo-example</a>.</p>\n<p dir=\"auto\">It certainly isn't automatic based on changes, but I don't think that would be possible anyways.</p>\n<p dir=\"auto\">I'll write a blog post on and depending on reception, would love to get your feedback on it when it is live. I would consider adding this workflow to the Payload docs, but I don't know that this goes into the core just yet.</p>",
          "createdAt": "2022-12-22T14:47:29Z"
        },
        {
          "author": {
            "name": "christian-reichart",
            "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
            "url": "https://github.com/christian-reichart"
          },
          "body": "<p dir=\"auto\">Wow this is really helpful and looks awesome! Thanks so much! Excited for the blog post.</p>",
          "createdAt": "2022-12-22T17:15:10Z"
        }
      ]
    }
  },
  {
    "title": "Does payloadcms provide any migration tools?",
    "body": "<p dir=\"auto\">just like <a href=\"https://www.npmjs.com/package/contentful-migration\" rel=\"nofollow\">contentful-migration</a>.</p>\n<p dir=\"auto\">Planning to migrate from <a href=\"https://www.contentful.com/\" rel=\"nofollow\">contentful</a> to payloadcms</p>",
    "url": "https://github.com/payloadcms/payload/discussions/857",
    "id": "857",
    "createdAt": "2022-08-01T11:57:53Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "zhounewz",
      "avatar": "https://avatars.githubusercontent.com/u/16400882?u=0b9839b373d35997a96ca00f71550153d6c8d945&v=4",
      "url": "https://github.com/zhounewz"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zhounewz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhounewz\">@zhounewz</a> — thanks for the question!</p>\n<p dir=\"auto\">Right now, because Payload has a very powerful Local Node API, you can write migration scripts in your code very easily. As long as you can export content from Contentful in JSON or similar, you can then loop over that content in a script, and for each doc, create a doc within Payload using the local API. It's pretty easy!</p>",
        "createdAt": "2022-08-01T12:19:52Z",
        "replies": [
          {
            "author": {
              "name": "zhounewz",
              "avatar": "https://avatars.githubusercontent.com/u/16400882?u=0b9839b373d35997a96ca00f71550153d6c8d945&v=4",
              "url": "https://github.com/zhounewz"
            },
            "body": "<p dir=\"auto\">just like below?</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const pageReq = await fetch(`${process.env.NEXT_PUBLIC_SERVER_URL}/api/posts?limit=100`)\"><pre class=\"notranslate\"><code class=\"notranslate\">const pageReq = await fetch(`${process.env.NEXT_PUBLIC_SERVER_URL}/api/posts?limit=100`)\n</code></pre></div>",
            "createdAt": "2022-08-02T08:58:31Z"
          },
          {
            "author": {
              "name": "denolfe",
              "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
              "url": "https://github.com/denolfe"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zhounewz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhounewz\">@zhounewz</a> <a href=\"https://github.com/payloadcms/public-demo/blob/0921b1a74d27ce14dc38f3f68743b07a01bcaf57/src/cron/reset.ts\">Here is an example</a> of using the <a href=\"https://payloadcms.com/docs/local-api/overview\" rel=\"nofollow\">local API</a> to seed data. You would use this same method to read and then modify the data to your liking.</p>\n<p dir=\"auto\">Another option is using a migration tool like <a href=\"https://github.com/balmasi/migrate-mongoose\">mongoose-migrate</a> or <a href=\"https://github.com/seppevs/migrate-mongo\">migrate-mongo</a></p>",
            "createdAt": "2022-08-02T12:54:35Z"
          },
          {
            "author": {
              "name": "zhounewz",
              "avatar": "https://avatars.githubusercontent.com/u/16400882?u=0b9839b373d35997a96ca00f71550153d6c8d945&v=4",
              "url": "https://github.com/zhounewz"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/denolfe/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/denolfe\">@denolfe</a> Thank you for such a detailed answer. I just wrote a simple demo with <a href=\"https://payloadcms.com/docs/rest-api/overview\" rel=\"nofollow\">rest api</a> and it ran successfully. so I wonder if <a href=\"https://payloadcms.com/docs/rest-api/overview\" rel=\"nofollow\">rest api</a> is also an option?<br>\nBy the way, the <a href=\"https://www.contentful.com/\" rel=\"nofollow\">contentful</a> used before and the <a href=\"https://payloadcms.com/\" rel=\"nofollow\">payload</a> used now are distributed in 2 different code repositories, in my opinion, rest api may be an easy solution. What do you think</p>",
            "createdAt": "2022-08-02T15:59:39Z"
          },
          {
            "author": {
              "name": "denolfe",
              "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
              "url": "https://github.com/denolfe"
            },
            "body": "<p dir=\"auto\">Yes, REST API is always an option. The reason local API is usually a better option is there is less overhead, and it circumvents access control.</p>",
            "createdAt": "2022-08-02T16:55:14Z"
          }
        ]
      },
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">I made a sample repo that has migrations inside a Payload project using <code class=\"notranslate\">migrate-mongo</code> and it worked pretty well in my testing, see <a href=\"https://github.com/payloadcms/migrate-mongo-example\">https://github.com/payloadcms/migrate-mongo-example</a>.</p>\n<p dir=\"auto\">I'll write a blog post about it and depending on reception, it could be added to the Payload docs.</p>",
        "createdAt": "2022-12-22T14:50:02Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zhounewz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhounewz\">@zhounewz</a> — thanks for the question!</p>\n<p dir=\"auto\">Right now, because Payload has a very powerful Local Node API, you can write migration scripts in your code very easily. As long as you can export content from Contentful in JSON or similar, you can then loop over that content in a script, and for each doc, create a doc within Payload using the local API. It's pretty easy!</p>",
      "createdAt": "2022-08-01T12:19:52Z",
      "chosenAt": "2022-08-02T12:54:42Z",
      "chosenBy": "denolfe",
      "replies": [
        {
          "author": {
            "name": "zhounewz",
            "avatar": "https://avatars.githubusercontent.com/u/16400882?u=0b9839b373d35997a96ca00f71550153d6c8d945&v=4",
            "url": "https://github.com/zhounewz"
          },
          "body": "<p dir=\"auto\">just like below?</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const pageReq = await fetch(`${process.env.NEXT_PUBLIC_SERVER_URL}/api/posts?limit=100`)\"><pre class=\"notranslate\"><code class=\"notranslate\">const pageReq = await fetch(`${process.env.NEXT_PUBLIC_SERVER_URL}/api/posts?limit=100`)\n</code></pre></div>",
          "createdAt": "2022-08-02T08:58:31Z"
        },
        {
          "author": {
            "name": "denolfe",
            "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
            "url": "https://github.com/denolfe"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zhounewz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhounewz\">@zhounewz</a> <a href=\"https://github.com/payloadcms/public-demo/blob/0921b1a74d27ce14dc38f3f68743b07a01bcaf57/src/cron/reset.ts\">Here is an example</a> of using the <a href=\"https://payloadcms.com/docs/local-api/overview\" rel=\"nofollow\">local API</a> to seed data. You would use this same method to read and then modify the data to your liking.</p>\n<p dir=\"auto\">Another option is using a migration tool like <a href=\"https://github.com/balmasi/migrate-mongoose\">mongoose-migrate</a> or <a href=\"https://github.com/seppevs/migrate-mongo\">migrate-mongo</a></p>",
          "createdAt": "2022-08-02T12:54:35Z"
        },
        {
          "author": {
            "name": "zhounewz",
            "avatar": "https://avatars.githubusercontent.com/u/16400882?u=0b9839b373d35997a96ca00f71550153d6c8d945&v=4",
            "url": "https://github.com/zhounewz"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/denolfe/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/denolfe\">@denolfe</a> Thank you for such a detailed answer. I just wrote a simple demo with <a href=\"https://payloadcms.com/docs/rest-api/overview\" rel=\"nofollow\">rest api</a> and it ran successfully. so I wonder if <a href=\"https://payloadcms.com/docs/rest-api/overview\" rel=\"nofollow\">rest api</a> is also an option?<br>\nBy the way, the <a href=\"https://www.contentful.com/\" rel=\"nofollow\">contentful</a> used before and the <a href=\"https://payloadcms.com/\" rel=\"nofollow\">payload</a> used now are distributed in 2 different code repositories, in my opinion, rest api may be an easy solution. What do you think</p>",
          "createdAt": "2022-08-02T15:59:39Z"
        },
        {
          "author": {
            "name": "denolfe",
            "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
            "url": "https://github.com/denolfe"
          },
          "body": "<p dir=\"auto\">Yes, REST API is always an option. The reason local API is usually a better option is there is less overhead, and it circumvents access control.</p>",
          "createdAt": "2022-08-02T16:55:14Z"
        }
      ]
    }
  },
  {
    "title": "Preview button not showing on all collections (?)",
    "body": "<p dir=\"auto\">Hey,</p>\n<p dir=\"auto\">I've added preview function to 8 different collections, but for some reason it only appears on a few of them. Are there any configurations that could prevent such a button from being shown? Not really sure if it is a bug, or me missing something crucial</p>\n<p dir=\"auto\">Example non-working code (same preview function is used in the working code as well):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"export const Plans: CollectionConfig = {\n  slug: 'plans',\n  admin: {\n    useAsTitle: 'title',\n    preview: (doc, { locale }) =&gt; {\n            if (doc?.slug) {\n                return `https://bigbird.com/preview/posts/${doc.slug}?locale=${locale}`;\n            }\n\n            return null;\n        },\n    },\n  },\n  access: DEFAULT_ACCESS_CONTROL,\n  fields: [\n    {\n      name: 'title',\n      label: 'Title',\n      type: 'text',\n      localized: true,\n    },\n    {\n      name: 'id',\n      label: 'Custom ID',\n      type: 'text',\n    },\n    buttons,\n  ],\n  timestamps: false,\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">export const Plans: CollectionConfig = {\n  slug: 'plans',\n  admin: {\n    useAsTitle: 'title',\n    preview: (doc, { locale }) =&gt; {\n            if (doc?.slug) {\n                return `https://bigbird.com/preview/posts/${doc.slug}?locale=${locale}`;\n            }\n\n            return null;\n        },\n    },\n  },\n  access: DEFAULT_ACCESS_CONTROL,\n  fields: [\n    {\n      name: 'title',\n      label: 'Title',\n      type: 'text',\n      localized: true,\n    },\n    {\n      name: 'id',\n      label: 'Custom ID',\n      type: 'text',\n    },\n    buttons,\n  ],\n  timestamps: false,\n}\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/1298",
    "id": "1298",
    "createdAt": "2022-10-26T16:36:10Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "adam-mrozik",
      "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
      "url": "https://github.com/adam-mrozik"
    },
    "comments": [
      {
        "author": {
          "name": "adam-mrozik",
          "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
          "url": "https://github.com/adam-mrozik"
        },
        "body": "<p dir=\"auto\">Ahh, noticed it will not appear, unless you have a <code class=\"notranslate\">slug</code> field added. Could we adjust it? I want to have a preview button for collections which are all grouped on one page, so I do not require slug in some instances</p>",
        "createdAt": "2022-10-27T09:48:52Z",
        "replies": null
      },
      {
        "author": {
          "name": "evelynhathaway",
          "avatar": "https://avatars.githubusercontent.com/u/38994283?u=87cba3ad2e2b4ac6fe1b26ca72f0eac8788cb645&v=4",
          "url": "https://github.com/evelynhathaway"
        },
        "body": "<p dir=\"auto\">In your above code, <code class=\"notranslate\">if (doc?.slug)</code> makes the preview button only show if there's a slug.</p>\n<p dir=\"auto\">You can write another condition or remove the condition and just return the preview URL.</p>\n<p dir=\"auto\">As an example:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export const Plans: CollectionConfig = {\n  slug: 'plans',\n  admin: {\n    useAsTitle: 'title',\n    preview: (doc, { locale }) =&gt; {\n        // Always return the same preview URL for the plans collection in each locale\n        return `https://bigbird.com/preview/plans?locale=${locale}`;\n    },\n  },\n  access: DEFAULT_ACCESS_CONTROL,\n  fields: [\n    {\n      name: 'title',\n      label: 'Title',\n      type: 'text',\n      localized: true,\n    },\n    {\n      name: 'id',\n      label: 'Custom ID',\n      type: 'text',\n    },\n    buttons,\n  ],\n  timestamps: false,\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-v\">Plans</span>: <span class=\"pl-v\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'plans'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'title'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">preview</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">doc</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> locale <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c\">// Always return the same preview URL for the plans collection in each locale</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s\">`https://bigbird.com/preview/plans?locale=<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">locale</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-c1\">DEFAULT_ACCESS_CONTROL</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'title'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Title'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">localized</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'id'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Custom ID'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">buttons</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">timestamps</span>: <span class=\"pl-c1\">false</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span></pre></div>",
        "createdAt": "2022-12-19T20:27:52Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "evelynhathaway",
        "avatar": "https://avatars.githubusercontent.com/u/38994283?u=87cba3ad2e2b4ac6fe1b26ca72f0eac8788cb645&v=4",
        "url": "https://github.com/evelynhathaway"
      },
      "body": "<p dir=\"auto\">In your above code, <code class=\"notranslate\">if (doc?.slug)</code> makes the preview button only show if there's a slug.</p>\n<p dir=\"auto\">You can write another condition or remove the condition and just return the preview URL.</p>\n<p dir=\"auto\">As an example:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export const Plans: CollectionConfig = {\n  slug: 'plans',\n  admin: {\n    useAsTitle: 'title',\n    preview: (doc, { locale }) =&gt; {\n        // Always return the same preview URL for the plans collection in each locale\n        return `https://bigbird.com/preview/plans?locale=${locale}`;\n    },\n  },\n  access: DEFAULT_ACCESS_CONTROL,\n  fields: [\n    {\n      name: 'title',\n      label: 'Title',\n      type: 'text',\n      localized: true,\n    },\n    {\n      name: 'id',\n      label: 'Custom ID',\n      type: 'text',\n    },\n    buttons,\n  ],\n  timestamps: false,\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-v\">Plans</span>: <span class=\"pl-v\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'plans'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'title'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">preview</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">doc</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> locale <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c\">// Always return the same preview URL for the plans collection in each locale</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s\">`https://bigbird.com/preview/plans?locale=<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">locale</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-c1\">DEFAULT_ACCESS_CONTROL</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'title'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Title'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">localized</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'id'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Custom ID'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">buttons</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">timestamps</span>: <span class=\"pl-c1\">false</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span></pre></div>",
      "createdAt": "2022-12-19T20:27:52Z",
      "chosenAt": "2022-12-22T18:50:42Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Admin returns 404 in production mode when `Accept` header is missing",
    "body": "<h1 dir=\"auto\">Bug Report</h1>\n\n<p dir=\"auto\">I use AWS Elastic Load Balancing and was surprised to see that my server is unhealthy, yet handles requests without a problem. Upon further investigation, I discovered that the reason for that is the absence of the <code class=\"notranslate\">Accept</code> header. I logged on the machine and:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">curl -XGET -I localhost:80/admin</code> (which has <code class=\"notranslate\">Accept: */*</code> by default) returns HTTP 200</li>\n<li><code class=\"notranslate\">curl -XGET -I localhost:80/admin -H \"Accept:\"</code> (<code class=\"notranslate\">Accept</code> is set to empty) returns HTTP 404</li>\n</ul>\n<p dir=\"auto\">This header is lacking in the raw HTTP request that the load balancer sends:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"GET /admin HTTP/1.1\nHost: 172.31.32.240\nConnection: close\nUser-Agent: ELB-HealthChecker/2.0\nAccept-Encoding: gzip, compressed\"><pre class=\"notranslate\"><code class=\"notranslate\">GET /admin HTTP/1.1\nHost: 172.31.32.240\nConnection: close\nUser-Agent: ELB-HealthChecker/2.0\nAccept-Encoding: gzip, compressed\n</code></pre></div>\n<p dir=\"auto\">…which results in a 404 and \"Severe\" state in Elastic Beanstalk.</p>\n<hr>\n<p dir=\"auto\">Then, I tested locally and found out that this only happens in production mode. In development, it returns status code 200, regardless of <code class=\"notranslate\">Accept</code>. What appears to be fixing it is the Webpack middleware. If I comment out this line:</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/payloadcms/payload/blob/a1813ca4b32dfcd8ca3604f7f03b1ba316d740e2/src/express/admin.ts#L30\">payload/src/express/admin.ts</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 30\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/payloadcms/payload/commit/a1813ca4b32dfcd8ca3604f7f03b1ba316d740e2\">a1813ca</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L30\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"30\"></td>\n          <td id=\"LC30\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-s1\">ctx</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">express</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">use</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">initWebpack</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">ctx</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">…I can get the same behavior in development mode as well.</p>\n<h2 dir=\"auto\">Steps to Reproduce</h2>\n\n<ol dir=\"auto\">\n<li>Run <code class=\"notranslate\">npm run build</code>, then <code class=\"notranslate\">npm run serve</code> to run Payload in production mode</li>\n<li><code class=\"notranslate\">curl -i localhost:3000/admin -H \"Accept:\"</code></li>\n<li>You'll see <code class=\"notranslate\">HTTP/1.1 404 Not Found</code> with the Express error <code class=\"notranslate\">Cannot GET /admin</code></li>\n</ol>\n<p dir=\"auto\">Note, however, that requesting a file from the build folder like <code class=\"notranslate\">curl -XGET -I localhost:3000/admin/styles.css -H \"Accept:\"</code> correctly returns status 200.</p>\n<h2 dir=\"auto\">Expected behavior</h2>\n<p dir=\"auto\">Requests to <code class=\"notranslate\">/admin</code> should always return status code 200.</p>\n<h2 dir=\"auto\">Other Details</h2>\n<p dir=\"auto\">Payload version: <strong>1.3.0</strong></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1714",
    "id": "1714",
    "createdAt": "2022-12-15T16:44:29Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "hdodov",
      "avatar": "https://avatars.githubusercontent.com/u/5570098?u=99fa010aba0ab1241292d2c35ba4c5c30699291b&v=4",
      "url": "https://github.com/hdodov"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Looking into this one <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/hdodov/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hdodov\">@hdodov</a>. I was able to recreate.</p>",
        "createdAt": "2022-12-19T17:29:51Z",
        "replies": null
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/hdodov/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hdodov\">@hdodov</a> — we just looked into this in-depth and I have some explanations for you as well as a potential solution.</p>\n<p dir=\"auto\">In production, we are simply leveraging <code class=\"notranslate\">express.static</code> to serve static files. The <code class=\"notranslate\">Accept</code> header is <strong><em>necessary</em></strong> to be able to consume <code class=\"notranslate\">html</code>, etc. from a server response, and being that your health check request does not specify it, Express does not return with any results - thus 404.</p>\n<p dir=\"auto\">This is not something that Payload can control, and further, <code class=\"notranslate\">express.static</code> does not have any options for how to treat the <code class=\"notranslate\">Accept</code> header.</p>\n<p dir=\"auto\">Instead, what you could do would be to point your health check to a custom route that you've opened, like <code class=\"notranslate\">/health-check</code> and have your route return a 200.</p>\n<p dir=\"auto\">Either that, or you could figure out if there is a way to modify the health check request that you are sending from Elastic Load Balancing to <em><strong>add</strong></em> a header to that request, which should be possible. Because really what you're telling Elastic to do is to hit a static file, with no Accept header, which will <strong><em>rightly</em></strong> 404, as there is no Accept header allowing <code class=\"notranslate\">html</code> response types.</p>\n<p dir=\"auto\">Does that make sense?</p>",
        "createdAt": "2022-12-19T19:03:28Z",
        "replies": [
          {
            "author": {
              "name": "hdodov",
              "avatar": "https://avatars.githubusercontent.com/u/5570098?u=99fa010aba0ab1241292d2c35ba4c5c30699291b&v=4",
              "url": "https://github.com/hdodov"
            },
            "body": "<p dir=\"auto\">Yep, adding a <code class=\"notranslate\">/health</code> route is exactly what I did. I just thought that maybe it's an issue with Payload, rather than Express.</p>",
            "createdAt": "2022-12-19T20:06:53Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/hdodov/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hdodov\">@hdodov</a> — we just looked into this in-depth and I have some explanations for you as well as a potential solution.</p>\n<p dir=\"auto\">In production, we are simply leveraging <code class=\"notranslate\">express.static</code> to serve static files. The <code class=\"notranslate\">Accept</code> header is <strong><em>necessary</em></strong> to be able to consume <code class=\"notranslate\">html</code>, etc. from a server response, and being that your health check request does not specify it, Express does not return with any results - thus 404.</p>\n<p dir=\"auto\">This is not something that Payload can control, and further, <code class=\"notranslate\">express.static</code> does not have any options for how to treat the <code class=\"notranslate\">Accept</code> header.</p>\n<p dir=\"auto\">Instead, what you could do would be to point your health check to a custom route that you've opened, like <code class=\"notranslate\">/health-check</code> and have your route return a 200.</p>\n<p dir=\"auto\">Either that, or you could figure out if there is a way to modify the health check request that you are sending from Elastic Load Balancing to <em><strong>add</strong></em> a header to that request, which should be possible. Because really what you're telling Elastic to do is to hit a static file, with no Accept header, which will <strong><em>rightly</em></strong> 404, as there is no Accept header allowing <code class=\"notranslate\">html</code> response types.</p>\n<p dir=\"auto\">Does that make sense?</p>",
      "createdAt": "2022-12-19T19:03:28Z",
      "chosenAt": "2022-12-19T20:06:55Z",
      "chosenBy": "hdodov",
      "replies": [
        {
          "author": {
            "name": "hdodov",
            "avatar": "https://avatars.githubusercontent.com/u/5570098?u=99fa010aba0ab1241292d2c35ba4c5c30699291b&v=4",
            "url": "https://github.com/hdodov"
          },
          "body": "<p dir=\"auto\">Yep, adding a <code class=\"notranslate\">/health</code> route is exactly what I did. I just thought that maybe it's an issue with Payload, rather than Express.</p>",
          "createdAt": "2022-12-19T20:06:53Z"
        }
      ]
    }
  },
  {
    "title": "reference an entire collection (relationship to all docs)",
    "body": "<p dir=\"auto\">I don't understand how I can reference an entire collection from within a block.</p>\n<p dir=\"auto\">I would like to build a block that enables the user to reference a collection that will be included in the block.<br>\nFor example: The user wants to build a \"Shop\" page. She includes some layout blocks. Now she wants to include all docs from the \"Products\" collection into the block, so that they're going to show up on the \"Shop\" page at the place she selected within the overall layout.</p>\n<p dir=\"auto\">What I've tried:</p>\n<ol dir=\"auto\">\n<li>Use a \"relationship\" field. Problem: I can't select an entire collection.</li>\n<li>Use a \"select\" field which has options for the available collections. Problem: I can query for the collection data but I don't know where to save it.</li>\n</ol>\n<p dir=\"auto\">This question follows <a aria-label=\"Discussion #1516\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4604828\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1516\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1516/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/1516\">#1516</a> in my process to understand the architecture of payload (how it is meant to be used). Thank you.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1651",
    "id": "1651",
    "createdAt": "2022-12-12T19:17:19Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "unonweb",
      "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
      "url": "https://github.com/unonweb"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/unonweb/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/unonweb\">@unonweb</a> —</p>\n<p dir=\"auto\">I would go with your second option but I think you're thinking about this a bit incorrectly.</p>\n<blockquote>\n<p dir=\"auto\">I can query for the collection data but I don't know where to save it.</p>\n</blockquote>\n<p dir=\"auto\">The collection data <em><strong>is saved in the separate collection</strong></em>. I think you're trying to duplicate it or similar, which would not be a good idea.</p>\n<p dir=\"auto\">Here's a use case that we come up against a lot.</p>\n<p dir=\"auto\">Say you're building a Next site on a layout-builder mentality, and you have a few blocks. One is <code class=\"notranslate\">Archive</code> or similar that allows a user to choose a collection to render an archive for, and then the frontend component should output the most recent 10 posts in the collection that was selected.</p>\n<p dir=\"auto\">The way we'd do this would be either one of two ways:</p>\n<ol dir=\"auto\">\n<li>in <code class=\"notranslate\">getStaticProps</code> or wherever, check to see if you have any <code class=\"notranslate\">Archive</code> blocks and then automatically make fetches to the <code class=\"notranslate\">/api/whatever-collection</code> endpoint, and then send back the results from <code class=\"notranslate\">getStaticProps</code>.</li>\n<li>Just have the frontend React component go and fetch the docs that it should. This is not ideal because the frontend will have to make another fetch, and you'll need to have some type of \"loading\" state or similar, but it could work just fine.</li>\n</ol>\n<p dir=\"auto\">In either case, your block itself would only store <code class=\"notranslate\">blockType: 'archive'</code> and then <code class=\"notranslate\">collection: 'posts'</code> or whatever. It would not store any data.</p>",
        "createdAt": "2022-12-12T20:52:25Z",
        "replies": [
          {
            "author": {
              "name": "unonweb",
              "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
              "url": "https://github.com/unonweb"
            },
            "body": "<p dir=\"auto\">In my case I want the fronted to be complety independent of my PayloadCMS. That's why everything's exported as <strong>json data</strong> after change.<br>\nI would like to give my users the possibility to include a collection when building a page.<br>\nIdeally they would be able to select like \"On this page I want to include all products that are cheaper than 50€\" or \"On that page I want to include all blog posts that are tagged with 'traveling'\".<br>\nSo in the frontend I would have the corresponding data as json for the corresponding page.</p>\n<p dir=\"auto\">I can use a <code class=\"notranslate\">select</code> field and further fields that enable the user to specify the desired data.<br>\nI can query this data in a <code class=\"notranslate\">afterRead</code> hook and export it as json.<br>\nBut I don't know how to give the user feedback in the admin UI showing which docs are included.<br>\nThe only field related to this is <code class=\"notranslate\">relationship</code> and it would work great if I could reference an entire collection with it.<br>\nIt would also work if I could do something like:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const relationField = [\n\t{\n\t\ttype: 'select',\n\t\tname: 'selectedCollection',\n\t\toptions: ['shop-products', 'shop-categories'],\n\t},\n\t{\n\n\t\ttype: 'relationship',\n\t\trelationTo: (args) =&gt; args.siblingData.selectedCollection, // doesn't work\n\t\thooks: {\n\t\t\tafterRead: async (args) =&gt; {\n        // populate relationship with entire collection\n\t\t\t\tconst collection = args?.siblingData?.selectedCollection // works\n\t\t\t\tconst result = await payload.find({\n\t\t\t\t\tcollection: collection,\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t}\n\t\t}\n\t}\n]\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">relationField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span>\n\t<span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'select'</span><span class=\"pl-kos\">,</span>\n\t\t<span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'selectedCollection'</span><span class=\"pl-kos\">,</span>\n\t\t<span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'shop-products'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'shop-categories'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-kos\">{</span>\n\n\t\t<span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n\t\t<span class=\"pl-en\">relationTo</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">siblingData</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">selectedCollection</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// doesn't work</span>\n\t\t<span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n\t\t\t<span class=\"pl-en\">afterRead</span>: <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c\">// populate relationship with entire collection</span>\n\t\t\t\t<span class=\"pl-k\">const</span> <span class=\"pl-s1\">collection</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">siblingData</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">selectedCollection</span> <span class=\"pl-c\">// works</span>\n\t\t\t\t<span class=\"pl-k\">const</span> <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n\t\t\t\t\t<span class=\"pl-c1\">collection</span>: <span class=\"pl-s1\">collection</span><span class=\"pl-kos\">,</span>\n\t\t\t\t<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\t\t\t\t<span class=\"pl-k\">return</span> <span class=\"pl-s1\">result</span>\n\t\t\t<span class=\"pl-kos\">}</span>\n\t\t<span class=\"pl-kos\">}</span>\n\t<span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">]</span></pre></div>\n<p dir=\"auto\">Well, then I'd still have the issue that the admin UI requires that the relationship field contains just an array of IDs.<br>\nDon't know how to solve this.<br>\nCustom UI field?</p>",
            "createdAt": "2022-12-16T14:50:02Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/unonweb/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/unonweb\">@unonweb</a> —</p>\n<p dir=\"auto\">I would go with your second option but I think you're thinking about this a bit incorrectly.</p>\n<blockquote>\n<p dir=\"auto\">I can query for the collection data but I don't know where to save it.</p>\n</blockquote>\n<p dir=\"auto\">The collection data <em><strong>is saved in the separate collection</strong></em>. I think you're trying to duplicate it or similar, which would not be a good idea.</p>\n<p dir=\"auto\">Here's a use case that we come up against a lot.</p>\n<p dir=\"auto\">Say you're building a Next site on a layout-builder mentality, and you have a few blocks. One is <code class=\"notranslate\">Archive</code> or similar that allows a user to choose a collection to render an archive for, and then the frontend component should output the most recent 10 posts in the collection that was selected.</p>\n<p dir=\"auto\">The way we'd do this would be either one of two ways:</p>\n<ol dir=\"auto\">\n<li>in <code class=\"notranslate\">getStaticProps</code> or wherever, check to see if you have any <code class=\"notranslate\">Archive</code> blocks and then automatically make fetches to the <code class=\"notranslate\">/api/whatever-collection</code> endpoint, and then send back the results from <code class=\"notranslate\">getStaticProps</code>.</li>\n<li>Just have the frontend React component go and fetch the docs that it should. This is not ideal because the frontend will have to make another fetch, and you'll need to have some type of \"loading\" state or similar, but it could work just fine.</li>\n</ol>\n<p dir=\"auto\">In either case, your block itself would only store <code class=\"notranslate\">blockType: 'archive'</code> and then <code class=\"notranslate\">collection: 'posts'</code> or whatever. It would not store any data.</p>",
      "createdAt": "2022-12-12T20:52:25Z",
      "chosenAt": "2022-12-14T16:37:18Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "unonweb",
            "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
            "url": "https://github.com/unonweb"
          },
          "body": "<p dir=\"auto\">In my case I want the fronted to be complety independent of my PayloadCMS. That's why everything's exported as <strong>json data</strong> after change.<br>\nI would like to give my users the possibility to include a collection when building a page.<br>\nIdeally they would be able to select like \"On this page I want to include all products that are cheaper than 50€\" or \"On that page I want to include all blog posts that are tagged with 'traveling'\".<br>\nSo in the frontend I would have the corresponding data as json for the corresponding page.</p>\n<p dir=\"auto\">I can use a <code class=\"notranslate\">select</code> field and further fields that enable the user to specify the desired data.<br>\nI can query this data in a <code class=\"notranslate\">afterRead</code> hook and export it as json.<br>\nBut I don't know how to give the user feedback in the admin UI showing which docs are included.<br>\nThe only field related to this is <code class=\"notranslate\">relationship</code> and it would work great if I could reference an entire collection with it.<br>\nIt would also work if I could do something like:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const relationField = [\n\t{\n\t\ttype: 'select',\n\t\tname: 'selectedCollection',\n\t\toptions: ['shop-products', 'shop-categories'],\n\t},\n\t{\n\n\t\ttype: 'relationship',\n\t\trelationTo: (args) =&gt; args.siblingData.selectedCollection, // doesn't work\n\t\thooks: {\n\t\t\tafterRead: async (args) =&gt; {\n        // populate relationship with entire collection\n\t\t\t\tconst collection = args?.siblingData?.selectedCollection // works\n\t\t\t\tconst result = await payload.find({\n\t\t\t\t\tcollection: collection,\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t}\n\t\t}\n\t}\n]\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">relationField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span>\n\t<span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'select'</span><span class=\"pl-kos\">,</span>\n\t\t<span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'selectedCollection'</span><span class=\"pl-kos\">,</span>\n\t\t<span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'shop-products'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'shop-categories'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-kos\">{</span>\n\n\t\t<span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n\t\t<span class=\"pl-en\">relationTo</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">siblingData</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">selectedCollection</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// doesn't work</span>\n\t\t<span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n\t\t\t<span class=\"pl-en\">afterRead</span>: <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c\">// populate relationship with entire collection</span>\n\t\t\t\t<span class=\"pl-k\">const</span> <span class=\"pl-s1\">collection</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">siblingData</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">selectedCollection</span> <span class=\"pl-c\">// works</span>\n\t\t\t\t<span class=\"pl-k\">const</span> <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n\t\t\t\t\t<span class=\"pl-c1\">collection</span>: <span class=\"pl-s1\">collection</span><span class=\"pl-kos\">,</span>\n\t\t\t\t<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\t\t\t\t<span class=\"pl-k\">return</span> <span class=\"pl-s1\">result</span>\n\t\t\t<span class=\"pl-kos\">}</span>\n\t\t<span class=\"pl-kos\">}</span>\n\t<span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">]</span></pre></div>\n<p dir=\"auto\">Well, then I'd still have the issue that the admin UI requires that the relationship field contains just an array of IDs.<br>\nDon't know how to solve this.<br>\nCustom UI field?</p>",
          "createdAt": "2022-12-16T14:50:02Z"
        }
      ]
    }
  },
  {
    "title": "Any way to get access to the local API within validation functions?",
    "body": "<p dir=\"auto\">Pretty much the title. I'd like to check the file extension of an uploaded media. The upload isn't directly on the collection but rather stored in a central library of image assets and the value that gets passed into <code class=\"notranslate\">validate()</code> is a string.</p>\n<p dir=\"auto\">However, I've tried a few different ways of importing the payload local API and I can't seem to get an instance of it. As per the docs I'm importing it as late as possible, not sure why it's not returning anything</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"      validate: async (value: string): Promise&lt;string | boolean&gt; =&gt; {\n        const payload = (await import('payload')).default\n\n        console.log(payload.findByID({\n          collection: 'media-image',\n          id: value\n        }))\n\n        // :( -- payload.findByID is not a function\n\n        console.log(value, payload)\n        return true\n      }\"><pre class=\"notranslate\"><code class=\"notranslate\">      validate: async (value: string): Promise&lt;string | boolean&gt; =&gt; {\n        const payload = (await import('payload')).default\n\n        console.log(payload.findByID({\n          collection: 'media-image',\n          id: value\n        }))\n\n        // :( -- payload.findByID is not a function\n\n        console.log(value, payload)\n        return true\n      }\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/68",
    "id": "68",
    "createdAt": "2021-02-10T21:59:38Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "richardvanbergen",
      "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
      "url": "https://github.com/richardvanbergen"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey Richard,</p>\n<p dir=\"auto\">So here's the complicated part about this: validation functions are run in both the Admin panel  <em><strong>and</strong></em> the server, by design. That means there's no such thing as the Local API within a validator function. That said, could you use <code class=\"notranslate\">fetch</code> to access your REST or GraphQL API?</p>\n<p dir=\"auto\">Payload uses <code class=\"notranslate\">isomorphic-fetch</code> in the background so a simple <code class=\"notranslate\">fetch</code> call will be 100% supported in both browser and server.</p>\n<p dir=\"auto\">Looking forward to hearing your thoughts!</p>",
        "createdAt": "2021-02-10T22:23:15Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Ah - as a followup, and I just thought about this now, is that through a future feature we could potentially add an additional parameter to <code class=\"notranslate\">validate</code> functions that denotes whether it's being run on the server or browser, and if on the server, we could pass the <code class=\"notranslate\">req</code> that includes Payload and its local APIs.</p>\n<p dir=\"auto\">Would this be worthwhile to you? It breaks away from the universal aspect of validation functions but hey—could be valuable.</p>",
            "createdAt": "2021-02-10T22:25:18Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Alternative to passing server or browser in a param, would it be better to add a <code class=\"notranslate\">serverValidate</code> function to the collection definition that can be used in addition to <code class=\"notranslate\">validate</code>?<br>\nThen server side, Payload can call <code class=\"notranslate\">validate</code> and <code class=\"notranslate\">serverValidate</code> when they are both defined.</p>",
            "createdAt": "2021-02-12T15:28:25Z"
          },
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">I think <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> is correct that would be the preferable solution. I think it's more explicit.</p>\n<p dir=\"auto\">Another alternative might be to somehow add a depth parameter to fetch the related data for you? Not sure if that could work on the admin though.</p>\n<p dir=\"auto\">I'll use fetch for now!</p>",
            "createdAt": "2021-02-13T01:55:44Z"
          }
        ]
      },
      {
        "author": {
          "name": "unonweb",
          "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
          "url": "https://github.com/unonweb"
        },
        "body": "<blockquote>\n<p dir=\"auto\">validation functions are run in both the Admin panel <em><strong>and</strong></em> the server, by design</p>\n</blockquote>\n<p dir=\"auto\">...which means that you <em>can</em> run local API queries - you just have to take care that it's NOT happening in the browser:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"validate: async (value, {data, id}) =&gt; {\n   if (payload.findByID) {\n   // server validation\n      const doc = await payload.findByID({\n         collection: collectionSlug,\n         id: id\n      })\n      return doc.title // example\n   } else {\n   // browser validation\n   }\n}\"><pre class=\"notranslate\">validate: <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>data<span class=\"pl-kos\">,</span> id<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n   <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">findByID</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n   <span class=\"pl-c\">// server validation</span>\n      <span class=\"pl-k\">const</span> <span class=\"pl-s1\">doc</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">findByID</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n         <span class=\"pl-c1\">collection</span>: <span class=\"pl-s1\">collectionSlug</span><span class=\"pl-kos\">,</span>\n         <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">id</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">title</span> <span class=\"pl-c\">// example</span>\n   <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>\n   <span class=\"pl-c\">// browser validation</span>\n   <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>",
        "createdAt": "2022-12-16T12:24:18Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey Richard,</p>\n<p dir=\"auto\">So here's the complicated part about this: validation functions are run in both the Admin panel  <em><strong>and</strong></em> the server, by design. That means there's no such thing as the Local API within a validator function. That said, could you use <code class=\"notranslate\">fetch</code> to access your REST or GraphQL API?</p>\n<p dir=\"auto\">Payload uses <code class=\"notranslate\">isomorphic-fetch</code> in the background so a simple <code class=\"notranslate\">fetch</code> call will be 100% supported in both browser and server.</p>\n<p dir=\"auto\">Looking forward to hearing your thoughts!</p>",
      "createdAt": "2021-02-10T22:23:15Z",
      "chosenAt": "2022-12-09T16:41:00Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Ah - as a followup, and I just thought about this now, is that through a future feature we could potentially add an additional parameter to <code class=\"notranslate\">validate</code> functions that denotes whether it's being run on the server or browser, and if on the server, we could pass the <code class=\"notranslate\">req</code> that includes Payload and its local APIs.</p>\n<p dir=\"auto\">Would this be worthwhile to you? It breaks away from the universal aspect of validation functions but hey—could be valuable.</p>",
          "createdAt": "2021-02-10T22:25:18Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Alternative to passing server or browser in a param, would it be better to add a <code class=\"notranslate\">serverValidate</code> function to the collection definition that can be used in addition to <code class=\"notranslate\">validate</code>?<br>\nThen server side, Payload can call <code class=\"notranslate\">validate</code> and <code class=\"notranslate\">serverValidate</code> when they are both defined.</p>",
          "createdAt": "2021-02-12T15:28:25Z"
        },
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<p dir=\"auto\">I think <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> is correct that would be the preferable solution. I think it's more explicit.</p>\n<p dir=\"auto\">Another alternative might be to somehow add a depth parameter to fetch the related data for you? Not sure if that could work on the admin though.</p>\n<p dir=\"auto\">I'll use fetch for now!</p>",
          "createdAt": "2021-02-13T01:55:44Z"
        }
      ]
    }
  },
  {
    "title": "[Bug?] Initial draft document still appears, even if setting `draft: false`",
    "body": "<p dir=\"auto\">Hey,</p>\n<p dir=\"auto\">I have been using the draft functionality and it works okay for most cases. For example, when I edit a published document and save it as draft, <code class=\"notranslate\">draft:true</code> returns the new version, while <code class=\"notranslate\">draft: false</code> returns the old one.</p>\n<p dir=\"auto\">The only issue I have is when creating an initial document. If I save it as a draft, it still appears in the GraphQL results, even though parameter draft is set to false and <code class=\"notranslate\">_status</code> cleary equals draft:</p>\n<p dir=\"auto\">Query:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n{      \nPosts(draft: false) {\n      ...\n        }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">\n{      \nPosts(draft: false) {\n      ...\n        }\n}\n</code></pre></div>\n<p dir=\"auto\">Data:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n  &quot;data&quot;: {\n    &quot;Posts&quot;: {\n      &quot;docs&quot;: [\n        {\n          &quot;slug&quot;: &quot;draftpost&quot;,\n          &quot;id&quot;: &quot;636ce5b17d7132a06587cc6f&quot;,\n          &quot;title&quot;: &quot;DRAFT POST&quot;,\n          &quot;_status&quot;: &quot;draft&quot;,\n          &quot;tags&quot;: [],\n          &quot;summary&quot;: null,\n          &quot;author&quot;: null,\n          &quot;publishedDate&quot;: null,\n          &quot;content&quot;: null,\n          &quot;meta&quot;: {\n            &quot;title&quot;: null,\n            &quot;description&quot;: null\n          }\n        },\n...\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n  \"data\": {\n    \"Posts\": {\n      \"docs\": [\n        {\n          \"slug\": \"draftpost\",\n          \"id\": \"636ce5b17d7132a06587cc6f\",\n          \"title\": \"DRAFT POST\",\n          \"_status\": \"draft\",\n          \"tags\": [],\n          \"summary\": null,\n          \"author\": null,\n          \"publishedDate\": null,\n          \"content\": null,\n          \"meta\": {\n            \"title\": null,\n            \"description\": null\n          }\n        },\n...\n</code></pre></div>\n<p dir=\"auto\">payload setting:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/92296835/201085105-f300f1ec-3922-4e10-948c-5a372c287b6c.png\"><img src=\"https://user-images.githubusercontent.com/92296835/201085105-f300f1ec-3922-4e10-948c-5a372c287b6c.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Expected behaviour:<br>\n<code class=\"notranslate\">draft: false</code> excludes all documents with <code class=\"notranslate\">_status: draft</code></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1364",
    "id": "1364",
    "createdAt": "2022-11-10T11:59:23Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "adam-mrozik",
      "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
      "url": "https://github.com/adam-mrozik"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">You need to write access control to restrict who can see documents with <code class=\"notranslate\">status: '_draft'</code>.</p>\n<p dir=\"auto\">The <code class=\"notranslate\">?draft=true</code> REST query parameter is only responsible for <em><strong>replacing documents' contents with their newest draft content</strong></em> and does not have any restrictions around who can see the documents returned vs. who can't. That's a job for access control.</p>\n<p dir=\"auto\">Take a look at the docs here:<br>\n<a href=\"https://payloadcms.com/docs/versions/drafts#controlling-who-can-see-collection-drafts\" rel=\"nofollow\">https://payloadcms.com/docs/versions/drafts#controlling-who-can-see-collection-drafts</a></p>",
        "createdAt": "2022-12-15T16:47:26Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">You need to write access control to restrict who can see documents with <code class=\"notranslate\">status: '_draft'</code>.</p>\n<p dir=\"auto\">The <code class=\"notranslate\">?draft=true</code> REST query parameter is only responsible for <em><strong>replacing documents' contents with their newest draft content</strong></em> and does not have any restrictions around who can see the documents returned vs. who can't. That's a job for access control.</p>\n<p dir=\"auto\">Take a look at the docs here:<br>\n<a href=\"https://payloadcms.com/docs/versions/drafts#controlling-who-can-see-collection-drafts\" rel=\"nofollow\">https://payloadcms.com/docs/versions/drafts#controlling-who-can-see-collection-drafts</a></p>",
      "createdAt": "2022-12-15T16:47:26Z",
      "chosenAt": "2022-12-21T23:03:34Z",
      "chosenBy": "adam-mrozik",
      "replies": null
    }
  },
  {
    "title": "Migration Docs ?",
    "body": "<p dir=\"auto\">First: Amazing Work on payload! It's the best code-first customizable CMS solution I have found yet. (I was in the process to build my own on top of sveltekit, but it's great that I found this!).</p>\n<p dir=\"auto\">That everything is code, DB definitions are well structured and especially having a single source of truth, plus open-source and explainable, is exactly what I was looking for. Also terrific job on the minimalistic yet straight to the point docs!</p>\n<p dir=\"auto\">After a quick browse, it seems like almost everything is there, but <strong>Migration</strong>:<br>\nHow are migrations handled? This seems crucial, but I found nothing in the guide about it.<br>\nFor example, what happens if I start out with a db structure/collection \"Items\" with <code class=\"notranslate\">description</code> fields, then add the localize property to the <code class=\"notranslate\">description</code> field? Does payload handle migrations <code class=\"notranslate\">automagically</code>?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1416",
    "id": "1416",
    "createdAt": "2022-11-15T16:40:31Z",
    "upvotes": 3,
    "commentTotal": 2,
    "author": {
      "name": "MentalGear",
      "avatar": "https://avatars.githubusercontent.com/u/2837147?v=4",
      "url": "https://github.com/MentalGear"
    },
    "comments": [
      {
        "author": {
          "name": "MattRvt",
          "avatar": "https://avatars.githubusercontent.com/u/52105158?u=e7eac1c6b36d6df11e0b816084bf6f89feb1c9c1&v=4",
          "url": "https://github.com/MattRvt"
        },
        "body": "<p dir=\"auto\">For anyone reading this, consider having a look to this topic: <a aria-label=\"Discussion #625\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4116941\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/625\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/625/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/625\">#625</a></p>\n<p dir=\"auto\">The case you describe does not seem to be handled, as the answer is “it depends”, or actually, Payload admin is in sync with collection .ts file and DB is not updated until admin overwrite it's content. So it goes like that.</p>\n<ul dir=\"auto\">\n<li>if you create a field =&gt; field is present in admin but keys is not added in the DB until you add a value to the field.</li>\n<li>If you rename a field =&gt; the old one is not deleted in DB but removed from admin, and you get a new field with the new name</li>\n<li>if you change field type or localize =&gt; admin will update but you will still have the old values until overwritten.</li>\n<li>if you delete a field =&gt; field is removed from admin and still present in DB</li>\n</ul>\n<p dir=\"auto\">same goes for collection</p>",
        "createdAt": "2022-11-23T15:56:30Z",
        "replies": null
      },
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Searching the discussions here you will find a ton of conversations about migrations, like <a aria-label=\"Discussion #857\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4268541\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/857\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/857/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/857\">#857</a>. It is a high area of demand and very important to get right.</p>\n<p dir=\"auto\">I don't have anything to add that hasn't already been said, except that we did move up our roadmap item for alternate <a aria-label=\"Discussion #287\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3513774\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/287\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/287/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/287\">#287</a> of which migration support is a part of.</p>",
        "createdAt": "2022-12-14T16:46:08Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "MattRvt",
        "avatar": "https://avatars.githubusercontent.com/u/52105158?u=e7eac1c6b36d6df11e0b816084bf6f89feb1c9c1&v=4",
        "url": "https://github.com/MattRvt"
      },
      "body": "<p dir=\"auto\">For anyone reading this, consider having a look to this topic: <a aria-label=\"Discussion #625\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4116941\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/625\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/625/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/625\">#625</a></p>\n<p dir=\"auto\">The case you describe does not seem to be handled, as the answer is “it depends”, or actually, Payload admin is in sync with collection .ts file and DB is not updated until admin overwrite it's content. So it goes like that.</p>\n<ul dir=\"auto\">\n<li>if you create a field =&gt; field is present in admin but keys is not added in the DB until you add a value to the field.</li>\n<li>If you rename a field =&gt; the old one is not deleted in DB but removed from admin, and you get a new field with the new name</li>\n<li>if you change field type or localize =&gt; admin will update but you will still have the old values until overwritten.</li>\n<li>if you delete a field =&gt; field is removed from admin and still present in DB</li>\n</ul>\n<p dir=\"auto\">same goes for collection</p>",
      "createdAt": "2022-11-23T15:56:30Z",
      "chosenAt": "2022-12-22T18:49:11Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "collection or global (array field vs collection?)",
    "body": "<p dir=\"auto\">Hey,</p>\n<p dir=\"auto\">talking about sub-pages:  If you need to combine page-wide data (eg meta description, featured image) with repeating content like posts - what's your approach?</p>\n<p dir=\"auto\">a) collection + global: Use a collection for the repeating content (posts) and a global for the page-wide content<br>\nb) global + array field: Use a global that mimics the page structure including an array for the repeating content</p>\n<p dir=\"auto\">My thoughts:</p>\n<p dir=\"auto\">a) probably offers better performance in the admin UI, offers the list view which is more suitable for large arrays of data<br>\nb) offers a clearer UI for the customer (all page data is found in one place, furthermore in the order how it's shown in the frontend)</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1516",
    "id": "1516",
    "createdAt": "2022-11-27T17:30:14Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "unonweb",
      "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
      "url": "https://github.com/unonweb"
    },
    "comments": [
      {
        "author": {
          "name": "unonweb",
          "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
          "url": "https://github.com/unonweb"
        },
        "body": "<p dir=\"auto\">I've found another disadvantage of b):</p>\n<ul dir=\"auto\">\n<li>no timestamps (no createdAt and updatedAt properties)</li>\n</ul>",
        "createdAt": "2022-11-28T11:03:12Z",
        "replies": null
      },
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\">Maybe I am misunderstanding your question - but what we normally do is create a group of meta fields and add them to a collection, and on every collection the meta data is unique so it needs to be filled out on a per document basis.</p>\n<p dir=\"auto\">We have built a plugin for managing meta data as well and you can read more about it <a href=\"https://github.com/payloadcms/plugin-seo\">here</a>.</p>\n<p dir=\"auto\">Let me know if I am missing something!</p>",
        "createdAt": "2022-11-28T14:24:28Z",
        "replies": [
          {
            "author": {
              "name": "unonweb",
              "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
              "url": "https://github.com/unonweb"
            },
            "body": "<p dir=\"auto\">Thank you for your reply.</p>\n<blockquote>\n<p dir=\"auto\">[...] create a group of meta fields and add them to a collection [...] on every collection the meta data is unique so it needs to be filled out on a per document basis.</p>\n</blockquote>\n<p dir=\"auto\">Well, I don't want one document to be rendered as one page.<br>\nI want all - let's say - blog posts on one page, all publications on one page,...<br>\nFor these pages I need meta data, a featured image, headings.</p>\n<p dir=\"auto\">Before I had it organized using a collection (containg posts) plus a global (containg the page wide data).<br>\nNow I organize it putting everything in a global using an array for the blog posts.<br>\nIt works fine but I was wondering how other people do it and what the advantages and disadvantages of either approach are.</p>",
            "createdAt": "2022-12-01T08:23:03Z"
          },
          {
            "author": {
              "name": "JarrodMFlesch",
              "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
              "url": "https://github.com/JarrodMFlesch"
            },
            "body": "<p dir=\"auto\">Couldn't you make a pages collection, create a page, select (relationship field) the docs from the other collection, then set metadata on the <em>page</em>?</p>\n<p dir=\"auto\">We normally create pages with <code class=\"notranslate\">blocks</code> and make a block for what you are describing. You could create a block that lets you pick specific docs from other collections (using a relationship field). You could also adjust how your block works and allow for users to check a check box i.e. \"latest\", and then you could use a before read to populate the field dynamically.</p>\n<p dir=\"auto\">This is the approach I would recommend, storing meta inside a global feels odd, personally.</p>",
            "createdAt": "2022-12-01T12:52:24Z"
          },
          {
            "author": {
              "name": "unonweb",
              "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
              "url": "https://github.com/unonweb"
            },
            "body": "<p dir=\"auto\">Thank you Jarrod, you've corrected my way of using Payload at the right time.</p>",
            "createdAt": "2022-12-12T08:30:50Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "JarrodMFlesch",
        "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
        "url": "https://github.com/JarrodMFlesch"
      },
      "body": "<p dir=\"auto\">Maybe I am misunderstanding your question - but what we normally do is create a group of meta fields and add them to a collection, and on every collection the meta data is unique so it needs to be filled out on a per document basis.</p>\n<p dir=\"auto\">We have built a plugin for managing meta data as well and you can read more about it <a href=\"https://github.com/payloadcms/plugin-seo\">here</a>.</p>\n<p dir=\"auto\">Let me know if I am missing something!</p>",
      "createdAt": "2022-11-28T14:24:28Z",
      "chosenAt": "2022-12-12T08:31:00Z",
      "chosenBy": "unonweb",
      "replies": [
        {
          "author": {
            "name": "unonweb",
            "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
            "url": "https://github.com/unonweb"
          },
          "body": "<p dir=\"auto\">Thank you for your reply.</p>\n<blockquote>\n<p dir=\"auto\">[...] create a group of meta fields and add them to a collection [...] on every collection the meta data is unique so it needs to be filled out on a per document basis.</p>\n</blockquote>\n<p dir=\"auto\">Well, I don't want one document to be rendered as one page.<br>\nI want all - let's say - blog posts on one page, all publications on one page,...<br>\nFor these pages I need meta data, a featured image, headings.</p>\n<p dir=\"auto\">Before I had it organized using a collection (containg posts) plus a global (containg the page wide data).<br>\nNow I organize it putting everything in a global using an array for the blog posts.<br>\nIt works fine but I was wondering how other people do it and what the advantages and disadvantages of either approach are.</p>",
          "createdAt": "2022-12-01T08:23:03Z"
        },
        {
          "author": {
            "name": "JarrodMFlesch",
            "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
            "url": "https://github.com/JarrodMFlesch"
          },
          "body": "<p dir=\"auto\">Couldn't you make a pages collection, create a page, select (relationship field) the docs from the other collection, then set metadata on the <em>page</em>?</p>\n<p dir=\"auto\">We normally create pages with <code class=\"notranslate\">blocks</code> and make a block for what you are describing. You could create a block that lets you pick specific docs from other collections (using a relationship field). You could also adjust how your block works and allow for users to check a check box i.e. \"latest\", and then you could use a before read to populate the field dynamically.</p>\n<p dir=\"auto\">This is the approach I would recommend, storing meta inside a global feels odd, personally.</p>",
          "createdAt": "2022-12-01T12:52:24Z"
        },
        {
          "author": {
            "name": "unonweb",
            "avatar": "https://avatars.githubusercontent.com/u/79059627?v=4",
            "url": "https://github.com/unonweb"
          },
          "body": "<p dir=\"auto\">Thank you Jarrod, you've corrected my way of using Payload at the right time.</p>",
          "createdAt": "2022-12-12T08:30:50Z"
        }
      ]
    }
  },
  {
    "title": "Deploy Cloudflare Workers",
    "body": "<p dir=\"auto\">Hey there! I wonder is that possible to deploy Cloudflare Workers?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1525",
    "id": "1525",
    "createdAt": "2022-11-28T21:06:24Z",
    "upvotes": 3,
    "commentTotal": 1,
    "author": {
      "name": "yulafezmesi",
      "avatar": "https://avatars.githubusercontent.com/u/45617686?u=2ceab8fc9d55a5947b964c076a0ac86e57e86cc6&v=4",
      "url": "https://github.com/yulafezmesi"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">This is definitely something we're keeping an eye on. This is not possible currently - but we've abstracted our code in a way that running Payload in a serverless fashion should be doable in the future.</p>",
        "createdAt": "2022-12-09T16:42:43Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">This is definitely something we're keeping an eye on. This is not possible currently - but we've abstracted our code in a way that running Payload in a serverless fashion should be doable in the future.</p>",
      "createdAt": "2022-12-09T16:42:43Z",
      "chosenAt": "2022-12-09T16:42:46Z",
      "chosenBy": "denolfe",
      "replies": null
    }
  },
  {
    "title": "Trouble deploying to DO’s app platform",
    "body": "<p dir=\"auto\">The error that I'm getting is during the deployment phase and reads \"Deploy Error: Health Checks\".</p>\n<p dir=\"auto\">Some details:</p>\n<ul dir=\"auto\">\n<li>I'm attempting to launch the NextJS Custom Server Boilerplate <a href=\"https://github.com/payloadcms/nextjs-custom-server\">https://github.com/payloadcms/nextjs-custom-server</a></li>\n<li>I'm letting DO use their default node Buildpack, no Dockerfile.</li>\n<li>I bought a fresh MongoDB cluster which seems to connect fine.</li>\n<li>I have no issues in my local dev environment.</li>\n<li>The build succeeds and I only get the error at the end of deployment after yarn serve says it's connected to the DB (and essentially finished)</li>\n</ul>\n<p dir=\"auto\">I'm assuming it's how I have my env vars set. Specifically NEXT_PUBLIC_SERVER_URL and PAYLOAD_PUBLIC_SERVER_URL, which I've tried every imaginable combination of things. I've tried writing a Dockerfile for it, but haven't had much luck with that either.</p>\n<p dir=\"auto\">I'm sure I'm doing something very dumb here.</p>\n<p dir=\"auto\">Any help would be extremely appreciated <g-emoji class=\"g-emoji\" alias=\"pray\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png\">🙏</g-emoji></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1597",
    "id": "1597",
    "createdAt": "2022-12-05T21:18:05Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "samtietjen",
      "avatar": "https://avatars.githubusercontent.com/u/4971280?u=9ff035a29d294e47b3109f00e6a9eec46f32fa8c&v=4",
      "url": "https://github.com/samtietjen"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Typically, any platform's health check would be pinging the application to see if it received a good HTTP response. If it is a good response, it would be considered healthy.</p>\n<p dir=\"auto\">It sounds like DO's health checks are failing, so it is likely trying to restart your application. I'd check out their health check documentation here to see how it's configured. It looks like it checks on port 8080 as default - it should match your application port.</p>\n<p dir=\"auto\">These links look relevant:</p>\n<p dir=\"auto\"><a href=\"https://docs.digitalocean.com/glossary/health-check/\" rel=\"nofollow\">https://docs.digitalocean.com/glossary/health-check/</a><br>\n<a href=\"https://docs.digitalocean.com/support/my-app-deployment-failed-because-of-a-health-check/\" rel=\"nofollow\">https://docs.digitalocean.com/support/my-app-deployment-failed-because-of-a-health-check/</a></p>",
        "createdAt": "2022-12-06T01:19:23Z",
        "replies": [
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">You can customize the http health check endpoint in DO. It is common to a route to your express app for your check. Here is an eample of a server that adds a check on GET <code class=\"notranslate\">/health</code>:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// server.ts\nimport express from 'express';\nimport payload from 'payload';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst server = express();\n\npayload.init({\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGO_URL,\n  express: server,\n});\n\n// health check\nserver.get('/health', (req, res) =&gt; {\n  res.send('ok');\n});\n\nserver.listen(process.env.PORT, async () =&gt; {\n  console.log(`Server listening on ${process.env.PORT}...`);\n});\"><pre class=\"notranslate\"><span class=\"pl-c\">// server.ts</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">express</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'express'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">dotenv</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'dotenv'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">dotenv</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">express</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">secret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_SECRET</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MONGO_URL</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">express</span>: <span class=\"pl-s1\">server</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// health check</span>\n<span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/health'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">send</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'ok'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">listen</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PORT</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Server listening on <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PORT</span><span class=\"pl-kos\">}</span></span>...`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>",
            "createdAt": "2022-12-06T01:29:34Z"
          },
          {
            "author": {
              "name": "samtietjen",
              "avatar": "https://avatars.githubusercontent.com/u/4971280?u=9ff035a29d294e47b3109f00e6a9eec46f32fa8c&v=4",
              "url": "https://github.com/samtietjen"
            },
            "body": "<p dir=\"auto\">Yep saw those links! Pretty sure I have everything I should set to 8080. Added the /health route, no luck there either. Any ideas? These are the last couple of lines from the console before the health check error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[payload] [2022-12-06 14:26:44] yarn run v1.22.19\n[payload] [2022-12-06 14:26:44] $ cross-env NODE_ENV=production node dist/index.js\n[payload] [2022-12-06 14:26:49] [14:26:49] INFO (payload): Starting Payload...\n[payload] [2022-12-06 14:26:54] NextJS started\n[payload] [2022-12-06 14:26:54] Server listening on 8080...\n[payload] [2022-12-06 14:26:55] [14:26:55] INFO (payload): Connected to Mongo server successfully!\"><pre class=\"notranslate\"><code class=\"notranslate\">[payload] [2022-12-06 14:26:44] yarn run v1.22.19\n[payload] [2022-12-06 14:26:44] $ cross-env NODE_ENV=production node dist/index.js\n[payload] [2022-12-06 14:26:49] [14:26:49] INFO (payload): Starting Payload...\n[payload] [2022-12-06 14:26:54] NextJS started\n[payload] [2022-12-06 14:26:54] Server listening on 8080...\n[payload] [2022-12-06 14:26:55] [14:26:55] INFO (payload): Connected to Mongo server successfully!\n</code></pre></div>",
            "createdAt": "2022-12-06T14:34:33Z"
          },
          {
            "author": {
              "name": "samtietjen",
              "avatar": "https://avatars.githubusercontent.com/u/4971280?u=9ff035a29d294e47b3109f00e6a9eec46f32fa8c&v=4",
              "url": "https://github.com/samtietjen"
            },
            "body": "<p dir=\"auto\">Nevermind! Forgot I had to change the health check route under settings. Works now. Thanks guys!</p>",
            "createdAt": "2022-12-06T18:23:59Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">Typically, any platform's health check would be pinging the application to see if it received a good HTTP response. If it is a good response, it would be considered healthy.</p>\n<p dir=\"auto\">It sounds like DO's health checks are failing, so it is likely trying to restart your application. I'd check out their health check documentation here to see how it's configured. It looks like it checks on port 8080 as default - it should match your application port.</p>\n<p dir=\"auto\">These links look relevant:</p>\n<p dir=\"auto\"><a href=\"https://docs.digitalocean.com/glossary/health-check/\" rel=\"nofollow\">https://docs.digitalocean.com/glossary/health-check/</a><br>\n<a href=\"https://docs.digitalocean.com/support/my-app-deployment-failed-because-of-a-health-check/\" rel=\"nofollow\">https://docs.digitalocean.com/support/my-app-deployment-failed-because-of-a-health-check/</a></p>",
      "createdAt": "2022-12-06T01:19:23Z",
      "chosenAt": "2022-12-06T18:24:21Z",
      "chosenBy": "samtietjen",
      "replies": [
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">You can customize the http health check endpoint in DO. It is common to a route to your express app for your check. Here is an eample of a server that adds a check on GET <code class=\"notranslate\">/health</code>:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// server.ts\nimport express from 'express';\nimport payload from 'payload';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst server = express();\n\npayload.init({\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGO_URL,\n  express: server,\n});\n\n// health check\nserver.get('/health', (req, res) =&gt; {\n  res.send('ok');\n});\n\nserver.listen(process.env.PORT, async () =&gt; {\n  console.log(`Server listening on ${process.env.PORT}...`);\n});\"><pre class=\"notranslate\"><span class=\"pl-c\">// server.ts</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">express</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'express'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">dotenv</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'dotenv'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">dotenv</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">express</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">secret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_SECRET</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MONGO_URL</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">express</span>: <span class=\"pl-s1\">server</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// health check</span>\n<span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/health'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">send</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'ok'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">listen</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PORT</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Server listening on <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PORT</span><span class=\"pl-kos\">}</span></span>...`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>",
          "createdAt": "2022-12-06T01:29:34Z"
        },
        {
          "author": {
            "name": "samtietjen",
            "avatar": "https://avatars.githubusercontent.com/u/4971280?u=9ff035a29d294e47b3109f00e6a9eec46f32fa8c&v=4",
            "url": "https://github.com/samtietjen"
          },
          "body": "<p dir=\"auto\">Yep saw those links! Pretty sure I have everything I should set to 8080. Added the /health route, no luck there either. Any ideas? These are the last couple of lines from the console before the health check error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[payload] [2022-12-06 14:26:44] yarn run v1.22.19\n[payload] [2022-12-06 14:26:44] $ cross-env NODE_ENV=production node dist/index.js\n[payload] [2022-12-06 14:26:49] [14:26:49] INFO (payload): Starting Payload...\n[payload] [2022-12-06 14:26:54] NextJS started\n[payload] [2022-12-06 14:26:54] Server listening on 8080...\n[payload] [2022-12-06 14:26:55] [14:26:55] INFO (payload): Connected to Mongo server successfully!\"><pre class=\"notranslate\"><code class=\"notranslate\">[payload] [2022-12-06 14:26:44] yarn run v1.22.19\n[payload] [2022-12-06 14:26:44] $ cross-env NODE_ENV=production node dist/index.js\n[payload] [2022-12-06 14:26:49] [14:26:49] INFO (payload): Starting Payload...\n[payload] [2022-12-06 14:26:54] NextJS started\n[payload] [2022-12-06 14:26:54] Server listening on 8080...\n[payload] [2022-12-06 14:26:55] [14:26:55] INFO (payload): Connected to Mongo server successfully!\n</code></pre></div>",
          "createdAt": "2022-12-06T14:34:33Z"
        },
        {
          "author": {
            "name": "samtietjen",
            "avatar": "https://avatars.githubusercontent.com/u/4971280?u=9ff035a29d294e47b3109f00e6a9eec46f32fa8c&v=4",
            "url": "https://github.com/samtietjen"
          },
          "body": "<p dir=\"auto\">Nevermind! Forgot I had to change the health check route under settings. Works now. Thanks guys!</p>",
          "createdAt": "2022-12-06T18:23:59Z"
        }
      ]
    }
  },
  {
    "title": "build doesn't work",
    "body": "<ul dir=\"auto\">\n<li>The index.html file has admin/ in file path but the directory does not exist</li>\n<li>also how can I deploy it to production or change hostname to 0.0.0.0 ??</li>\n</ul>",
    "url": "https://github.com/payloadcms/payload/discussions/1603",
    "id": "1603",
    "createdAt": "2022-12-06T04:23:07Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "AdrianPrendas",
      "avatar": "https://avatars.githubusercontent.com/u/20632410?u=7ddaf917756ea843545703939ec0fca2493ff916&v=4",
      "url": "https://github.com/AdrianPrendas"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/AdrianPrendas/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AdrianPrendas\">@AdrianPrendas</a> — we will need more information to help you here.</p>\n<p dir=\"auto\">In production, Payload serves the contents of the <code class=\"notranslate\">/build</code> folder statically via Express, so everything under <code class=\"notranslate\">/admin</code> will first attempt to match to a file in <code class=\"notranslate\">/build</code>, but if there is no file there, it will fall back to serving to <code class=\"notranslate\">/build/index.html</code>.</p>\n<p dir=\"auto\">In regards to deploying to production, we have a collection of tutorials that show how to deploy Payload to a DigitalOcean droplet here:</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/production/deployment#digitalocean-tutorials\" rel=\"nofollow\">https://payloadcms.com/docs/production/deployment#digitalocean-tutorials</a></p>\n<p dir=\"auto\">But you can deploy it to anywhere that can host a Node / Express app.</p>\n<p dir=\"auto\">Here's another walkthrough for Northflank:</p>\n<p dir=\"auto\"><a href=\"https://northflank.com/guides/deploying-payload-cms\" rel=\"nofollow\">https://northflank.com/guides/deploying-payload-cms</a></p>\n<p dir=\"auto\">I'm going to convert this to a discussion as it is not related to an issue with Payload but we are happy to continue to help there in the discussion!</p>",
        "createdAt": "2022-12-06T14:41:25Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/AdrianPrendas/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AdrianPrendas\">@AdrianPrendas</a> — we will need more information to help you here.</p>\n<p dir=\"auto\">In production, Payload serves the contents of the <code class=\"notranslate\">/build</code> folder statically via Express, so everything under <code class=\"notranslate\">/admin</code> will first attempt to match to a file in <code class=\"notranslate\">/build</code>, but if there is no file there, it will fall back to serving to <code class=\"notranslate\">/build/index.html</code>.</p>\n<p dir=\"auto\">In regards to deploying to production, we have a collection of tutorials that show how to deploy Payload to a DigitalOcean droplet here:</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/production/deployment#digitalocean-tutorials\" rel=\"nofollow\">https://payloadcms.com/docs/production/deployment#digitalocean-tutorials</a></p>\n<p dir=\"auto\">But you can deploy it to anywhere that can host a Node / Express app.</p>\n<p dir=\"auto\">Here's another walkthrough for Northflank:</p>\n<p dir=\"auto\"><a href=\"https://northflank.com/guides/deploying-payload-cms\" rel=\"nofollow\">https://northflank.com/guides/deploying-payload-cms</a></p>\n<p dir=\"auto\">I'm going to convert this to a discussion as it is not related to an issue with Payload but we are happy to continue to help there in the discussion!</p>",
      "createdAt": "2022-12-06T14:41:25Z",
      "chosenAt": "2022-12-14T16:36:30Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Versions not showing/being listed",
    "body": "<p dir=\"auto\">I'm running Payload <strike>1.2.3</strike>. 1.2.4 in Ubuntu <code class=\"notranslate\">18.04.6 LTS</code>, Node <code class=\"notranslate\">16.18.1</code>, with a local install of MongoDB <code class=\"notranslate\">6.0.3</code>.</p>\n<p dir=\"auto\">I've enabled versions on a collection, and see '5 versions found' in the sidebar in the admin. When I click through to the versions listing, the pagination says '1-4 of 4', but no versions are listed.</p>\n<p dir=\"auto\">I'm logged in with the initial admin user created as part of setup.</p>\n<p dir=\"auto\"><code class=\"notranslate\">Members.ts</code>:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { CollectionConfig } from 'payload/types';\n\nconst Members: CollectionConfig = {\n  slug: 'members',\n  auth: true,\n  admin: {\n    useAsTitle: 'email',\n    defaultColumns: ['nameFirst', 'nameLast', 'jobTitle', 'department'],\n    disableDuplicate: true,\n    listSearchableFields: ['nameFirst', 'nameLast'],\n  },\n  access: {\n    create: () =&gt; true,\n    read: () =&gt; true,\n    update: () =&gt; true,\n    delete: () =&gt; true,\n    readVersions: () =&gt; true,\n  },\n  versions: true,\n  fields: [\n    {\n      type: 'row',\n      fields: [\n        {\n          name: 'nameFirst',\n          type: 'text',\n          label: 'First name',\n          index: true,\n          required: true,\n        },\n        {\n          name: 'nameLast',\n          type: 'text',\n          label: 'Last name',\n          index: true,\n          required: true,\n        },\n      ],\n    },\n    {\n      type: 'row',\n      fields: [\n        {\n          name: 'jobTitle',\n          type: 'text',\n        },\n        {\n          name: 'department',\n          type: 'text',\n        },\n      ]\n    },\n  ],\n};\n\nexport default Members;\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">Members</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'members'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">auth</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'email'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">defaultColumns</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'nameFirst'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'nameLast'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'jobTitle'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'department'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">disableDuplicate</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">listSearchableFields</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'nameFirst'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'nameLast'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">create</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">update</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">delete</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">readVersions</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">versions</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'row'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'nameFirst'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'First name'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">index</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'nameLast'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Last name'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">index</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'row'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'jobTitle'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'department'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">]</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">Members</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">payload.config.ts</code>:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { buildConfig } from 'payload/config';\nimport path from 'path';\nimport Members from './collections/Members';\nimport Users from './collections/Users';\n\nexport default buildConfig({\n  serverURL: 'http://localhost:3000',\n  csrf: [\n    'http://localhost:4000',\n  ],\n  admin: {\n    user: Users.slug,\n  },\n  collections: [\n    Members,\n    Users,\n  ],\n  typescript: {\n    outputFile: path.resolve(__dirname, 'payload-types.ts'),\n  },\n  graphQL: {\n    schemaOutputFile: path.resolve(__dirname, 'generated-schema.graphql'),\n  },\n});\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">buildConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/config'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">path</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'path'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">Members</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Members'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">Users</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Users'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-en\">buildConfig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">serverURL</span>: <span class=\"pl-s\">'http://localhost:3000'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">csrf</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-s\">'http://localhost:4000'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">user</span>: <span class=\"pl-smi\">Users</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">slug</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">collections</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-smi\">Members</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-smi\">Users</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">typescript</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">outputFile</span>: <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'payload-types.ts'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">graphQL</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">schemaOutputFile</span>: <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'generated-schema.graphql'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Am I doing something wrong?</p>\n<p dir=\"auto\">Thanks!</p>\n<h2 dir=\"auto\">Update</h2>\n<p dir=\"auto\">I have the same issue with a simpler collection:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { CollectionConfig } from 'payload/types';\n\nconst Organisations: CollectionConfig = {\n  slug: 'organisations',\n  admin: {\n    useAsTitle: 'name',\n    defaultColumns: ['name'],\n    disableDuplicate: true,\n    listSearchableFields: ['name'],\n  },\n  versions: true,\n  fields: [\n    {\n      type: 'row',\n      fields: [\n        {\n          name: 'name',\n          type: 'text',\n          label: 'Name',\n          index: true,\n          required: true,\n        },\n      ],\n    },\n  ],\n};\n\nexport default Organisations;\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">Organisations</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'organisations'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'name'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">defaultColumns</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'name'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">disableDuplicate</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">listSearchableFields</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'name'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">versions</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'row'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'name'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Name'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">index</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">Organisations</span><span class=\"pl-kos\">;</span></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/1581",
    "id": "1581",
    "createdAt": "2022-12-03T19:43:35Z",
    "upvotes": 2,
    "commentTotal": 2,
    "author": {
      "name": "DavidOliver",
      "avatar": "https://avatars.githubusercontent.com/u/192853?v=4",
      "url": "https://github.com/DavidOliver"
    },
    "comments": [
      {
        "author": {
          "name": "kalon-robson",
          "avatar": "https://avatars.githubusercontent.com/u/29440540?u=75761ecff8e7cd590d76888b63693d4a1e1cffc3&v=4",
          "url": "https://github.com/kalon-robson"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DavidOliver/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DavidOliver\">@DavidOliver</a>, I've been able to recreate the problem. It appears limit is set to 0 by default on the request to the Api made by Payload.</p>\n<p dir=\"auto\">Request: <code class=\"notranslate\">GET /api/draft-posts/versions?locale=en&amp;depth=1&amp;where%5Bparent%5D%5Bequals%5D=638e620497a5b55f0214a1b2 HTTP/1.1</code></p>\n<p dir=\"auto\">Response: <code class=\"notranslate\">{\"docs\":[],\"totalDocs\":11,\"limit\":0,\"totalPages\":1,\"page\":1,\"pagingCounter\":1,\"hasPrevPage\":false,\"hasNextPage\":false,\"prevPage\":null,\"nextPage\":null} </code></p>\n<p dir=\"auto\">If you change the pagination limit \"Per page: 10\" or append ?limit=10 you should see it working.</p>\n<p dir=\"auto\">I'm going to open an issue off the back of your discussion for the Payload team to look at.</p>",
        "createdAt": "2022-12-05T21:58:19Z",
        "replies": [
          {
            "author": {
              "name": "DavidOliver",
              "avatar": "https://avatars.githubusercontent.com/u/192853?v=4",
              "url": "https://github.com/DavidOliver"
            },
            "body": "<p dir=\"auto\">Aha! Thanks for the info.</p>",
            "createdAt": "2022-12-05T22:36:55Z"
          },
          {
            "author": {
              "name": "JarrodMFlesch",
              "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
              "url": "https://github.com/JarrodMFlesch"
            },
            "body": "<p dir=\"auto\">Hey guys, no need to open an issue. I merged the fix for that this morning when I noticed it. It will land in the next release (soon) <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>\n<p dir=\"auto\"><a aria-label=\"Pull request #1589\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1476602434\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1589\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/1589/hovercard\" href=\"https://github.com/payloadcms/payload/pull/1589\">#1589</a></p>",
            "createdAt": "2022-12-06T01:29:37Z"
          }
        ]
      },
      {
        "author": {
          "name": "kalon-robson",
          "avatar": "https://avatars.githubusercontent.com/u/29440540?u=75761ecff8e7cd590d76888b63693d4a1e1cffc3&v=4",
          "url": "https://github.com/kalon-robson"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DavidOliver/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DavidOliver\">@DavidOliver</a> There has been a commit earlier today that resolves the issue <a href=\"https://github.com/payloadcms/payload/commit/dd04d7842efe9228e98271a878fd68a814042f41\">commit #dd04d78</a></p>",
        "createdAt": "2022-12-05T22:16:49Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "kalon-robson",
        "avatar": "https://avatars.githubusercontent.com/u/29440540?u=75761ecff8e7cd590d76888b63693d4a1e1cffc3&v=4",
        "url": "https://github.com/kalon-robson"
      },
      "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DavidOliver/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DavidOliver\">@DavidOliver</a>, I've been able to recreate the problem. It appears limit is set to 0 by default on the request to the Api made by Payload.</p>\n<p dir=\"auto\">Request: <code class=\"notranslate\">GET /api/draft-posts/versions?locale=en&amp;depth=1&amp;where%5Bparent%5D%5Bequals%5D=638e620497a5b55f0214a1b2 HTTP/1.1</code></p>\n<p dir=\"auto\">Response: <code class=\"notranslate\">{\"docs\":[],\"totalDocs\":11,\"limit\":0,\"totalPages\":1,\"page\":1,\"pagingCounter\":1,\"hasPrevPage\":false,\"hasNextPage\":false,\"prevPage\":null,\"nextPage\":null} </code></p>\n<p dir=\"auto\">If you change the pagination limit \"Per page: 10\" or append ?limit=10 you should see it working.</p>\n<p dir=\"auto\">I'm going to open an issue off the back of your discussion for the Payload team to look at.</p>",
      "createdAt": "2022-12-05T21:58:19Z",
      "chosenAt": "2022-12-05T22:35:49Z",
      "chosenBy": "DavidOliver",
      "replies": [
        {
          "author": {
            "name": "DavidOliver",
            "avatar": "https://avatars.githubusercontent.com/u/192853?v=4",
            "url": "https://github.com/DavidOliver"
          },
          "body": "<p dir=\"auto\">Aha! Thanks for the info.</p>",
          "createdAt": "2022-12-05T22:36:55Z"
        },
        {
          "author": {
            "name": "JarrodMFlesch",
            "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
            "url": "https://github.com/JarrodMFlesch"
          },
          "body": "<p dir=\"auto\">Hey guys, no need to open an issue. I merged the fix for that this morning when I noticed it. It will land in the next release (soon) <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>\n<p dir=\"auto\"><a aria-label=\"Pull request #1589\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1476602434\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1589\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/1589/hovercard\" href=\"https://github.com/payloadcms/payload/pull/1589\">#1589</a></p>",
          "createdAt": "2022-12-06T01:29:37Z"
        }
      ]
    }
  },
  {
    "title": "Docker compose file for production erros",
    "body": "<p dir=\"auto\">I am facing lot of issues in the production of with docker-compose<br>\nhere is my docker-compose.yml file</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"version: '3'`\n\nservices:\n\n  payload:\n    image: node:18-alpine\n    ports:\n      - &quot;3000:3000&quot;\n    volumes:\n      - .:/home/node/app\n      - node_modules:/home/node/app/node_modules\n      - media:/home/node/app/media\n    working_dir: /home/node/app/\n    command: sh -c &quot;yarn install &amp;&amp; yarn build &amp;&amp; yarn serve&quot;\n    depends_on:\n      - mongo\n    environment:\n      MONGODB_URI: mongodb://mongo:27017/payload\n      PORT: 3000\n      NODE_ENV: production \n      PAYLOAD_SECRET: TESTING\n\n  mongo:\n    image: mongo:latest\n    ports:\n      - &quot;27017:27017&quot;\n    command:\n      - --storageEngine=wiredTiger\n    volumes:\n      - data:/data/db\n    logging:\n      driver: none\n\nvolumes:\n  data:\n  node_modules:\n  media:\"><pre class=\"notranslate\"><code class=\"notranslate\">version: '3'`\n\nservices:\n\n  payload:\n    image: node:18-alpine\n    ports:\n      - \"3000:3000\"\n    volumes:\n      - .:/home/node/app\n      - node_modules:/home/node/app/node_modules\n      - media:/home/node/app/media\n    working_dir: /home/node/app/\n    command: sh -c \"yarn install &amp;&amp; yarn build &amp;&amp; yarn serve\"\n    depends_on:\n      - mongo\n    environment:\n      MONGODB_URI: mongodb://mongo:27017/payload\n      PORT: 3000\n      NODE_ENV: production \n      PAYLOAD_SECRET: TESTING\n\n  mongo:\n    image: mongo:latest\n    ports:\n      - \"27017:27017\"\n    command:\n      - --storageEngine=wiredTiger\n    volumes:\n      - data:/data/db\n    logging:\n      driver: none\n\nvolumes:\n  data:\n  node_modules:\n  media:\n</code></pre></div>\n<p dir=\"auto\">it is showing errors like this</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"cms-payload-1  | $ yarn copyfiles &amp;&amp; yarn build:payload &amp;&amp; yarn build:server\ncms-payload-1  | $ copyfiles -u 1 &quot;src/**/*.{html,css,scss,ttf,woff,woff2,eot,svg,jpg,png}&quot; dist/\ncms-payload-1  | /bin/sh: copyfiles: not found\ncms-payload-1  | error Command failed with exit code 127.\"><pre class=\"notranslate\"><code class=\"notranslate\">cms-payload-1  | $ yarn copyfiles &amp;&amp; yarn build:payload &amp;&amp; yarn build:server\ncms-payload-1  | $ copyfiles -u 1 \"src/**/*.{html,css,scss,ttf,woff,woff2,eot,svg,jpg,png}\" dist/\ncms-payload-1  | /bin/sh: copyfiles: not found\ncms-payload-1  | error Command failed with exit code 127.\n</code></pre></div>\n<p dir=\"auto\">Docker is working fine in development mode with <code class=\"notranslate\">yarn dev</code></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1595",
    "id": "1595",
    "createdAt": "2022-12-05T18:58:56Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "parthapaul7",
      "avatar": "https://avatars.githubusercontent.com/u/83518670?u=8431b952f85d9961d13094e4a20ca2641a51ef2b&v=4",
      "url": "https://github.com/parthapaul7"
    },
    "comments": [
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/parthapaul7/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/parthapaul7\">@parthapaul7</a> <code class=\"notranslate\">copyfiles</code> is a devDependency, it is required to run <code class=\"notranslate\">yarn build</code> so you will need to install it before running that command.</p>\n<p dir=\"auto\">Try <code class=\"notranslate\">command: sh -c \"yarn add copyfiles &amp;&amp; yarn install &amp;&amp; yarn build &amp;&amp; yarn serve\"</code></p>",
        "createdAt": "2022-12-05T20:00:21Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "JarrodMFlesch",
        "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
        "url": "https://github.com/JarrodMFlesch"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/parthapaul7/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/parthapaul7\">@parthapaul7</a> <code class=\"notranslate\">copyfiles</code> is a devDependency, it is required to run <code class=\"notranslate\">yarn build</code> so you will need to install it before running that command.</p>\n<p dir=\"auto\">Try <code class=\"notranslate\">command: sh -c \"yarn add copyfiles &amp;&amp; yarn install &amp;&amp; yarn build &amp;&amp; yarn serve\"</code></p>",
      "createdAt": "2022-12-05T20:00:21Z",
      "chosenAt": "2022-12-22T18:42:25Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Broken type checking for field hooks: \"value\" does not match any of the allowed types",
    "body": "<h1 dir=\"auto\">Bug Report</h1>\n<p dir=\"auto\">I'm getting the error <code class=\"notranslate\"> \"value\" does not match any of the allowed types</code> building my project when I use a field hook which is exported in another file. If I move the exact same field hook to the file where the hooks are declared, I get no error.</p>\n<h2 dir=\"auto\">Steps to Reproduce</h2>\n<p dir=\"auto\">Two files:</p>\n<p dir=\"auto\"><strong>LexicalRichTextField.ts</strong></p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import {Field, FieldHook} from 'payload/types';\nimport {LexicalRichTextField, LexicalRichTextCell, traverseLexicalField, populateLexicalRelationships2} from './LexicalRichText'\nimport {SerializedEditorState} from &quot;lexical&quot;;\n\ntype LexicalRichTextFieldAfterReadFieldHook = FieldHook&lt;any, SerializedEditorState, any&gt;;\n\nconst populateLexicalRelationships: LexicalRichTextFieldAfterReadFieldHook = async ({value, req}): Promise&lt;SerializedEditorState&gt; =&gt;  {\n            if(value.root.children){\n                const newChildren = [];\n                for(let childNode of value.root.children){\n                    newChildren.push(await traverseLexicalField(childNode, &quot;&quot;));\n                }\n                value.root.children = newChildren;\n            }\n\n            return value;\n        };\n\nfunction lexicalRichTextField(props: {name?: string, label?: string, plugins?}): Field {\n    const {name, label, plugins} = props;\n    return {\n        name: name ? name : 'richText',\n        type: 'richText',\n        label: label ? label : 'Rich Text',\n        hooks: {\n            afterRead: [\n                populateLexicalRelationships2,\n            ],\n        },\n        admin: {\n            components: {\n                Field: LexicalRichTextField,\n                Cell: LexicalRichTextCell\n            }\n        }\n    }\n}\n\nexport default lexicalRichTextField;\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span><span class=\"pl-smi\">Field</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">FieldHook</span><span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span><span class=\"pl-smi\">LexicalRichTextField</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">LexicalRichTextCell</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">traverseLexicalField</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">populateLexicalRelationships2</span><span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./LexicalRichText'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span><span class=\"pl-smi\">SerializedEditorState</span><span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"lexical\"</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">type</span> <span class=\"pl-smi\">LexicalRichTextFieldAfterReadFieldHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">FieldHook</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">any</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">SerializedEditorState</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">any</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">populateLexicalRelationships</span>: <span class=\"pl-smi\">LexicalRichTextFieldAfterReadFieldHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>value<span class=\"pl-kos\">,</span> req<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">Promise</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">SerializedEditorState</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=&gt;</span>  <span class=\"pl-kos\">{</span>\n            <span class=\"pl-k\">if</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">root</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">children</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>\n                <span class=\"pl-k\">const</span> <span class=\"pl-s1\">newChildren</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-k\">for</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">let</span> <span class=\"pl-s1\">childNode</span> <span class=\"pl-k\">of</span> <span class=\"pl-s1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">root</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">children</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>\n                    <span class=\"pl-s1\">newChildren</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">await</span> <span class=\"pl-en\">traverseLexicalField</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">childNode</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-kos\">}</span>\n                <span class=\"pl-s1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">root</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">children</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">newChildren</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-kos\">}</span>\n\n            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">value</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">lexicalRichTextField</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">props</span>: <span class=\"pl-kos\">{</span><span class=\"pl-c1\">name</span>?: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">label</span>?: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">plugins</span>?<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">Field</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span>name<span class=\"pl-kos\">,</span> label<span class=\"pl-kos\">,</span> plugins<span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">props</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s1\">name</span> ? <span class=\"pl-s1\">name</span> : <span class=\"pl-s\">'richText'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'richText'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">label</span>: <span class=\"pl-s1\">label</span> ? <span class=\"pl-s1\">label</span> : <span class=\"pl-s\">'Rich Text'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">afterRead</span>: <span class=\"pl-kos\">[</span>\n                <span class=\"pl-s1\">populateLexicalRelationships2</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">components</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">Field</span>: <span class=\"pl-smi\">LexicalRichTextField</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">Cell</span>: <span class=\"pl-smi\">LexicalRichTextCell</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-s1\">lexicalRichTextField</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\"><strong>LexicalRichText/index.tsx:</strong></p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import React, { Suspense } from 'react';\nimport {$getRoot, EditorState, LexicalEditor, SerializedEditorState, SerializedLexicalNode} from 'lexical';\nimport { Props } from './types';\nimport { LexicalEditorComponent } from './LexicalEditorComponent';\n\nimport './index.scss';\nimport Loading from 'payload/dist/admin/components/elements/Loading'\n\nconst baseClass = 'lexicalRichTextEditor';\n\nimport { useField } from &quot;payload/components/forms&quot;;\nimport PlaygroundNodes from &quot;./nodes/PlaygroundNodes&quot;;\nimport PlaygroundEditorTheme from &quot;./themes/PlaygroundEditorTheme&quot;;\nimport {createHeadlessEditor} from &quot;@lexical/headless&quot;;\nimport {ExtraAttributes, RawImagePayload} from &quot;./nodes/ImageNode&quot;;\nimport payload from &quot;payload&quot;;\nimport {FieldHook} from &quot;payload/types&quot;;\n\ntype LexicalRichTextFieldAfterReadFieldHook = FieldHook&lt;any, SerializedEditorState, any&gt;;\n\nexport const populateLexicalRelationships2: LexicalRichTextFieldAfterReadFieldHook = async ({value, req}): Promise&lt;SerializedEditorState&gt; =&gt;  {\n    if(value.root.children){\n        const newChildren = [];\n        for(let childNode of value.root.children){\n            newChildren.push(await traverseLexicalField(childNode, &quot;&quot;));\n        }\n        value.root.children = newChildren;\n    }\n\n    return value;\n};\n\nexport async function traverseLexicalField(node: SerializedLexicalNode, locale: string): Promise&lt;SerializedLexicalNode&gt; {\n    ...\n}\nasync function loadUploadData(rawImagePayload: RawImagePayload, locale: string) {\n...\n}\n\nasync function loadInternalLinkDocData(value: string, relationTo: string, locale: string) { //TODO: Adjustable depth\n...\n}\n\nexport const LexicalRichTextCell: React.FC&lt;any&gt; = (props) =&gt; {\n    ...\n};\n\nexport const LexicalRichTextField: React.FC&lt;Props&gt; = (props) =&gt; {\n   ...\n}\nconst LexicalRichText2: React.FC&lt;Props&gt; = (props: Props) =&gt; {\n   ...\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">React</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">Suspense</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span><span class=\"pl-s1\">$getRoot</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">EditorState</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">LexicalEditor</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">SerializedEditorState</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">SerializedLexicalNode</span><span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'lexical'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">Props</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./types'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">LexicalEditorComponent</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./LexicalEditorComponent'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s\">'./index.scss'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">Loading</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/dist/admin/components/elements/Loading'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">baseClass</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'lexicalRichTextEditor'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">useField</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/components/forms\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">PlaygroundNodes</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"./nodes/PlaygroundNodes\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">PlaygroundEditorTheme</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"./themes/PlaygroundEditorTheme\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span><span class=\"pl-s1\">createHeadlessEditor</span><span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"@lexical/headless\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span><span class=\"pl-smi\">ExtraAttributes</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">RawImagePayload</span><span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"./nodes/ImageNode\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span><span class=\"pl-smi\">FieldHook</span><span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/types\"</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">type</span> <span class=\"pl-smi\">LexicalRichTextFieldAfterReadFieldHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">FieldHook</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">any</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">SerializedEditorState</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">any</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">populateLexicalRelationships2</span>: <span class=\"pl-smi\">LexicalRichTextFieldAfterReadFieldHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>value<span class=\"pl-kos\">,</span> req<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">Promise</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">SerializedEditorState</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=&gt;</span>  <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">if</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">root</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">children</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">newChildren</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">for</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">let</span> <span class=\"pl-s1\">childNode</span> <span class=\"pl-k\">of</span> <span class=\"pl-s1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">root</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">children</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>\n            <span class=\"pl-s1\">newChildren</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">await</span> <span class=\"pl-en\">traverseLexicalField</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">childNode</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n        <span class=\"pl-s1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">root</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">children</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">newChildren</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">value</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">traverseLexicalField</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">node</span>: <span class=\"pl-smi\">SerializedLexicalNode</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">locale</span>: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">Promise</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">SerializedLexicalNode</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-kos\">{</span>\n    ...\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">loadUploadData</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">rawImagePayload</span>: <span class=\"pl-smi\">RawImagePayload</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">locale</span>: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n...\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">loadInternalLinkDocData</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span>: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">relationTo</span>: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">locale</span>: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c\">//TODO: Adjustable depth</span>\n...\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-smi\">LexicalRichTextCell</span>: <span class=\"pl-smi\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-smi\">FC</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">any</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">props</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    ...\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-smi\">LexicalRichTextField</span>: <span class=\"pl-smi\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-smi\">FC</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">Props</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">props</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n   ...\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">LexicalRichText2</span>: <span class=\"pl-smi\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-smi\">FC</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">Props</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">props</span>: <span class=\"pl-smi\">Props</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n   ...\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Inside LexicalRichTextField.ts, when I use</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" afterRead: [\n                populateLexicalRelationships2,\n            ],\"><pre class=\"notranslate\"> <span class=\"pl-s1\">afterRead</span>: <span class=\"pl-kos\">[</span>\n                <span class=\"pl-s1\">populateLexicalRelationships2</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">I'm getting the following error when running yarn build (works in dev):</p>\n<blockquote>\n<p dir=\"auto\">[01:00:16] ERROR (payload): There were 1 errors validating your Payload config<br>\n[01:00:16] ERROR (payload): 1: Collection \"lexical-rich-text\" &gt; Field \"lexicalRichTextEditor\" &gt; \"value\" does not match any of the allowed types</p>\n</blockquote>\n<p dir=\"auto\">When I use</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" afterRead: [\n                populateLexicalRelationships,\n            ],\"><pre class=\"notranslate\"> <span class=\"pl-s1\">afterRead</span>: <span class=\"pl-kos\">[</span>\n                <span class=\"pl-s1\">populateLexicalRelationships</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">It's working just fine.</p>\n<h2 dir=\"auto\">Other Details</h2>\n<p dir=\"auto\">Payload version: 1.2.1</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1591",
    "id": "1591",
    "createdAt": "2022-11-28T01:07:46Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "AlessioGr",
      "avatar": "https://avatars.githubusercontent.com/u/70709113?u=f22c2c8c53c453557cbae38c6ac9962191be62e8&v=4",
      "url": "https://github.com/AlessioGr"
    },
    "comments": [
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/AlessioGr/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AlessioGr\">@AlessioGr</a> I took a look at your plugin, and was able to recreate the issue by building the plugin, then attempting to build the demo. I don't think this is a bug with payload though, if you rename <code class=\"notranslate\">/src/fields/LexicalRichText/index.tsx</code> to <code class=\"notranslate\">/src/fields/LexicalRichText/anythingElse.tsx</code>, after clearing dist, rebuilding both the plugin then the demo, you will not get that error (you will get other eslint errors, unrelated to this issue).</p>",
        "createdAt": "2022-11-29T05:30:10Z",
        "replies": null
      },
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/AlessioGr/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AlessioGr\">@AlessioGr</a> I am going to convert this to a discussion - I was able to reproduce your issue, but I am unsure why the filename is the issue and I do not think it is specific to Payload. I am going to convert this to a discussion, if you have any more info let's chat about it there.</p>\n<p dir=\"auto\">If needed we can re-open this issue. Sound good?</p>",
        "createdAt": "2022-12-05T15:21:14Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "JarrodMFlesch",
        "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
        "url": "https://github.com/JarrodMFlesch"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/AlessioGr/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AlessioGr\">@AlessioGr</a> I took a look at your plugin, and was able to recreate the issue by building the plugin, then attempting to build the demo. I don't think this is a bug with payload though, if you rename <code class=\"notranslate\">/src/fields/LexicalRichText/index.tsx</code> to <code class=\"notranslate\">/src/fields/LexicalRichText/anythingElse.tsx</code>, after clearing dist, rebuilding both the plugin then the demo, you will not get that error (you will get other eslint errors, unrelated to this issue).</p>",
      "createdAt": "2022-11-29T05:30:10Z",
      "chosenAt": "2022-12-14T16:33:43Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Graphql api draft option not working for unpublished documents",
    "body": "<h1 dir=\"auto\">Bug Report</h1>\n<p dir=\"auto\">I found our draft articles and unpublished articles are shown in prod env.</p>\n<h2 dir=\"auto\">Steps to Reproduce</h2>\n\n<ol dir=\"auto\">\n<li>Open pages list in demo site and publish the first article</li>\n<li>Publish the second article and then unpublish it directly</li>\n</ol>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/205217465-2d7cc1bc-f084-45f9-abe5-25fde5cfbb19.png\"><img width=\"1200\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5801015/205217465-2d7cc1bc-f084-45f9-abe5-25fde5cfbb19.png\" style=\"max-width: 100%;\"></a></p>\n<ol start=\"3\" dir=\"auto\">\n<li>Open the graphql-playground:<br>\n<a href=\"https://demo.payloadcms.com/api/graphql-playground\" rel=\"nofollow\">https://demo.payloadcms.com/api/graphql-playground</a></li>\n</ol>\n<p dir=\"auto\">Input this query and execute:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"# Write your query or mutation here\nquery getPages {\n  Pages(draft: false) {\n    docs {\n      slug\n      _status\n      updatedAt\n    }\n  }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\"># Write your query or mutation here\nquery getPages {\n  Pages(draft: false) {\n    docs {\n      slug\n      _status\n      updatedAt\n    }\n  }\n}\n</code></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/205217598-ecc34f49-dfe8-4c71-8675-6184de63a07d.png\"><img width=\"1511\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5801015/205217598-ecc34f49-dfe8-4c71-8675-6184de63a07d.png\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Other Details</h2>\n\n",
    "url": "https://github.com/payloadcms/payload/discussions/1569",
    "id": "1569",
    "createdAt": "2022-12-02T04:54:42Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "Stupidism",
      "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
      "url": "https://github.com/Stupidism"
    },
    "comments": [
      {
        "author": {
          "name": "Stupidism",
          "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
          "url": "https://github.com/Stupidism"
        },
        "body": "<p dir=\"auto\">Do I have to use this query to filter out <code class=\"notranslate\">_status: \"draft\"</code>? If so, can I find any documentation about this?</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"# Write your query or mutation here\nquery getPages {\n  Pages(draft: false, where:{_status: {equals: published}}) {\n    docs {\n      title\n      slug\n      _status\n      updatedAt\n    }\n  }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\"># Write your query or mutation here\nquery getPages {\n  Pages(draft: false, where:{_status: {equals: published}}) {\n    docs {\n      title\n      slug\n      _status\n      updatedAt\n    }\n  }\n}\n</code></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/205217888-53504f23-1845-4307-9f99-a4f8637b14f7.png\"><img width=\"1569\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5801015/205217888-53504f23-1845-4307-9f99-a4f8637b14f7.png\" style=\"max-width: 100%;\"></a></p>",
        "createdAt": "2022-12-02T04:56:51Z",
        "replies": null
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Your understanding in your second comment is correct - the <code class=\"notranslate\">draft: true</code> argument <em><strong>replaces any docs in your main collection with their newest drafts, which would be stored in the <code class=\"notranslate\">_versions</code></strong></em> collection.</p>\n<p dir=\"auto\">We do have docs about this - take a look here:<br>\n<a href=\"https://payloadcms.com/docs/versions/drafts#controlling-who-can-see-collection-drafts\" rel=\"nofollow\">https://payloadcms.com/docs/versions/drafts#controlling-who-can-see-collection-drafts</a></p>\n<p dir=\"auto\">Basically, the <code class=\"notranslate\">draft</code> argument alone does <em><strong>not</strong></em> restrict who can see drafts. If you need that, you need to do that with access control. The <code class=\"notranslate\">draft</code> arg simply does what is stated above.</p>\n<p dir=\"auto\">Does that make sense? I will convert this to a discussion as I don't believe there's anything actionable to be done here. What do you think?</p>",
        "createdAt": "2022-12-02T15:29:30Z",
        "replies": [
          {
            "author": {
              "name": "Stupidism",
              "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
              "url": "https://github.com/Stupidism"
            },
            "body": "<p dir=\"auto\">Thanks, i didn't understand this doc correctly.</p>",
            "createdAt": "2022-12-05T03:45:12Z"
          }
        ]
      },
      {
        "author": {
          "name": "Stupidism",
          "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
          "url": "https://github.com/Stupidism"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> An additional question, as I checked the doc and the ts interface, it seems there's no way I can get the graphql query variables from the access function.</p>\n<p dir=\"auto\">I want to implement sth like this as the default access for our articles:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  access: {\n    read: ({ req }) =&gt; {\n      console.log('req: ', req.params);\n      \n      // to get the draft option from request\n      if (req.params.draft) return true;\n\n      return {\n        _status: {\n          equals: 'published',\n        },\n      };\n    },\n  },\"><pre class=\"notranslate\"><code class=\"notranslate\">  access: {\n    read: ({ req }) =&gt; {\n      console.log('req: ', req.params);\n      \n      // to get the draft option from request\n      if (req.params.draft) return true;\n\n      return {\n        _status: {\n          equals: 'published',\n        },\n      };\n    },\n  },\n</code></pre></div>",
        "createdAt": "2022-12-05T03:47:09Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Your understanding in your second comment is correct - the <code class=\"notranslate\">draft: true</code> argument <em><strong>replaces any docs in your main collection with their newest drafts, which would be stored in the <code class=\"notranslate\">_versions</code></strong></em> collection.</p>\n<p dir=\"auto\">We do have docs about this - take a look here:<br>\n<a href=\"https://payloadcms.com/docs/versions/drafts#controlling-who-can-see-collection-drafts\" rel=\"nofollow\">https://payloadcms.com/docs/versions/drafts#controlling-who-can-see-collection-drafts</a></p>\n<p dir=\"auto\">Basically, the <code class=\"notranslate\">draft</code> argument alone does <em><strong>not</strong></em> restrict who can see drafts. If you need that, you need to do that with access control. The <code class=\"notranslate\">draft</code> arg simply does what is stated above.</p>\n<p dir=\"auto\">Does that make sense? I will convert this to a discussion as I don't believe there's anything actionable to be done here. What do you think?</p>",
      "createdAt": "2022-12-02T15:29:30Z",
      "chosenAt": "2022-12-14T15:24:04Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "Stupidism",
            "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
            "url": "https://github.com/Stupidism"
          },
          "body": "<p dir=\"auto\">Thanks, i didn't understand this doc correctly.</p>",
          "createdAt": "2022-12-05T03:45:12Z"
        }
      ]
    }
  },
  {
    "title": "Is Payload suitable for deploying on serverless platforms?",
    "body": "<p dir=\"auto\">I'm planning to containerize payload using docker and deploy it on <a href=\"https://cloud.google.com/run\" rel=\"nofollow\">GCP Cloud Run</a>.</p>\n<p dir=\"auto\">I want to make sure payload is designed to handle multiple instances running together against a single database?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/570",
    "id": "570",
    "createdAt": "2022-05-19T08:15:08Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "PegasisForever",
      "avatar": "https://avatars.githubusercontent.com/u/39028532?u=117cb961a0f5934185d6e49c9906afd17f94c21a&v=4",
      "url": "https://github.com/PegasisForever"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Yes, docker is a great way to host Payload. I don't see any reason why GCP Cloud Run wouldn't work. If you have trouble, loop us in!</p>\n<p dir=\"auto\">One thing to plan for is if you have file uploads, make sure those are going somewhere permanent, this is discusssed in the docs: <a href=\"https://payloadcms.com/docs/production/deployment#file-storage\" rel=\"nofollow\">https://payloadcms.com/docs/production/deployment#file-storage</a></p>\n<blockquote>\n<p dir=\"auto\">I want to make sure payload is designed to handle multiple instances running together against a single database?</p>\n</blockquote>\n<p dir=\"auto\">You can!</p>",
        "createdAt": "2022-05-19T10:24:27Z",
        "replies": null
      },
      {
        "author": {
          "name": "jeanbmar",
          "avatar": "https://avatars.githubusercontent.com/u/12987993?u=897a0a1e4f6576f815c16b1ae95d16c666649452&v=4",
          "url": "https://github.com/jeanbmar"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/PegasisForever/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/PegasisForever\">@PegasisForever</a>, we are using a Serverless deployment of Payload on AWS Lambda and we aren't happy about it:</p>\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">Payload is intended to be built on the server where it's deployed, so it's shipped with dev dependencies that increase its size (see <a aria-label=\"Discussion #332\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3605031\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/332\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/332/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/332\">#332</a>).<br>\nIt's a problem for AWS Lambda which has a 250 MB limit, so we have to delete manually the dependencies that should be dev dependencies after building locally.<br>\nIt won't be an issue for you since you use Docker but I wanted to state this for people who are going to read this in the future.<br>\nIMO dev dependencies should be shipped as dev dependencies and Payload should be built by CI/CD and not on the production server directly.</p>\n</li>\n<li>\n<p dir=\"auto\">If your model contains relationships, Payload is going to perform dozens of simultaneous requests when you edit a CMS entry, that will spawn many cloud functions in parallel, each one of them doing a cold start. It makes the loading of pages super slow, actually so slow that our team is now working with a local version of Payload connected to the production database to speed up things.</p>\n</li>\n<li>\n<p dir=\"auto\">If you are building a website on top of Serverless Payload from a service like Vercel, it is going to send hundreds of simultaneous requests to build pages, and each requests is going to take db connection slots so you will need to be carefull depending on your MongoDB plan.<br>\nIf you are using a lot of relationships, some pages will take an enormous amount of time to build (see <a aria-label=\"Discussion #483\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3942738\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/483\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/483/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/483\">#483</a>) and this can trigger building timeouts.<br>\nThis is not an issue on a server setup because heavy queries can be cached and MongoDB connection pool increased.</p>\n</li>\n</ol>\n<p dir=\"auto\">If we had to do it all again from the beginning we would go with a regular server approach.</p>",
        "createdAt": "2022-05-25T07:06:04Z",
        "replies": [
          {
            "author": {
              "name": "PegasisForever",
              "avatar": "https://avatars.githubusercontent.com/u/39028532?u=117cb961a0f5934185d6e49c9906afd17f94c21a&v=4",
              "url": "https://github.com/PegasisForever"
            },
            "body": "<p dir=\"auto\">I haven't started deploying yet, but threatically cloud run should solve the chanllenges you met:</p>\n<ol dir=\"auto\">\n<li>Like you said, cloud run uses docker and there's no size limit</li>\n<li>One running cloud run instance can process multiple concurrent requests, so only one cold start is required</li>\n</ol>\n<p dir=\"auto\">That said, I still need to test it to see how good (or bad) it performs.</p>",
            "createdAt": "2022-05-25T07:13:02Z"
          },
          {
            "author": {
              "name": "jeanbmar",
              "avatar": "https://avatars.githubusercontent.com/u/12987993?u=897a0a1e4f6576f815c16b1ae95d16c666649452&v=4",
              "url": "https://github.com/jeanbmar"
            },
            "body": "<p dir=\"auto\">Right I just read about GCP Cloud Run and it would be more suitable than AWS Lambda definitely for this use case!</p>",
            "createdAt": "2022-05-25T07:27:08Z"
          },
          {
            "author": {
              "name": "jeiksegovia",
              "avatar": "https://avatars.githubusercontent.com/u/4922608?u=644f99543c760f8c03cfe6e5a9cdce4f90cbf1b6&v=4",
              "url": "https://github.com/jeiksegovia"
            },
            "body": "<p dir=\"auto\">hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jeanbmar/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jeanbmar\">@jeanbmar</a>, any update regarding Payload performance using AWS lambda?<br>\nI opened a discussion focused on AWS lambda optimization. <a aria-label=\"Discussion #1587\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4626656\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1587\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1587/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/1587\">#1587</a></p>",
            "createdAt": "2022-12-04T16:47:36Z"
          }
        ]
      },
      {
        "author": {
          "name": "PegasisForever",
          "avatar": "https://avatars.githubusercontent.com/u/39028532?u=117cb961a0f5934185d6e49c9906afd17f94c21a&v=4",
          "url": "https://github.com/PegasisForever"
        },
        "body": "<p dir=\"auto\">Update: I deployed payload on cloud run and it worked flawlessly. Only one cold start is needed for the initial login page.</p>\n<p dir=\"auto\">However my schema is quite simple so your mileage may vary.</p>",
        "createdAt": "2022-05-26T04:53:21Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Yes, docker is a great way to host Payload. I don't see any reason why GCP Cloud Run wouldn't work. If you have trouble, loop us in!</p>\n<p dir=\"auto\">One thing to plan for is if you have file uploads, make sure those are going somewhere permanent, this is discusssed in the docs: <a href=\"https://payloadcms.com/docs/production/deployment#file-storage\" rel=\"nofollow\">https://payloadcms.com/docs/production/deployment#file-storage</a></p>\n<blockquote>\n<p dir=\"auto\">I want to make sure payload is designed to handle multiple instances running together against a single database?</p>\n</blockquote>\n<p dir=\"auto\">You can!</p>",
      "createdAt": "2022-05-19T10:24:27Z",
      "chosenAt": "2022-05-19T17:50:05Z",
      "chosenBy": "PegasisForever",
      "replies": null
    }
  },
  {
    "title": "Why labels used instead of slugs for typescript and graphql?",
    "body": "<p dir=\"auto\">That was unexpected - declared tone of configs, wrote tone of graphql queries in nextjs pages using generated types and decided its time for cleanup ui in CMS - and boom - everything broken as i changed labels <g-emoji class=\"g-emoji\" alias=\"zany_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f92a.png\">🤪</g-emoji></p>\n<p dir=\"auto\">I even checked - you have Settings in group One and Settings in group Two - it will make Settings and Settings1 instead of used slugs.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1343",
    "id": "1343",
    "createdAt": "2022-11-04T01:02:14Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "itspers",
      "avatar": "https://avatars.githubusercontent.com/u/833192?v=4",
      "url": "https://github.com/itspers"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">This is about to improve actually - very shortly. At first we did this because labels generally aligned more closely to naming conventions of GraphQL types but I agree, it’s not expected. Keep an eye out for more here shortly</p>",
        "createdAt": "2022-11-04T01:19:55Z",
        "replies": null
      },
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">You're absolutely right <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/itspers/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/itspers\">@itspers</a>,</p>\n<p dir=\"auto\">I've made this change and included it in the PR for i18n. <a aria-label=\"Pull request #1326\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1430491125\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1326\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/1326/hovercard\" href=\"https://github.com/payloadcms/payload/pull/1326\">#1326</a><br>\nThis is a breaking change and will be documented in the release notes, but know that if you were relying on the labels for globals and collections for the GraphQL schema names, you will have to make a small change to your config or the client code calling GraphQL.</p>\n<p dir=\"auto\">Going forward, slugs will be responsible for graphQL schema names by default. If you wish to override the names Payload derives from the slug, you can be explicit using the new properties on Collections and Globals to do so.</p>\n<p dir=\"auto\">Collections new object for GraphQL is:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  graphQL?: {\n    singularName?: string\n    pluralName?: string\n  }\"><pre class=\"notranslate\">  graphQL?: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">singularName</span>?: <span class=\"pl-s1\">string</span>\n    pluralName?: <span class=\"pl-s1\">string</span>\n  <span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">and globals has a new property for <code class=\"notranslate\">graphQLName?: string</code>.</p>\n<p dir=\"auto\">The change is still open for review if you have any comments.</p>",
        "createdAt": "2022-11-15T18:37:44Z",
        "replies": null
      },
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">These changes were released in v1.2.</p>",
        "createdAt": "2022-12-01T14:37:58Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">These changes were released in v1.2.</p>",
      "createdAt": "2022-12-01T14:37:58Z",
      "chosenAt": "2022-12-01T14:38:26Z",
      "chosenBy": "DanRibbens",
      "replies": null
    }
  },
  {
    "title": "Can I use AWS DocumentDB instead of MongoDB?",
    "body": "<p dir=\"auto\"><code class=\"notranslate\">mongodb://bard:&lt;passwrd&gt;@docdb-2022-06-13-02-18-07.cluster-c6wqayu9kx2t.ap-northeast-2.docdb.amazonaws.com:27017/?ssl=true&amp;ssl_ca_certs=rds-combined-ca-bundle.pem&amp;replicaSet=rs0&amp;retryWrites=false</code></p>\n<p dir=\"auto\">I want to link AWS DocumentDB.<br>\nI want help.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/59461181/173268912-3a7add16-0029-41d9-ae8e-fae17c3c9927.png\"><img width=\"792\" alt=\"스크린샷 2022-06-13 오전 11 29 52\" src=\"https://user-images.githubusercontent.com/59461181/173268912-3a7add16-0029-41d9-ae8e-fae17c3c9927.png\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/652",
    "id": "652",
    "createdAt": "2022-06-13T02:30:54Z",
    "upvotes": 2,
    "commentTotal": 2,
    "author": {
      "name": "prove-ability",
      "avatar": "https://avatars.githubusercontent.com/u/59461181?u=81279f216ab166a481ce9b818a345d380c2d5ec7&v=4",
      "url": "https://github.com/prove-ability"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/prove-ability/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/prove-ability\">@prove-ability</a>, this error indicates that you are not passing the pem file contents into the Mongo options. You will need to have your .pem file locally and pass the contents into <code class=\"notranslate\">payload.init</code> under <code class=\"notranslate\">mongoOptions</code>. Here is an (untested) example:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const caContent = fs.readFileSync('/path/to/rds-combined-ca-bundle.pem');\n\npayload.init({\n  // ..\n  mongoOptions: {\n    sslCA: caContent,\n  },\n});\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">caContent</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">fs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">readFileSync</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/path/to/rds-combined-ca-bundle.pem'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// ..</span>\n  <span class=\"pl-c1\">mongoOptions</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">sslCA</span>: <span class=\"pl-s1\">caContent</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Let me know if that gets you any further.</p>\n<p dir=\"auto\">Here are some links to SO issues that may be useful as well: <a href=\"https://stackoverflow.com/questions/54397644/connection-error-while-connecting-to-aws-documentdb\" rel=\"nofollow\">link</a>, <a href=\"https://stackoverflow.com/questions/59570957/unable-to-determine-mongoose-ssl-connection-error-to-documentdb\" rel=\"nofollow\">link</a></p>",
        "createdAt": "2022-06-13T03:12:53Z",
        "replies": [
          {
            "author": {
              "name": "prove-ability",
              "avatar": "https://avatars.githubusercontent.com/u/59461181?u=81279f216ab166a481ce9b818a345d380c2d5ec7&v=4",
              "url": "https://github.com/prove-ability"
            },
            "body": "<p dir=\"auto\">The method that I told you didn't work.</p>\n<p dir=\"auto\">So I tried to proceed after watching <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/connect_programmatically.html\" rel=\"nofollow\">AWS DOCS</a>, but this also doesn't work.</p>\n<p dir=\"auto\">Do you have any idea?</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// Initialize Payload\npayload.init({\n\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGODB_URI,\n  express: app,\n  onInit: () =&gt; {\n    payload.logger.info(`Payload Admin URL: ${payload.getAdminURL()}`)\n  },\n  mongoOptions: {\n    tlsCAFile: `${__dirname}/rds-combined-ca-bundle.pem`\n    // ssl: true,\n    // sslValidate: false,\n    // sslCA: `${__dirname}/rds-combined-ca-bundle.pem`\n  }\n})\"><pre class=\"notranslate\"><span class=\"pl-c\">// Initialize Payload</span>\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n\n  <span class=\"pl-c1\">secret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_SECRET</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MONGODB_URI</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">express</span>: <span class=\"pl-s1\">app</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-en\">onInit</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">info</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Payload Admin URL: <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getAdminURL</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">mongoOptions</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">tlsCAFile</span>: <span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">}</span></span>/rds-combined-ca-bundle.pem`</span>\n    <span class=\"pl-c\">// ssl: true,</span>\n    <span class=\"pl-c\">// sslValidate: false,</span>\n    <span class=\"pl-c\">// sslCA: `${__dirname}/rds-combined-ca-bundle.pem`</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div>",
            "createdAt": "2022-06-13T07:36:06Z"
          },
          {
            "author": {
              "name": "x31b",
              "avatar": "https://avatars.githubusercontent.com/u/99182588?v=4",
              "url": "https://github.com/x31b"
            },
            "body": "<p dir=\"auto\">hello <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/prove-ability/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/prove-ability\">@prove-ability</a></p>\n<p dir=\"auto\">Besides the SSL-issue, do you think DocumentDB's MongoDB API compatibility sufficient for PayloadCMS purposes?</p>",
            "createdAt": "2022-07-06T21:44:45Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/x31b/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/x31b\">@x31b</a> — yes, you should be able to 100% use DocumentDB!</p>",
            "createdAt": "2022-07-06T22:40:51Z"
          },
          {
            "author": {
              "name": "x31b",
              "avatar": "https://avatars.githubusercontent.com/u/99182588?v=4",
              "url": "https://github.com/x31b"
            },
            "body": "<p dir=\"auto\">Awesome. Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a></p>",
            "createdAt": "2022-07-06T22:43:07Z"
          }
        ]
      },
      {
        "author": {
          "name": "moltar",
          "avatar": "https://avatars.githubusercontent.com/u/491247?u=aa9d8140b60b21bba96300ab0b370c1c566d5482&v=4",
          "url": "https://github.com/moltar"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/prove-ability/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/prove-ability\">@prove-ability</a> Have you gotten the DocumentDB to work?</p>",
        "createdAt": "2022-12-01T08:25:17Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/prove-ability/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/prove-ability\">@prove-ability</a>, this error indicates that you are not passing the pem file contents into the Mongo options. You will need to have your .pem file locally and pass the contents into <code class=\"notranslate\">payload.init</code> under <code class=\"notranslate\">mongoOptions</code>. Here is an (untested) example:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const caContent = fs.readFileSync('/path/to/rds-combined-ca-bundle.pem');\n\npayload.init({\n  // ..\n  mongoOptions: {\n    sslCA: caContent,\n  },\n});\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">caContent</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">fs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">readFileSync</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/path/to/rds-combined-ca-bundle.pem'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// ..</span>\n  <span class=\"pl-c1\">mongoOptions</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">sslCA</span>: <span class=\"pl-s1\">caContent</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Let me know if that gets you any further.</p>\n<p dir=\"auto\">Here are some links to SO issues that may be useful as well: <a href=\"https://stackoverflow.com/questions/54397644/connection-error-while-connecting-to-aws-documentdb\" rel=\"nofollow\">link</a>, <a href=\"https://stackoverflow.com/questions/59570957/unable-to-determine-mongoose-ssl-connection-error-to-documentdb\" rel=\"nofollow\">link</a></p>",
      "createdAt": "2022-06-13T03:12:53Z",
      "chosenAt": "2022-06-13T06:10:21Z",
      "chosenBy": "prove-ability",
      "replies": [
        {
          "author": {
            "name": "prove-ability",
            "avatar": "https://avatars.githubusercontent.com/u/59461181?u=81279f216ab166a481ce9b818a345d380c2d5ec7&v=4",
            "url": "https://github.com/prove-ability"
          },
          "body": "<p dir=\"auto\">The method that I told you didn't work.</p>\n<p dir=\"auto\">So I tried to proceed after watching <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/connect_programmatically.html\" rel=\"nofollow\">AWS DOCS</a>, but this also doesn't work.</p>\n<p dir=\"auto\">Do you have any idea?</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// Initialize Payload\npayload.init({\n\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGODB_URI,\n  express: app,\n  onInit: () =&gt; {\n    payload.logger.info(`Payload Admin URL: ${payload.getAdminURL()}`)\n  },\n  mongoOptions: {\n    tlsCAFile: `${__dirname}/rds-combined-ca-bundle.pem`\n    // ssl: true,\n    // sslValidate: false,\n    // sslCA: `${__dirname}/rds-combined-ca-bundle.pem`\n  }\n})\"><pre class=\"notranslate\"><span class=\"pl-c\">// Initialize Payload</span>\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n\n  <span class=\"pl-c1\">secret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_SECRET</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MONGODB_URI</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">express</span>: <span class=\"pl-s1\">app</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-en\">onInit</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">info</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Payload Admin URL: <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getAdminURL</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">mongoOptions</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">tlsCAFile</span>: <span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">}</span></span>/rds-combined-ca-bundle.pem`</span>\n    <span class=\"pl-c\">// ssl: true,</span>\n    <span class=\"pl-c\">// sslValidate: false,</span>\n    <span class=\"pl-c\">// sslCA: `${__dirname}/rds-combined-ca-bundle.pem`</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div>",
          "createdAt": "2022-06-13T07:36:06Z"
        },
        {
          "author": {
            "name": "x31b",
            "avatar": "https://avatars.githubusercontent.com/u/99182588?v=4",
            "url": "https://github.com/x31b"
          },
          "body": "<p dir=\"auto\">hello <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/prove-ability/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/prove-ability\">@prove-ability</a></p>\n<p dir=\"auto\">Besides the SSL-issue, do you think DocumentDB's MongoDB API compatibility sufficient for PayloadCMS purposes?</p>",
          "createdAt": "2022-07-06T21:44:45Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/x31b/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/x31b\">@x31b</a> — yes, you should be able to 100% use DocumentDB!</p>",
          "createdAt": "2022-07-06T22:40:51Z"
        },
        {
          "author": {
            "name": "x31b",
            "avatar": "https://avatars.githubusercontent.com/u/99182588?v=4",
            "url": "https://github.com/x31b"
          },
          "body": "<p dir=\"auto\">Awesome. Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a></p>",
          "createdAt": "2022-07-06T22:43:07Z"
        }
      ]
    }
  },
  {
    "title": "How to set up Payload CMS authentication with Okta via OpenID Connect (OIDC/OAuth 2.0)?",
    "body": "<p dir=\"auto\">My organization requires the use of <a href=\"https://www.okta.com/\" rel=\"nofollow\">Okta</a>, so I have to set it up with Payload.</p>\n<p dir=\"auto\">I've read <a href=\"https://payloadcms.com/docs/authentication/config#strategies\" rel=\"nofollow\">the Payload docs about authentication strategies</a> and saw that it uses <a href=\"https://www.passportjs.org/\" rel=\"nofollow\">Passport</a>. There's a <a href=\"http://www.passportjs.org/packages/passport-okta-oauth/\" rel=\"nofollow\">passport-okta-oauth</a> package, but I experience some issues.</p>\n<h1 dir=\"auto\">Context</h1>\n<p dir=\"auto\">The first thing I did was to create the strategy:</p>\n<p dir=\"auto\"><code class=\"notranslate\">src\\collections\\auth\\OktaStrategy.ts</code></p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const OktaStrategy = require(&quot;passport-okta-oauth&quot;).Strategy;\n\nexport default (ctx) =&gt; {\n    return new OktaStrategy(\n        {\n            audience: process.env[&quot;OKTA_BASE_URL&quot;],\n            clientID: process.env[&quot;OKTA_CLIENT_ID&quot;],\n            clientSecret: process.env[&quot;OKTA_CLIENT_SECRET&quot;],\n            scope: [&quot;openid&quot;, &quot;email&quot;, &quot;profile&quot;],\n            response_type: &quot;code&quot;,\n            callbackURL: process.env[&quot;OKTA_CALLBACK_URL&quot;],\n        },\n        function (accessToken, refreshToken, profile, done) {\n            console.log(`logged in as ${profile.displayName}`);\n            return done(null, {\n                collection: &quot;users&quot;,\n                email: &quot;xxxxxxx@gmail.com&quot;,\n                id: &quot;62fb90287bed9b334e530765&quot;,\n            });\n        }\n    );\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-smi\">OktaStrategy</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"passport-okta-oauth\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Strategy</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">ctx</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">OktaStrategy</span><span class=\"pl-kos\">(</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">audience</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">\"OKTA_BASE_URL\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">clientID</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">\"OKTA_CLIENT_ID\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">clientSecret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">\"OKTA_CLIENT_SECRET\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">scope</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">\"openid\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"email\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"profile\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">response_type</span>: <span class=\"pl-s\">\"code\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">callbackURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">\"OKTA_CALLBACK_URL\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">accessToken</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">refreshToken</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">profile</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">done</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`logged in as <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">profile</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">displayName</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-k\">return</span> <span class=\"pl-en\">done</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">\"users\"</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">email</span>: <span class=\"pl-s\">\"xxxxxxx@gmail.com\"</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">id</span>: <span class=\"pl-s\">\"62fb90287bed9b334e530765\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">…and add it to my Users collection:</p>\n<p dir=\"auto\"><code class=\"notranslate\">src\\collections\\Users.ts</code></p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import OktaStrategy from &quot;./auth/OktaStrategy&quot;;\n\nconst Users: CollectionConfig = {\n    auth: {\n        disableLocalStrategy: true,\n        strategies: [\n            {\n                name: &quot;okta&quot;,\n                strategy: OktaStrategy,\n            },\n        ],\n    },\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">OktaStrategy</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"./auth/OktaStrategy\"</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">Users</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">auth</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">disableLocalStrategy</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">strategies</span>: <span class=\"pl-kos\">[</span>\n            <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">\"okta\"</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">strategy</span>: <span class=\"pl-smi\">OktaStrategy</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Then, I started getting errors on build:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ERROR in ./node_modules/oauth/lib/oauth.js 5:9-23\nModule not found: Error: Can't resolve 'url' in 'C:\\Projects\\payload-project\\node_modules\\oauth\\lib'\n\n[...]\n\nERROR in ./node_modules/passport-okta-oauth/lib/passport-okta-oauth/oauth2.js 6:17-39\nModule not found: Error: Can't resolve 'querystring' in 'C:\\Projects\\payload-project\\node_modules\\passport-okta-oauth\\lib\\passport-okta-oauth'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n        - add a fallback 'resolve.fallback: { &quot;querystring&quot;: require.resolve(&quot;querystring-es3&quot;) }'\n        - install 'querystring-es3'\nIf you don't want to include a polyfill, you can use an empty module like this:\n        resolve.fallback: { &quot;querystring&quot;: false }\"><pre class=\"notranslate\"><code class=\"notranslate\">ERROR in ./node_modules/oauth/lib/oauth.js 5:9-23\nModule not found: Error: Can't resolve 'url' in 'C:\\Projects\\payload-project\\node_modules\\oauth\\lib'\n\n[...]\n\nERROR in ./node_modules/passport-okta-oauth/lib/passport-okta-oauth/oauth2.js 6:17-39\nModule not found: Error: Can't resolve 'querystring' in 'C:\\Projects\\payload-project\\node_modules\\passport-okta-oauth\\lib\\passport-okta-oauth'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n        - add a fallback 'resolve.fallback: { \"querystring\": require.resolve(\"querystring-es3\") }'\n        - install 'querystring-es3'\nIf you don't want to include a polyfill, you can use an empty module like this:\n        resolve.fallback: { \"querystring\": false }\n</code></pre></div>\n<p dir=\"auto\">I found out in <a href=\"https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules\" rel=\"nofollow\">the Payload docs for Webpack</a>:</p>\n<blockquote>\n<p dir=\"auto\">To avoid problems with server code making it to your Webpack bundle, you can use the alias Webpack feature to tell Webpack to avoid importing the modules you want to restrict to server-only.</p>\n</blockquote>\n<p dir=\"auto\">So I aliased the module to a new, empty one:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const oktaStrategyPath = path.resolve(__dirname, &quot;collections/auth/OktaStrategy.ts&quot;);\nconst mockModulePath = path.resolve(__dirname, &quot;mocks/emptyObject.ts&quot;);\n\nexport default buildConfig({\n    admin: {\n        webpack: (config) =&gt; {\n            return {\n                ...config,\n                resolve: {\n                    ...config.resolve,\n                    alias: {\n                        ...config.resolve.alias,\n                        [oktaStrategyPath]: mockModulePath,\n                    },\n                },\n            };\n        },\n    },\n});\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">oktaStrategyPath</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"collections/auth/OktaStrategy.ts\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">mockModulePath</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"mocks/emptyObject.ts\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-en\">buildConfig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">webpack</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">config</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n                ...<span class=\"pl-s1\">config</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">resolve</span>: <span class=\"pl-kos\">{</span>\n                    ...<span class=\"pl-s1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolve</span><span class=\"pl-kos\">,</span>\n                    <span class=\"pl-c1\">alias</span>: <span class=\"pl-kos\">{</span>\n                        ...<span class=\"pl-s1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolve</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">alias</span><span class=\"pl-kos\">,</span>\n                        <span class=\"pl-kos\">[</span><span class=\"pl-s1\">oktaStrategyPath</span><span class=\"pl-kos\">]</span>: <span class=\"pl-s1\">mockModulePath</span><span class=\"pl-kos\">,</span>\n                    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Now I was able to start Payload, but got the following error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[15:34:18] ERROR (payload): Error: OAuth 2.0 authentication requires session support when using state. Did you forget to use express-session middleware?\"><pre class=\"notranslate\"><code class=\"notranslate\">[15:34:18] ERROR (payload): Error: OAuth 2.0 authentication requires session support when using state. Did you forget to use express-session middleware?\n</code></pre></div>\n<p dir=\"auto\">Looking at the Payload source, I could see that it doesn't really like sessions, because it has <code class=\"notranslate\">session: false</code> in its call to Passport:</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/payloadcms/payload/blob/b201168bd0970329e1b4194861301592f2ab8da4/src/express/middleware/authenticate.ts#L30\">payload/src/express/middleware/authenticate.ts</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 30\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/payloadcms/payload/commit/b201168bd0970329e1b4194861301592f2ab8da4\">b201168</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L30\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"30\"></td>\n          <td id=\"LC30\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">authenticate</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">passport</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">authenticate</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">methods</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">session</span>: <span class=\"pl-c1\">false</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Anyway, I installed <code class=\"notranslate\">express-session</code> and added it to my config:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import express from &quot;express&quot;;\nimport session from &quot;express-session&quot;;\nimport passport from &quot;passport&quot;;\nimport payload from &quot;payload&quot;;\n\nrequire(&quot;dotenv&quot;).config();\nconst app = express();\n\napp.use(\n    session({\n        secret: &quot;some-secret&quot;,\n        resave: true,\n        saveUninitialized: true,\n    })\n);\n\napp.get(&quot;/&quot;, (_, res) =&gt; {\n    res.redirect(&quot;/admin&quot;);\n});\n\npayload.init({\n    secret: process.env.PAYLOAD_SECRET,\n    mongoURL: process.env.MONGODB_URI,\n    express: app,\n    onInit: () =&gt; {\n        payload.logger.info(`Payload Admin URL: ${payload.getAdminURL()}`);\n    },\n});\n\napp.get(\n    &quot;/authorization-code/callback&quot;,\n    passport.authenticate(&quot;users-okta&quot;),\n    function (req, res, next) {\n        req.user = {\n            collection: &quot;users&quot;,\n            email: &quot;xxxxxxx@gmail.com&quot;,\n            id: &quot;62fb90287bed9b334e530765&quot;,\n        };\n\n        res.redirect(&quot;/admin&quot;);\n    }\n);\n\napp.listen(process.env.PORT || 3000);\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">express</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"express\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">session</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"express-session\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">passport</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"passport\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload\"</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"dotenv\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">app</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">express</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">use</span><span class=\"pl-kos\">(</span>\n    <span class=\"pl-en\">session</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">secret</span>: <span class=\"pl-s\">\"some-secret\"</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">resave</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">saveUninitialized</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"/\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">_</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">redirect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"/admin\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">secret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_SECRET</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MONGODB_URI</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">express</span>: <span class=\"pl-s1\">app</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">onInit</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">info</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Payload Admin URL: <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getAdminURL</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span>\n    <span class=\"pl-s\">\"/authorization-code/callback\"</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">passport</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">authenticate</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"users-okta\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">next</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">\"users\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">email</span>: <span class=\"pl-s\">\"xxxxxxx@gmail.com\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">id</span>: <span class=\"pl-s\">\"62fb90287bed9b334e530765\"</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">redirect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"/admin\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">listen</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PORT</span> <span class=\"pl-c1\">||</span> <span class=\"pl-c1\">3000</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\"><strong>Notice:</strong> I had to use <code class=\"notranslate\">passport.authenticate(\"users-okta\")</code>, rather than just <code class=\"notranslate\">\"okta\"</code>, because Payload prepends the collection slug to the auth strategy name.</p>\n<p dir=\"auto\">At this point, I started getting a blank Payload admin and a request to <code class=\"notranslate\">http://localhost:3000/api/users/me</code> that got redirected to <code class=\"notranslate\">https://trial-XXXXXXX.okta.com/oauth2/v1/authorize?response_type=code&amp;redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fauthorization-code%2Fcallback&amp;scope=openid%20email%20profile&amp;state=4zVzKTk57O2wV14e3qXECGu9&amp;client_id=0oa3gcuk9uIqaHVzU697</code>.</p>\n<p dir=\"auto\">Okta correctly responds with the sign-in page, but that's an AJAX call and instead of redirecting, Payload expects JSON, which leads to this error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"VM751:1 Uncaught (in promise) SyntaxError: Unexpected token '&lt;', &quot;&lt;!DOCTYPE &quot;... is not valid JSON\"><pre class=\"notranslate\"><code class=\"notranslate\">VM751:1 Uncaught (in promise) SyntaxError: Unexpected token '&lt;', \"&lt;!DOCTYPE \"... is not valid JSON\n</code></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5570098/204854244-0bf717eb-21bc-45ec-914e-d556b9748e3e.png\"><img src=\"https://user-images.githubusercontent.com/5570098/204854244-0bf717eb-21bc-45ec-914e-d556b9748e3e.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Luckily, the response is still valid and comes back with status code 200:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5570098/204855650-069e3710-3c1f-4aa4-86e4-678cc4341296.png\"><img src=\"https://user-images.githubusercontent.com/5570098/204855650-069e3710-3c1f-4aa4-86e4-678cc4341296.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Just for the sake of testing, I double-click on the request to open it in the browser and check if the rest follows through. It doesn't, of course, and I get this error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Error: Failed to serialize user into session\n    at pass (C:\\Projects\\payload-project\\node_modules\\passport\\lib\\authenticator.js:278:19)\n    at Authenticator.serializeUser (C:\\Projects\\payload-project\\node_modules\\passport\\lib\\authenticator.js:296:5)\n    at C:\\Projects\\payload-project\\node_modules\\passport\\lib\\sessionmanager.js:33:10\n    at Immediate.&lt;anonymous&gt; (C:\\Projects\\payload-project\\node_modules\\express-session\\session\\store.js:54:5)\n    at processImmediate (node:internal/timers:471:21)\"><pre class=\"notranslate\"><code class=\"notranslate\">Error: Failed to serialize user into session\n    at pass (C:\\Projects\\payload-project\\node_modules\\passport\\lib\\authenticator.js:278:19)\n    at Authenticator.serializeUser (C:\\Projects\\payload-project\\node_modules\\passport\\lib\\authenticator.js:296:5)\n    at C:\\Projects\\payload-project\\node_modules\\passport\\lib\\sessionmanager.js:33:10\n    at Immediate.&lt;anonymous&gt; (C:\\Projects\\payload-project\\node_modules\\express-session\\session\\store.js:54:5)\n    at processImmediate (node:internal/timers:471:21)\n</code></pre></div>\n<p dir=\"auto\">After checking <a href=\"https://www.passportjs.org/tutorials/password/session/\" rel=\"nofollow\">the Passport docs about sessions</a>, I add this below <code class=\"notranslate\">app.use(session({ ... }))</code>:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"passport.serializeUser(function (user, done) {\n    done(null, user);\n});\n\npassport.deserializeUser(function (user, done) {\n    done(null, user);\n});\"><pre class=\"notranslate\"><span class=\"pl-s1\">passport</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">serializeUser</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">done</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">done</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">passport</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">deserializeUser</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">done</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">done</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">After retrying, I could finally see that the authentication goes through, because the <code class=\"notranslate\">OktaStrategy</code> verify function logged:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"logged in as Hristiyan Dodov\"><pre class=\"notranslate\"><code class=\"notranslate\">logged in as Hristiyan Dodov\n</code></pre></div>\n<p dir=\"auto\">I was redirected back to <code class=\"notranslate\">http://localhost:3000/admin</code>, but wasn't logged in. I still had a blank screen with the failing request to <code class=\"notranslate\">/me</code>.</p>\n<p dir=\"auto\">I poked around the source code and found out that Payload uses a JWT to authenticate, so I decided to modify my callback handler to create the same token:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import getCookieExpiration from &quot;payload/dist/utilities/getCookieExpiration&quot;;\nimport jwt from &quot;jsonwebtoken&quot;;\n\n// ...\n\napp.get(\n    &quot;/authorization-code/callback&quot;,\n    passport.authenticate(&quot;users-okta&quot;),\n    function (req, res, next) {\n        const collectionConfig = payload.collections.users.config;\n        const token = jwt.sign(\n            {\n                collection: &quot;users&quot;,\n                email: &quot;xxxxxxx@gmail.com&quot;,\n                id: &quot;62fb90287bed9b334e530765&quot;,\n            },\n            payload.secret,\n            {\n                expiresIn: collectionConfig.auth.tokenExpiration,\n            }\n        );\n\n        const cookieOptions: CookieOptions = {\n            path: &quot;/&quot;,\n            httpOnly: true,\n            expires: getCookieExpiration(collectionConfig.auth.tokenExpiration),\n            secure: collectionConfig.auth.cookies.secure,\n            sameSite: collectionConfig.auth.cookies.sameSite,\n            domain: undefined,\n        };\n\n        if (collectionConfig.auth.cookies.domain)\n            cookieOptions.domain = collectionConfig.auth.cookies.domain;\n\n        res.cookie(`${payload.config.cookiePrefix}-token`, token, cookieOptions);\n\n        req.user = {\n            collection: &quot;users&quot;,\n            email: &quot;xxxxxxx@gmail.com&quot;,\n            id: &quot;62fb90287bed9b334e530765&quot;,\n        };\n\n        res.redirect(&quot;/admin&quot;);\n    }\n);\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">getCookieExpiration</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/dist/utilities/getCookieExpiration\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">jwt</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"jsonwebtoken\"</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// ...</span>\n\n<span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span>\n    <span class=\"pl-s\">\"/authorization-code/callback\"</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">passport</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">authenticate</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"users-okta\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">next</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">collectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">collections</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">users</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">token</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">jwt</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">sign</span><span class=\"pl-kos\">(</span>\n            <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">\"users\"</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">email</span>: <span class=\"pl-s\">\"xxxxxxx@gmail.com\"</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">id</span>: <span class=\"pl-s\">\"62fb90287bed9b334e530765\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">secret</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">expiresIn</span>: <span class=\"pl-s1\">collectionConfig</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">tokenExpiration</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">cookieOptions</span>: <span class=\"pl-smi\">CookieOptions</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">\"/\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">httpOnly</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">expires</span>: <span class=\"pl-en\">getCookieExpiration</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">collectionConfig</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">tokenExpiration</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">secure</span>: <span class=\"pl-s1\">collectionConfig</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">cookies</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">secure</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">sameSite</span>: <span class=\"pl-s1\">collectionConfig</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">cookies</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">sameSite</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">domain</span>: <span class=\"pl-c1\">undefined</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">collectionConfig</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">cookies</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">domain</span><span class=\"pl-kos\">)</span>\n            <span class=\"pl-s1\">cookieOptions</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">domain</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">collectionConfig</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">cookies</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">domain</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">cookie</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">cookiePrefix</span><span class=\"pl-kos\">}</span></span>-token`</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">token</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">cookieOptions</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">\"users\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">email</span>: <span class=\"pl-s\">\"xxxxxxx@gmail.com\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">id</span>: <span class=\"pl-s\">\"62fb90287bed9b334e530765\"</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">redirect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"/admin\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">…but nothing changed. I was still getting a blank screen. To verify that the generated token is in fact correct, I temporarily re-enabled the default auth strategy, opened an incognito window, and manually added the cookie with the token:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"document.cookie = &quot;payload-token=eyJhbGciOiJIUz…RFic&quot;;\"><pre class=\"notranslate\"><span class=\"pl-smi\">document</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">cookie</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"payload-token=eyJhbGciOiJIUz…RFic\"</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">When I navigated to Payload, I was logged in, therefore my JWT was correct.</p>\n<h1 dir=\"auto\">Questions</h1>\n<p dir=\"auto\">It appears that there's some incompatibility between Payload and this particular Passport.js setup. How am I supposed to implement authentication in this case? I think there are two approaches:</p>\n<ol dir=\"auto\">\n<li>Somehow disable Payload's JWT auth and use only the session-based OAuth strategy. I'm not a huge fan of this, though. I think it's better to use a session just for the initial front-channel communication between Payload and Okta, then ending the session, generating a JWT, and using that instead. Is this possible?</li>\n<li>Create completely separate Express routes for authentication and handle it entirely out of the context of Payload. Then, generate the JWT as I do now, redirect to the admin, and the user should be logged in. I'm not sure how to approach this in terms of Payload config, though. On one hand, I don't want the default login strategy with password, so I must have <code class=\"notranslate\">disableLocalStrategy: true</code>. On the other hand, I want the default JWT validation.</li>\n</ol>\n<p dir=\"auto\">Does anyone have ideas?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1555",
    "id": "1555",
    "createdAt": "2022-11-30T17:22:20Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "hdodov",
      "avatar": "https://avatars.githubusercontent.com/u/5570098?u=99fa010aba0ab1241292d2c35ba4c5c30699291b&v=4",
      "url": "https://github.com/hdodov"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/hdodov/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hdodov\">@hdodov</a> - first up, I just want to note that I know exactly what you're facing here, and the truth is that implementing SSO with any application that offers an admin UI <em><strong>as well as</strong></em> API endpoints presents quite a challenge for many reasons.</p>\n<p dir=\"auto\">The Passport strategy that you've found, indeed, is not 100% applicable to Payload because we are more than a \"SaaS\" app. As in, <em><strong>all of our API endpoints also need to be able to authenticate a user</strong></em>, and you can't just simply redirect a non-authenticated user over to an Okta screen to authenticate. You might be able to do that for any <em><strong>admin panel</strong></em> routes, but for all API routes, they should not redirect and just return normally as if the user is not logged in.</p>\n<p dir=\"auto\">As you expect, you need to rather consider some type of \"bearer strategy\" where you can provide a token via cookie or a header that will allow the user to identify themselves. And then you'd need to, as you mention, add your own Express routes for redirection from your identity provider, setting HTTP-only cookie tokens, logging out, refreshing, etc.</p>\n<p dir=\"auto\">Long story short, this is challenging stuff—especially if you want to ensure that provided tokens are verified using the encryption protocol that the identity provider offers.</p>\n<p dir=\"auto\">I'm not sure if you've seen, but all of this complexity is why we offer an official Payload SSO plugin for our enterprise customers. Our SSO plugin handles all of this seamlessly and is tested with Okta out of the box. We built our own Passport strategy and wrote token verification, automatic silent refreshing, etc. all into it but it was no small task.</p>\n<p dir=\"auto\">You can indeed build this via a plugin yourself if you're up for the challenge but there is certainly a good amount of work involved.</p>\n<p dir=\"auto\">If you're up for learning more about our enterprise offering, including our SSO plugin, I'd be happy to set up a meeting sometime!</p>",
        "createdAt": "2022-11-30T17:50:53Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/hdodov/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hdodov\">@hdodov</a> - first up, I just want to note that I know exactly what you're facing here, and the truth is that implementing SSO with any application that offers an admin UI <em><strong>as well as</strong></em> API endpoints presents quite a challenge for many reasons.</p>\n<p dir=\"auto\">The Passport strategy that you've found, indeed, is not 100% applicable to Payload because we are more than a \"SaaS\" app. As in, <em><strong>all of our API endpoints also need to be able to authenticate a user</strong></em>, and you can't just simply redirect a non-authenticated user over to an Okta screen to authenticate. You might be able to do that for any <em><strong>admin panel</strong></em> routes, but for all API routes, they should not redirect and just return normally as if the user is not logged in.</p>\n<p dir=\"auto\">As you expect, you need to rather consider some type of \"bearer strategy\" where you can provide a token via cookie or a header that will allow the user to identify themselves. And then you'd need to, as you mention, add your own Express routes for redirection from your identity provider, setting HTTP-only cookie tokens, logging out, refreshing, etc.</p>\n<p dir=\"auto\">Long story short, this is challenging stuff—especially if you want to ensure that provided tokens are verified using the encryption protocol that the identity provider offers.</p>\n<p dir=\"auto\">I'm not sure if you've seen, but all of this complexity is why we offer an official Payload SSO plugin for our enterprise customers. Our SSO plugin handles all of this seamlessly and is tested with Okta out of the box. We built our own Passport strategy and wrote token verification, automatic silent refreshing, etc. all into it but it was no small task.</p>\n<p dir=\"auto\">You can indeed build this via a plugin yourself if you're up for the challenge but there is certainly a good amount of work involved.</p>\n<p dir=\"auto\">If you're up for learning more about our enterprise offering, including our SSO plugin, I'd be happy to set up a meeting sometime!</p>",
      "createdAt": "2022-11-30T17:50:53Z",
      "chosenAt": "2022-12-14T16:35:24Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Is a \"user rating\" feature possible with Payload?",
    "body": "<p dir=\"auto\">How can I create something akin to a \"user rating\" feature? I.e., each user can create and edit their own row for each article, either as a many-to-many relationship <code class=\"notranslate\">article_user_rating</code>   or as a hasMany relationship field in the <code class=\"notranslate\">article</code> or in the <code class=\"notranslate\">user</code> collection. In both case, the row should includes a field for the rating (integer).</p>\n<p dir=\"auto\">I couldn't find a way to constrain the [article_id, user_id] pair to be unique. Is something like a composite key unique constraint possible?</p>\n<p dir=\"auto\">Also, how would I display the 5-stars widget for the current user to be able to rate the article in the admin edit page?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1549",
    "id": "1549",
    "createdAt": "2022-11-30T12:13:26Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "vibl",
      "avatar": "https://avatars.githubusercontent.com/u/628818?u=c47c2ac0a9a3603f063161a713d550d40313b950&v=4",
      "url": "https://github.com/vibl"
    },
    "comments": [
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/vibl/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vibl\">@vibl</a> You could create a <code class=\"notranslate\">ratings</code> collection, and store your data there. You would have a field for the user, the article and the rating.</p>\n<p dir=\"auto\">To make them unique you could create a hidden field (set it to unique in the config) and use a beforeValidate hook to generate the value for that field by concatenating the userID and the articleID.</p>\n<p dir=\"auto\">To display it on an article page within the admin panel, you could create a custom <code class=\"notranslate\">ui</code> field, that fetches the users rating based on the article they are viewing (the useDocumentInfo hook would be useful here). If there is a rating, set that as your value in your customStarComponent field. On change make a POST req to the ratings collection where user = userID and article = articleID.</p>\n<p dir=\"auto\">How does that sound to you?</p>",
        "createdAt": "2022-11-30T15:58:13Z",
        "replies": null
      },
      {
        "author": {
          "name": "cbrualdi",
          "avatar": "https://avatars.githubusercontent.com/u/3200532?u=0e222360e3a2137ee00c3a2102a0dfc177c33a7c&v=4",
          "url": "https://github.com/cbrualdi"
        },
        "body": "<p dir=\"auto\">I'd approach it this way:</p>\n<ul dir=\"auto\">\n<li>A <code class=\"notranslate\">beforeChange</code> hook on <code class=\"notranslate\">RatingCollection</code> to save the user who is rating in a readonly or disabled field</li>\n<li>An <code class=\"notranslate\">access:read</code> function to show the user only his own ratings</li>\n<li>A <code class=\"notranslate\">validate</code> function on the <code class=\"notranslate\">product</code> relation to check the uniqueness of the [user, products] rating</li>\n</ul>\n<p dir=\"auto\">Something like this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const ProductsCollection: CollectionConfig = {\n  slug: 'products-for-rating',\n  labels: { plural: 'Products' },\n  admin: {\n    group: 'Rating',\n    useAsTitle: 'productName'\n  },\n  fields: [\n    {\n      name: 'productName',\n      type: 'text',\n    }\n  ],\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-smi\">ProductsCollection</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'products-for-rating'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">labels</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">plural</span>: <span class=\"pl-s\">'Products'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">group</span>: <span class=\"pl-s\">'Rating'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'productName'</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'productName'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const RatingsCollection: CollectionConfig = {\n  slug: 'ratings',\n  admin: {\n    group: 'Rating',\n  },\n  fields: [\n    {\n      name: 'product',\n      type: 'relationship',\n      relationTo: 'products-for-rating',\n      validate: async (val, { user }) =&gt; {\n        const query = qs.stringify({\n          where: {\n            and: [\n              {\n                product: { equals: val }\n              },\n              {\n                user: { equals: user.id }\n              }\n            ]\n          } \n        }, { addQueryPrefix: true })\n        \n        const response = await fetch(`http://localhost:3000/api/ratings${query}`)\n        const sameRating = await response.json()\n\n        if (!sameRating.totalDocs) {\n          return true;\n        }\n\n        return 'You have already rated this product.';\n      },\n    },\n    {\n      name: 'rating',\n      type: 'number',\n      min: 1, max: 5,\n      // admin: {\n      //   components: {\n      //     Field: FiveStarsField\n      //   }\n      // }\n    },\n    {\n      name: 'user',\n      type: 'relationship',\n      relationTo: 'users',\n      admin: {\n        readOnly: true\n      },\n    },\n  ],\n  access: {\n    read: ({ req: { user }, id }) =&gt; { \n      return {\n        user: { \n          equals: user.id \n        }\n      } \n    }\n  },\n  hooks: {\n    beforeChange: [async ({\n      data,\n      req, \n    }) =&gt; {\n      data.user = req.user.id\n      return data;\n    }]\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-smi\">RatingsCollection</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'ratings'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">group</span>: <span class=\"pl-s\">'Rating'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'product'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'products-for-rating'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-en\">validate</span>: <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">val</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> user <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">query</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">qs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">where</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">and</span>: <span class=\"pl-kos\">[</span>\n              <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">product</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">equals</span>: <span class=\"pl-s1\">val</span> <span class=\"pl-kos\">}</span>\n              <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">user</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">equals</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span> <span class=\"pl-kos\">}</span>\n              <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">]</span>\n          <span class=\"pl-kos\">}</span> \n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">addQueryPrefix</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n        \n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">response</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`http://localhost:3000/api/ratings<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">query</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">sameRating</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">response</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">json</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">sameRating</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">totalDocs</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n\n        <span class=\"pl-k\">return</span> <span class=\"pl-s\">'You have already rated this product.'</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'rating'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">min</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">max</span>: <span class=\"pl-c1\">5</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c\">// admin: {</span>\n      <span class=\"pl-c\">//   components: {</span>\n      <span class=\"pl-c\">//     Field: FiveStarsField</span>\n      <span class=\"pl-c\">//   }</span>\n      <span class=\"pl-c\">// }</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'user'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'users'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">readOnly</span>: <span class=\"pl-c1\">true</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">req</span>: <span class=\"pl-kos\">{</span> user <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> id <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span> \n      <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">user</span>: <span class=\"pl-kos\">{</span> \n          <span class=\"pl-c1\">equals</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span> \n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span> \n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      data<span class=\"pl-kos\">,</span>\n      req<span class=\"pl-kos\">,</span> \n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">To show the 5-stars field you can provide a custom <a href=\"https://payloadcms.com/docs/admin/components#field-component\" rel=\"nofollow\">Field Component</a> to the <code class=\"notranslate\">rating</code> field.</p>\n<p dir=\"auto\">If I understand your problem correctly, this work for me, but I'm curious to know if there's a better approach.</p>",
        "createdAt": "2022-11-30T16:05:29Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "cbrualdi",
        "avatar": "https://avatars.githubusercontent.com/u/3200532?u=0e222360e3a2137ee00c3a2102a0dfc177c33a7c&v=4",
        "url": "https://github.com/cbrualdi"
      },
      "body": "<p dir=\"auto\">I'd approach it this way:</p>\n<ul dir=\"auto\">\n<li>A <code class=\"notranslate\">beforeChange</code> hook on <code class=\"notranslate\">RatingCollection</code> to save the user who is rating in a readonly or disabled field</li>\n<li>An <code class=\"notranslate\">access:read</code> function to show the user only his own ratings</li>\n<li>A <code class=\"notranslate\">validate</code> function on the <code class=\"notranslate\">product</code> relation to check the uniqueness of the [user, products] rating</li>\n</ul>\n<p dir=\"auto\">Something like this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const ProductsCollection: CollectionConfig = {\n  slug: 'products-for-rating',\n  labels: { plural: 'Products' },\n  admin: {\n    group: 'Rating',\n    useAsTitle: 'productName'\n  },\n  fields: [\n    {\n      name: 'productName',\n      type: 'text',\n    }\n  ],\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-smi\">ProductsCollection</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'products-for-rating'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">labels</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">plural</span>: <span class=\"pl-s\">'Products'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">group</span>: <span class=\"pl-s\">'Rating'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'productName'</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'productName'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const RatingsCollection: CollectionConfig = {\n  slug: 'ratings',\n  admin: {\n    group: 'Rating',\n  },\n  fields: [\n    {\n      name: 'product',\n      type: 'relationship',\n      relationTo: 'products-for-rating',\n      validate: async (val, { user }) =&gt; {\n        const query = qs.stringify({\n          where: {\n            and: [\n              {\n                product: { equals: val }\n              },\n              {\n                user: { equals: user.id }\n              }\n            ]\n          } \n        }, { addQueryPrefix: true })\n        \n        const response = await fetch(`http://localhost:3000/api/ratings${query}`)\n        const sameRating = await response.json()\n\n        if (!sameRating.totalDocs) {\n          return true;\n        }\n\n        return 'You have already rated this product.';\n      },\n    },\n    {\n      name: 'rating',\n      type: 'number',\n      min: 1, max: 5,\n      // admin: {\n      //   components: {\n      //     Field: FiveStarsField\n      //   }\n      // }\n    },\n    {\n      name: 'user',\n      type: 'relationship',\n      relationTo: 'users',\n      admin: {\n        readOnly: true\n      },\n    },\n  ],\n  access: {\n    read: ({ req: { user }, id }) =&gt; { \n      return {\n        user: { \n          equals: user.id \n        }\n      } \n    }\n  },\n  hooks: {\n    beforeChange: [async ({\n      data,\n      req, \n    }) =&gt; {\n      data.user = req.user.id\n      return data;\n    }]\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-smi\">RatingsCollection</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'ratings'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">group</span>: <span class=\"pl-s\">'Rating'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'product'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'products-for-rating'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-en\">validate</span>: <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">val</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> user <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">query</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">qs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">where</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">and</span>: <span class=\"pl-kos\">[</span>\n              <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">product</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">equals</span>: <span class=\"pl-s1\">val</span> <span class=\"pl-kos\">}</span>\n              <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">user</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">equals</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span> <span class=\"pl-kos\">}</span>\n              <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">]</span>\n          <span class=\"pl-kos\">}</span> \n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">addQueryPrefix</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n        \n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">response</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`http://localhost:3000/api/ratings<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">query</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">sameRating</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">response</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">json</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">sameRating</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">totalDocs</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n\n        <span class=\"pl-k\">return</span> <span class=\"pl-s\">'You have already rated this product.'</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'rating'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">min</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">max</span>: <span class=\"pl-c1\">5</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c\">// admin: {</span>\n      <span class=\"pl-c\">//   components: {</span>\n      <span class=\"pl-c\">//     Field: FiveStarsField</span>\n      <span class=\"pl-c\">//   }</span>\n      <span class=\"pl-c\">// }</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'user'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'users'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">readOnly</span>: <span class=\"pl-c1\">true</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">req</span>: <span class=\"pl-kos\">{</span> user <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> id <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span> \n      <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">user</span>: <span class=\"pl-kos\">{</span> \n          <span class=\"pl-c1\">equals</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span> \n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span> \n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      data<span class=\"pl-kos\">,</span>\n      req<span class=\"pl-kos\">,</span> \n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">To show the 5-stars field you can provide a custom <a href=\"https://payloadcms.com/docs/admin/components#field-component\" rel=\"nofollow\">Field Component</a> to the <code class=\"notranslate\">rating</code> field.</p>\n<p dir=\"auto\">If I understand your problem correctly, this work for me, but I'm curious to know if there's a better approach.</p>",
      "createdAt": "2022-11-30T16:05:29Z",
      "chosenAt": "2022-12-22T15:42:38Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Deploying on CloudFlare Pages or Vercel",
    "body": "<p dir=\"auto\">Hey,<br>\nis it possible to deploy Payload CMS to either CloudFlare Pages or Vercel? If yes, could someone give me a very brief step by step guide?</p>\n<p dir=\"auto\">Thank you,<br>\nAlessio</p>",
    "url": "https://github.com/payloadcms/payload/discussions/528",
    "id": "528",
    "createdAt": "2022-04-17T12:25:26Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "AlessioGr",
      "avatar": "https://avatars.githubusercontent.com/u/70709113?u=f22c2c8c53c453557cbae38c6ac9962191be62e8&v=4",
      "url": "https://github.com/AlessioGr"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/AlessioGr/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AlessioGr\">@AlessioGr</a> — we've actually been working with another community member about deploying to Vercel in the following Discussion:</p>\n<p dir=\"auto\"><a aria-label=\"Discussion #519\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4002020\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/519\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/519/hovercard?comment_id=2546637\" href=\"https://github.com/payloadcms/payload/discussions/519#discussioncomment-2546637\">#519 (comment)</a></p>\n<p dir=\"auto\">TL;DR: Vercel is a serverless platform and Payload runs on Express. You <em><strong>can</strong></em> deploy Express apps to Vercel, but they don't recommend it. Check out that link for more info.</p>\n<p dir=\"auto\">Regarding Cloudflare Pages, I believe that platform is meant to serve <em>static</em> sites, and Payload comes with APIs. So I'm not sure that you'd be able to deploy Payload to Cloudflare Pages.</p>",
        "createdAt": "2022-04-20T14:58:25Z",
        "replies": [
          {
            "author": {
              "name": "AlessioGr",
              "avatar": "https://avatars.githubusercontent.com/u/70709113?u=f22c2c8c53c453557cbae38c6ac9962191be62e8&v=4",
              "url": "https://github.com/AlessioGr"
            },
            "body": "<p dir=\"auto\">I see, thank you a lot for the explanation! As for Cloudflare, you can probably use \"Workers\", but I guess that has the similar limitations as Vercel serverless functions</p>",
            "createdAt": "2022-04-20T15:03:07Z"
          },
          {
            "author": {
              "name": "balupton",
              "avatar": "https://avatars.githubusercontent.com/u/61148?u=39ada36fa18dbe1f62cb1778d15475445f5cb1fa&v=4",
              "url": "https://github.com/balupton"
            },
            "body": "<p dir=\"auto\">So Cloudflare Pages is just some tooling around Cloudflare Workers and KV to make edge static and dynamic sites possible, it is Cloudflare's competitor to Vercel. So Remix and Astro sites deployed to Cloudflare Pages support static assets, ssr, edge functions, and client components; plus the benefits of cloudflare; worlds largest cdn and ddos protection, kv, d1, r2, queue, etc. That said, the Cloudflare suggestion is best suited by <a aria-label=\"Discussion #1525\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4608569\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1525\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1525/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/1525\">#1525</a></p>",
            "createdAt": "2022-11-29T04:06:16Z"
          },
          {
            "author": {
              "name": "balupton",
              "avatar": "https://avatars.githubusercontent.com/u/61148?u=39ada36fa18dbe1f62cb1778d15475445f5cb1fa&v=4",
              "url": "https://github.com/balupton"
            },
            "body": "<p dir=\"auto\">For facilitation of the various serverless platforms, swapping out express for <a href=\"https://github.com/honojs/hono\">https://github.com/honojs/hono</a> might be a good move</p>",
            "createdAt": "2022-11-29T04:08:44Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/AlessioGr/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AlessioGr\">@AlessioGr</a> — we've actually been working with another community member about deploying to Vercel in the following Discussion:</p>\n<p dir=\"auto\"><a aria-label=\"Discussion #519\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4002020\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/519\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/519/hovercard?comment_id=2546637\" href=\"https://github.com/payloadcms/payload/discussions/519#discussioncomment-2546637\">#519 (comment)</a></p>\n<p dir=\"auto\">TL;DR: Vercel is a serverless platform and Payload runs on Express. You <em><strong>can</strong></em> deploy Express apps to Vercel, but they don't recommend it. Check out that link for more info.</p>\n<p dir=\"auto\">Regarding Cloudflare Pages, I believe that platform is meant to serve <em>static</em> sites, and Payload comes with APIs. So I'm not sure that you'd be able to deploy Payload to Cloudflare Pages.</p>",
      "createdAt": "2022-04-20T14:58:25Z",
      "chosenAt": "2022-04-20T15:01:22Z",
      "chosenBy": "AlessioGr",
      "replies": [
        {
          "author": {
            "name": "AlessioGr",
            "avatar": "https://avatars.githubusercontent.com/u/70709113?u=f22c2c8c53c453557cbae38c6ac9962191be62e8&v=4",
            "url": "https://github.com/AlessioGr"
          },
          "body": "<p dir=\"auto\">I see, thank you a lot for the explanation! As for Cloudflare, you can probably use \"Workers\", but I guess that has the similar limitations as Vercel serverless functions</p>",
          "createdAt": "2022-04-20T15:03:07Z"
        },
        {
          "author": {
            "name": "balupton",
            "avatar": "https://avatars.githubusercontent.com/u/61148?u=39ada36fa18dbe1f62cb1778d15475445f5cb1fa&v=4",
            "url": "https://github.com/balupton"
          },
          "body": "<p dir=\"auto\">So Cloudflare Pages is just some tooling around Cloudflare Workers and KV to make edge static and dynamic sites possible, it is Cloudflare's competitor to Vercel. So Remix and Astro sites deployed to Cloudflare Pages support static assets, ssr, edge functions, and client components; plus the benefits of cloudflare; worlds largest cdn and ddos protection, kv, d1, r2, queue, etc. That said, the Cloudflare suggestion is best suited by <a aria-label=\"Discussion #1525\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4608569\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1525\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/1525/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/1525\">#1525</a></p>",
          "createdAt": "2022-11-29T04:06:16Z"
        },
        {
          "author": {
            "name": "balupton",
            "avatar": "https://avatars.githubusercontent.com/u/61148?u=39ada36fa18dbe1f62cb1778d15475445f5cb1fa&v=4",
            "url": "https://github.com/balupton"
          },
          "body": "<p dir=\"auto\">For facilitation of the various serverless platforms, swapping out express for <a href=\"https://github.com/honojs/hono\">https://github.com/honojs/hono</a> might be a good move</p>",
          "createdAt": "2022-11-29T04:08:44Z"
        }
      ]
    }
  },
  {
    "title": "Node of richText is missing type",
    "body": "<h3 dir=\"auto\">Node of richText is missing type</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16400882/190838024-143303ea-2d4f-4005-8eff-3194187a3f1f.png\"><img width=\"801\" alt=\"image\" src=\"https://user-images.githubusercontent.com/16400882/190838024-143303ea-2d4f-4005-8eff-3194187a3f1f.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16400882/190838029-773e3d37-6d7c-42be-9c01-19350138fb3c.png\"><img width=\"891\" alt=\"image\" src=\"https://user-images.githubusercontent.com/16400882/190838029-773e3d37-6d7c-42be-9c01-19350138fb3c.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">expected format is:  { \"children\":[{\"text\":\"\"}], type: \"paragraph\" }</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1141",
    "id": "1141",
    "createdAt": "2022-09-17T03:44:48Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "zhounewz",
      "avatar": "https://avatars.githubusercontent.com/u/16400882?u=0b9839b373d35997a96ca00f71550153d6c8d945&v=4",
      "url": "https://github.com/zhounewz"
    },
    "comments": [
      {
        "author": {
          "name": "thompsonsj",
          "avatar": "https://avatars.githubusercontent.com/u/44806974?u=e4cf1f5b8708b8efdbab96d64da4c8693003e665&v=4",
          "url": "https://github.com/thompsonsj"
        },
        "body": "<p dir=\"auto\">I believe this is intentional. Slate is <a href=\"https://docs.slatejs.org/#principles\" rel=\"nofollow\">schema-less</a>, so each implementation of Slate defines its own schema.</p>\n<p dir=\"auto\">In the case of Payload CMS, <code class=\"notranslate\">paragraph</code> is not set as a fallback for nodes with no type. This differs from the <a href=\"https://www.slatejs.org/examples/richtext\" rel=\"nofollow\">Slate demo</a>, where <code class=\"notranslate\">paragraph</code> is set on nodes.</p>\n<p dir=\"auto\">In the docs for the rich text field, the serializer example renders the <code class=\"notranslate\">&lt;p&gt;</code> HTML element as the default - i.e. if no types are found. See <a href=\"https://github.com/payloadcms/payload/blob/master/docs/fields/rich-text.mdx\">https://github.com/payloadcms/payload/blob/master/docs/fields/rich-text.mdx</a>.</p>\n<p dir=\"auto\">So I am guessing this is what you are expected to do? If the type is undefined, assume it's a paragraph!</p>",
        "createdAt": "2022-11-28T17:46:20Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "thompsonsj",
        "avatar": "https://avatars.githubusercontent.com/u/44806974?u=e4cf1f5b8708b8efdbab96d64da4c8693003e665&v=4",
        "url": "https://github.com/thompsonsj"
      },
      "body": "<p dir=\"auto\">I believe this is intentional. Slate is <a href=\"https://docs.slatejs.org/#principles\" rel=\"nofollow\">schema-less</a>, so each implementation of Slate defines its own schema.</p>\n<p dir=\"auto\">In the case of Payload CMS, <code class=\"notranslate\">paragraph</code> is not set as a fallback for nodes with no type. This differs from the <a href=\"https://www.slatejs.org/examples/richtext\" rel=\"nofollow\">Slate demo</a>, where <code class=\"notranslate\">paragraph</code> is set on nodes.</p>\n<p dir=\"auto\">In the docs for the rich text field, the serializer example renders the <code class=\"notranslate\">&lt;p&gt;</code> HTML element as the default - i.e. if no types are found. See <a href=\"https://github.com/payloadcms/payload/blob/master/docs/fields/rich-text.mdx\">https://github.com/payloadcms/payload/blob/master/docs/fields/rich-text.mdx</a>.</p>\n<p dir=\"auto\">So I am guessing this is what you are expected to do? If the type is undefined, assume it's a paragraph!</p>",
      "createdAt": "2022-11-28T17:46:20Z",
      "chosenAt": "2022-12-09T16:38:52Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Trying to migrate some data but cannot update 1-on-1",
    "body": "<h1 dir=\"auto\">Bug Report</h1>\n<p dir=\"auto\">We are changing a block to have a list of Call to Actions instead of just one.<br>\nI'm trying to migrate the cta field into the ctaList field like so:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const pages = await payload.find({\n  collection: 'pages',\n});\n\npages.docs.forEach((page: Page) =&gt; {\n  page.content.forEach((block) =&gt; {\n    if (block.blockType === Slug.DefaultContent) {\n      if (block.cta) {\n        block.ctaList = [block.cta];\n\n        payload.update({\n          collection: 'pages',\n          id: page.id,\n          data: {\n            content: page.content,\n          },\n        });\n      }\n    }\n  });\n});\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">pages</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">pages</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">docs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">forEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">page</span>: <span class=\"pl-smi\">Page</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-s1\">page</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">content</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">forEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">block</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">block</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">blockType</span> <span class=\"pl-c1\">===</span> <span class=\"pl-smi\">Slug</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">DefaultContent</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">block</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">cta</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">block</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">ctaList</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">block</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">cta</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">update</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">page</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">content</span>: <span class=\"pl-s1\">page</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">content</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">But I am getting the follow errors:<br>\nValidationError: followingFieldsInvalid content.0.image.image, content.0.cta.page, content.0.ctaList.0.page<br>\nThese are all relationship fields that are bugging out. Any tips on how I can do this?</p>\n<p dir=\"auto\">I am also thinking of making a migration plugin for Payload. If anyone cares to help, let me know <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">😄</g-emoji></p>\n<h2 dir=\"auto\">Other Details</h2>\n<p dir=\"auto\">Payload: 1.2.1</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1509",
    "id": "1509",
    "createdAt": "2022-11-25T13:55:45Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "falko100",
      "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
      "url": "https://github.com/falko100"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Are there additional/required fields defined on your Pages collection? You will likely have to spread the existing page data like this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"payload.update({\n  collection: &quot;pages&quot;,\n  id: page.id,\n  data: {\n    ...page,\n    content: page.content,\n  },\n});\"><pre class=\"notranslate\"><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">update</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">\"pages\"</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">page</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n    ...<span class=\"pl-s1\">page</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">content</span>: <span class=\"pl-s1\">page</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">content</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Let me know if that helps.</p>",
        "createdAt": "2022-11-25T18:10:17Z",
        "replies": null
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Well, I think in this case <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/falko100/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/falko100\">@falko100</a> the problem is that your relationship field data is not in the right shape.</p>\n<p dir=\"auto\">Relationships have four potential different data shapes, so if you're trying to fill relationships, you need to determine which shape is right for your field(s) and pass data to the operation according to the required relationship field configuration.</p>\n<p dir=\"auto\">We have some docs about this here:<br>\n<a href=\"https://payloadcms.com/docs/fields/relationship#how-the-data-is-saved\" rel=\"nofollow\">https://payloadcms.com/docs/fields/relationship#how-the-data-is-saved</a></p>\n<p dir=\"auto\">We do this just about every day without problem, so I don't think this is a bug - moreso you are just passing data incorrectly. I'll bump this over to a Discussion and we can continue the conversation there!</p>",
        "createdAt": "2022-11-25T18:29:19Z",
        "replies": [
          {
            "author": {
              "name": "falko100",
              "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
              "url": "https://github.com/falko100"
            },
            "body": "<p dir=\"auto\">Ahh ok, but the data returned isn't structured like:<br>\n{\"owner\":\"abcd-key\"}<br>\nbut:<br>\n{\"id\":\"abcd-key\", doc: {...}}</p>\n<p dir=\"auto\">Is there a way to use the Local API find to return plain data without the relations loaded?</p>",
            "createdAt": "2022-11-27T07:14:59Z"
          },
          {
            "author": {
              "name": "falko100",
              "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
              "url": "https://github.com/falko100"
            },
            "body": "<p dir=\"auto\">After looking at the documentation a bit more, I figured I could add <code class=\"notranslate\">depth: 0,</code> to my Local API call and then it works :)</p>\n<p dir=\"auto\">I currently made a route in my <code class=\"notranslate\">server.ts</code> file. What's a good location to do these kind of data migrations?</p>",
            "createdAt": "2022-11-27T07:33:38Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Well, I think in this case <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/falko100/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/falko100\">@falko100</a> the problem is that your relationship field data is not in the right shape.</p>\n<p dir=\"auto\">Relationships have four potential different data shapes, so if you're trying to fill relationships, you need to determine which shape is right for your field(s) and pass data to the operation according to the required relationship field configuration.</p>\n<p dir=\"auto\">We have some docs about this here:<br>\n<a href=\"https://payloadcms.com/docs/fields/relationship#how-the-data-is-saved\" rel=\"nofollow\">https://payloadcms.com/docs/fields/relationship#how-the-data-is-saved</a></p>\n<p dir=\"auto\">We do this just about every day without problem, so I don't think this is a bug - moreso you are just passing data incorrectly. I'll bump this over to a Discussion and we can continue the conversation there!</p>",
      "createdAt": "2022-11-25T18:29:19Z",
      "chosenAt": "2022-11-27T07:33:45Z",
      "chosenBy": "falko100",
      "replies": [
        {
          "author": {
            "name": "falko100",
            "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
            "url": "https://github.com/falko100"
          },
          "body": "<p dir=\"auto\">Ahh ok, but the data returned isn't structured like:<br>\n{\"owner\":\"abcd-key\"}<br>\nbut:<br>\n{\"id\":\"abcd-key\", doc: {...}}</p>\n<p dir=\"auto\">Is there a way to use the Local API find to return plain data without the relations loaded?</p>",
          "createdAt": "2022-11-27T07:14:59Z"
        },
        {
          "author": {
            "name": "falko100",
            "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
            "url": "https://github.com/falko100"
          },
          "body": "<p dir=\"auto\">After looking at the documentation a bit more, I figured I could add <code class=\"notranslate\">depth: 0,</code> to my Local API call and then it works :)</p>\n<p dir=\"auto\">I currently made a route in my <code class=\"notranslate\">server.ts</code> file. What's a good location to do these kind of data migrations?</p>",
          "createdAt": "2022-11-27T07:33:38Z"
        }
      ]
    }
  },
  {
    "title": "Payment Gateway Integration",
    "body": "<p dir=\"auto\">Can we integrate Payment Gateway Api in Payload????</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1426",
    "id": "1426",
    "createdAt": "2022-11-16T13:07:01Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "sanjeevbrok99",
      "avatar": "https://avatars.githubusercontent.com/u/97805812?u=7c8c3798a261a2c5eb16510230a5de25c9885b6c&v=4",
      "url": "https://github.com/sanjeevbrok99"
    },
    "comments": [
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/sanjeevbrok99/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sanjeevbrok99\">@sanjeevbrok99</a> yes you should be able to integrate with <em>any</em> third party service, including payment gateways. Stripe is especially good at this, but the integration would look largely the same for any service. Just use the Payload hooks to trigger your payment events: <a href=\"https://payloadcms.com/docs/hooks/overview#hooks-overview\" rel=\"nofollow\">https://payloadcms.com/docs/hooks/overview#hooks-overview</a></p>",
        "createdAt": "2022-11-22T13:53:09Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/sanjeevbrok99/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sanjeevbrok99\">@sanjeevbrok99</a> yes you should be able to integrate with <em>any</em> third party service, including payment gateways. Stripe is especially good at this, but the integration would look largely the same for any service. Just use the Payload hooks to trigger your payment events: <a href=\"https://payloadcms.com/docs/hooks/overview#hooks-overview\" rel=\"nofollow\">https://payloadcms.com/docs/hooks/overview#hooks-overview</a></p>",
      "createdAt": "2022-11-22T13:53:09Z",
      "chosenAt": "2022-12-14T16:27:57Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Cannot find module '@babel/preset-typescript' from '/serverless'",
    "body": "<h1 dir=\"auto\">Bug Report</h1>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/202610536-df6bde76-7702-424b-916d-fa747943b937.png\"><img width=\"1905\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5801015/202610536-df6bde76-7702-424b-916d-fa747943b937.png\" style=\"max-width: 100%;\"></a></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"index.js:10 Uncaught Error: Module build failed (from ./node_modules/babel-loader/lib/index.js):\nError: Cannot find module '@babel/preset-typescript' from '/serverless'\"><pre class=\"notranslate\"><code class=\"notranslate\">index.js:10 Uncaught Error: Module build failed (from ./node_modules/babel-loader/lib/index.js):\nError: Cannot find module '@babel/preset-typescript' from '/serverless'\n</code></pre></div>\n<h2 dir=\"auto\">Current Behavior</h2>\n\n<h2 dir=\"auto\">Expected Behavior</h2>\n\n<h2 dir=\"auto\">Possible Solution</h2>\n\n<h2 dir=\"auto\">Steps to Reproduce</h2>\n\n<h2 dir=\"auto\">Detailed Description</h2>\n\n",
    "url": "https://github.com/payloadcms/payload/discussions/1468",
    "id": "1468",
    "createdAt": "2022-11-18T03:31:37Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "Stupidism",
      "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
      "url": "https://github.com/Stupidism"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Could you please fill out the rest of the bug template? This isn't enough information for us to look into.</p>",
        "createdAt": "2022-11-18T20:34:25Z",
        "replies": null
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Stupidism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Stupidism\">@Stupidism</a> — it looks like this preset is somehow working its way into your client-side JS bundle, which should not happen. You would never want <code class=\"notranslate\">@babel/preset-typescript</code> in your admin bundle. So take a peek through your code and try and find where you are bringing in server-side code, then use Webpack aliases to fix.</p>\n<p dir=\"auto\">Does that make sense? Gonna convert this to a discussion for now!</p>",
        "createdAt": "2022-11-21T14:27:57Z",
        "replies": null
      },
      {
        "author": {
          "name": "Stupidism",
          "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
          "url": "https://github.com/Stupidism"
        },
        "body": "<p dir=\"auto\">I solved it by upgrading @babel/core and @babel/preset-typescript in my dependencies</p>",
        "createdAt": "2022-11-22T08:51:40Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "Stupidism",
        "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
        "url": "https://github.com/Stupidism"
      },
      "body": "<p dir=\"auto\">I solved it by upgrading @babel/core and @babel/preset-typescript in my dependencies</p>",
      "createdAt": "2022-11-22T08:51:40Z",
      "chosenAt": "2022-12-14T16:30:19Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Login attempts not working?",
    "body": "<p dir=\"auto\">Hi all,</p>\n<p dir=\"auto\">got the following setup for the users' collection:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"auth: {\n  useAPIKey: true,\n  tokenExpiration: 86400, // 24h\n  maxLoginAttempts: 3,\n  lockTime: 900, // 15min\n},\"><pre class=\"notranslate\"><span class=\"pl-s1\">auth</span>: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">useAPIKey</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">tokenExpiration</span>: <span class=\"pl-c1\">86400</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// 24h</span>\n  <span class=\"pl-c1\">maxLoginAttempts</span>: <span class=\"pl-c1\">3</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">lockTime</span>: <span class=\"pl-c1\">900</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// 15min</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">As a test did multiple login attempts via graphql-playground where I got the following message in first 3 attempts:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&quot;message&quot;: &quot;The email or password provided is incorrect.&quot;,\"><pre class=\"notranslate\"><code class=\"notranslate\">\"message\": \"The email or password provided is incorrect.\",\n</code></pre></div>\n<p dir=\"auto\">^ That's ok and as expected.</p>\n<p dir=\"auto\">4th attempt</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&quot;message&quot;: &quot;This user is locked due to having too many failed login attempts.&quot;,\"><pre class=\"notranslate\"><code class=\"notranslate\">\"message\": \"This user is locked due to having too many failed login attempts.\",\n</code></pre></div>\n<p dir=\"auto\">^ Fine.</p>\n<p dir=\"auto\">5th attempt</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&quot;message&quot;: &quot;The email or password provided is incorrect.&quot;,\"><pre class=\"notranslate\"><code class=\"notranslate\">\"message\": \"The email or password provided is incorrect.\",\n</code></pre></div>\n<p dir=\"auto\">^ Say whaaaat?</p>\n<p dir=\"auto\">On 6th attempt, I set the correct password and got logged in. However, the expected response would be - a locked account.</p>\n<p dir=\"auto\">Question - is <code class=\"notranslate\">lockTime</code> also defined in seconds (docs don't state in what format) as <code class=\"notranslate\">tokenExpiration</code>? If yes, I guess that's a bug then? If not, what's going wrong?</p>\n<p dir=\"auto\">Version 1.2.0</p>\n<p dir=\"auto\">Thanks.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1455",
    "id": "1455",
    "createdAt": "2022-11-18T21:53:53Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "edtorba",
      "avatar": "https://avatars.githubusercontent.com/u/2422019?u=271aebd294c0152aa49d747a56621b83a4dfba26&v=4",
      "url": "https://github.com/edtorba"
    },
    "comments": [
      {
        "author": {
          "name": "edtorba",
          "avatar": "https://avatars.githubusercontent.com/u/2422019?u=271aebd294c0152aa49d747a56621b83a4dfba26&v=4",
          "url": "https://github.com/edtorba"
        },
        "body": "<p dir=\"auto\">Turns out it is working just fine...</p>\n<p dir=\"auto\">Annoyingly @ <a href=\"https://payloadcms.com/docs/authentication/config\" rel=\"nofollow\">https://payloadcms.com/docs/authentication/config</a> it didn't state that <code class=\"notranslate\">lockTime</code> is defined in ms and I simply assumed that it is seconds as two rows above <code class=\"notranslate\">tokenExpiration</code> is in fact configured in seconds.</p>\n<p dir=\"auto\">Spotted that it is meant to be in ms @ <a href=\"https://payloadcms.com/docs/production/preventing-abuse\" rel=\"nofollow\">https://payloadcms.com/docs/production/preventing-abuse</a>.</p>\n<p dir=\"auto\">Suggestion for the documentation - maybe it's worth having an additional column(s), e.g. default values, expected units, etc.</p>",
        "createdAt": "2022-11-19T00:09:42Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "edtorba",
        "avatar": "https://avatars.githubusercontent.com/u/2422019?u=271aebd294c0152aa49d747a56621b83a4dfba26&v=4",
        "url": "https://github.com/edtorba"
      },
      "body": "<p dir=\"auto\">Turns out it is working just fine...</p>\n<p dir=\"auto\">Annoyingly @ <a href=\"https://payloadcms.com/docs/authentication/config\" rel=\"nofollow\">https://payloadcms.com/docs/authentication/config</a> it didn't state that <code class=\"notranslate\">lockTime</code> is defined in ms and I simply assumed that it is seconds as two rows above <code class=\"notranslate\">tokenExpiration</code> is in fact configured in seconds.</p>\n<p dir=\"auto\">Spotted that it is meant to be in ms @ <a href=\"https://payloadcms.com/docs/production/preventing-abuse\" rel=\"nofollow\">https://payloadcms.com/docs/production/preventing-abuse</a>.</p>\n<p dir=\"auto\">Suggestion for the documentation - maybe it's worth having an additional column(s), e.g. default values, expected units, etc.</p>",
      "createdAt": "2022-11-19T00:09:42Z",
      "chosenAt": "2022-11-19T00:09:45Z",
      "chosenBy": "edtorba",
      "replies": null
    }
  },
  {
    "title": "How to  encrypt field level using payload?",
    "body": "<p dir=\"auto\">I am new to payload and I was hoping if payload can handle encrypt field level to DB and decrypt on payload UI</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1435",
    "id": "1435",
    "createdAt": "2022-11-17T03:22:59Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "kalib-code",
      "avatar": "https://avatars.githubusercontent.com/u/17924045?u=2f494b4e8ae7218af97677cb19a82d04402f1bec&v=4",
      "url": "https://github.com/kalib-code"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Here is an example using Payload's own ecrypt and decrypt functions.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// encryptionHooks.ts\nimport { FieldHook } from 'payload/types';\n\nconst encryptKey: FieldHook = ({ req, value }) =&gt; (value ? req.payload.encrypt(value as string) : undefined);\nconst decryptKey: FieldHook = ({ req, value }) =&gt; (value ? req.payload.decrypt(value as string) : undefined);\n\nconst encryptionHooks = {\n  beforeChange: [\n    encryptKey,\n  ],\n  afterRead: [\n    decryptKey,\n  ],\n};\n\nexport default encryptionHooks;\"><pre class=\"notranslate\"><span class=\"pl-c\">// encryptionHooks.ts</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">FieldHook</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">encryptKey</span>: <span class=\"pl-smi\">FieldHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req<span class=\"pl-kos\">,</span> value <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span> ? <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">encrypt</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span> <span class=\"pl-k\">as</span> <span class=\"pl-smi\">string</span><span class=\"pl-kos\">)</span> : <span class=\"pl-c1\">undefined</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">decryptKey</span>: <span class=\"pl-smi\">FieldHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req<span class=\"pl-kos\">,</span> value <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span> ? <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">decrypt</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span> <span class=\"pl-k\">as</span> <span class=\"pl-smi\">string</span><span class=\"pl-kos\">)</span> : <span class=\"pl-c1\">undefined</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">encryptionHooks</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-s1\">encryptKey</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">afterRead</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-s1\">decryptKey</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-s1\">encryptionHooks</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Example usage in a field:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import encryptionHooks from '../../fields/encryptionHooks';\n\nconst Customers: CollectionConfig = {\n\tslug: 'customers',\n\tfields: [\n\t\t{\n\t\t\tname: 'ssn',\n\t\t\tlabel: 'SSN',\n\t\t\ttype: 'text',\n\t\t\thooks: encryptionHooks,\n\t\t},\n\t],\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">encryptionHooks</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../../fields/encryptionHooks'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">Customers</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n\t<span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'customers'</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n\t\t<span class=\"pl-kos\">{</span>\n\t\t\t<span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'ssn'</span><span class=\"pl-kos\">,</span>\n\t\t\t<span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'SSN'</span><span class=\"pl-kos\">,</span>\n\t\t\t<span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n\t\t\t<span class=\"pl-c1\">hooks</span>: <span class=\"pl-s1\">encryptionHooks</span><span class=\"pl-kos\">,</span>\n\t\t<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>",
        "createdAt": "2022-11-17T16:57:06Z",
        "replies": [
          {
            "author": {
              "name": "kalib-code",
              "avatar": "https://avatars.githubusercontent.com/u/17924045?u=2f494b4e8ae7218af97677cb19a82d04402f1bec&v=4",
              "url": "https://github.com/kalib-code"
            },
            "body": "<p dir=\"auto\">so payload encrypts and decrypt is already in the payload you just need to use it. that's amazing</p>",
            "createdAt": "2022-11-18T02:45:36Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Here is an example using Payload's own ecrypt and decrypt functions.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// encryptionHooks.ts\nimport { FieldHook } from 'payload/types';\n\nconst encryptKey: FieldHook = ({ req, value }) =&gt; (value ? req.payload.encrypt(value as string) : undefined);\nconst decryptKey: FieldHook = ({ req, value }) =&gt; (value ? req.payload.decrypt(value as string) : undefined);\n\nconst encryptionHooks = {\n  beforeChange: [\n    encryptKey,\n  ],\n  afterRead: [\n    decryptKey,\n  ],\n};\n\nexport default encryptionHooks;\"><pre class=\"notranslate\"><span class=\"pl-c\">// encryptionHooks.ts</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">FieldHook</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">encryptKey</span>: <span class=\"pl-smi\">FieldHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req<span class=\"pl-kos\">,</span> value <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span> ? <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">encrypt</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span> <span class=\"pl-k\">as</span> <span class=\"pl-smi\">string</span><span class=\"pl-kos\">)</span> : <span class=\"pl-c1\">undefined</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">decryptKey</span>: <span class=\"pl-smi\">FieldHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req<span class=\"pl-kos\">,</span> value <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span> ? <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">decrypt</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span> <span class=\"pl-k\">as</span> <span class=\"pl-smi\">string</span><span class=\"pl-kos\">)</span> : <span class=\"pl-c1\">undefined</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">encryptionHooks</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-s1\">encryptKey</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">afterRead</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-s1\">decryptKey</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-s1\">encryptionHooks</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Example usage in a field:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import encryptionHooks from '../../fields/encryptionHooks';\n\nconst Customers: CollectionConfig = {\n\tslug: 'customers',\n\tfields: [\n\t\t{\n\t\t\tname: 'ssn',\n\t\t\tlabel: 'SSN',\n\t\t\ttype: 'text',\n\t\t\thooks: encryptionHooks,\n\t\t},\n\t],\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">encryptionHooks</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../../fields/encryptionHooks'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">Customers</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n\t<span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'customers'</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n\t\t<span class=\"pl-kos\">{</span>\n\t\t\t<span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'ssn'</span><span class=\"pl-kos\">,</span>\n\t\t\t<span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'SSN'</span><span class=\"pl-kos\">,</span>\n\t\t\t<span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n\t\t\t<span class=\"pl-c1\">hooks</span>: <span class=\"pl-s1\">encryptionHooks</span><span class=\"pl-kos\">,</span>\n\t\t<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>",
      "createdAt": "2022-11-17T16:57:06Z",
      "chosenAt": "2022-11-18T02:43:39Z",
      "chosenBy": "kalib-code",
      "replies": [
        {
          "author": {
            "name": "kalib-code",
            "avatar": "https://avatars.githubusercontent.com/u/17924045?u=2f494b4e8ae7218af97677cb19a82d04402f1bec&v=4",
            "url": "https://github.com/kalib-code"
          },
          "body": "<p dir=\"auto\">so payload encrypts and decrypt is already in the payload you just need to use it. that's amazing</p>",
          "createdAt": "2022-11-18T02:45:36Z"
        }
      ]
    }
  },
  {
    "title": "Autoincrement numeric ID",
    "body": "<p dir=\"auto\">Hi, I'm trying to use numeric id's and use the defaultValue as the last post + 1.<br>\nThanks and sorry for my english.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1366",
    "id": "1366",
    "createdAt": "2022-11-10T19:34:57Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "FrancocDev",
      "avatar": "https://avatars.githubusercontent.com/u/6468230?u=f7a1344493f9740a15ee117fc09c253f9df613cf&v=4",
      "url": "https://github.com/FrancocDev"
    },
    "comments": [
      {
        "author": {
          "name": "thgh",
          "avatar": "https://avatars.githubusercontent.com/u/1109982?u=6cd0299e82d500b4ba200c5ebd1d3134896cb307&v=4",
          "url": "https://github.com/thgh"
        },
        "body": "<p dir=\"auto\"><a href=\"https://github.com/payloadcms/payload/issues/1243#issuecomment-1308992274\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/1243/hovercard\">Here is some inspiration</a></p>",
        "createdAt": "2022-11-13T22:07:13Z",
        "replies": [
          {
            "author": {
              "name": "FrancocDev",
              "avatar": "https://avatars.githubusercontent.com/u/6468230?u=f7a1344493f9740a15ee117fc09c253f9df613cf&v=4",
              "url": "https://github.com/FrancocDev"
            },
            "body": "<p dir=\"auto\">Thanks a lot!</p>",
            "createdAt": "2022-11-14T21:57:21Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "thgh",
        "avatar": "https://avatars.githubusercontent.com/u/1109982?u=6cd0299e82d500b4ba200c5ebd1d3134896cb307&v=4",
        "url": "https://github.com/thgh"
      },
      "body": "<p dir=\"auto\"><a href=\"https://github.com/payloadcms/payload/issues/1243#issuecomment-1308992274\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/1243/hovercard\">Here is some inspiration</a></p>",
      "createdAt": "2022-11-13T22:07:13Z",
      "chosenAt": "2022-11-14T21:57:28Z",
      "chosenBy": "FrancocDev",
      "replies": [
        {
          "author": {
            "name": "FrancocDev",
            "avatar": "https://avatars.githubusercontent.com/u/6468230?u=f7a1344493f9740a15ee117fc09c253f9df613cf&v=4",
            "url": "https://github.com/FrancocDev"
          },
          "body": "<p dir=\"auto\">Thanks a lot!</p>",
          "createdAt": "2022-11-14T21:57:21Z"
        }
      ]
    }
  },
  {
    "title": "Best Practices for DB migrations?",
    "body": "<p dir=\"auto\">Hey,</p>\n<p dir=\"auto\">Do you have some examples/tips/best practices for when we change our collections?<br>\nI would assume I could use something like <code class=\"notranslate\">mongoose-migrate</code>, but not sure how to use it with Payload CMS collections</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1407",
    "id": "1407",
    "createdAt": "2022-11-14T17:02:39Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "adam-mrozik",
      "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
      "url": "https://github.com/adam-mrozik"
    },
    "comments": [
      {
        "author": {
          "name": "adam-mrozik",
          "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
          "url": "https://github.com/adam-mrozik"
        },
        "body": "<p dir=\"auto\">OK, found similar topic, please disregard: <a aria-label=\"Discussion #857\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4268541\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/857\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/857/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/857\">#857</a></p>",
        "createdAt": "2022-11-14T17:06:23Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "adam-mrozik",
        "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
        "url": "https://github.com/adam-mrozik"
      },
      "body": "<p dir=\"auto\">OK, found similar topic, please disregard: <a aria-label=\"Discussion #857\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4268541\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/857\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/857/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/857\">#857</a></p>",
      "createdAt": "2022-11-14T17:06:23Z",
      "chosenAt": "2022-11-14T17:06:32Z",
      "chosenBy": "adam-mrozik",
      "replies": null
    }
  },
  {
    "title": "Authentication not working",
    "body": "<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    I've updated to latest version with the fix but it hasn't resolved my issue yet. After logon as soon as I go into a collection I get a 401 on /api/_preferences/collection-name . None of the collections will save. Will investigate further, any pointers on what to check appreciated\"><pre class=\"notranslate\"><code class=\"notranslate\">    I've updated to latest version with the fix but it hasn't resolved my issue yet. After logon as soon as I go into a collection I get a 401 on /api/_preferences/collection-name . None of the collections will save. Will investigate further, any pointers on what to check appreciated\n</code></pre></div>\n<p dir=\"auto\"><em>Originally posted by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mrobst/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrobst\">@mrobst</a> in <a aria-label=\"Issue #1309\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1427460113\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1309\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/1309/hovercard?comment_id=1312579573&amp;comment_type=issue_comment\" href=\"https://github.com/payloadcms/payload/issues/1309#issuecomment-1312579573\">#1309 (comment)</a></em></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1396",
    "id": "1396",
    "createdAt": "2022-11-13T11:58:09Z",
    "upvotes": 1,
    "commentTotal": 4,
    "author": {
      "name": "mrobst",
      "avatar": "https://avatars.githubusercontent.com/u/20040193?u=81a0432c48c972479e2e84ece3020dfe817c6b8d&v=4",
      "url": "https://github.com/mrobst"
    },
    "comments": [
      {
        "author": {
          "name": "mrobst",
          "avatar": "https://avatars.githubusercontent.com/u/20040193?u=81a0432c48c972479e2e84ece3020dfe817c6b8d&v=4",
          "url": "https://github.com/mrobst"
        },
        "body": "<p dir=\"auto\">I cleared cookies and logged in. New cookie is set ok. No error. Then navigated to the first collection and I get a 401 error from /api/_preferences/categories-list with this log</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/20040193/201496432-0c962205-5592-413b-8180-892957d0663e.png\"><img width=\"781\" alt=\"image\" src=\"https://user-images.githubusercontent.com/20040193/201496432-0c962205-5592-413b-8180-892957d0663e.png\" style=\"max-width: 100%;\"></a></p>",
        "createdAt": "2022-11-13T11:58:39Z",
        "replies": null
      },
      {
        "author": {
          "name": "mrobst",
          "avatar": "https://avatars.githubusercontent.com/u/20040193?u=81a0432c48c972479e2e84ece3020dfe817c6b8d&v=4",
          "url": "https://github.com/mrobst"
        },
        "body": "<p dir=\"auto\">Working through the issue now. Its all working with postman using the jwt from the (failing) browser session as a bearer token. The request that is failing in the browser is using <code class=\"notranslate\">cookie: payload-token=xxx</code> so I'm looking into this further to see if there is some config or problem with using cookies</p>",
        "createdAt": "2022-11-13T12:01:45Z",
        "replies": null
      },
      {
        "author": {
          "name": "mrobst",
          "avatar": "https://avatars.githubusercontent.com/u/20040193?u=81a0432c48c972479e2e84ece3020dfe817c6b8d&v=4",
          "url": "https://github.com/mrobst"
        },
        "body": "<p dir=\"auto\">The issue is resolved by adding the <a href=\"https://payloadcms.com/docs/authentication/overview#csrf-protection\" rel=\"nofollow\">csrf</a> option to my buildConfig. I'm not sure yet a) how it worked at all after initial deployment, b) why it stopped working or c) why I need to add the (sub) domain for the admin page to the build options csrf.</p>\n<p dir=\"auto\">Thinking about it though I'm using <a href=\"https://admin.mysite.com/admin\" rel=\"nofollow\">https://admin.mysite.com/admin</a> for the URL and I think Payload expects to see <a href=\"https://mysite.com/admin\" rel=\"nofollow\">https://mysite.com/admin</a> so this is probably the explanation?  (Context I'm hosting payload on DO and the front end site on a different provider so using the subdomain to handle the separate DNS).</p>\n<p dir=\"auto\">Please let me know if I've resolved this the right way. Is there something in the documentation that I missed related to this? I don't mind contributing to update the docs if needed.</p>\n<p dir=\"auto\">thanks<br>\nMarcus</p>",
        "createdAt": "2022-11-13T12:48:20Z",
        "replies": null
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mrobst/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrobst\">@mrobst</a> — good catch RE: CSRF.</p>\n<p dir=\"auto\">I think it's pretty tricky to properly diagnose a cookie being rejected due to CSRF reasons. Basically, if you <em><strong>have a serverURL defined</strong></em>, Payload will only allow a cross-origin cookie from that <code class=\"notranslate\">serverURL</code> unless you explicitly define other domains that are safe.</p>\n<p dir=\"auto\">This is obviously done for protection but it can be tough to expect.</p>\n<blockquote>\n<p dir=\"auto\">I'm not sure yet a) how it worked at all after initial deployment, b) why it stopped working or c) why I need to add the (sub) domain for the admin page to the build options csrf.</p>\n</blockquote>\n<p dir=\"auto\">Did you maybe <em>add</em> a <code class=\"notranslate\">serverURL</code> at some point to your production instance? That would explain why it maybe started happening.</p>\n<p dir=\"auto\">Regarding updating the docs, we do have lots of info about our CSRF prevention in the docs including a warning that says:</p>\n<blockquote>\n<p dir=\"auto\">To protect against CSRF attacks, Payload only accepts cookie-based authentication from domains that you explicitly whitelist.</p>\n</blockquote>\n<p dir=\"auto\">If you want to make it more clear or add context, I would be pumped. But personally I think the issue is more or less in the logging / reporting of <em><strong>why</strong></em> a cookie is rejected, when it is rejected. We could add a log to our JWT strategy that reports when an auth cookie is rejected due to CSRF.</p>\n<p dir=\"auto\">What are your thoughts? PS - I'm gonna bump this to a discussion now that you've solved the issue so we can keep conversation going there. Maybe turn it into a feature request once we decide what to do to clarify this <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
        "createdAt": "2022-11-13T13:39:39Z",
        "replies": [
          {
            "author": {
              "name": "mrobst",
              "avatar": "https://avatars.githubusercontent.com/u/20040193?u=81a0432c48c972479e2e84ece3020dfe817c6b8d&v=4",
              "url": "https://github.com/mrobst"
            },
            "body": "<p dir=\"auto\">Aaah (facepalm)! That helped me figure it out - my <code class=\"notranslate\">serverURL</code> had <strong>http</strong> prefix and I'd moved to <strong>https</strong> so that was the problem. I've fixed the serverURL now and removed the manual addition of the csrf setting and its still working. Appreciate your replies to my thinking out loud!</p>\n<p dir=\"auto\">Logging why a cookie was rejected would be useful but probably not a high priority for the moment.</p>",
            "createdAt": "2022-11-13T16:55:55Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mrobst/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrobst\">@mrobst</a> — good catch RE: CSRF.</p>\n<p dir=\"auto\">I think it's pretty tricky to properly diagnose a cookie being rejected due to CSRF reasons. Basically, if you <em><strong>have a serverURL defined</strong></em>, Payload will only allow a cross-origin cookie from that <code class=\"notranslate\">serverURL</code> unless you explicitly define other domains that are safe.</p>\n<p dir=\"auto\">This is obviously done for protection but it can be tough to expect.</p>\n<blockquote>\n<p dir=\"auto\">I'm not sure yet a) how it worked at all after initial deployment, b) why it stopped working or c) why I need to add the (sub) domain for the admin page to the build options csrf.</p>\n</blockquote>\n<p dir=\"auto\">Did you maybe <em>add</em> a <code class=\"notranslate\">serverURL</code> at some point to your production instance? That would explain why it maybe started happening.</p>\n<p dir=\"auto\">Regarding updating the docs, we do have lots of info about our CSRF prevention in the docs including a warning that says:</p>\n<blockquote>\n<p dir=\"auto\">To protect against CSRF attacks, Payload only accepts cookie-based authentication from domains that you explicitly whitelist.</p>\n</blockquote>\n<p dir=\"auto\">If you want to make it more clear or add context, I would be pumped. But personally I think the issue is more or less in the logging / reporting of <em><strong>why</strong></em> a cookie is rejected, when it is rejected. We could add a log to our JWT strategy that reports when an auth cookie is rejected due to CSRF.</p>\n<p dir=\"auto\">What are your thoughts? PS - I'm gonna bump this to a discussion now that you've solved the issue so we can keep conversation going there. Maybe turn it into a feature request once we decide what to do to clarify this <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
      "createdAt": "2022-11-13T13:39:39Z",
      "chosenAt": "2022-12-09T16:37:30Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "mrobst",
            "avatar": "https://avatars.githubusercontent.com/u/20040193?u=81a0432c48c972479e2e84ece3020dfe817c6b8d&v=4",
            "url": "https://github.com/mrobst"
          },
          "body": "<p dir=\"auto\">Aaah (facepalm)! That helped me figure it out - my <code class=\"notranslate\">serverURL</code> had <strong>http</strong> prefix and I'd moved to <strong>https</strong> so that was the problem. I've fixed the serverURL now and removed the manual addition of the csrf setting and its still working. Appreciate your replies to my thinking out loud!</p>\n<p dir=\"auto\">Logging why a cookie was rejected would be useful but probably not a high priority for the moment.</p>",
          "createdAt": "2022-11-13T16:55:55Z"
        }
      ]
    }
  },
  {
    "title": "Payload.autheticate middleware returns undefined for req.user on collections that aren't in config.admin.user",
    "body": "<h2 dir=\"auto\">Current Behavior</h2>\n<p dir=\"auto\">Just as the title says, when using Payload's <code class=\"notranslate\">payload.authenticate</code> middleware, the <code class=\"notranslate\">req.user</code> object is only successful when accessing the collection used in the <code class=\"notranslate\">config.admin.user</code>. But when trying to access a different auth enabled collection, it returns <code class=\"notranslate\">undefined</code>.</p>\n\n<h2 dir=\"auto\">Expected Behavior</h2>\n<p dir=\"auto\">I could be wrong but after reading the docs, I thought you could use this middleware thee authenticate any collection. I am definitely still learning Payload so my apologies if I am incorrect.</p>\n\n<h2 dir=\"auto\">Steps to Reproduce &amp; Detailed Description</h2>\n<p dir=\"auto\">I am using Payload 1.1.21.</p>\n<p dir=\"auto\">I am just testing out a small idea and the only things I am using aside from Payload is LiquidJS for my templating, body-parser, and Stripe with I already configured an alias for. Everything else, I really just stuck to the docs for and haven't even set Stripe up yet to even interact with the app.</p>\n<p dir=\"auto\">I see the cookie being placed with the token and prefix, and I first tested signing in via the Payload admin login page to first set the admin cookie then went to the account page and was able to authenticate and read the <code class=\"notranslate\">req.user</code> in the console. Then, I signed out of the Admin user, made sure the cookie was gone and then used my login page to sign in as a mock user for my Users collection. I also see the cookie being set, see the token generated and even read the successful response from <code class=\"notranslate\">payload.login</code> but when it redirects to the /account route, it shows unauthenticated and the <code class=\"notranslate\">req.user</code> is <code class=\"notranslate\">undefined</code>.</p>\n<p dir=\"auto\">Here is my configuration and how I triggered this behavior:</p>\n<p dir=\"auto\">payload.config.js</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import Admins from './path/toAdmins';\nimport Users from './path/to/Users';\n\nexport default buildConfig({\n\tserverURL: process.env.APP_URL,\n\tadmin: {\n\t\tuser: Admins.slug\n        },\n        cookiePrefix: 'pk',\n        // rest of configuration\n});\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-v\">Admins</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./path/toAdmins'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Users</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./path/to/Users'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-en\">buildConfig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n\t<span class=\"pl-c1\">serverURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">APP_URL</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-c1\">user</span>: <span class=\"pl-v\">Admins</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">slug</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">cookiePrefix</span>: <span class=\"pl-s\">'pk'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c\">// rest of configuration</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Admins.js</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const Admins = {\n        slug: 'admins',\n\tauth: true,\n\tadmin: {\n\t\tuseAsTitle: 'email',\n                disableDuplicate: true\n\t}\n        // rest of admin config / fields\n}\n\nexport default Admins\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-v\">Admins</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'admins'</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-c1\">auth</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'email'</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">disableDuplicate</span>: <span class=\"pl-c1\">true</span>\n\t<span class=\"pl-kos\">}</span>\n        <span class=\"pl-c\">// rest of admin config / fields</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-v\">Admins</span></pre></div>\n<p dir=\"auto\">Users.js</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const Users = {\n        slug: 'users',\n\tauth: true,\n\tadmin: {\n\t\tuseAsTitle: 'email',\n                disableDuplicate: true\n\t}\n        // rest of admin config / fields\n}\n\nexport default Users;\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-v\">Users</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'users'</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-c1\">auth</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'email'</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">disableDuplicate</span>: <span class=\"pl-c1\">true</span>\n\t<span class=\"pl-kos\">}</span>\n        <span class=\"pl-c\">// rest of admin config / fields</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-v\">Users</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Finally for the routes, I am signing in using the Local API login and I copied it directly from the docs:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import express from 'express';\nimport payload from 'payload';\n\nconst app = express();\n\npayload.init({\n    secret: process.env.SECRET_KEY,\n    mongoURL: 'mongodb://localhost/payload',\n    express: app,\n});\n\nconst router = express.Router();\n\nrouter.use(payload.authenticate); \n\nrouter.get('/login', (req, res) =&gt; {\n    res.render('login') // Renders a basic login from using LiquidJS\n});\n\nrouter.post('/login', async(req, res) =&gt; {\ntry {\n    const result = await payload.login({\n        collection: 'users', \n        data: { \n            email: req.body.email,\n            password: req.body.password,\n        },\n        req: req,\n        res: res,\n        depth: 2\n    });\n\n    res.redirect('/account');\n} catch(err) {\n    res.send(err);\n}\n});\n\nrouter.get('/account', (req, res) =&gt; {\n    console.log(req.user);\n\n    if (req.user) {\n        return res.send(`Authenticated successfully as ${req.user.email}.`);\n    }\n\n    return res.send('Not authenticated');\n});\n\napp.use('/', router);\n\napp.listen(3000, async () =&gt; {\n    payload.logger.info(`listening on ${3000}...`);\n});\n\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">express</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'express'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">app</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">express</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">secret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">SECRET_KEY</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s\">'mongodb://localhost/payload'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">express</span>: <span class=\"pl-s1\">app</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">router</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">express</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">Router</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">router</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">use</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">authenticate</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> \n\n<span class=\"pl-s1\">router</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/login'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">render</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'login'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// Renders a basic login from using LiquidJS</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">router</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">post</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/login'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n<span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">login</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'users'</span><span class=\"pl-kos\">,</span> \n        <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span> \n            <span class=\"pl-c1\">email</span>: <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">body</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">email</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">password</span>: <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">body</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">password</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">req</span>: <span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">res</span>: <span class=\"pl-s1\">res</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">depth</span>: <span class=\"pl-c1\">2</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">redirect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/account'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">send</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">router</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/account'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">send</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Authenticated successfully as <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">email</span><span class=\"pl-kos\">}</span></span>.`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">send</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Not authenticated'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">use</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">router</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">listen</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">3000</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">info</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`listening on <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-c1\">3000</span><span class=\"pl-kos\">}</span></span>...`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n\n<p dir=\"auto\">Just want to end this and say thank you to the entire Payload team behind this. Haven't been this excited about a CMS in years! Really hoping to figure this small issue out! Thank you again!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1384",
    "id": "1384",
    "createdAt": "2022-11-07T20:43:56Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "paper-krane",
      "avatar": "https://avatars.githubusercontent.com/u/20448279?u=4925b641fa174d182fcca24997ac9feff60c6a04&v=4",
      "url": "https://github.com/paper-krane"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/paper-krane/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/paper-krane\">@paper-krane</a> — thank you for this report and for your compliments regarding Payload! We're pumped you found us and we have lots more to come.</p>\n<p dir=\"auto\">So, your understanding is correct. <code class=\"notranslate\">payload.authenticate</code> will work for any collection (not just the one that is used to sign in to the admin UI.</p>\n<p dir=\"auto\">I recreated your test environment and I found that your <code class=\"notranslate\">login</code> route actually was not working. I needed to add <code class=\"notranslate\">router.use(express.json())</code> immediately after the <code class=\"notranslate\">payload.authenticate</code> middleware, at which point, it now works.</p>\n<p dir=\"auto\">However, I'm not able to test the full frontend admin UI workflow, because I don't have your <code class=\"notranslate\">login</code> or <code class=\"notranslate\">account</code> views.</p>\n<p dir=\"auto\">So I am thinking that the above addition of <code class=\"notranslate\">express.json()</code> works, then awesome, but otherwise, this is probably something related to <code class=\"notranslate\">csrf</code> protection. Maybe try and add your frontend site URL to the <code class=\"notranslate\">csrf</code> array.</p>\n<p dir=\"auto\">Docs here:<br>\n<a href=\"https://payloadcms.com/docs/authentication/overview#csrf-protection\" rel=\"nofollow\">https://payloadcms.com/docs/authentication/overview#csrf-protection</a></p>\n<p dir=\"auto\">I'm going to convert this to a discussion but am happy to help further!</p>",
        "createdAt": "2022-11-12T19:09:38Z",
        "replies": [
          {
            "author": {
              "name": "paper-krane",
              "avatar": "https://avatars.githubusercontent.com/u/20448279?u=4925b641fa174d182fcca24997ac9feff60c6a04&v=4",
              "url": "https://github.com/paper-krane"
            },
            "body": "<p dir=\"auto\">I feel like a complete dunce but after testing your solution and digging through all of my configurations, I realized with both of my user configs I was requiring email verification and for my dummy user, I never verified the email. This is so embarrassing and I am so sorry to bring up a potential bug over my petty mistake.</p>\n<p dir=\"auto\">Everything is working perfectly and I can't believe I spent almost 2 weeks missing something so obvious. You guys have built a solid CMS and I am so excited to see what you come up with in the future!</p>",
            "createdAt": "2022-11-13T00:05:49Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/paper-krane/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/paper-krane\">@paper-krane</a> — thank you for this report and for your compliments regarding Payload! We're pumped you found us and we have lots more to come.</p>\n<p dir=\"auto\">So, your understanding is correct. <code class=\"notranslate\">payload.authenticate</code> will work for any collection (not just the one that is used to sign in to the admin UI.</p>\n<p dir=\"auto\">I recreated your test environment and I found that your <code class=\"notranslate\">login</code> route actually was not working. I needed to add <code class=\"notranslate\">router.use(express.json())</code> immediately after the <code class=\"notranslate\">payload.authenticate</code> middleware, at which point, it now works.</p>\n<p dir=\"auto\">However, I'm not able to test the full frontend admin UI workflow, because I don't have your <code class=\"notranslate\">login</code> or <code class=\"notranslate\">account</code> views.</p>\n<p dir=\"auto\">So I am thinking that the above addition of <code class=\"notranslate\">express.json()</code> works, then awesome, but otherwise, this is probably something related to <code class=\"notranslate\">csrf</code> protection. Maybe try and add your frontend site URL to the <code class=\"notranslate\">csrf</code> array.</p>\n<p dir=\"auto\">Docs here:<br>\n<a href=\"https://payloadcms.com/docs/authentication/overview#csrf-protection\" rel=\"nofollow\">https://payloadcms.com/docs/authentication/overview#csrf-protection</a></p>\n<p dir=\"auto\">I'm going to convert this to a discussion but am happy to help further!</p>",
      "createdAt": "2022-11-12T19:09:38Z",
      "chosenAt": "2023-01-02T14:51:13Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "paper-krane",
            "avatar": "https://avatars.githubusercontent.com/u/20448279?u=4925b641fa174d182fcca24997ac9feff60c6a04&v=4",
            "url": "https://github.com/paper-krane"
          },
          "body": "<p dir=\"auto\">I feel like a complete dunce but after testing your solution and digging through all of my configurations, I realized with both of my user configs I was requiring email verification and for my dummy user, I never verified the email. This is so embarrassing and I am so sorry to bring up a potential bug over my petty mistake.</p>\n<p dir=\"auto\">Everything is working perfectly and I can't believe I spent almost 2 weeks missing something so obvious. You guys have built a solid CMS and I am so excited to see what you come up with in the future!</p>",
          "createdAt": "2022-11-13T00:05:49Z"
        }
      ]
    }
  },
  {
    "title": "How to add default value for blocks",
    "body": "<p dir=\"auto\">I have a content field requires at least 1 block.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/200246048-85d7c59c-e660-452c-903e-3680eada7ab0.png\"><img width=\"763\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5801015/200246048-85d7c59c-e660-452c-903e-3680eada7ab0.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">I want to save our editors' effort by providing a default value for it, but defaultValue is not working as I expected.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1352",
    "id": "1352",
    "createdAt": "2022-11-07T07:06:40Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "Stupidism",
      "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
      "url": "https://github.com/Stupidism"
    },
    "comments": [
      {
        "author": {
          "name": "Stupidism",
          "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
          "url": "https://github.com/Stupidism"
        },
        "body": "<p dir=\"auto\">Found the answer myself.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n            {\n              name: 'content',\n              label: false,\n              type: 'blocks',\n              minRows: 1,\n              maxRows: 1,\n              blocks: [\n                  {\n                    slug: 'content',\n                    labels: {\n                      singular: 'Content',\n                      plural: 'Content Blocks',\n                    },\n                    fields: [\n                      {\n                        name: 'richText',\n                        type: 'richText',\n                      }\n                    ]\n                  }\n              ],\n              defaultValue: [\n                {\n                  richText: [{ children: [{ text: '' }] }],\n                  blockType: 'content',\n                },\n              ],\n            },\"><pre class=\"notranslate\"><code class=\"notranslate\">\n            {\n              name: 'content',\n              label: false,\n              type: 'blocks',\n              minRows: 1,\n              maxRows: 1,\n              blocks: [\n                  {\n                    slug: 'content',\n                    labels: {\n                      singular: 'Content',\n                      plural: 'Content Blocks',\n                    },\n                    fields: [\n                      {\n                        name: 'richText',\n                        type: 'richText',\n                      }\n                    ]\n                  }\n              ],\n              defaultValue: [\n                {\n                  richText: [{ children: [{ text: '' }] }],\n                  blockType: 'content',\n                },\n              ],\n            },\n</code></pre></div>\n<p dir=\"auto\">It's really interesting that writing/asking the question itself can give me the answer.</p>",
        "createdAt": "2022-11-07T07:24:45Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "Stupidism",
        "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
        "url": "https://github.com/Stupidism"
      },
      "body": "<p dir=\"auto\">Found the answer myself.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n            {\n              name: 'content',\n              label: false,\n              type: 'blocks',\n              minRows: 1,\n              maxRows: 1,\n              blocks: [\n                  {\n                    slug: 'content',\n                    labels: {\n                      singular: 'Content',\n                      plural: 'Content Blocks',\n                    },\n                    fields: [\n                      {\n                        name: 'richText',\n                        type: 'richText',\n                      }\n                    ]\n                  }\n              ],\n              defaultValue: [\n                {\n                  richText: [{ children: [{ text: '' }] }],\n                  blockType: 'content',\n                },\n              ],\n            },\"><pre class=\"notranslate\"><code class=\"notranslate\">\n            {\n              name: 'content',\n              label: false,\n              type: 'blocks',\n              minRows: 1,\n              maxRows: 1,\n              blocks: [\n                  {\n                    slug: 'content',\n                    labels: {\n                      singular: 'Content',\n                      plural: 'Content Blocks',\n                    },\n                    fields: [\n                      {\n                        name: 'richText',\n                        type: 'richText',\n                      }\n                    ]\n                  }\n              ],\n              defaultValue: [\n                {\n                  richText: [{ children: [{ text: '' }] }],\n                  blockType: 'content',\n                },\n              ],\n            },\n</code></pre></div>\n<p dir=\"auto\">It's really interesting that writing/asking the question itself can give me the answer.</p>",
      "createdAt": "2022-11-07T07:24:45Z",
      "chosenAt": "2022-11-07T07:24:48Z",
      "chosenBy": "Stupidism",
      "replies": null
    }
  },
  {
    "title": "How to tell a field in rendered inside a drawer/modal form or not?",
    "body": "<p dir=\"auto\">I have a slug field auto tracking file name in my Media collection.<br>\nI used documentInfo to tell if I'm creating a new media or editing an existing one and disabled edit for the slug when editing. (Modifying slug is not allowed</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    const documentInfo = useDocumentInfo();\n\n    const isUpdateRef = useRef(!!documentInfo.id);\"><pre class=\"notranslate\"><code class=\"notranslate\">    const documentInfo = useDocumentInfo();\n\n    const isUpdateRef = useRef(!!documentInfo.id);\n</code></pre></div>\n<p dir=\"auto\">But now it's not working when I open the modal form inside an article.</p>\n<p dir=\"auto\">I'd like to know is there any way to get the documentInfo of current form instead of current page?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1332",
    "id": "1332",
    "createdAt": "2022-11-02T07:38:08Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "Stupidism",
      "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
      "url": "https://github.com/Stupidism"
    },
    "comments": [
      {
        "author": {
          "name": "Stupidism",
          "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
          "url": "https://github.com/Stupidism"
        },
        "body": "<p dir=\"auto\">For now, what I can find is to use the formRef to find the closest <code class=\"notranslate\">dialog</code> element.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n    const form = useForm();\n    const documentInfo = useDocumentInfo();\n\n    const isUpdateRef = useRef(\n      !!documentInfo.id &amp;&amp; !form.formRef.current.closest('dialog')\n    );\"><pre class=\"notranslate\"><code class=\"notranslate\">\n    const form = useForm();\n    const documentInfo = useDocumentInfo();\n\n    const isUpdateRef = useRef(\n      !!documentInfo.id &amp;&amp; !form.formRef.current.closest('dialog')\n    );\n</code></pre></div>",
        "createdAt": "2022-11-02T07:41:39Z",
        "replies": [
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Nice work figuring out a solution. I'd like to see Payload have a built-in solution for handling multiple forms from the provider. I'm adding the \"enhancement\" label so we can revisit this problem later.</p>",
            "createdAt": "2022-11-02T13:32:35Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">You can use <code class=\"notranslate\">useEditDepth</code> to determine how deeply nested the form is <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>\n<p dir=\"auto\">It's not \"officially\" exported yet but you can access it directly from <code class=\"notranslate\">dist</code> in the meantime if you'd like. Also, <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Stupidism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Stupidism\">@Stupidism</a> we would be happy to accept a PR that adds <code class=\"notranslate\">useEditDepth</code> to our <code class=\"notranslate\">/components/forms</code> export!</p>",
            "createdAt": "2022-11-02T13:39:56Z"
          },
          {
            "author": {
              "name": "Stupidism",
              "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
              "url": "https://github.com/Stupidism"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> I'm not sure if I should export it from forms or utilities. The current PR respects the code instead of your suggestion. Tell me if you want it changed. <a aria-label=\"Pull request #1350\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1437246667\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1350\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/1350/hovercard\" href=\"https://github.com/payloadcms/payload/pull/1350\">#1350</a></p>",
            "createdAt": "2022-11-06T01:13:32Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "Stupidism",
        "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
        "url": "https://github.com/Stupidism"
      },
      "body": "<p dir=\"auto\">For now, what I can find is to use the formRef to find the closest <code class=\"notranslate\">dialog</code> element.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n    const form = useForm();\n    const documentInfo = useDocumentInfo();\n\n    const isUpdateRef = useRef(\n      !!documentInfo.id &amp;&amp; !form.formRef.current.closest('dialog')\n    );\"><pre class=\"notranslate\"><code class=\"notranslate\">\n    const form = useForm();\n    const documentInfo = useDocumentInfo();\n\n    const isUpdateRef = useRef(\n      !!documentInfo.id &amp;&amp; !form.formRef.current.closest('dialog')\n    );\n</code></pre></div>",
      "createdAt": "2022-11-02T07:41:39Z",
      "chosenAt": "2023-01-02T14:48:56Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Nice work figuring out a solution. I'd like to see Payload have a built-in solution for handling multiple forms from the provider. I'm adding the \"enhancement\" label so we can revisit this problem later.</p>",
          "createdAt": "2022-11-02T13:32:35Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">You can use <code class=\"notranslate\">useEditDepth</code> to determine how deeply nested the form is <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>\n<p dir=\"auto\">It's not \"officially\" exported yet but you can access it directly from <code class=\"notranslate\">dist</code> in the meantime if you'd like. Also, <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Stupidism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Stupidism\">@Stupidism</a> we would be happy to accept a PR that adds <code class=\"notranslate\">useEditDepth</code> to our <code class=\"notranslate\">/components/forms</code> export!</p>",
          "createdAt": "2022-11-02T13:39:56Z"
        },
        {
          "author": {
            "name": "Stupidism",
            "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
            "url": "https://github.com/Stupidism"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> I'm not sure if I should export it from forms or utilities. The current PR respects the code instead of your suggestion. Tell me if you want it changed. <a aria-label=\"Pull request #1350\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1437246667\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1350\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/1350/hovercard\" href=\"https://github.com/payloadcms/payload/pull/1350\">#1350</a></p>",
          "createdAt": "2022-11-06T01:13:32Z"
        }
      ]
    }
  },
  {
    "title": "Cascade delete",
    "body": "<p dir=\"auto\">Is it possible to delete a record with all his relations (cascade delete) without using hooks to delete each related record?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/655",
    "id": "655",
    "createdAt": "2022-06-14T19:43:52Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "wojciechkrol",
      "avatar": "https://avatars.githubusercontent.com/u/14108143?u=a50f83a499fdf37dbee3b4686403648ee4507a1a&v=4",
      "url": "https://github.com/wojciechkrol"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/wojciechkrol/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wojciechkrol\">@wojciechkrol</a> — yes, this is possible! You'll need to write some hooks to do it. You could write a hook that can be used to traverse your collection schema and find any <code class=\"notranslate\">relationship</code> fields, and for each one, you'd read the value of the relationship field and then delete all related documents using Payload's local API.</p>\n<p dir=\"auto\">Know what I mean?</p>",
        "createdAt": "2022-06-14T19:59:09Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Sorry, I didn't see that you specified <code class=\"notranslate\">without hooks</code>. Honestly though I think that's probably the best way to do this. It could even be wrapped up as a neat little plugin.</p>\n<p dir=\"auto\">We don't have any use for this at the moment, but if one of our own projects needs it, we'll certainly build it into a plugin and make it public. If you do so, please share it! It shouldn't be too hard to build.</p>",
            "createdAt": "2022-06-14T22:29:43Z"
          }
        ]
      },
      {
        "author": {
          "name": "wojciechkrol",
          "avatar": "https://avatars.githubusercontent.com/u/14108143?u=a50f83a499fdf37dbee3b4686403648ee4507a1a&v=4",
          "url": "https://github.com/wojciechkrol"
        },
        "body": "<p dir=\"auto\">Hej <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>,</p>\n<p dir=\"auto\">Thank you for your answer. I will try to make a universal hook for this and let you know if I was successful :)</p>",
        "createdAt": "2022-06-15T06:40:53Z",
        "replies": null
      },
      {
        "author": {
          "name": "bencun",
          "avatar": "https://avatars.githubusercontent.com/u/15714548?v=4",
          "url": "https://github.com/bencun"
        },
        "body": "<p dir=\"auto\">This would be extremely helpful to have as an option to enable on a per-collection basis where a collection would then be able check for any relationship type fields referencing itself when deleting an item.<br>\nWhile I do understand a hook could resolve this having a built-in solution should, in my opinion, be of a very high priority since it would prevent end-users from breaking stuff (e.g. broken media, broken links etc).</p>",
        "createdAt": "2022-10-30T13:51:45Z",
        "replies": [
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">I started working on this then I got covid and my wife had a baby.</p>\n<p dir=\"auto\"><a aria-label=\"Pull request #1209\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1399709791\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1209\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/1209/hovercard\" href=\"https://github.com/payloadcms/payload/pull/1209\">#1209</a></p>\n<p dir=\"auto\">If somebody wants to fork off my PR, this is up for grabs. Otherwise I'll finish it after finishing the admin UI translations.</p>",
            "createdAt": "2022-10-30T20:04:46Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/wojciechkrol/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wojciechkrol\">@wojciechkrol</a> — yes, this is possible! You'll need to write some hooks to do it. You could write a hook that can be used to traverse your collection schema and find any <code class=\"notranslate\">relationship</code> fields, and for each one, you'd read the value of the relationship field and then delete all related documents using Payload's local API.</p>\n<p dir=\"auto\">Know what I mean?</p>",
      "createdAt": "2022-06-14T19:59:09Z",
      "chosenAt": "2022-06-15T06:41:11Z",
      "chosenBy": "wojciechkrol",
      "replies": [
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Sorry, I didn't see that you specified <code class=\"notranslate\">without hooks</code>. Honestly though I think that's probably the best way to do this. It could even be wrapped up as a neat little plugin.</p>\n<p dir=\"auto\">We don't have any use for this at the moment, but if one of our own projects needs it, we'll certainly build it into a plugin and make it public. If you do so, please share it! It shouldn't be too hard to build.</p>",
          "createdAt": "2022-06-14T22:29:43Z"
        }
      ]
    }
  },
  {
    "title": "Loading Payload in a Docker Container",
    "body": "<p dir=\"auto\">I am trying to load payload in a docker container. I couldn't find any examples so I am writing it on my own.</p>\n<p dir=\"auto\">In my compose I expose port 3005.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  # Payload CMS Container\n  payloadcms:\n    container_name: 'payloadcms_container'\n    build: ./backend/payloadcms/.\n    volumes:\n      - ./backend/payloadcms:/app\n      - /app/node_modules/\n    ports:\n      - 3005:3005\n    expose:\n      - &quot;3005&quot;\n    depends_on:\n      - &quot;mongodb&quot;\n    external_links:\n      - &quot;mongodb&quot;\"><pre class=\"notranslate\"><code class=\"notranslate\">  # Payload CMS Container\n  payloadcms:\n    container_name: 'payloadcms_container'\n    build: ./backend/payloadcms/.\n    volumes:\n      - ./backend/payloadcms:/app\n      - /app/node_modules/\n    ports:\n      - 3005:3005\n    expose:\n      - \"3005\"\n    depends_on:\n      - \"mongodb\"\n    external_links:\n      - \"mongodb\"\n</code></pre></div>\n<p dir=\"auto\">This instance of payload launches fine. However when I attempt to load in the web browser my page remains blank.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/966352/139782167-ea2d00b9-4ded-4977-a7ef-52d4e78438fc.png\"><img src=\"https://user-images.githubusercontent.com/966352/139782167-ea2d00b9-4ded-4977-a7ef-52d4e78438fc.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">The error message appears:<br>\n<code class=\"notranslate\">Uncaught Error: Invalid hook call. Hooks can only be called inside of the body of a function component.</code></p>\n<p dir=\"auto\">Does anyone know why this occurs? Does anyone know how to use Payload within a docker container?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/353",
    "id": "353",
    "createdAt": "2021-11-02T03:26:46Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "joecaraccio",
      "avatar": "https://avatars.githubusercontent.com/u/966352?u=7926efde25b0e9eb7a77fc259ed1ab737c32ed78&v=4",
      "url": "https://github.com/joecaraccio"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/joecaraccio/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/joecaraccio\">@joecaraccio</a> — generally this error is caused by a React app having two copies of React somehow. Most often it's seen with <code class=\"notranslate\">npm link</code> situations.</p>\n<p dir=\"auto\">Do you have any custom Payload React components?</p>\n<p dir=\"auto\">Can you think of why you might have two copies of React installed?</p>\n<p dir=\"auto\">That's where I'd start.</p>\n<p dir=\"auto\">Also, I'm not as familiar with Docker + Node (always just run Node apps locally) but the way you're configuring your <code class=\"notranslate\">node_modules</code> within your container may have something to do with it. Maybe someone else could chime in there and / or get an example Docker container up and running for you to look at.</p>",
        "createdAt": "2021-11-02T12:27:17Z",
        "replies": [
          {
            "author": {
              "name": "joecaraccio",
              "avatar": "https://avatars.githubusercontent.com/u/966352?u=7926efde25b0e9eb7a77fc259ed1ab737c32ed78&v=4",
              "url": "https://github.com/joecaraccio"
            },
            "body": "<p dir=\"auto\">Hmm can't see how that's the case. The docker container comes up, runs npm install on the payload package (which was just the template) and then launches.</p>\n<p dir=\"auto\">I'm sure there is something simple here that I am missing.. I just can't figure out what. Anyone here every time payload in a docker container?</p>",
            "createdAt": "2021-11-03T11:26:31Z"
          }
        ]
      },
      {
        "author": {
          "name": "donstephan",
          "avatar": "https://avatars.githubusercontent.com/u/17347567?u=8648df309601d4c31d68f48d512c1ca9fe03b45e&v=4",
          "url": "https://github.com/donstephan"
        },
        "body": "<p dir=\"auto\">Here's a functional compose file I have set up for local dev with payload:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"version: '3'\n\nservices:\n\n  # payload\n  payload:\n    image: node:14-alpine\n    ports:\n      - &quot;3000:3000&quot;\n    volumes:\n      - ./payload:/payload\n      - ./payload/node_modules:/payload/node_modules\n    working_dir: /payload\n    command: sh -c &quot;npm install &amp;&amp; npm run dev&quot;\n    depends_on:\n      - mongo\n    environment:\n      MONGODB_URI: mongodb://mongo:27017/payload\n      PORT: 3000\n      NODE_ENV: development\n      PAYLOAD_SECRET: TESTING\n\n  # mongo\n  mongo:\n    image: mongo:latest\n    ports:\n      - &quot;27017:27017&quot;\n    command:\n      - --storageEngine=wiredTiger\n    volumes:\n      - data:/data/db\n    logging:\n      driver: none\n  \nvolumes:\n  data:\"><pre class=\"notranslate\"><code class=\"notranslate\">version: '3'\n\nservices:\n\n  # payload\n  payload:\n    image: node:14-alpine\n    ports:\n      - \"3000:3000\"\n    volumes:\n      - ./payload:/payload\n      - ./payload/node_modules:/payload/node_modules\n    working_dir: /payload\n    command: sh -c \"npm install &amp;&amp; npm run dev\"\n    depends_on:\n      - mongo\n    environment:\n      MONGODB_URI: mongodb://mongo:27017/payload\n      PORT: 3000\n      NODE_ENV: development\n      PAYLOAD_SECRET: TESTING\n\n  # mongo\n  mongo:\n    image: mongo:latest\n    ports:\n      - \"27017:27017\"\n    command:\n      - --storageEngine=wiredTiger\n    volumes:\n      - data:/data/db\n    logging:\n      driver: none\n  \nvolumes:\n  data:\n</code></pre></div>",
        "createdAt": "2021-11-05T01:56:43Z",
        "replies": [
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">I just tweaked your docker-compose.yml to work with a new <code class=\"notranslate\">create-payload-app</code> setup. Thanks for sharing!</p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"version: '3'\n\nservices:\n\n  # payload\n  payload:\n    image: node:14-alpine\n    ports:\n      - &quot;3000:3000&quot;\n    volumes:\n      - .:/home/node/app\n      - node_modules:/home/node/app/node_modules\n    working_dir: /home/node/app/\n    command: sh -c &quot;npm install &amp;&amp; npm run dev&quot;\n    depends_on:\n      - mongo\n    environment:\n      MONGODB_URI: mongodb://mongo:27017/payload\n      PORT: 3000\n      NODE_ENV: development\n      PAYLOAD_SECRET: TESTING\n\n  # mongo\n  mongo:\n    image: mongo:latest\n    ports:\n      - &quot;27017:27017&quot;\n    command:\n      - --storageEngine=wiredTiger\n    volumes:\n      - data:/data/db\n    logging:\n      driver: none\n  \nvolumes:\n  data:\n  node_modules:\"><pre class=\"notranslate\"><span class=\"pl-ent\">version</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>3<span class=\"pl-pds\">'</span></span>\n\n<span class=\"pl-ent\">services</span>:\n\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> payload</span>\n  <span class=\"pl-ent\">payload</span>:\n    <span class=\"pl-ent\">image</span>: <span class=\"pl-s\">node:14-alpine</span>\n    <span class=\"pl-ent\">ports</span>:\n      - <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>3000:3000<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ent\">volumes</span>:\n      - <span class=\"pl-s\">.:/home/node/app</span>\n      - <span class=\"pl-s\">node_modules:/home/node/app/node_modules</span>\n    <span class=\"pl-ent\">working_dir</span>: <span class=\"pl-s\">/home/node/app/</span>\n    <span class=\"pl-ent\">command</span>: <span class=\"pl-s\">sh -c \"npm install &amp;&amp; npm run dev\"</span>\n    <span class=\"pl-ent\">depends_on</span>:\n      - <span class=\"pl-s\">mongo</span>\n    <span class=\"pl-ent\">environment</span>:\n      <span class=\"pl-ent\">MONGODB_URI</span>: <span class=\"pl-s\">mongodb://mongo:27017/payload</span>\n      <span class=\"pl-ent\">PORT</span>: <span class=\"pl-c1\">3000</span>\n      <span class=\"pl-ent\">NODE_ENV</span>: <span class=\"pl-s\">development</span>\n      <span class=\"pl-ent\">PAYLOAD_SECRET</span>: <span class=\"pl-s\">TESTING</span>\n\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> mongo</span>\n  <span class=\"pl-ent\">mongo</span>:\n    <span class=\"pl-ent\">image</span>: <span class=\"pl-s\">mongo:latest</span>\n    <span class=\"pl-ent\">ports</span>:\n      - <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>27017:27017<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ent\">command</span>:\n      - <span class=\"pl-s\">--storageEngine=wiredTiger</span>\n    <span class=\"pl-ent\">volumes</span>:\n      - <span class=\"pl-s\">data:/data/db</span>\n    <span class=\"pl-ent\">logging</span>:\n      <span class=\"pl-ent\">driver</span>: <span class=\"pl-s\">none</span>\n  \n<span class=\"pl-ent\">volumes</span>:\n  <span class=\"pl-ent\">data</span>:\n  <span class=\"pl-ent\">node_modules</span>:</pre></div>",
            "createdAt": "2021-11-05T17:23:35Z"
          },
          {
            "author": {
              "name": "joecaraccio",
              "avatar": "https://avatars.githubusercontent.com/u/966352?u=7926efde25b0e9eb7a77fc259ed1ab737c32ed78&v=4",
              "url": "https://github.com/joecaraccio"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/donstephan/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/donstephan\">@donstephan</a>  Thanks for this! Just out of curiosity, does live reloading work for you in these containers?</p>",
            "createdAt": "2021-11-07T01:04:50Z"
          },
          {
            "author": {
              "name": "joecaraccio",
              "avatar": "https://avatars.githubusercontent.com/u/966352?u=7926efde25b0e9eb7a77fc259ed1ab737c32ed78&v=4",
              "url": "https://github.com/joecaraccio"
            },
            "body": "<p dir=\"auto\">ah I guess Nodedemon can be a little finicky over docker. You gotta use legacy watch.. heres the command I used which works</p>\n<p dir=\"auto\">nodemon --legacy-watch --exec node server.js</p>",
            "createdAt": "2021-11-07T01:43:52Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Good stuff everyone. For my own knowledge, what's the reason you'd want to build with Docker locally? To be able to dodge having to have Mongo installed? Just curiosity is all!</p>",
            "createdAt": "2021-11-08T21:38:37Z"
          },
          {
            "author": {
              "name": "donstephan",
              "avatar": "https://avatars.githubusercontent.com/u/17347567?u=8648df309601d4c31d68f48d512c1ca9fe03b45e&v=4",
              "url": "https://github.com/donstephan"
            },
            "body": "<p dir=\"auto\">Main focus for me is that it's an expected environment. No matter what machine it's running on, it'll always be running the same version of node, npm, mongo, on the same base image. This also keeps all development environments the same as production environments. No weird gotchas because someones using a different version of node/mongo.</p>\n<p dir=\"auto\">Plus it makes it a lot easier to add other services as well. The Payload compose file I'm playing around with also stands up a <code class=\"notranslate\">nextjs</code> frontend as well as <code class=\"notranslate\">redis</code> for a caching layer. It now just takes one command, <code class=\"notranslate\">docker-compose up</code> to stand up all the services in question. The flexibility it provides is fantastic.</p>",
            "createdAt": "2021-11-08T22:28:25Z"
          },
          {
            "author": {
              "name": "alexbechmann",
              "avatar": "https://avatars.githubusercontent.com/u/22481216?u=a545492e37575a66e9b5b0c1de92d180ec72def2&v=4",
              "url": "https://github.com/alexbechmann"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/donstephan/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/donstephan\">@donstephan</a> You might want to consider VSCode Dev containers</p>\n<ul dir=\"auto\">\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers\" rel=\"nofollow\">https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers</a></li>\n<li><a href=\"https://code.visualstudio.com/docs/remote/create-dev-container#_use-docker-compose\" rel=\"nofollow\">https://code.visualstudio.com/docs/remote/create-dev-container#_use-docker-compose</a></li>\n</ul>\n<p dir=\"auto\">We use this to run payload with mongodb &amp; blob storage images added to the .devcontainer/docker-compose.yml which run when you open the project.</p>",
            "createdAt": "2021-11-11T19:16:06Z"
          }
        ]
      },
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">The latest version of <code class=\"notranslate\">create-payload-app</code> will create a docker-compose file that is ready to use for development <g-emoji class=\"g-emoji\" alias=\"tada\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f389.png\">🎉</g-emoji></p>\n<p dir=\"auto\">Here is what it looks like if you're wanting to adapt it to an existing project:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"version: '3'\n\nservices:\n\n  payload:\n    image: node:18-alpine\n    ports:\n      - &quot;3000:3000&quot;\n    volumes:\n      - .:/home/node/app\n      - node_modules:/home/node/app/node_modules\n    working_dir: /home/node/app/\n    command: sh -c &quot;yarn install &amp;&amp; yarn dev&quot;\n    depends_on:\n      - mongo\n    environment:\n      MONGODB_URI: mongodb://mongo:27017/payload\n      PORT: 3000\n      NODE_ENV: development\n      PAYLOAD_SECRET: TESTING\n\n  mongo:\n    image: mongo:latest\n    ports:\n      - &quot;27017:27017&quot;\n    command:\n      - --storageEngine=wiredTiger\n    volumes:\n      - data:/data/db\n    logging:\n      driver: none\n\nvolumes:\n  data:\n  node_modules:\"><pre class=\"notranslate\"><code class=\"notranslate\">version: '3'\n\nservices:\n\n  payload:\n    image: node:18-alpine\n    ports:\n      - \"3000:3000\"\n    volumes:\n      - .:/home/node/app\n      - node_modules:/home/node/app/node_modules\n    working_dir: /home/node/app/\n    command: sh -c \"yarn install &amp;&amp; yarn dev\"\n    depends_on:\n      - mongo\n    environment:\n      MONGODB_URI: mongodb://mongo:27017/payload\n      PORT: 3000\n      NODE_ENV: development\n      PAYLOAD_SECRET: TESTING\n\n  mongo:\n    image: mongo:latest\n    ports:\n      - \"27017:27017\"\n    command:\n      - --storageEngine=wiredTiger\n    volumes:\n      - data:/data/db\n    logging:\n      driver: none\n\nvolumes:\n  data:\n  node_modules:\n</code></pre></div>",
        "createdAt": "2022-10-25T18:04:21Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">The latest version of <code class=\"notranslate\">create-payload-app</code> will create a docker-compose file that is ready to use for development <g-emoji class=\"g-emoji\" alias=\"tada\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f389.png\">🎉</g-emoji></p>\n<p dir=\"auto\">Here is what it looks like if you're wanting to adapt it to an existing project:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"version: '3'\n\nservices:\n\n  payload:\n    image: node:18-alpine\n    ports:\n      - &quot;3000:3000&quot;\n    volumes:\n      - .:/home/node/app\n      - node_modules:/home/node/app/node_modules\n    working_dir: /home/node/app/\n    command: sh -c &quot;yarn install &amp;&amp; yarn dev&quot;\n    depends_on:\n      - mongo\n    environment:\n      MONGODB_URI: mongodb://mongo:27017/payload\n      PORT: 3000\n      NODE_ENV: development\n      PAYLOAD_SECRET: TESTING\n\n  mongo:\n    image: mongo:latest\n    ports:\n      - &quot;27017:27017&quot;\n    command:\n      - --storageEngine=wiredTiger\n    volumes:\n      - data:/data/db\n    logging:\n      driver: none\n\nvolumes:\n  data:\n  node_modules:\"><pre class=\"notranslate\"><code class=\"notranslate\">version: '3'\n\nservices:\n\n  payload:\n    image: node:18-alpine\n    ports:\n      - \"3000:3000\"\n    volumes:\n      - .:/home/node/app\n      - node_modules:/home/node/app/node_modules\n    working_dir: /home/node/app/\n    command: sh -c \"yarn install &amp;&amp; yarn dev\"\n    depends_on:\n      - mongo\n    environment:\n      MONGODB_URI: mongodb://mongo:27017/payload\n      PORT: 3000\n      NODE_ENV: development\n      PAYLOAD_SECRET: TESTING\n\n  mongo:\n    image: mongo:latest\n    ports:\n      - \"27017:27017\"\n    command:\n      - --storageEngine=wiredTiger\n    volumes:\n      - data:/data/db\n    logging:\n      driver: none\n\nvolumes:\n  data:\n  node_modules:\n</code></pre></div>",
      "createdAt": "2022-10-25T18:04:21Z",
      "chosenAt": "2022-10-25T18:04:24Z",
      "chosenBy": "denolfe",
      "replies": null
    }
  },
  {
    "title": "Understanding Slugs / admin UI names?",
    "body": "<p dir=\"auto\">A Slug is the unique identifying part of a web address, typically at the end of the URL and its recommend to avoid special characters like commas, semicolons, colons, spaces, quotes.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/2239608/196773587-9e287036-7436-43e0-b9b9-703fcb94f1e0.jpg\"><img src=\"https://user-images.githubusercontent.com/2239608/196773587-9e287036-7436-43e0-b9b9-703fcb94f1e0.jpg\" alt=\"unsafe-characters-url.jpg\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">From my understanding the Admin UI collection Names are generated from slugs.</p>\n<p dir=\"auto\">If I require a nicer admin UI Name, I would need to currently break the Slug suggestion by using a Space when using 2 Words instead of a dash/underscore.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/2239608/196773929-3bd28a72-93c4-4157-8ce0-b6f6351bbd36.jpg\"><img src=\"https://user-images.githubusercontent.com/2239608/196773929-3bd28a72-93c4-4157-8ce0-b6f6351bbd36.jpg\" alt=\"Screenshot_20221019_201534.jpg\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">From Demo Slug code spaces would still produce correct urls.</p>\n<p dir=\"auto\"><code class=\"notranslate\">const format = (val: string): string =&gt; val.replace(/ /g, '-').replace(/[^\\w-]+/g, '').toLowerCase();</code></p>\n<p dir=\"auto\">Or did I oversee something that the admin UI Name can be specified somewhere?</p>\n<p dir=\"auto\">P. S. Perhaps adding for Admin UI a word wrap to get  2x lines could be added, as we still have enough space in our boxes.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1279",
    "id": "1279",
    "createdAt": "2022-10-19T18:43:24Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "Rar9",
      "avatar": "https://avatars.githubusercontent.com/u/2239608?u=50ed805eec791a83af932905fe5bfc752aef971f&v=4",
      "url": "https://github.com/Rar9"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Rar9/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Rar9\">@Rar9</a> — you can specify nicer names using <code class=\"notranslate\">labels: { singular: 'Page', plural: 'Pages' }</code> on Collections. But by default we use the <code class=\"notranslate\">name</code> if you don't add more specificity. You can check the docs for more information here!</p>",
        "createdAt": "2022-10-19T18:56:26Z",
        "replies": [
          {
            "author": {
              "name": "Rar9",
              "avatar": "https://avatars.githubusercontent.com/u/2239608?u=50ed805eec791a83af932905fe5bfc752aef971f&v=4",
              "url": "https://github.com/Rar9"
            },
            "body": "<p dir=\"auto\">Thanks for the fast response ....</p>\n<p dir=\"auto\">I searched in docs for slug / label / name/admin but this didn't show up.</p>",
            "createdAt": "2022-10-19T19:00:35Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Rar9/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Rar9\">@Rar9</a> — you can specify nicer names using <code class=\"notranslate\">labels: { singular: 'Page', plural: 'Pages' }</code> on Collections. But by default we use the <code class=\"notranslate\">name</code> if you don't add more specificity. You can check the docs for more information here!</p>",
      "createdAt": "2022-10-19T18:56:26Z",
      "chosenAt": "2022-10-19T19:11:01Z",
      "chosenBy": "denolfe",
      "replies": [
        {
          "author": {
            "name": "Rar9",
            "avatar": "https://avatars.githubusercontent.com/u/2239608?u=50ed805eec791a83af932905fe5bfc752aef971f&v=4",
            "url": "https://github.com/Rar9"
          },
          "body": "<p dir=\"auto\">Thanks for the fast response ....</p>\n<p dir=\"auto\">I searched in docs for slug / label / name/admin but this didn't show up.</p>",
          "createdAt": "2022-10-19T19:00:35Z"
        }
      ]
    }
  },
  {
    "title": "Grouped collections / globals",
    "body": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">I was wondering if it's possible to have some sort of grouped collection or globals? I'm stumbling across this problem that the amount of collections is really confusing. To make it more clear I'm prefixing collections with the type of collection they're belonging to, however this behaviour is really unwanted. So I was wondering if I missed something or whether this \"feature\" is in the pipeline.</p>\n<p dir=\"auto\">Kind regards,<br>\nEddy</p>",
    "url": "https://github.com/payloadcms/payload/discussions/507",
    "id": "507",
    "createdAt": "2022-04-06T09:17:57Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "edblocker",
      "avatar": "https://avatars.githubusercontent.com/u/56311234?u=4669d8566c4ab4eae57aab6b3ac678a50a802b19&v=4",
      "url": "https://github.com/edblocker"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/edblocker/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/edblocker\">@edblocker</a>,<br>\nGreat question, you didn't miss anything. As of today, the built in nav doesn't offer any structure. You could make a custom Nav component, though, I'm in favor of building this one in as a feature to Payload.</p>\n<p dir=\"auto\">Give us some time here to circle back around on it...</p>\n<p dir=\"auto\">If you want to build your own, check out the docs for customizing the admin UI: <a href=\"https://payloadcms.com/docs/admin/components\" rel=\"nofollow\">https://payloadcms.com/docs/admin/components</a><br>\n<code class=\"notranslate\">Nav</code> is the one you will need to replace.</p>\n<p dir=\"auto\">A good starting point would be to copy the existing Nav component to build on top of: <a href=\"https://github.com/payloadcms/payload/tree/master/src/admin/components/elements/Nav\">https://github.com/payloadcms/payload/tree/master/src/admin/components/elements/Nav</a></p>\n<p dir=\"auto\">It isn't ideal, but you could use your prefixes to group them or something, up to you on how you'd handle it.<br>\nLet us know if you do build something and want to share.</p>\n<p dir=\"auto\">Thanks,<br>\nDan</p>",
        "createdAt": "2022-04-06T12:30:53Z",
        "replies": [
          {
            "author": {
              "name": "Rar9",
              "avatar": "https://avatars.githubusercontent.com/u/2239608?u=50ed805eec791a83af932905fe5bfc752aef971f&v=4",
              "url": "https://github.com/Rar9"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> This feels wrong that everyone should create a custom nav to resolve the issue.</p>\n<p dir=\"auto\">Please consider adding a 2nd level, so category can have deeper categories.</p>",
            "createdAt": "2022-10-15T03:24:13Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<blockquote>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> This feels wrong that everyone should create a custom nav to resolve the issue.</p>\n<p dir=\"auto\">Please consider adding a 2nd level, so category can have deeper categories.</p>\n</blockquote>\n<p dir=\"auto\">You're right <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Rar9/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Rar9\">@Rar9</a>! This answer is out of date.</p>\n<p dir=\"auto\">There is now the <code class=\"notranslate\">admin.group</code> property that allows for organizing nav items under names that you provide. You no longer need a custom nav component for this.</p>\n<p dir=\"auto\">It is documented here: <a href=\"https://payloadcms.com/docs/configuration/collections#admin-options\" rel=\"nofollow\">https://payloadcms.com/docs/configuration/collections#admin-options</a></p>",
            "createdAt": "2022-10-15T05:51:22Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/edblocker/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/edblocker\">@edblocker</a>,<br>\nGreat question, you didn't miss anything. As of today, the built in nav doesn't offer any structure. You could make a custom Nav component, though, I'm in favor of building this one in as a feature to Payload.</p>\n<p dir=\"auto\">Give us some time here to circle back around on it...</p>\n<p dir=\"auto\">If you want to build your own, check out the docs for customizing the admin UI: <a href=\"https://payloadcms.com/docs/admin/components\" rel=\"nofollow\">https://payloadcms.com/docs/admin/components</a><br>\n<code class=\"notranslate\">Nav</code> is the one you will need to replace.</p>\n<p dir=\"auto\">A good starting point would be to copy the existing Nav component to build on top of: <a href=\"https://github.com/payloadcms/payload/tree/master/src/admin/components/elements/Nav\">https://github.com/payloadcms/payload/tree/master/src/admin/components/elements/Nav</a></p>\n<p dir=\"auto\">It isn't ideal, but you could use your prefixes to group them or something, up to you on how you'd handle it.<br>\nLet us know if you do build something and want to share.</p>\n<p dir=\"auto\">Thanks,<br>\nDan</p>",
      "createdAt": "2022-04-06T12:30:53Z",
      "chosenAt": "2022-10-14T09:58:12Z",
      "chosenBy": "edblocker",
      "replies": [
        {
          "author": {
            "name": "Rar9",
            "avatar": "https://avatars.githubusercontent.com/u/2239608?u=50ed805eec791a83af932905fe5bfc752aef971f&v=4",
            "url": "https://github.com/Rar9"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> This feels wrong that everyone should create a custom nav to resolve the issue.</p>\n<p dir=\"auto\">Please consider adding a 2nd level, so category can have deeper categories.</p>",
          "createdAt": "2022-10-15T03:24:13Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<blockquote>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> This feels wrong that everyone should create a custom nav to resolve the issue.</p>\n<p dir=\"auto\">Please consider adding a 2nd level, so category can have deeper categories.</p>\n</blockquote>\n<p dir=\"auto\">You're right <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Rar9/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Rar9\">@Rar9</a>! This answer is out of date.</p>\n<p dir=\"auto\">There is now the <code class=\"notranslate\">admin.group</code> property that allows for organizing nav items under names that you provide. You no longer need a custom nav component for this.</p>\n<p dir=\"auto\">It is documented here: <a href=\"https://payloadcms.com/docs/configuration/collections#admin-options\" rel=\"nofollow\">https://payloadcms.com/docs/configuration/collections#admin-options</a></p>",
          "createdAt": "2022-10-15T05:51:22Z"
        }
      ]
    }
  },
  {
    "title": "Is it possible to query a document with a slug field of a relationship?",
    "body": "<p dir=\"auto\">For example, in a classic article/blog site, we have tags related to articles.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Article {\n  ...\n  tags: Tag[];\n}\n\nTag {\n  id: string;\n  slug: string;\n  name: string;\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">Article {\n  ...\n  tags: Tag[];\n}\n\nTag {\n  id: string;\n  slug: string;\n  name: string;\n}\n</code></pre></div>\n<p dir=\"auto\">And we have a tag page showing all the articles with this tag like this: <a href=\"https://getjerry.com/tag/driver-licenses\" rel=\"nofollow\">https://getjerry.com/tag/driver-licenses</a></p>\n<p dir=\"auto\">In this page, I need to query the <code class=\"notranslate\">tag.id</code> from <code class=\"notranslate\">tag.slug</code> first and then use the <code class=\"notranslate\">tag.id</code> to query articles.</p>\n<p dir=\"auto\">Is it possible to query articles with <code class=\"notranslate\">tag.slug</code> directly?</p>\n<p dir=\"auto\">I think this is a common feature that other CMS like contentful supports.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/957",
    "id": "957",
    "createdAt": "2022-08-18T04:16:39Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "Stupidism",
      "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
      "url": "https://github.com/Stupidism"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Yes, this is possible! Right now, it's only possible in the REST API and Local APIs due to how complex the query types would get in GraphQL (lots of query possibilities) but in REST you can do:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/api/articles?where[tag.slug][in]=some-tag\"><pre class=\"notranslate\"><code class=\"notranslate\">/api/articles?where[tag.slug][in]=some-tag\n</code></pre></div>\n<p dir=\"auto\">I think in your case you probably have many tags, which is why I used <code class=\"notranslate\">in</code> rather than <code class=\"notranslate\">equals</code>.</p>\n<p dir=\"auto\">But this should work great!</p>",
        "createdAt": "2022-08-18T04:20:23Z",
        "replies": [
          {
            "author": {
              "name": "Stupidism",
              "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
              "url": "https://github.com/Stupidism"
            },
            "body": "<p dir=\"auto\">Aha, it's not doable through graphql then.</p>\n<p dir=\"auto\">I'm trying to achieve this by using slug as id with <a href=\"https://payloadcms.com/docs/fields/overview#customizable-id\" rel=\"nofollow\">custom id feature </a> directly.</p>\n<p dir=\"auto\">I'm wondering if this solution has any defects?</p>",
            "createdAt": "2022-08-18T08:55:52Z"
          },
          {
            "author": {
              "name": "Stupidism",
              "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
              "url": "https://github.com/Stupidism"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> Any suggestions?</p>",
            "createdAt": "2022-08-21T05:45:15Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Stupidism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Stupidism\">@Stupidism</a> this would work very well. Custom IDs are pretty cool.</p>\n<p dir=\"auto\">You should totally give that a shot and let me know how it works, but note, that at some point in the future we will certainly be supporting \"nested queries\" in GraphQL as well. Probably soon-ish. Can't guarantee, but it's a commonly requested feature.</p>",
            "createdAt": "2022-08-21T18:19:21Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Yes, this is possible! Right now, it's only possible in the REST API and Local APIs due to how complex the query types would get in GraphQL (lots of query possibilities) but in REST you can do:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/api/articles?where[tag.slug][in]=some-tag\"><pre class=\"notranslate\"><code class=\"notranslate\">/api/articles?where[tag.slug][in]=some-tag\n</code></pre></div>\n<p dir=\"auto\">I think in your case you probably have many tags, which is why I used <code class=\"notranslate\">in</code> rather than <code class=\"notranslate\">equals</code>.</p>\n<p dir=\"auto\">But this should work great!</p>",
      "createdAt": "2022-08-18T04:20:23Z",
      "chosenAt": "2022-08-22T13:52:12Z",
      "chosenBy": "denolfe",
      "replies": [
        {
          "author": {
            "name": "Stupidism",
            "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
            "url": "https://github.com/Stupidism"
          },
          "body": "<p dir=\"auto\">Aha, it's not doable through graphql then.</p>\n<p dir=\"auto\">I'm trying to achieve this by using slug as id with <a href=\"https://payloadcms.com/docs/fields/overview#customizable-id\" rel=\"nofollow\">custom id feature </a> directly.</p>\n<p dir=\"auto\">I'm wondering if this solution has any defects?</p>",
          "createdAt": "2022-08-18T08:55:52Z"
        },
        {
          "author": {
            "name": "Stupidism",
            "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
            "url": "https://github.com/Stupidism"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> Any suggestions?</p>",
          "createdAt": "2022-08-21T05:45:15Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Stupidism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Stupidism\">@Stupidism</a> this would work very well. Custom IDs are pretty cool.</p>\n<p dir=\"auto\">You should totally give that a shot and let me know how it works, but note, that at some point in the future we will certainly be supporting \"nested queries\" in GraphQL as well. Probably soon-ish. Can't guarantee, but it's a commonly requested feature.</p>",
          "createdAt": "2022-08-21T18:19:21Z"
        }
      ]
    }
  },
  {
    "title": "Override Publish changes button + Return all drafts",
    "body": "<p dir=\"auto\">Hey,</p>\n<p dir=\"auto\">I couldn't locate any info on this. Is there option to override <code class=\"notranslate\">Publish changes</code> button functionality?</p>\n<p dir=\"auto\">Second question: Can I query DB for all draft documents? I saw preview function that can send whole draft to the frontend, but I would like users to be able to save like ~10 different drafts and sort of preview all of them. Is that possible?</p>\n<p dir=\"auto\">Third question: Is there a way to batch publish multiple documents together?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1237",
    "id": "1237",
    "createdAt": "2022-10-11T12:35:25Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "adam-mrozik",
      "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
      "url": "https://github.com/adam-mrozik"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/adam-mrozik/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/adam-mrozik\">@adam-mrozik</a> — good question!</p>\n<ol dir=\"auto\">\n<li>Overriding the <code class=\"notranslate\">Publish changes</code> button is currently not possible, but it would be a great addition. We would accept a PR to add this functionality for sure. It would just function like how swapping in a custom component works now - except you'd swap in your own <code class=\"notranslate\">Publish</code> button. Would be cool. Can I ask what you're looking to do with this?</li>\n<li>Yes, you can, although I think there's a bit more that we should think through here. What are you trying to do? Finding all pages that have <em><strong>never been published</strong></em> is easy - just use <code class=\"notranslate\">where: { _status: { equals: 'draft' } }</code>. But that will not send back pages that <strong><em>have</em></strong> been published, but have newer drafts available. To get both all pages that have <em><strong>never</strong></em> been published, as well as all pages that have <em><strong>newer drafts available</strong></em>, you would need to use the <code class=\"notranslate\">draft: true</code> argument and then filter the results manually in your app(s).</li>\n<li>To batch publish multiple documents together, you could write a script that fetches all draft documents and then loops over them to change each one's <code class=\"notranslate\">_status</code> to <code class=\"notranslate\">'published'</code>, but that would need to be a script. There is no endpoint operation available for this but it could be easily done with a custom endpoint or script.</li>\n</ol>\n<p dir=\"auto\">How's that?</p>",
        "createdAt": "2022-10-11T13:18:16Z",
        "replies": [
          {
            "author": {
              "name": "adam-mrozik",
              "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
              "url": "https://github.com/adam-mrozik"
            },
            "body": "<p dir=\"auto\">Wow, Thanks for very quick answers!</p>\n<p dir=\"auto\">Just for the context:</p>\n<ol dir=\"auto\">\n<li>I want internal employees be able to publish changes to prod with this button, so I wanted to add some safety checks (e.g. is appropriate version of PROD frontend deployed for the given payload cms version, or add some additional safety pop-up like <code class=\"notranslate\">are you sure you want to deploy document to PROD?</code>.</li>\n<li>I imagine internal employees might want to change multiple documents and see how it all looks together. I wanted to make it so that <code class=\"notranslate\">Save Draft</code> saves the document and makes it visible on Staging website, while <code class=\"notranslate\">Publish Change</code>  would push data to to the PROD website. This way I can have only one Payload CMS and one place for internal employees to edit documents and also publish them to the default site.</li>\n<li>Nice! So just a custom button would suffice here, thanks!</li>\n</ol>",
            "createdAt": "2022-10-11T15:23:05Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/adam-mrozik/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/adam-mrozik\">@adam-mrozik</a> — good question!</p>\n<ol dir=\"auto\">\n<li>Overriding the <code class=\"notranslate\">Publish changes</code> button is currently not possible, but it would be a great addition. We would accept a PR to add this functionality for sure. It would just function like how swapping in a custom component works now - except you'd swap in your own <code class=\"notranslate\">Publish</code> button. Would be cool. Can I ask what you're looking to do with this?</li>\n<li>Yes, you can, although I think there's a bit more that we should think through here. What are you trying to do? Finding all pages that have <em><strong>never been published</strong></em> is easy - just use <code class=\"notranslate\">where: { _status: { equals: 'draft' } }</code>. But that will not send back pages that <strong><em>have</em></strong> been published, but have newer drafts available. To get both all pages that have <em><strong>never</strong></em> been published, as well as all pages that have <em><strong>newer drafts available</strong></em>, you would need to use the <code class=\"notranslate\">draft: true</code> argument and then filter the results manually in your app(s).</li>\n<li>To batch publish multiple documents together, you could write a script that fetches all draft documents and then loops over them to change each one's <code class=\"notranslate\">_status</code> to <code class=\"notranslate\">'published'</code>, but that would need to be a script. There is no endpoint operation available for this but it could be easily done with a custom endpoint or script.</li>\n</ol>\n<p dir=\"auto\">How's that?</p>",
      "createdAt": "2022-10-11T13:18:16Z",
      "chosenAt": "2022-10-11T16:15:14Z",
      "chosenBy": "adam-mrozik",
      "replies": [
        {
          "author": {
            "name": "adam-mrozik",
            "avatar": "https://avatars.githubusercontent.com/u/92296835?v=4",
            "url": "https://github.com/adam-mrozik"
          },
          "body": "<p dir=\"auto\">Wow, Thanks for very quick answers!</p>\n<p dir=\"auto\">Just for the context:</p>\n<ol dir=\"auto\">\n<li>I want internal employees be able to publish changes to prod with this button, so I wanted to add some safety checks (e.g. is appropriate version of PROD frontend deployed for the given payload cms version, or add some additional safety pop-up like <code class=\"notranslate\">are you sure you want to deploy document to PROD?</code>.</li>\n<li>I imagine internal employees might want to change multiple documents and see how it all looks together. I wanted to make it so that <code class=\"notranslate\">Save Draft</code> saves the document and makes it visible on Staging website, while <code class=\"notranslate\">Publish Change</code>  would push data to to the PROD website. This way I can have only one Payload CMS and one place for internal employees to edit documents and also publish them to the default site.</li>\n<li>Nice! So just a custom button would suffice here, thanks!</li>\n</ol>",
          "createdAt": "2022-10-11T15:23:05Z"
        }
      ]
    }
  },
  {
    "title": "siblingData in afterRead hook wrong?",
    "body": "<p dir=\"auto\">I'm not sure if I'm missing something, but I'm trying to implement an afterRead hook for a field.<br>\nthe siblingData inside only contains the data of the field, not of the whole block. The other hooks work fine.</p>\n<p dir=\"auto\">Example siblingData of afterChange hook on the field 'rentPages':</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"siblingData:  {\n  id: '632c5632dd4397a36b55c5c3',\n  variant: 'rent',\n  rentPages: [ { value: '632c53526b4b99f8c0c01559', relationTo: 'rent-pages' } ],\n  blockType: 'slider',\n  layout: { top: 'default', bottom: 'default' }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">siblingData:  {\n  id: '632c5632dd4397a36b55c5c3',\n  variant: 'rent',\n  rentPages: [ { value: '632c53526b4b99f8c0c01559', relationTo: 'rent-pages' } ],\n  blockType: 'slider',\n  layout: { top: 'default', bottom: 'default' }\n}\n</code></pre></div>\n<p dir=\"auto\">Potentially wrong siblingData of afterRead hook on the field 'rentPages':</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"siblingData:  [ { value: '632c53526b4b99f8c0c01559', relationTo: 'rent-pages' } ]\"><pre class=\"notranslate\"><code class=\"notranslate\">siblingData:  [ { value: '632c53526b4b99f8c0c01559', relationTo: 'rent-pages' } ]\n</code></pre></div>\n<p dir=\"auto\">Am I missing something or is this a bug?<br>\nThanks for any hints.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1162",
    "id": "1162",
    "createdAt": "2022-09-22T15:54:25Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "christian-reichart",
      "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
      "url": "https://github.com/christian-reichart"
    },
    "comments": [
      {
        "author": {
          "name": "christian-reichart",
          "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
          "url": "https://github.com/christian-reichart"
        },
        "body": "<p dir=\"auto\">fixed: <a aria-label=\"Pull request #1201\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1396220428\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1201\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/1201/hovercard\" href=\"https://github.com/payloadcms/payload/pull/1201\">#1201</a></p>",
        "createdAt": "2022-10-10T14:18:27Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "christian-reichart",
        "avatar": "https://avatars.githubusercontent.com/u/9932248?u=853b1ea4b57e7cbeb5cea9a422df4d61dcee0ece&v=4",
        "url": "https://github.com/christian-reichart"
      },
      "body": "<p dir=\"auto\">fixed: <a aria-label=\"Pull request #1201\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1396220428\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1201\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/1201/hovercard\" href=\"https://github.com/payloadcms/payload/pull/1201\">#1201</a></p>",
      "createdAt": "2022-10-10T14:18:27Z",
      "chosenAt": "2022-10-10T14:18:30Z",
      "chosenBy": "christian-reichart",
      "replies": null
    }
  },
  {
    "title": "Add new category/tag from the admin sidebar",
    "body": "<p dir=\"auto\">Hi - I've created a Category collection, see the code below.</p>\n<p dir=\"auto\">Is it possible to create new categories from outside of the Categories collection?</p>\n<p dir=\"auto\">I'd like to be able to assign and create new categories from within the Media collection (I'm planning on adding a tags collection next, and this use case will be even more important).</p>\n<p dir=\"auto\">Currently I can obviously assign a category to an image, but as you can see from the screenshot, I can't create new ones:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/3432643/189162851-4439f57f-9d78-45d8-a430-e966cd8048ca.png\"><img src=\"https://user-images.githubusercontent.com/3432643/189162851-4439f57f-9d78-45d8-a430-e966cd8048ca.png\" alt=\"Screenshot 2022-09-08 at 16 18 26\" style=\"max-width: 100%;\"></a><br>\n<g-emoji class=\"g-emoji\" alias=\"point_up\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/261d.png\">☝️</g-emoji> What am I missing here?</p>\n<p dir=\"auto\">Category collection:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { CollectionConfig } from 'payload/types';\nimport slug from '../fields/slug';\n\nexport type CategoryType = {\n  title: string;\n  slug: string;\n};\n\nconst Category: CollectionConfig = {\n  slug: 'categories',\n  admin: {\n    useAsTitle: 'title',\n  },\n  access: {\n    read: () =&gt; true,\n  },\n  fields: [\n    {\n      name: 'title',\n      label: 'Title',\n      type: 'text',\n      required: true,\n    },\n    slug(),\n  ],\n};\n\nexport { Category };\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">slug</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../fields/slug'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">type</span> <span class=\"pl-smi\">CategoryType</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">title</span>: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">Category</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'categories'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'title'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'title'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Title'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">slug</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">Category</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Categories field:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { Field } from 'payload/types';\n\nexport const categories: Field = {\n  name: 'categories',\n  label: 'Categories',\n  type: 'relationship',\n  relationTo: 'categories',\n  hasMany: true,\n  admin: {\n    position: 'sidebar',\n  },\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">Field</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">categories</span>: <span class=\"pl-smi\">Field</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'categories'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Categories'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'categories'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">hasMany</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">position</span>: <span class=\"pl-s\">'sidebar'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Then adding to my Media photos collection:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { CollectionConfig } from 'payload/types';\nimport { categories } from '../fields/categories';\nimport { ImageSizeNames, ImageSizes, MediaSlugs } from '../tokens';\n\nconst MediaPhotos: CollectionConfig = {\n  slug: MediaSlugs.mediaPhotos,\n  access: {\n    read: (): boolean =&gt; true, // Everyone can read Media\n  },\n  admin: {\n    useAsTitle: 'filename',\n  },\n  upload: {\n    adminThumbnail: ImageSizeNames.thumbnail,\n    imageSizes: [...ImageSizes.PhotoImageSizes],\n    staticURL: '/media/photos',\n    staticDir: 'media/photos',\n  },\n  fields: [\n    {\n      name: 'alt',\n      label: 'Alt Text',\n      type: 'text',\n      required: true,\n    },\n    categories, // &lt;--- Here\n  ],\n};\n\nexport { MediaPhotos };\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">categories</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../fields/categories'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">ImageSizeNames</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">ImageSizes</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">MediaSlugs</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../tokens'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">MediaPhotos</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-smi\">MediaSlugs</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mediaPhotos</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">boolean</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// Everyone can read Media</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'filename'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">upload</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">adminThumbnail</span>: <span class=\"pl-smi\">ImageSizeNames</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">thumbnail</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">imageSizes</span>: <span class=\"pl-kos\">[</span>...<span class=\"pl-smi\">ImageSizes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PhotoImageSizes</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">staticURL</span>: <span class=\"pl-s\">'/media/photos'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">staticDir</span>: <span class=\"pl-s\">'media/photos'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'alt'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Alt Text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">categories</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// &lt;--- Here</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">MediaPhotos</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Thank you <g-emoji class=\"g-emoji\" alias=\"heart\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2764.png\">❤️</g-emoji></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1096",
    "id": "1096",
    "createdAt": "2022-09-08T15:31:09Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "jakehopking",
      "avatar": "https://avatars.githubusercontent.com/u/3432643?u=0af30a37a531b00d8fbdf3e898fd111bab725928&v=4",
      "url": "https://github.com/jakehopking"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">We are building a way to do this as our next big feature! Great question!</p>",
        "createdAt": "2022-09-08T15:32:02Z",
        "replies": [
          {
            "author": {
              "name": "jakehopking",
              "avatar": "https://avatars.githubusercontent.com/u/3432643?u=0af30a37a531b00d8fbdf3e898fd111bab725928&v=4",
              "url": "https://github.com/jakehopking"
            },
            "body": "<p dir=\"auto\">Thanks for the speedy reply. Glad I asked... else could've ended up going down a bit of a rabbit hole I imagine.</p>\n<p dir=\"auto\">Do you have a rough ETA on that feature hitting production?</p>",
            "createdAt": "2022-09-08T15:35:12Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Within 30 days <g-emoji class=\"g-emoji\" alias=\"sunglasses\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png\">😎</g-emoji></p>",
            "createdAt": "2022-09-08T15:39:20Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jakehopking/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jakehopking\">@jakehopking</a> this is now built!</p>\n<p dir=\"auto\"><a aria-label=\"Pull request #1230\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1402449302\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1230\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/1230/hovercard\" href=\"https://github.com/payloadcms/payload/pull/1230\">#1230</a></p>\n<p dir=\"auto\">Not merged yet. Gotta write some tests but just a quick heads-up!</p>",
            "createdAt": "2022-10-10T00:31:02Z"
          },
          {
            "author": {
              "name": "jakehopking",
              "avatar": "https://avatars.githubusercontent.com/u/3432643?u=0af30a37a531b00d8fbdf3e898fd111bab725928&v=4",
              "url": "https://github.com/jakehopking"
            },
            "body": "<p dir=\"auto\">Great! Thanks for letting me know <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a></p>",
            "createdAt": "2022-10-10T08:06:46Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">We are building a way to do this as our next big feature! Great question!</p>",
      "createdAt": "2022-09-08T15:32:02Z",
      "chosenAt": "2022-09-08T15:49:41Z",
      "chosenBy": "jakehopking",
      "replies": [
        {
          "author": {
            "name": "jakehopking",
            "avatar": "https://avatars.githubusercontent.com/u/3432643?u=0af30a37a531b00d8fbdf3e898fd111bab725928&v=4",
            "url": "https://github.com/jakehopking"
          },
          "body": "<p dir=\"auto\">Thanks for the speedy reply. Glad I asked... else could've ended up going down a bit of a rabbit hole I imagine.</p>\n<p dir=\"auto\">Do you have a rough ETA on that feature hitting production?</p>",
          "createdAt": "2022-09-08T15:35:12Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Within 30 days <g-emoji class=\"g-emoji\" alias=\"sunglasses\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png\">😎</g-emoji></p>",
          "createdAt": "2022-09-08T15:39:20Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jakehopking/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jakehopking\">@jakehopking</a> this is now built!</p>\n<p dir=\"auto\"><a aria-label=\"Pull request #1230\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1402449302\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/1230\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/1230/hovercard\" href=\"https://github.com/payloadcms/payload/pull/1230\">#1230</a></p>\n<p dir=\"auto\">Not merged yet. Gotta write some tests but just a quick heads-up!</p>",
          "createdAt": "2022-10-10T00:31:02Z"
        },
        {
          "author": {
            "name": "jakehopking",
            "avatar": "https://avatars.githubusercontent.com/u/3432643?u=0af30a37a531b00d8fbdf3e898fd111bab725928&v=4",
            "url": "https://github.com/jakehopking"
          },
          "body": "<p dir=\"auto\">Great! Thanks for letting me know <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a></p>",
          "createdAt": "2022-10-10T08:06:46Z"
        }
      ]
    }
  },
  {
    "title": "Unable to wrap the upload element in rich text with link",
    "body": "<h1 dir=\"auto\">Bug Report</h1>\n\n<p dir=\"auto\">Use link to wrap upload element don't work.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/57319837/194699033-d9078ea6-a0a2-400e-8996-44681f8bff14.png\"><img src=\"https://user-images.githubusercontent.com/57319837/194699033-d9078ea6-a0a2-400e-8996-44681f8bff14.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Current Behavior</h2>\n\n<p dir=\"auto\">Enter the link form and submit, but nothing happen.</p>\n<h2 dir=\"auto\">Expected Behavior</h2>\n\n<p dir=\"auto\">Should be able to wrap an upload element with link to make it clickable.</p>\n<h2 dir=\"auto\">Possible Solution</h2>\n\n<h2 dir=\"auto\">Steps to Reproduce</h2>\n\n<ol dir=\"auto\">\n<li>Insert an upload element in rich text.</li>\n<li>Click the upload element and click the link to wrap it.</li>\n<li>Enter the link form and confirm.  <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/57319837/194699275-7fa447e1-1784-4024-8f62-80ead96c0e83.png\"><img src=\"https://user-images.githubusercontent.com/57319837/194699275-7fa447e1-1784-4024-8f62-80ead96c0e83.png\" alt=\"image\" style=\"max-width: 100%;\"></a></li>\n<li>Nothing happen.</li>\n</ol>\n<h2 dir=\"auto\">Detailed Description</h2>\n\n\n<p dir=\"auto\">payload@1.1.7</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1231",
    "id": "1231",
    "createdAt": "2022-10-08T08:58:55Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "EasonSoong",
      "avatar": "https://avatars.githubusercontent.com/u/57319837?u=f5c8feb6afdcc1332ef8738f1af1746b1ea1448c&v=4",
      "url": "https://github.com/EasonSoong"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/EasonSoong/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/EasonSoong\">@EasonSoong</a> — this is actually intended. If you want to link your uploads, you can add custom upload fields like seen in the demo, in the Page -&gt; Layout -&gt; Content rich text fields:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6651896/194786599-2ee08732-e18b-4738-95df-77859a569cdb.png\"><img width=\"1722\" alt=\"Screen Shot 2022-10-09 at 8 33 08 PM\" src=\"https://user-images.githubusercontent.com/6651896/194786599-2ee08732-e18b-4738-95df-77859a569cdb.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Here are some docs about this:<br>\n<a href=\"https://payloadcms.com/docs/fields/rich-text#upload-element\" rel=\"nofollow\">https://payloadcms.com/docs/fields/rich-text#upload-element</a></p>\n<p dir=\"auto\">It might be possible in the future to extend the Link component, but it's tough because of the way that SlateJS works. It would be an \"element within an element\" as far as Slate is concerned. Not gonna say it's impossible, but the UX of it all could be questionable as well. So we prefer the above method to link uploads within rich text.</p>\n<p dir=\"auto\">Gonna convert this to a discussion for now but would love to know what you think!</p>",
        "createdAt": "2022-10-10T00:34:57Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/EasonSoong/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/EasonSoong\">@EasonSoong</a> — this is actually intended. If you want to link your uploads, you can add custom upload fields like seen in the demo, in the Page -&gt; Layout -&gt; Content rich text fields:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6651896/194786599-2ee08732-e18b-4738-95df-77859a569cdb.png\"><img width=\"1722\" alt=\"Screen Shot 2022-10-09 at 8 33 08 PM\" src=\"https://user-images.githubusercontent.com/6651896/194786599-2ee08732-e18b-4738-95df-77859a569cdb.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Here are some docs about this:<br>\n<a href=\"https://payloadcms.com/docs/fields/rich-text#upload-element\" rel=\"nofollow\">https://payloadcms.com/docs/fields/rich-text#upload-element</a></p>\n<p dir=\"auto\">It might be possible in the future to extend the Link component, but it's tough because of the way that SlateJS works. It would be an \"element within an element\" as far as Slate is concerned. Not gonna say it's impossible, but the UX of it all could be questionable as well. So we prefer the above method to link uploads within rich text.</p>\n<p dir=\"auto\">Gonna convert this to a discussion for now but would love to know what you think!</p>",
      "createdAt": "2022-10-10T00:34:57Z",
      "chosenAt": "2022-10-11T14:49:09Z",
      "chosenBy": "EasonSoong",
      "replies": null
    }
  },
  {
    "title": "use a group field for useAsTitle",
    "body": "<p dir=\"auto\">Can I use a group field for the useAsTitle on a collection admin property?. As of now it takes String? which indicates the field name that you want to use.<br>\n<code class=\"notranslate\"> { name:'name', type:'group', fields:[ { name:'first', type :'text' }, { name:'last',  type:'text' } ] }</code></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1205",
    "id": "1205",
    "createdAt": "2022-10-05T16:07:48Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "Teelon",
      "avatar": "https://avatars.githubusercontent.com/u/28550464?v=4",
      "url": "https://github.com/Teelon"
    },
    "comments": [
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\">To be clear, you are wanting to use <code class=\"notranslate\">first</code> as the document title?</p>\n<p dir=\"auto\">No that is not currently possible. What you could do instead is create a top level field i.e. <code class=\"notranslate\">fullName</code> and use a field hook to update that based on name.first and name.last.</p>\n<p dir=\"auto\">Something like this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  slug: 'example-collection',\n  admin: {\n    useAsTitle: 'fullName',\n  },\n  fields: [\n    {\n      admin: {\n        hidden: true,\n      },\n      name: 'fullName',\n      type: 'text',\n      hooks: {\n        beforeChange: [\n          ({ siblingData, operation, value }) =&gt; {\n            if (operation === 'create' || operation === 'update') {\n              return `${siblingData.name.first} ${siblingData.name.last}`\n            }\n            return value\n          },\n        ],\n      },\n    },\n    {\n      name: 'name',\n      type: 'group',\n      fields: [\n        {\n          name: 'first',\n          type: 'text',\n        },\n        {\n          name: 'last',\n          type: 'text',\n        },\n      ],\n    },\n  ],\n},\"><pre class=\"notranslate\"><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'example-collection'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'fullName'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">hidden</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'fullName'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span>\n          <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> siblingData<span class=\"pl-kos\">,</span> operation<span class=\"pl-kos\">,</span> value <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'create'</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'update'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n              <span class=\"pl-k\">return</span> <span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">siblingData</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">first</span><span class=\"pl-kos\">}</span></span> <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">siblingData</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">last</span><span class=\"pl-kos\">}</span></span>`</span>\n            <span class=\"pl-kos\">}</span>\n            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">value</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'name'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'group'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'first'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'last'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>",
        "createdAt": "2022-10-05T20:04:37Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "JarrodMFlesch",
        "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
        "url": "https://github.com/JarrodMFlesch"
      },
      "body": "<p dir=\"auto\">To be clear, you are wanting to use <code class=\"notranslate\">first</code> as the document title?</p>\n<p dir=\"auto\">No that is not currently possible. What you could do instead is create a top level field i.e. <code class=\"notranslate\">fullName</code> and use a field hook to update that based on name.first and name.last.</p>\n<p dir=\"auto\">Something like this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  slug: 'example-collection',\n  admin: {\n    useAsTitle: 'fullName',\n  },\n  fields: [\n    {\n      admin: {\n        hidden: true,\n      },\n      name: 'fullName',\n      type: 'text',\n      hooks: {\n        beforeChange: [\n          ({ siblingData, operation, value }) =&gt; {\n            if (operation === 'create' || operation === 'update') {\n              return `${siblingData.name.first} ${siblingData.name.last}`\n            }\n            return value\n          },\n        ],\n      },\n    },\n    {\n      name: 'name',\n      type: 'group',\n      fields: [\n        {\n          name: 'first',\n          type: 'text',\n        },\n        {\n          name: 'last',\n          type: 'text',\n        },\n      ],\n    },\n  ],\n},\"><pre class=\"notranslate\"><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'example-collection'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'fullName'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">hidden</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'fullName'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span>\n          <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> siblingData<span class=\"pl-kos\">,</span> operation<span class=\"pl-kos\">,</span> value <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'create'</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'update'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n              <span class=\"pl-k\">return</span> <span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">siblingData</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">first</span><span class=\"pl-kos\">}</span></span> <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">siblingData</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">last</span><span class=\"pl-kos\">}</span></span>`</span>\n            <span class=\"pl-kos\">}</span>\n            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">value</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'name'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'group'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'first'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'last'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>",
      "createdAt": "2022-10-05T20:04:37Z",
      "chosenAt": "2022-10-05T20:38:04Z",
      "chosenBy": "Teelon",
      "replies": null
    }
  },
  {
    "title": "HTTP-only cookie issue",
    "body": "<p dir=\"auto\">My payload service running @ <a href=\"https://me.example.com\" rel=\"nofollow\">https://me.example.com</a> and frontend NextJS app running @ <a href=\"https://web.example.com\" rel=\"nofollow\">https://web.example.com</a>. I am facing an issue that after logging in when I hit any access controlled endpoint (for eg. /refresh-token) from the frontend app, the payload service does not extract token frrom the HTTPOnly cookie and does not set the user property on the req object and throw a 403:Forbidden response code.</p>\n<p dir=\"auto\">Cookie Configs I Tried:<br>\n<code class=\"notranslate\">cookies: { domain: \"example.com\", sameSite: \"none\", secure: true }</code><br>\n<code class=\"notranslate\">cookies: { domain: \"example.com\" }</code></p>\n<p dir=\"auto\">CORS Allowlist:<br>\n<code class=\"notranslate\">[\"https://web.example.com\", \"http://web.example.com\"]</code></p>\n<p dir=\"auto\">However, when I use the <code class=\"notranslate\">beforeOperation({args, operation})</code> hook to debug the refresh operation, I can see the cookie present on the <code class=\"notranslate\">args.req.headers.cookie</code> object, but <code class=\"notranslate\">args.token</code> is by default null, and it works when I manually extract the cookie from <code class=\"notranslate\">args.req.headers.cookie</code> and set the <code class=\"notranslate\">args.token</code> value and return it.</p>\n<p dir=\"auto\">Any help and suggestions will be appreciated. Thank you!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1203",
    "id": "1203",
    "createdAt": "2022-10-05T10:07:17Z",
    "upvotes": 1,
    "commentTotal": 7,
    "author": {
      "name": "rishi-afk",
      "avatar": "https://avatars.githubusercontent.com/u/22999318?u=3a5b560d9b75cbe97ca669af0ff6dcc160e1a4a9&v=4",
      "url": "https://github.com/rishi-afk"
    },
    "comments": [
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rishi-afk/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rishi-afk\">@rishi-afk</a> what does your fetch request look like? Are you using <code class=\"notranslate\">credentials: include</code>? Docs talk about it <a href=\"https://payloadcms.com/docs/authentication/overview#http-only-cookies\" rel=\"nofollow\">here</a></p>",
        "createdAt": "2022-10-05T14:07:59Z",
        "replies": null
      },
      {
        "author": {
          "name": "rishi-afk",
          "avatar": "https://avatars.githubusercontent.com/u/22999318?u=3a5b560d9b75cbe97ca669af0ff6dcc160e1a4a9&v=4",
          "url": "https://github.com/rishi-afk"
        },
        "body": "<div class=\"email-fragment\">I am using axios, and yes I have set the withCredentials property to true.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">…</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Wed, Oct 5, 2022 at 7:38 PM Jarrod Flesch ***@***.***&gt; wrote:\n <a class=\"user-mention\" href=\"https://github.com/rishi-afk\">@rishi-afk</a> &lt;<a href=\"https://github.com/rishi-afk\">https://github.com/rishi-afk</a>&gt; what does your fetch request\n look like? Are you using credentials: include on them? Docs talk about it\n here\n &lt;<a href=\"https://payloadcms.com/docs/authentication/overview#http-only-cookies\">https://payloadcms.com/docs/authentication/overview#http-only-cookies</a>&gt;\n\n —\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4446807\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1203\" href=\"https://github.com/payloadcms/payload/discussions/1203#discussioncomment-3805616\">#1203 (comment)</a>&gt;,\n or unsubscribe\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AFPPCFUBRI6JLHQUHOFGRT3WBWDUVANCNFSM6AAAAAAQ5NWV5A\">https://github.com/notifications/unsubscribe-auth/AFPPCFUBRI6JLHQUHOFGRT3WBWDUVANCNFSM6AAAAAAQ5NWV5A</a>&gt;\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***&gt;\n</div>\n<div class=\"email-fragment\"></div>\n</div>",
        "createdAt": "2022-10-05T16:14:02Z",
        "replies": null
      },
      {
        "author": {
          "name": "rishi-afk",
          "avatar": "https://avatars.githubusercontent.com/u/22999318?u=3a5b560d9b75cbe97ca669af0ff6dcc160e1a4a9&v=4",
          "url": "https://github.com/rishi-afk"
        },
        "body": "<div class=\"email-fragment\">And I know that for a fact, because on the payload side, I can log the\nincoming request (from web.example.com) and the token cookie is set. It is\njust that it won't process the token from the cookie and set the user\nproperty. However, I am unable to replicate this behaviour on localhost,\nPostman or calling the endpoint directly using the API domain (\nme.example.com).\n\nOn Wed, Oct 5, 2022 at 9:43 PM Rishikesh Bhakare ***@***.***&gt;\nwrote:</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">…</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\"> I am using axios, and yes I have set the withCredentials property to true.\n\n On Wed, Oct 5, 2022 at 7:38 PM Jarrod Flesch ***@***.***&gt;\n wrote:\n\n&gt; <a class=\"user-mention\" href=\"https://github.com/rishi-afk\">@rishi-afk</a> &lt;<a href=\"https://github.com/rishi-afk\">https://github.com/rishi-afk</a>&gt; what does your fetch request\n&gt; look like? Are you using credentials: include on them? Docs talk about\n&gt; it here\n&gt; &lt;<a href=\"https://payloadcms.com/docs/authentication/overview#http-only-cookies\">https://payloadcms.com/docs/authentication/overview#http-only-cookies</a>&gt;\n&gt;\n&gt; —\n&gt; Reply to this email directly, view it on GitHub\n&gt; &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4446807\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1203\" href=\"https://github.com/payloadcms/payload/discussions/1203#discussioncomment-3805616\">#1203 (comment)</a>&gt;,\n&gt; or unsubscribe\n&gt; &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AFPPCFUBRI6JLHQUHOFGRT3WBWDUVANCNFSM6AAAAAAQ5NWV5A\">https://github.com/notifications/unsubscribe-auth/AFPPCFUBRI6JLHQUHOFGRT3WBWDUVANCNFSM6AAAAAAQ5NWV5A</a>&gt;\n&gt; .\n&gt; You are receiving this because you were mentioned.Message ID:\n&gt; ***@***.***&gt;\n&gt;\n</div>\n<div class=\"email-fragment\"></div>\n</div>",
        "createdAt": "2022-10-05T16:20:15Z",
        "replies": [
          {
            "author": {
              "name": "BayBreezy",
              "avatar": "https://avatars.githubusercontent.com/u/53905713?u=8a5a30e9c15fd3310ee1c26884c494e5d615d2c8&v=4",
              "url": "https://github.com/BayBreezy"
            },
            "body": "<p dir=\"auto\">I was having a similar issue with a NuxtJs app &amp; ohmyfetch/fetch. I think the issue is with the OPTION request that is sent before the actual request. When i sent the request from the server side with the cookies included, I got the expected results. But from the client side, I got back my user as null.</p>\n<p dir=\"auto\">Are you able to test sending the request in nest from the server side and see if you get the same results? Ensure that the cookie is included on the server side request(If possible in NextJs)</p>\n<p dir=\"auto\">Like you said, hitting the auth endpoints from the browser directly (going to <code class=\"notranslate\">http://[PAYLOAD_URL]/api/me</code> from a new tab in the browser) will produce the expected results but sending the request with axios or fetch is not working as expected</p>",
            "createdAt": "2022-10-05T18:42:24Z"
          }
        ]
      },
      {
        "author": {
          "name": "rishi-afk",
          "avatar": "https://avatars.githubusercontent.com/u/22999318?u=3a5b560d9b75cbe97ca669af0ff6dcc160e1a4a9&v=4",
          "url": "https://github.com/rishi-afk"
        },
        "body": "<div class=\"email-fragment\">Cookie is recieved with the Payload request everytime, however the user\nfrom token is extracted only when I hit the endpoint using the same domain\nor via Postman. I just can't figure out what's going wrong.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">…</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Thu, 6 Oct 2022, 00:12 BayBreezy, ***@***.***&gt; wrote:\n I was having a similar issue with a NuxtJs app &amp; ohmyfetch/fetch. I think\n the issue is with the OPTION request that is sent before the actual\n request. When i sent the request from the server side with the cookies\n included, I got the expected results. But from the client side, I got back\n my user as null.\n\n Are you able to test sending the request in nest from the server side and\n see if you get the same results? Ensure that the cookie is included on the\n server side request(If possible in NextJs)\n\n Like you said, hitting the auth endpoints from the browser directly (going\n to http://[PAYLOAD_URL]/api/me from a new tab in the browser) will\n produce the expected results but sending the request with axios or fetch is\n not working as expected\n\n —\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4446807\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1203\" href=\"https://github.com/payloadcms/payload/discussions/1203#discussioncomment-3808109\">#1203 (reply in thread)</a>&gt;,\n or unsubscribe\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AFPPCFS64O36Z3EZX4OGBKDWBXDZVANCNFSM6AAAAAAQ5NWV5A\">https://github.com/notifications/unsubscribe-auth/AFPPCFS64O36Z3EZX4OGBKDWBXDZVANCNFSM6AAAAAAQ5NWV5A</a>&gt;\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***&gt;\n</div>\n<div class=\"email-fragment\"></div>\n</div>",
        "createdAt": "2022-10-05T19:05:11Z",
        "replies": null
      },
      {
        "author": {
          "name": "BayBreezy",
          "avatar": "https://avatars.githubusercontent.com/u/53905713?u=8a5a30e9c15fd3310ee1c26884c494e5d615d2c8&v=4",
          "url": "https://github.com/BayBreezy"
        },
        "body": "<p dir=\"auto\">Did you add this <code class=\"notranslate\">[\"https://web.example.com\", \"http://web.example.com\"]</code> to the csrf key in the config as well?</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// ... \ncsrf: [&quot;https://web.example.com&quot;, &quot;http://web.example.com&quot;],\n// ..\"><pre class=\"notranslate\"><span class=\"pl-c\">// ... </span>\n<span class=\"pl-s1\">csrf</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">\"https://web.example.com\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"http://web.example.com\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-c\">// ..</span></pre></div>",
        "createdAt": "2022-10-05T19:09:23Z",
        "replies": null
      },
      {
        "author": {
          "name": "rishi-afk",
          "avatar": "https://avatars.githubusercontent.com/u/22999318?u=3a5b560d9b75cbe97ca669af0ff6dcc160e1a4a9&v=4",
          "url": "https://github.com/rishi-afk"
        },
        "body": "<div class=\"email-fragment\">No, I didn't. Currently in my Payload config, csrf option is set to [].</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">…</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Thu, 6 Oct 2022, 00:39 BayBreezy, ***@***.***&gt; wrote:\n Did you add this [\"<a href=\"https://web.example.com\">https://web.example.com</a>\", \"<a href=\"http://web.example.com\">http://web.example.com</a>\"] to\n the csrf key in the config as well?\n\n // ... csrf: [\"<a href=\"https://web.example.com\">https://web.example.com</a>\", \"<a href=\"http://web.example.com%22%5D,//\">http://web.example.com\"],//</a> ..\n\n —\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4446807\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1203\" href=\"https://github.com/payloadcms/payload/discussions/1203#discussioncomment-3808305\">#1203 (comment)</a>&gt;,\n or unsubscribe\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AFPPCFVPDFT6GJYIXADM6ATWBXG63ANCNFSM6AAAAAAQ5NWV5A\">https://github.com/notifications/unsubscribe-auth/AFPPCFVPDFT6GJYIXADM6ATWBXG63ANCNFSM6AAAAAAQ5NWV5A</a>&gt;\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***&gt;\n</div>\n<div class=\"email-fragment\"></div>\n</div>",
        "createdAt": "2022-10-05T19:11:45Z",
        "replies": [
          {
            "author": {
              "name": "BayBreezy",
              "avatar": "https://avatars.githubusercontent.com/u/53905713?u=8a5a30e9c15fd3310ee1c26884c494e5d615d2c8&v=4",
              "url": "https://github.com/BayBreezy"
            },
            "body": "<p dir=\"auto\">Can you add that and see if it makes a difference?</p>",
            "createdAt": "2022-10-05T19:14:24Z"
          }
        ]
      },
      {
        "author": {
          "name": "rishi-afk",
          "avatar": "https://avatars.githubusercontent.com/u/22999318?u=3a5b560d9b75cbe97ca669af0ff6dcc160e1a4a9&v=4",
          "url": "https://github.com/rishi-afk"
        },
        "body": "<div class=\"email-fragment\">I did it. It worked <g-emoji class=\"g-emoji\" alias=\"tada\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f389.png\">🎉</g-emoji>. I thought keeping csrf [] would just disable it and\nI'll be able to take care of it in the future.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">…</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Thu, 6 Oct 2022, 00:44 BayBreezy, ***@***.***&gt; wrote:\n Can you add that and see if it makes a difference?\n\n —\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4446807\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/1203\" href=\"https://github.com/payloadcms/payload/discussions/1203#discussioncomment-3808335\">#1203 (reply in thread)</a>&gt;,\n or unsubscribe\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AFPPCFQK354DXUERJ3ATVY3WBXHRXANCNFSM6AAAAAAQ5NWV5A\">https://github.com/notifications/unsubscribe-auth/AFPPCFQK354DXUERJ3ATVY3WBXHRXANCNFSM6AAAAAAQ5NWV5A</a>&gt;\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***&gt;\n</div>\n<div class=\"email-fragment\"></div>\n</div>",
        "createdAt": "2022-10-05T19:24:46Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "BayBreezy",
        "avatar": "https://avatars.githubusercontent.com/u/53905713?u=8a5a30e9c15fd3310ee1c26884c494e5d615d2c8&v=4",
        "url": "https://github.com/BayBreezy"
      },
      "body": "<p dir=\"auto\">Did you add this <code class=\"notranslate\">[\"https://web.example.com\", \"http://web.example.com\"]</code> to the csrf key in the config as well?</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// ... \ncsrf: [&quot;https://web.example.com&quot;, &quot;http://web.example.com&quot;],\n// ..\"><pre class=\"notranslate\"><span class=\"pl-c\">// ... </span>\n<span class=\"pl-s1\">csrf</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">\"https://web.example.com\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"http://web.example.com\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-c\">// ..</span></pre></div>",
      "createdAt": "2022-10-05T19:09:23Z",
      "chosenAt": "2022-10-05T19:48:20Z",
      "chosenBy": "JarrodMFlesch",
      "replies": null
    }
  },
  {
    "title": "Email Not Being Sent",
    "body": "<h1 dir=\"auto\">Bug Report</h1>\n<p dir=\"auto\">Payload's payload.sendEmail functionality not working.</p>\n\n<h2 dir=\"auto\">Current Behavior</h2>\n\n<p dir=\"auto\">Email not being sent</p>\n<h2 dir=\"auto\">Expected Behavior</h2>\n<p dir=\"auto\">Email Should be sent</p>\n\n<h2 dir=\"auto\">Possible Solution</h2>\n\n<h2 dir=\"auto\">Steps to Reproduce</h2>\n\n<p dir=\"auto\">I can't say anything on payloads internal email configuration but the <em>fs</em> module error i'm getting can be reproduced with the below instructions.</p>\n<ol dir=\"auto\">\n<li>install the package: @sendgrid/mail</li>\n<li>then: sgMail.setApiKey(process.env.SENDGRID_API_KEY);</li>\n</ol>\n<h2 dir=\"auto\">Detailed Description</h2>\n<p dir=\"auto\">I was trying to work out payload CMS's email feature but not able to make it work. First i tried the SMTP with SendInBlue service, added the SMTP in .env and then configured the payload.init({}) function as instructed in documentation. I was sending email once a user create a new user account - hook - beforeChange.</p>\n<p dir=\"auto\">The email i tried to send does not recieved by the recipient but was there at SendInPlus Dashboard (not sure why). Then i tried the integration with SendGrid. Configured the paylaod as instructed in documentation but still it does not sent any email to recipient. After all that i tried to make it work manually as instructed in SendGrid Documentation using @sendgrid/mail NPM package, it only work 1 time and after that started giving some <em>fs</em> module errors.</p>\n<p dir=\"auto\">These are the errors i'm getting in console!</p>\n<p dir=\"auto\">ERROR in ./node_modules/@sendgrid/client/node_modules/@sendgrid/helpers/classes/attachment.js 9:11-24<br>\nModule not found: Error: Can't resolve 'fs' in 'C:\\WebDevelopment\\MyProjects\\CMS\\payload_auth_template\\node_modules@sendgrid\\client\\node_modules@sendgrid\\helpers\\classes'</p>\n<p dir=\"auto\">ERROR in ./node_modules/@sendgrid/mail/node_modules/@sendgrid/helpers/classes/attachment.js 9:11-24<br>\nModule not found: Error: Can't resolve 'fs' in 'C:\\WebDevelopment\\MyProjects\\CMS\\payload_auth_template\\node_modules@sendgrid\\mail\\node_modules@sendgrid\\helpers\\classes'</p>\n<p dir=\"auto\">I only have one collection configured Users.ts<br>\nGithub: <a href=\"https://github.com/shubhamwebdesign/payload_auth_starter\">https://github.com/shubhamwebdesign/payload_auth_starter</a></p>\n\n",
    "url": "https://github.com/payloadcms/payload/discussions/1194",
    "id": "1194",
    "createdAt": "2022-10-01T16:38:30Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "shubhamwebdesign",
      "avatar": "https://avatars.githubusercontent.com/u/68468708?v=4",
      "url": "https://github.com/shubhamwebdesign"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">OK so here's some info for you.</p>\n<p dir=\"auto\">Out of the box, Payload does <em><strong>not</strong></em> send email to your users' inboxes. It comes configured with <a href=\"https://ethereal.email/\" rel=\"nofollow\">Ethereal Email</a> which allows you to test and debug your email, but to see the emails, you need to log into Ethereal Email. See the docs here regarding how you can log your Ethereal credentials to log in:</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/email/overview#mock-transport\" rel=\"nofollow\">https://payloadcms.com/docs/email/overview#mock-transport</a></p>\n<p dir=\"auto\">Now, for configuring real transports. I'm going to guess that your SendInBlue configuration was wrong if the email showed up in the SendInPlus dashboard but not actually delivered. This could be due to MX records or similar not being correctly configured, causing your email to get either blocked or marked as spam. Email is a fickle beast, I'm afraid..</p>\n<p dir=\"auto\">Now, for the last <code class=\"notranslate\">fs</code> issue. I took a look at your config and I know what's happening here. Basically, you're importing <em>server-only modules</em> into your Users collection, and server-only modules will break Webpack / the admin bundle unless you <code class=\"notranslate\">alias</code> them.</p>\n<p dir=\"auto\">I'd put your <em><strong>whole</strong></em> <code class=\"notranslate\">beforeChange</code> hook into a separate file, and then <em>alias that file</em> so it does not get included in the admin bundle. This will fix your issue.</p>\n<p dir=\"auto\">See the docs here for more:</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules\" rel=\"nofollow\">https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules</a></p>\n<p dir=\"auto\">I'm gonna convert this over to a discussion but I am happy to continue helping here!</p>",
        "createdAt": "2022-10-02T14:24:57Z",
        "replies": [
          {
            "author": {
              "name": "shubhamwebdesign",
              "avatar": "https://avatars.githubusercontent.com/u/68468708?v=4",
              "url": "https://github.com/shubhamwebdesign"
            },
            "body": "<p dir=\"auto\">Thanks for your reply, I have setup an alias as instructed in the documentation and now its working fine (emails are being sent to inbox) but i'm getting some error in terminal:</p>\n<p dir=\"auto\">webpack built e3cd7ce2359bb2c12536 in 2090ms<br>\nWARNING in ./src/collections/Users.ts 57:10-19<br>\nexport 'sendEmail' (imported as 'sendEmail') was not found in './hooks/SendEmail' (possible exports: default)</p>\n<p dir=\"auto\">webpack compiled with 1 warning<br>\nWatchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir 'C:\\WebDevelopment\\MyProjects\\CMS\\payload_auth_template\\src\\collections\\hooks\\SendEmail.ts'<br>\n[08:54:22] INFO (payload): Connected to Mongo server successfully!</p>\n<p dir=\"auto\">Everything is working fine but how can i get rid of there errors.</p>\n<p dir=\"auto\">Github:  <a href=\"https://github.com/shubhamwebdesign/payload_auth_starter\">https://github.com/shubhamwebdesign/payload_auth_starter</a></p>",
            "createdAt": "2022-10-05T08:59:38Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">OK so here's some info for you.</p>\n<p dir=\"auto\">Out of the box, Payload does <em><strong>not</strong></em> send email to your users' inboxes. It comes configured with <a href=\"https://ethereal.email/\" rel=\"nofollow\">Ethereal Email</a> which allows you to test and debug your email, but to see the emails, you need to log into Ethereal Email. See the docs here regarding how you can log your Ethereal credentials to log in:</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/email/overview#mock-transport\" rel=\"nofollow\">https://payloadcms.com/docs/email/overview#mock-transport</a></p>\n<p dir=\"auto\">Now, for configuring real transports. I'm going to guess that your SendInBlue configuration was wrong if the email showed up in the SendInPlus dashboard but not actually delivered. This could be due to MX records or similar not being correctly configured, causing your email to get either blocked or marked as spam. Email is a fickle beast, I'm afraid..</p>\n<p dir=\"auto\">Now, for the last <code class=\"notranslate\">fs</code> issue. I took a look at your config and I know what's happening here. Basically, you're importing <em>server-only modules</em> into your Users collection, and server-only modules will break Webpack / the admin bundle unless you <code class=\"notranslate\">alias</code> them.</p>\n<p dir=\"auto\">I'd put your <em><strong>whole</strong></em> <code class=\"notranslate\">beforeChange</code> hook into a separate file, and then <em>alias that file</em> so it does not get included in the admin bundle. This will fix your issue.</p>\n<p dir=\"auto\">See the docs here for more:</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules\" rel=\"nofollow\">https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules</a></p>\n<p dir=\"auto\">I'm gonna convert this over to a discussion but I am happy to continue helping here!</p>",
      "createdAt": "2022-10-02T14:24:57Z",
      "chosenAt": "2022-10-03T12:54:18Z",
      "chosenBy": "denolfe",
      "replies": [
        {
          "author": {
            "name": "shubhamwebdesign",
            "avatar": "https://avatars.githubusercontent.com/u/68468708?v=4",
            "url": "https://github.com/shubhamwebdesign"
          },
          "body": "<p dir=\"auto\">Thanks for your reply, I have setup an alias as instructed in the documentation and now its working fine (emails are being sent to inbox) but i'm getting some error in terminal:</p>\n<p dir=\"auto\">webpack built e3cd7ce2359bb2c12536 in 2090ms<br>\nWARNING in ./src/collections/Users.ts 57:10-19<br>\nexport 'sendEmail' (imported as 'sendEmail') was not found in './hooks/SendEmail' (possible exports: default)</p>\n<p dir=\"auto\">webpack compiled with 1 warning<br>\nWatchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir 'C:\\WebDevelopment\\MyProjects\\CMS\\payload_auth_template\\src\\collections\\hooks\\SendEmail.ts'<br>\n[08:54:22] INFO (payload): Connected to Mongo server successfully!</p>\n<p dir=\"auto\">Everything is working fine but how can i get rid of there errors.</p>\n<p dir=\"auto\">Github:  <a href=\"https://github.com/shubhamwebdesign/payload_auth_starter\">https://github.com/shubhamwebdesign/payload_auth_starter</a></p>",
          "createdAt": "2022-10-05T08:59:38Z"
        }
      ]
    }
  },
  {
    "title": "Subdomains and Cookies",
    "body": "<p dir=\"auto\">Hey folks,</p>\n<p dir=\"auto\">Running into an issue where Payload running on a subdomain fails to set an auth cookie properly.</p>\n<p dir=\"auto\">With Payload is running on <code class=\"notranslate\">https://payload.domain.com</code> and a React frontend is running on <code class=\"notranslate\">https://domain.com</code>.</p>\n<p dir=\"auto\">User collection:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import { CollectionConfig } from 'payload/types';\nexport const User : CollectionConfig = {\n  slug: 'user',\n  auth: {\n    cookies: {\n      secure: true, // domain.com is secure (https)\n      domain: `.domain.com`,\n      sameSite: 'none' // Tried with all options, strict, lax, none\n    },\n  },\n  access: {\n    // ...\n  },\n  fields: [\n    // ...\n  ]\n};\"><pre class=\"notranslate\"><code class=\"notranslate\">import { CollectionConfig } from 'payload/types';\nexport const User : CollectionConfig = {\n  slug: 'user',\n  auth: {\n    cookies: {\n      secure: true, // domain.com is secure (https)\n      domain: `.domain.com`,\n      sameSite: 'none' // Tried with all options, strict, lax, none\n    },\n  },\n  access: {\n    // ...\n  },\n  fields: [\n    // ...\n  ]\n};\n</code></pre></div>\n<p dir=\"auto\">From inspecting requests, the correct response appears to be sent from payload however no cookie is ever actually set.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/7230065/193453887-c3e4f371-906c-43a7-9288-405d881a676a.png\"><img src=\"https://user-images.githubusercontent.com/7230065/193453887-c3e4f371-906c-43a7-9288-405d881a676a.png\" alt=\"Screen Shot 2022-10-02 at 8 22 16 AM\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/7230065/193454068-c1e329ef-8d8c-4e2d-878f-e9730bd08491.png\"><img src=\"https://user-images.githubusercontent.com/7230065/193454068-c1e329ef-8d8c-4e2d-878f-e9730bd08491.png\" alt=\"Screen Shot 2022-10-02 at 8 31 39 AM\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">The issue seems similar to <a href=\"https://github.com/payloadcms/payload/discussions/401#discussion-3767029\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/401/hovercard\">discussion #401</a> however I wasn't able to identify the issue with the cookie not setting.</p>\n<p dir=\"auto\">Any thoughts?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1193",
    "id": "1193",
    "createdAt": "2022-10-02T12:31:51Z",
    "upvotes": 1,
    "commentTotal": 4,
    "author": {
      "name": "imphillipzissou",
      "avatar": "https://avatars.githubusercontent.com/u/7230065?u=9fdbbca80c29ca0199c57a08aa4273b97b528111&v=4",
      "url": "https://github.com/imphillipzissou"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/imphillipzissou/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/imphillipzissou\">@imphillipzissou</a> — this is strange. At first glance everything looks right. Can you try this in Chrome? I believe Chrome will show a little yellow warning sign if a cookie is not set successfully. And it typically comes with the reason why. Looks like you're using Safari, right?</p>",
        "createdAt": "2022-10-02T13:39:33Z",
        "replies": null
      },
      {
        "author": {
          "name": "imphillipzissou",
          "avatar": "https://avatars.githubusercontent.com/u/7230065?u=9fdbbca80c29ca0199c57a08aa4273b97b528111&v=4",
          "url": "https://github.com/imphillipzissou"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> Thanks for replying so quickly! Correct, this was with Safari. I just tried this on Chrome too, however same behavior and no little yellow warnings.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/7230065/193458116-c6f6b07d-5ebc-449f-a29a-7b2cf64cf2f9.png\"><img src=\"https://user-images.githubusercontent.com/7230065/193458116-c6f6b07d-5ebc-449f-a29a-7b2cf64cf2f9.png\" alt=\"Screen Shot 2022-10-02 at 10 01 13 AM\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/7230065/193458118-924e6847-eef5-48f7-a7cd-9742c69de691.png\"><img src=\"https://user-images.githubusercontent.com/7230065/193458118-924e6847-eef5-48f7-a7cd-9742c69de691.png\" alt=\"Screen Shot 2022-10-02 at 10 00 14 AM\" style=\"max-width: 100%;\"></a></p>",
        "createdAt": "2022-10-02T14:03:42Z",
        "replies": null
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hmm, the only thing I can see here is that in Chrome, the <code class=\"notranslate\">SameSite</code> property appears to be set to <code class=\"notranslate\">Strict</code>. Are you specifying <code class=\"notranslate\">SameSite</code> to <code class=\"notranslate\">None</code>?</p>",
        "createdAt": "2022-10-02T14:20:02Z",
        "replies": [
          {
            "author": {
              "name": "imphillipzissou",
              "avatar": "https://avatars.githubusercontent.com/u/7230065?u=9fdbbca80c29ca0199c57a08aa4273b97b528111&v=4",
              "url": "https://github.com/imphillipzissou"
            },
            "body": "<p dir=\"auto\">Apologies for changing it in the screenshot. I've attempted it with all the options (<code class=\"notranslate\">lax</code>, <code class=\"notranslate\">strict</code>, and <code class=\"notranslate\">none</code>) in Chrome.</p>\n<p dir=\"auto\">Not sure if it would make a difference but I am attempting this over the REST <code class=\"notranslate\">/api/[colleciton-slug]/login</code> endpoint. Working on reproducing the issue isolated from my project.</p>",
            "createdAt": "2022-10-02T14:24:15Z"
          }
        ]
      },
      {
        "author": {
          "name": "imphillipzissou",
          "avatar": "https://avatars.githubusercontent.com/u/7230065?u=9fdbbca80c29ca0199c57a08aa4273b97b528111&v=4",
          "url": "https://github.com/imphillipzissou"
        },
        "body": "<p dir=\"auto\">Took a minute but here's what I did to reproduce.</p>\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">Cloned and installed the Payload Next Auth repo: <a href=\"https://github.com/payloadcms/payload-cms-next\">payload-cms-next</a>. Locally, I'm using Traefik, dnsmasq, for the certificate and resolution. Configured this to run and resolve on <code class=\"notranslate\">payload.cookie.domain.com</code>.</p>\n</li>\n<li>\n<p dir=\"auto\">Cloned and installed the Next Auth Frontend repo: <a href=\"https://github.com/payloadcms/next-auth-frontend\">next-auth-frontend</a>. Again, locally using Traefik and dnsmasq for valid certs and resolution. Configured this to run and resolve on <code class=\"notranslate\">cookie.domain.com</code>. Set the <code class=\"notranslate\">NEXT_PUBLIC_CMS_URL</code> env. var. to point to <code class=\"notranslate\">payload.cookie.domain.com</code>.</p>\n</li>\n</ol>\n<p dir=\"auto\">Then I tried a few different approaches.</p>\n<ol dir=\"auto\">\n<li>Did <strong>not</strong> modify the <code class=\"notranslate\">Users</code> collection to observe the initial behavior:</li>\n</ol>\n<ul dir=\"auto\">\n<li>Logging into payload at directly at <code class=\"notranslate\">payload.cookie.domain.com</code> works as expected, sets a cookie for the payload subdomain.</li>\n<li>Logging into next-auth at <code class=\"notranslate\">cookie.domain.com</code> also works until the page is refreshed. No cookie was set though, as expected (different domain).</li>\n</ul>\n<ol start=\"2\" dir=\"auto\">\n<li>Did modify the <code class=\"notranslate\">Users</code> collection:</li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// ...\nauth : {\n  cookies: {\n      secure: true,\n      sameSite: 'strict', // Also tried `lax`, and `none`\n      domain: '.cookie.domain.com' // Also tried `cookie.domain.com` and `.domain.com` to rule out it being the naked domain.\n  },\n  // ...\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">// ...\nauth : {\n  cookies: {\n      secure: true,\n      sameSite: 'strict', // Also tried `lax`, and `none`\n      domain: '.cookie.domain.com' // Also tried `cookie.domain.com` and `.domain.com` to rule out it being the naked domain.\n  },\n  // ...\n}\n</code></pre></div>\n<ul dir=\"auto\">\n<li>Logging into payload works (as expected).</li>\n<li>Logging into next-auth at <code class=\"notranslate\">cookie.domain.com</code> works until page is refreshed. <strong>However no cookie is set though.</strong></li>\n<li>The console and networking logs show a similar response to my initial post where the response contains a <code class=\"notranslate\">Set-Cookie</code> to the domain <code class=\"notranslate\">cookie.domain.com</code>. However, again, doesn't actually set the cookie.</li>\n</ul>\n<p dir=\"auto\">Additional (kind of) related behaviors:</p>\n<ul dir=\"auto\">\n<li>The logout button in next-auth says the 'You are already logged out.<code class=\"notranslate\">However, I can still click</code>Account` up top and return to the Account page. Appears the only way to logout is to refresh the page.</li>\n</ul>\n<p dir=\"auto\">Not sure what the heck is going on here! lol</p>\n<p dir=\"auto\">Edit: Seems like it's specific to REST fetch requests so looking into this and CORS configuration a little more.</p>\n<p dir=\"auto\">Edit: Am a goof. lol There are a couple things at play. Ultimately I was calling the payload rest api in <code class=\"notranslate\">getServerSideProps</code>. Which is obviously not from the browser. So the request wouldn't contain the cookie. What I ultimately did was read the httponly cookie in <code class=\"notranslate\">getServerSideProps</code> then set it as an <code class=\"notranslate\">Authorization: JWT {cookie token}</code> on the payload request.</p>",
        "createdAt": "2022-10-02T16:20:00Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "imphillipzissou",
        "avatar": "https://avatars.githubusercontent.com/u/7230065?u=9fdbbca80c29ca0199c57a08aa4273b97b528111&v=4",
        "url": "https://github.com/imphillipzissou"
      },
      "body": "<p dir=\"auto\">Took a minute but here's what I did to reproduce.</p>\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">Cloned and installed the Payload Next Auth repo: <a href=\"https://github.com/payloadcms/payload-cms-next\">payload-cms-next</a>. Locally, I'm using Traefik, dnsmasq, for the certificate and resolution. Configured this to run and resolve on <code class=\"notranslate\">payload.cookie.domain.com</code>.</p>\n</li>\n<li>\n<p dir=\"auto\">Cloned and installed the Next Auth Frontend repo: <a href=\"https://github.com/payloadcms/next-auth-frontend\">next-auth-frontend</a>. Again, locally using Traefik and dnsmasq for valid certs and resolution. Configured this to run and resolve on <code class=\"notranslate\">cookie.domain.com</code>. Set the <code class=\"notranslate\">NEXT_PUBLIC_CMS_URL</code> env. var. to point to <code class=\"notranslate\">payload.cookie.domain.com</code>.</p>\n</li>\n</ol>\n<p dir=\"auto\">Then I tried a few different approaches.</p>\n<ol dir=\"auto\">\n<li>Did <strong>not</strong> modify the <code class=\"notranslate\">Users</code> collection to observe the initial behavior:</li>\n</ol>\n<ul dir=\"auto\">\n<li>Logging into payload at directly at <code class=\"notranslate\">payload.cookie.domain.com</code> works as expected, sets a cookie for the payload subdomain.</li>\n<li>Logging into next-auth at <code class=\"notranslate\">cookie.domain.com</code> also works until the page is refreshed. No cookie was set though, as expected (different domain).</li>\n</ul>\n<ol start=\"2\" dir=\"auto\">\n<li>Did modify the <code class=\"notranslate\">Users</code> collection:</li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// ...\nauth : {\n  cookies: {\n      secure: true,\n      sameSite: 'strict', // Also tried `lax`, and `none`\n      domain: '.cookie.domain.com' // Also tried `cookie.domain.com` and `.domain.com` to rule out it being the naked domain.\n  },\n  // ...\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">// ...\nauth : {\n  cookies: {\n      secure: true,\n      sameSite: 'strict', // Also tried `lax`, and `none`\n      domain: '.cookie.domain.com' // Also tried `cookie.domain.com` and `.domain.com` to rule out it being the naked domain.\n  },\n  // ...\n}\n</code></pre></div>\n<ul dir=\"auto\">\n<li>Logging into payload works (as expected).</li>\n<li>Logging into next-auth at <code class=\"notranslate\">cookie.domain.com</code> works until page is refreshed. <strong>However no cookie is set though.</strong></li>\n<li>The console and networking logs show a similar response to my initial post where the response contains a <code class=\"notranslate\">Set-Cookie</code> to the domain <code class=\"notranslate\">cookie.domain.com</code>. However, again, doesn't actually set the cookie.</li>\n</ul>\n<p dir=\"auto\">Additional (kind of) related behaviors:</p>\n<ul dir=\"auto\">\n<li>The logout button in next-auth says the 'You are already logged out.<code class=\"notranslate\">However, I can still click</code>Account` up top and return to the Account page. Appears the only way to logout is to refresh the page.</li>\n</ul>\n<p dir=\"auto\">Not sure what the heck is going on here! lol</p>\n<p dir=\"auto\">Edit: Seems like it's specific to REST fetch requests so looking into this and CORS configuration a little more.</p>\n<p dir=\"auto\">Edit: Am a goof. lol There are a couple things at play. Ultimately I was calling the payload rest api in <code class=\"notranslate\">getServerSideProps</code>. Which is obviously not from the browser. So the request wouldn't contain the cookie. What I ultimately did was read the httponly cookie in <code class=\"notranslate\">getServerSideProps</code> then set it as an <code class=\"notranslate\">Authorization: JWT {cookie token}</code> on the payload request.</p>",
      "createdAt": "2022-10-02T16:20:00Z",
      "chosenAt": "2022-10-02T16:49:20Z",
      "chosenBy": "imphillipzissou",
      "replies": null
    }
  },
  {
    "title": "How to get authenticated user in custom express routes?",
    "body": "<p dir=\"auto\">I'm building custom endpoints to extend some collections and I wonder how to get the authenticated user from an express route?</p>\n<p dir=\"auto\">See an example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"app.get(&quot;/api/invoices/:id/print&quot;, async function (req, res) {\n  // check permissions before print\n  ...\n});\"><pre class=\"notranslate\"><code class=\"notranslate\">app.get(\"/api/invoices/:id/print\", async function (req, res) {\n  // check permissions before print\n  ...\n});\n</code></pre></div>\n<p dir=\"auto\">Let's say I want to download a pdf for a selected invoice and I want to make sure that the user is authenticated and has correct privileges. I wanted to use Local API <code class=\"notranslate\">payload</code> but I don't see any option to get a user. Is it possible?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/675",
    "id": "675",
    "createdAt": "2022-06-21T20:24:11Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "wojciechkrol",
      "avatar": "https://avatars.githubusercontent.com/u/14108143?u=a50f83a499fdf37dbee3b4686403648ee4507a1a&v=4",
      "url": "https://github.com/wojciechkrol"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/wojciechkrol/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wojciechkrol\">@wojciechkrol</a> — this is totally possible!</p>\n<p dir=\"auto\">Check this page:<br>\n<a href=\"https://payloadcms.com/docs/authentication/using-middleware\" rel=\"nofollow\">https://payloadcms.com/docs/authentication/using-middleware</a></p>\n<p dir=\"auto\">We've got an Express middleware that allows you to re-use Payload's built-in auth easily. Should be exactly what you need. Note that this will <em><strong>only</strong></em> expose <code class=\"notranslate\">req.user</code> for you to do what you want, but you still have to make sure to still enforce your own access control there.</p>\n<p dir=\"auto\">One other thing you can do is also pass your <code class=\"notranslate\">user</code> from your own Express endpoint <em><strong>into</strong></em> the Payload Local API, so it's used seamlessly.</p>\n<p dir=\"auto\">Bam!</p>",
        "createdAt": "2022-06-21T20:27:08Z",
        "replies": [
          {
            "author": {
              "name": "wojciechkrol",
              "avatar": "https://avatars.githubusercontent.com/u/14108143?u=a50f83a499fdf37dbee3b4686403648ee4507a1a&v=4",
              "url": "https://github.com/wojciechkrol"
            },
            "body": "<p dir=\"auto\">Thank you! My fault, I overlooked this page in docs. You saved my time!</p>",
            "createdAt": "2022-06-21T20:32:20Z"
          }
        ]
      },
      {
        "author": {
          "name": "GeorgeyB",
          "avatar": "https://avatars.githubusercontent.com/u/13889255?u=e9fa49c94b3d8476b0db260a459e9c16d6a7d208&v=4",
          "url": "https://github.com/GeorgeyB"
        },
        "body": "<p dir=\"auto\">To add to <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>'s answer - if <code class=\"notranslate\">invoices</code> is a collection, you also have the option of providing a custom endpoint with the <code class=\"notranslate\">endpoints</code> collection configuration property where the Payload middleware is bound for you:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const Invoices = {\n    slug: 'invoices',\n    endpoints: [\n        {\n            path: '/:id/print',\n            method: 'get',\n            handler: ({ user }) =&gt; {\n                // Handle the request...    \n            }\n        },\n    ]\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">const Invoices = {\n    slug: 'invoices',\n    endpoints: [\n        {\n            path: '/:id/print',\n            method: 'get',\n            handler: ({ user }) =&gt; {\n                // Handle the request...    \n            }\n        },\n    ]\n}\n</code></pre></div>",
        "createdAt": "2022-06-22T11:20:06Z",
        "replies": [
          {
            "author": {
              "name": "wojciechkrol",
              "avatar": "https://avatars.githubusercontent.com/u/14108143?u=a50f83a499fdf37dbee3b4686403648ee4507a1a&v=4",
              "url": "https://github.com/wojciechkrol"
            },
            "body": "<p dir=\"auto\">Whoa! Good to know :) You should update documentation to let people know about this feature.</p>\n<p dir=\"auto\">Thank you!</p>",
            "createdAt": "2022-06-22T11:29:46Z"
          }
        ]
      },
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\">I've run into a similar issue, but it requires a different strategy than described here.</p>\n<p dir=\"auto\">I need to figure out how to authenticate Payload from my custom Express route which is hit by a <em>Stripe webhook</em>. I need to use the local Payload api to handle these events, but the problem is that even if I use Payload authentication middleware, the source of the webhook is unauthenticated. Stripe only allows basic auth headers the url (<code class=\"notranslate\">https://user/:pass@</code>) which is likely not what we want.</p>\n<p dir=\"auto\">It’s almost like we need to login manually <em>after</em> Stripe webhooks hit the Payload server, <em>then</em> proceed to use the local api</p>\n<p dir=\"auto\">Here’s an example:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"app.post('/stripe/webhooks', [\n  payload.authenticate,\n  express.raw({ type: 'application/json' }),\n  (req: express.Request, res: express.Response): void =&gt; {\n    // THIS WILL ALWAYS HIT, BECAUSE THE STRIPE WEBHOOK ORIGIN IS UNAUTHENTICATED\n    if (req &amp;&amp; !req.user) {\n      return res.status(403).json({ message: 'You must be logged in to do this.' });\n    }\n\n    const stripeSignature = req.headers['stripe-signature'];\n\n    let event: Stripe.Event;\n\n    try {\n      event = stripe.webhooks.constructEvent(req.body, stripeSignature, process.env.STRIPE_WEBHOOKS_ENDPOINT_SECRET);\n      // CAN WE AUTHENTICATE MANUALLY HERE?!\n      handleWebhooks(event, stripe, {});\n    } catch (err) {\n      console.error(`Webhook Error: ${err.message}`);\n      res.status(400);\n      return;\n    }\n\n    console.log('✅ Success:', event.id);\n    res.json({ received: true });\n  },\n]);\"><pre class=\"notranslate\"><span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">post</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/stripe/webhooks'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span>\n  <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">authenticate</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-s1\">express</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">raw</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'application/json'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span>: <span class=\"pl-s1\">express</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span>: <span class=\"pl-s1\">express</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Response</span><span class=\"pl-kos\">)</span>: <span class=\"pl-k\">void</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// THIS WILL ALWAYS HIT, BECAUSE THE STRIPE WEBHOOK ORIGIN IS UNAUTHENTICATED</span>\n    <span class=\"pl-c1\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-c1\">!</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">status</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">403</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">json</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">message</span>: <span class=\"pl-s\">'You must be logged in to do this.'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">stripeSignature</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">headers</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'stripe-signature'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">let</span> <span class=\"pl-s1\">event</span>: <span class=\"pl-v\">Stripe</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Event</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s1\">event</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">stripe</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">webhooks</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">constructEvent</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">body</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">stripeSignature</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">STRIPE_WEBHOOKS_ENDPOINT_SECRET</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-c\">// CAN WE AUTHENTICATE MANUALLY HERE?!</span>\n      <span class=\"pl-en\">handleWebhooks</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">event</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">stripe</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Webhook Error: <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">message</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">status</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">400</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-k\">return</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'✅ Success:'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">event</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">json</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">received</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Since Stripe can authenticate their own webhook by reading the signature in the header, it seems like we can safely log in using credentials from an <code class=\"notranslate\">.env</code>.</p>",
        "createdAt": "2022-09-23T13:42:43Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/wojciechkrol/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wojciechkrol\">@wojciechkrol</a> — this is totally possible!</p>\n<p dir=\"auto\">Check this page:<br>\n<a href=\"https://payloadcms.com/docs/authentication/using-middleware\" rel=\"nofollow\">https://payloadcms.com/docs/authentication/using-middleware</a></p>\n<p dir=\"auto\">We've got an Express middleware that allows you to re-use Payload's built-in auth easily. Should be exactly what you need. Note that this will <em><strong>only</strong></em> expose <code class=\"notranslate\">req.user</code> for you to do what you want, but you still have to make sure to still enforce your own access control there.</p>\n<p dir=\"auto\">One other thing you can do is also pass your <code class=\"notranslate\">user</code> from your own Express endpoint <em><strong>into</strong></em> the Payload Local API, so it's used seamlessly.</p>\n<p dir=\"auto\">Bam!</p>",
      "createdAt": "2022-06-21T20:27:08Z",
      "chosenAt": "2022-06-21T20:29:27Z",
      "chosenBy": "wojciechkrol",
      "replies": [
        {
          "author": {
            "name": "wojciechkrol",
            "avatar": "https://avatars.githubusercontent.com/u/14108143?u=a50f83a499fdf37dbee3b4686403648ee4507a1a&v=4",
            "url": "https://github.com/wojciechkrol"
          },
          "body": "<p dir=\"auto\">Thank you! My fault, I overlooked this page in docs. You saved my time!</p>",
          "createdAt": "2022-06-21T20:32:20Z"
        }
      ]
    }
  },
  {
    "title": "Remix & Payload",
    "body": "<p dir=\"auto\">I've created a new Remix app with <code class=\"notranslate\">create-remix</code> and then copied over the (hopefully) relevant parts of a Payload app created with <code class=\"notranslate\">create-payload-app</code>:</p>\n<p dir=\"auto\"><a href=\"https://github.com/colinramsay/remixpayload\">https://github.com/colinramsay/remixpayload</a></p>\n<p dir=\"auto\">It starts up ok (<code class=\"notranslate\">npm run dev</code>), but then when creating/editing an item in collection I see a blank screen with:</p>\n<p dir=\"auto\"><code class=\"notranslate\">Uncaught TypeError: _reactRouterDom.withRouter is not a function</code></p>\n<p dir=\"auto\">I've been down a rabbithole with this. I actually got it working by removing <code class=\"notranslate\">package-lock.json</code>, <code class=\"notranslate\">rm -rf node_modules</code> and then <code class=\"notranslate\">yarn install; yarn dev</code> but have had various other issues since.</p>\n<p dir=\"auto\">Does anyone have a working repo with Remix &amp; Payload?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1160",
    "id": "1160",
    "createdAt": "2022-09-22T13:32:12Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "colinramsay",
      "avatar": "https://avatars.githubusercontent.com/u/72954?u=4501f52d39912ab0eb30bf1454628e149516ce69&v=4",
      "url": "https://github.com/colinramsay"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Here is a repo to compare your code against. <a href=\"https://github.com/payloadcms/remix-server\">https://github.com/payloadcms/remix-server</a></p>\n<p dir=\"auto\">If you have more specific questions we can try and answer them for you.</p>",
        "createdAt": "2022-09-22T15:17:32Z",
        "replies": [
          {
            "author": {
              "name": "colinramsay",
              "avatar": "https://avatars.githubusercontent.com/u/72954?u=4501f52d39912ab0eb30bf1454628e149516ce69&v=4",
              "url": "https://github.com/colinramsay"
            },
            "body": "<p dir=\"auto\">Brilliant, I missed this example when I was looking. Thanks!</p>",
            "createdAt": "2022-09-22T15:19:52Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">You hadn't missed anything, it was <code class=\"notranslate\">private</code> before as it is still WIP. Cheers!</p>",
            "createdAt": "2022-09-22T15:30:46Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Here is a repo to compare your code against. <a href=\"https://github.com/payloadcms/remix-server\">https://github.com/payloadcms/remix-server</a></p>\n<p dir=\"auto\">If you have more specific questions we can try and answer them for you.</p>",
      "createdAt": "2022-09-22T15:17:32Z",
      "chosenAt": "2022-09-22T15:19:55Z",
      "chosenBy": "colinramsay",
      "replies": [
        {
          "author": {
            "name": "colinramsay",
            "avatar": "https://avatars.githubusercontent.com/u/72954?u=4501f52d39912ab0eb30bf1454628e149516ce69&v=4",
            "url": "https://github.com/colinramsay"
          },
          "body": "<p dir=\"auto\">Brilliant, I missed this example when I was looking. Thanks!</p>",
          "createdAt": "2022-09-22T15:19:52Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">You hadn't missed anything, it was <code class=\"notranslate\">private</code> before as it is still WIP. Cheers!</p>",
          "createdAt": "2022-09-22T15:30:46Z"
        }
      ]
    }
  },
  {
    "title": "Install payloadcms on plesk server",
    "body": "<p dir=\"auto\">How to install payloadcms  and a ubuntu 22.04 plesk server?</p>\n<p dir=\"auto\">Do I install mongodb via docker?<br>\n<a href=\"https://support.plesk.com/hc/en-us/articles/115004540294-How-to-install-MongoDB-database-server-in-Plesk-\" rel=\"nofollow\">https://support.plesk.com/hc/en-us/articles/115004540294-How-to-install-MongoDB-database-server-in-Plesk-</a></p>\n<p dir=\"auto\">How to start the app via node.js</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1100",
    "id": "1100",
    "createdAt": "2022-09-09T19:48:40Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "Rar9",
      "avatar": "https://avatars.githubusercontent.com/u/2239608?u=50ed805eec791a83af932905fe5bfc752aef971f&v=4",
      "url": "https://github.com/Rar9"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Rar9/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Rar9\">@Rar9</a> , you could likely get a better answer for this elsewhere on the internet, since it's more Ops-related than Payload specifically. I would suggest searching for how to deploy a node application with mongodb using docker-compose as a good starting point.</p>",
        "createdAt": "2022-09-10T21:39:00Z",
        "replies": [
          {
            "author": {
              "name": "Rar9",
              "avatar": "https://avatars.githubusercontent.com/u/2239608?u=50ed805eec791a83af932905fe5bfc752aef971f&v=4",
              "url": "https://github.com/Rar9"
            },
            "body": "<p dir=\"auto\">It's a feature request,  so people are getting easy a guide how to install payloadcms on a plesk environment.</p>\n<p dir=\"auto\">No quide = no new user as they will turn to strapi /directus....</p>",
            "createdAt": "2022-09-11T07:21:24Z"
          },
          {
            "author": {
              "name": "Rar9",
              "avatar": "https://avatars.githubusercontent.com/u/2239608?u=50ed805eec791a83af932905fe5bfc752aef971f&v=4",
              "url": "https://github.com/Rar9"
            },
            "body": "<p dir=\"auto\">Basically you can add nginx basic config to the list</p>",
            "createdAt": "2022-09-11T07:22:17Z"
          },
          {
            "author": {
              "name": "MarkAtOmniux",
              "avatar": "https://avatars.githubusercontent.com/u/90132604?u=3ccd4173f802c381f9d48907bea89198d571b022&v=4",
              "url": "https://github.com/MarkAtOmniux"
            },
            "body": "<blockquote>\n<p dir=\"auto\">It's a feature request, so people are getting easy a guide how to install payloadcms on a plesk environment.</p>\n<p dir=\"auto\">No quide = no new user as they will turn to strapi /directus....</p>\n</blockquote>\n<p dir=\"auto\">Ironically I moved from strapi to payload because I hated it. But I agree, Docker documentation would be helpful</p>",
            "createdAt": "2022-09-19T19:37:19Z"
          },
          {
            "author": {
              "name": "Rar9",
              "avatar": "https://avatars.githubusercontent.com/u/2239608?u=50ed805eec791a83af932905fe5bfc752aef971f&v=4",
              "url": "https://github.com/Rar9"
            },
            "body": "<p dir=\"auto\">I´m currently on Directus due to the missing guide... but would love to test payloadcms as strapi ways also not my thing</p>",
            "createdAt": "2022-09-19T19:47:59Z"
          },
          {
            "author": {
              "name": "Rar9",
              "avatar": "https://avatars.githubusercontent.com/u/2239608?u=50ed805eec791a83af932905fe5bfc752aef971f&v=4",
              "url": "https://github.com/Rar9"
            },
            "body": "<p dir=\"auto\">I got a bit further</p>\n<p dir=\"auto\"><a href=\"https://discord.com/channels/967097582721572934/1022136604443299840/1022385771031830548\" rel=\"nofollow\">https://discord.com/channels/967097582721572934/1022136604443299840/1022385771031830548</a></p>",
            "createdAt": "2022-09-22T05:57:02Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Rar9/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Rar9\">@Rar9</a> , you could likely get a better answer for this elsewhere on the internet, since it's more Ops-related than Payload specifically. I would suggest searching for how to deploy a node application with mongodb using docker-compose as a good starting point.</p>",
      "createdAt": "2022-09-10T21:39:00Z",
      "chosenAt": "2022-09-10T21:39:10Z",
      "chosenBy": "denolfe",
      "replies": [
        {
          "author": {
            "name": "Rar9",
            "avatar": "https://avatars.githubusercontent.com/u/2239608?u=50ed805eec791a83af932905fe5bfc752aef971f&v=4",
            "url": "https://github.com/Rar9"
          },
          "body": "<p dir=\"auto\">It's a feature request,  so people are getting easy a guide how to install payloadcms on a plesk environment.</p>\n<p dir=\"auto\">No quide = no new user as they will turn to strapi /directus....</p>",
          "createdAt": "2022-09-11T07:21:24Z"
        },
        {
          "author": {
            "name": "Rar9",
            "avatar": "https://avatars.githubusercontent.com/u/2239608?u=50ed805eec791a83af932905fe5bfc752aef971f&v=4",
            "url": "https://github.com/Rar9"
          },
          "body": "<p dir=\"auto\">Basically you can add nginx basic config to the list</p>",
          "createdAt": "2022-09-11T07:22:17Z"
        },
        {
          "author": {
            "name": "MarkAtOmniux",
            "avatar": "https://avatars.githubusercontent.com/u/90132604?u=3ccd4173f802c381f9d48907bea89198d571b022&v=4",
            "url": "https://github.com/MarkAtOmniux"
          },
          "body": "<blockquote>\n<p dir=\"auto\">It's a feature request, so people are getting easy a guide how to install payloadcms on a plesk environment.</p>\n<p dir=\"auto\">No quide = no new user as they will turn to strapi /directus....</p>\n</blockquote>\n<p dir=\"auto\">Ironically I moved from strapi to payload because I hated it. But I agree, Docker documentation would be helpful</p>",
          "createdAt": "2022-09-19T19:37:19Z"
        },
        {
          "author": {
            "name": "Rar9",
            "avatar": "https://avatars.githubusercontent.com/u/2239608?u=50ed805eec791a83af932905fe5bfc752aef971f&v=4",
            "url": "https://github.com/Rar9"
          },
          "body": "<p dir=\"auto\">I´m currently on Directus due to the missing guide... but would love to test payloadcms as strapi ways also not my thing</p>",
          "createdAt": "2022-09-19T19:47:59Z"
        },
        {
          "author": {
            "name": "Rar9",
            "avatar": "https://avatars.githubusercontent.com/u/2239608?u=50ed805eec791a83af932905fe5bfc752aef971f&v=4",
            "url": "https://github.com/Rar9"
          },
          "body": "<p dir=\"auto\">I got a bit further</p>\n<p dir=\"auto\"><a href=\"https://discord.com/channels/967097582721572934/1022136604443299840/1022385771031830548\" rel=\"nofollow\">https://discord.com/channels/967097582721572934/1022136604443299840/1022385771031830548</a></p>",
          "createdAt": "2022-09-22T05:57:02Z"
        }
      ]
    }
  },
  {
    "title": "How to concurrently update items in 2 collections with many-to-many relationship?",
    "body": "<p dir=\"auto\">Let's say I have classic articles - tags relationships.</p>\n<ol dir=\"auto\">\n<li>One article has many tags.</li>\n<li>One tag has many articles.</li>\n<li>When the user clicks on a tag, it leads to a respective tag page with a list of articles.</li>\n</ol>\n<p dir=\"auto\">I believe it is possible to add tags (not a collection) to articles (is a collection) and use a query to filter out accordingly, however, I would like to separate <code class=\"notranslate\">tags</code> and <code class=\"notranslate\">articles</code> into 2 separate collections instead. For example:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// Tags.ts\n...\n        {\n          name: 'usedByArticles',\n          type: 'relationship',\n          relationTo: 'articles',\n          hasMany: true,\n        }\n...\"><pre class=\"notranslate\"><span class=\"pl-c\">// Tags.ts</span>\n...\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'usedByArticles'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'articles'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">hasMany</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">.</span><span class=\"pl-kos\">.</span><span class=\"pl-kos\">.</span></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/62678592/191427640-680657d7-f628-478d-a182-db821af3b6fd.png\"><img src=\"https://user-images.githubusercontent.com/62678592/191427640-680657d7-f628-478d-a182-db821af3b6fd.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">This portion of code allows me to add articles to a tag. However, the reversed direction is not updated accordingly (the article does not know it has a tag). With that said, how to make the update bi-directional?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1151",
    "id": "1151",
    "createdAt": "2022-09-21T06:16:46Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "hunghvu",
      "avatar": "https://avatars.githubusercontent.com/u/62678592?u=6e546aadac8a22f7ffc7a95dd0177b9726071ebe&v=4",
      "url": "https://github.com/hunghvu"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">There are several lengthy discussions on this already:<br>\n<a aria-label=\"Discussion #204\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3423042\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/204\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/204/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/204\">#204</a><br>\n<a aria-label=\"Discussion #357\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3669513\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/357\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/357/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/357\">#357</a></p>\n<p dir=\"auto\">You should only do hooks to update other documents like this if you absolutely have to. Maintaining the same data in two places usually isn't the best solution.<br>\nIf you wanted to have a list of articles for a tag, it is easy to query that info if you just have a tags relationship in the articles collection. The way we handled this in the <code class=\"notranslate\">public-demo</code> was a category summary UI field: <a href=\"https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx\">https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx</a></p>\n<p dir=\"auto\">Another option to make a 3rd collection that acts like a join table. The collection would have 2 relationship fields, one for article and one for tag. Each document in this collection represents one tag for one article. It might not make things easier for data entry and you might still need hooks, but it would be a clean solution on the data and could be good for querying also.</p>",
        "createdAt": "2022-09-21T16:45:14Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">There are several lengthy discussions on this already:<br>\n<a aria-label=\"Discussion #204\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3423042\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/204\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/204/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/204\">#204</a><br>\n<a aria-label=\"Discussion #357\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3669513\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/357\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/357/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/357\">#357</a></p>\n<p dir=\"auto\">You should only do hooks to update other documents like this if you absolutely have to. Maintaining the same data in two places usually isn't the best solution.<br>\nIf you wanted to have a list of articles for a tag, it is easy to query that info if you just have a tags relationship in the articles collection. The way we handled this in the <code class=\"notranslate\">public-demo</code> was a category summary UI field: <a href=\"https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx\">https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx</a></p>\n<p dir=\"auto\">Another option to make a 3rd collection that acts like a join table. The collection would have 2 relationship fields, one for article and one for tag. Each document in this collection represents one tag for one article. It might not make things easier for data entry and you might still need hooks, but it would be a clean solution on the data and could be good for querying also.</p>",
      "createdAt": "2022-09-21T16:45:14Z",
      "chosenAt": "2022-09-22T15:49:22Z",
      "chosenBy": "hunghvu",
      "replies": null
    }
  },
  {
    "title": "Problems with implementing the SEO Plugin",
    "body": "<p dir=\"auto\">When implementing the SEO plugin I am getting a TypeScript error.<br>\nCan anyone point me at my mistake?</p>\n<p dir=\"auto\">My <code class=\"notranslate\">payload.config.ts</code>:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export default buildConfig({\n  // Ommited because out of context\n  plugins: [\n    seo({\n      collections: ['pages'],\n      uploadsCollection: 'images',\n    }),\n  ],\n});\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-en\">buildConfig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// Ommited because out of context</span>\n  <span class=\"pl-c1\">plugins</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-en\">seo</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">collections</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">uploadsCollection</span>: <span class=\"pl-s\">'images'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">The error:<br>\n<code class=\"notranslate\">TS2322: Type '(config: Config) =&gt; Config' is not assignable to type 'Plugin'.   Types of parameters 'config' and 'config' are incompatible.</code></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1142",
    "id": "1142",
    "createdAt": "2022-09-18T11:09:06Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "falko100",
      "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
      "url": "https://github.com/falko100"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">I don't think the type error you shared is coming from the plugins of your config.</p>\n<p dir=\"auto\">To rule this out, what happens if you comment out the <code class=\"notranslate\">plugins</code> from your config, does the error go away?</p>\n<p dir=\"auto\">I just createed a new Payload TS project and added the seo plugin and it is working with your exact <code class=\"notranslate\">plugins</code> config. I can push to a sample repo if it helps or you can go look at the <a href=\"https://github.com/payloadcms/public-demo/blob/master/src/payload.config.ts\">public-demo</a> too.</p>\n<p dir=\"auto\">Happy to help more if you can share the rest of your config or more specific lines of code to look at.</p>",
        "createdAt": "2022-09-18T16:05:12Z",
        "replies": [
          {
            "author": {
              "name": "falko100",
              "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
              "url": "https://github.com/falko100"
            },
            "body": "<p dir=\"auto\">It does go away when I comment it out. I'll investigate a bit more and will let you know.</p>",
            "createdAt": "2022-09-21T14:49:13Z"
          },
          {
            "author": {
              "name": "falko100",
              "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
              "url": "https://github.com/falko100"
            },
            "body": "<p dir=\"auto\">Yep, I tried as they have it in the demo and it works perfectly. Thanks. <g-emoji class=\"g-emoji\" alias=\"weary\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f629.png\">😩</g-emoji></p>",
            "createdAt": "2022-09-21T14:52:50Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">I don't think the type error you shared is coming from the plugins of your config.</p>\n<p dir=\"auto\">To rule this out, what happens if you comment out the <code class=\"notranslate\">plugins</code> from your config, does the error go away?</p>\n<p dir=\"auto\">I just createed a new Payload TS project and added the seo plugin and it is working with your exact <code class=\"notranslate\">plugins</code> config. I can push to a sample repo if it helps or you can go look at the <a href=\"https://github.com/payloadcms/public-demo/blob/master/src/payload.config.ts\">public-demo</a> too.</p>\n<p dir=\"auto\">Happy to help more if you can share the rest of your config or more specific lines of code to look at.</p>",
      "createdAt": "2022-09-18T16:05:12Z",
      "chosenAt": "2022-09-21T14:52:56Z",
      "chosenBy": "falko100",
      "replies": [
        {
          "author": {
            "name": "falko100",
            "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
            "url": "https://github.com/falko100"
          },
          "body": "<p dir=\"auto\">It does go away when I comment it out. I'll investigate a bit more and will let you know.</p>",
          "createdAt": "2022-09-21T14:49:13Z"
        },
        {
          "author": {
            "name": "falko100",
            "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
            "url": "https://github.com/falko100"
          },
          "body": "<p dir=\"auto\">Yep, I tried as they have it in the demo and it works perfectly. Thanks. <g-emoji class=\"g-emoji\" alias=\"weary\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f629.png\">😩</g-emoji></p>",
          "createdAt": "2022-09-21T14:52:50Z"
        }
      ]
    }
  },
  {
    "title": "Is deployment for payload custom website series working?",
    "body": "<p dir=\"auto\">I followed the youtube video by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> and tried deploying <a href=\"https://github.com/payloadcms/custom-website-series\">custom website series</a> to aws. Unfortunately, I can't get it working because payload seems to have an issue communicating with next js app. Initially, I thought it was to do with a typescript error and that wasn't the case. But, I believe it may be a configuration issue on apache.</p>\n<p dir=\"auto\">I've opened <a href=\"https://github.com/payloadcms/custom-website-series/issues/4\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/custom-website-series/issues/4/hovercard\">an issue</a> on the custom website series almost 2 months ago. I've tried posting it also on stackoverflow without any luck. I saw that the payload discord server is also not very active on community help. I have even put out a job on freelancing sites to get this fixed and it hasn't been easy to find someone to fix it yet.</p>\n<p dir=\"auto\">Can anyone please help me with what I maybe getting wrong? Has anyone got the deployment of custom website series working? I've been struggling with this one for weeks and it would've been awesome to have an active community where builders on payload could help each other out.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1067",
    "id": "1067",
    "createdAt": "2022-09-05T17:14:19Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "madman3",
      "avatar": "https://avatars.githubusercontent.com/u/9123841?v=4",
      "url": "https://github.com/madman3"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/madman3/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/madman3\">@madman3</a> — yes, deployment works for that repo and you can see it deployed in production with the live site that reflects the custom website series here:</p>\n<p dir=\"auto\"><a href=\"https://metricstructures.com\" rel=\"nofollow\">https://metricstructures.com</a></p>\n<p dir=\"auto\">This is likely something to do with your environment. What you should do is try and determine <em><strong>why</strong></em> that request to your API is failing. You should look at the Apache logs. Your request is failing at the Apache level, and the errors that you are seeing are because your Apache server is sending back HTML instead of sending back the response from the Payload API - meaning that your Apache server is not successfully proxying the request to your Node server. This is solely related to your server, unfortunately.</p>\n<p dir=\"auto\">Typically we would recommend running Node behind an nginx reverse proxy. There are lots of tutorials online that show how to do that but I am not as well versed with Apache.</p>\n<p dir=\"auto\">One other thing you could do is to try and <em><strong>directly hit your Payload API</strong></em> in your browser - like, go straight here:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"${process.env.NEXT_PUBLIC_SERVER_URL}/api/studies\"><pre class=\"notranslate\"><code class=\"notranslate\">${process.env.NEXT_PUBLIC_SERVER_URL}/api/studies\n</code></pre></div>\n<p dir=\"auto\">In your browser. See if you can load it directly. I bet you will see the Apache error page.</p>\n<p dir=\"auto\">Give it a shot!</p>",
        "createdAt": "2022-09-06T16:48:26Z",
        "replies": [
          {
            "author": {
              "name": "madman3",
              "avatar": "https://avatars.githubusercontent.com/u/9123841?v=4",
              "url": "https://github.com/madman3"
            },
            "body": "<p dir=\"auto\">Thank you so much, <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>. This was super helpful! I love what you guys are building.</p>",
            "createdAt": "2022-09-20T11:37:00Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/madman3/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/madman3\">@madman3</a> — yes, deployment works for that repo and you can see it deployed in production with the live site that reflects the custom website series here:</p>\n<p dir=\"auto\"><a href=\"https://metricstructures.com\" rel=\"nofollow\">https://metricstructures.com</a></p>\n<p dir=\"auto\">This is likely something to do with your environment. What you should do is try and determine <em><strong>why</strong></em> that request to your API is failing. You should look at the Apache logs. Your request is failing at the Apache level, and the errors that you are seeing are because your Apache server is sending back HTML instead of sending back the response from the Payload API - meaning that your Apache server is not successfully proxying the request to your Node server. This is solely related to your server, unfortunately.</p>\n<p dir=\"auto\">Typically we would recommend running Node behind an nginx reverse proxy. There are lots of tutorials online that show how to do that but I am not as well versed with Apache.</p>\n<p dir=\"auto\">One other thing you could do is to try and <em><strong>directly hit your Payload API</strong></em> in your browser - like, go straight here:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"${process.env.NEXT_PUBLIC_SERVER_URL}/api/studies\"><pre class=\"notranslate\"><code class=\"notranslate\">${process.env.NEXT_PUBLIC_SERVER_URL}/api/studies\n</code></pre></div>\n<p dir=\"auto\">In your browser. See if you can load it directly. I bet you will see the Apache error page.</p>\n<p dir=\"auto\">Give it a shot!</p>",
      "createdAt": "2022-09-06T16:48:26Z",
      "chosenAt": "2022-09-20T11:37:04Z",
      "chosenBy": "madman3",
      "replies": [
        {
          "author": {
            "name": "madman3",
            "avatar": "https://avatars.githubusercontent.com/u/9123841?v=4",
            "url": "https://github.com/madman3"
          },
          "body": "<p dir=\"auto\">Thank you so much, <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>. This was super helpful! I love what you guys are building.</p>",
          "createdAt": "2022-09-20T11:37:00Z"
        }
      ]
    }
  },
  {
    "title": "Image compression or quality",
    "body": "<p dir=\"auto\">Hi - is there documentation on how to pass options to sharp (I see there is an enhancement PR open for exposing full sharp options)?</p>\n<p dir=\"auto\">It's <a href=\"https://payloadcms.com/docs/upload/overview\" rel=\"nofollow\">mentioned here in the docs</a>:</p>\n<blockquote>\n<p dir=\"auto\">Behind the scenes, Payload relies on <a href=\"https://sharp.pixelplumbing.com/api-resize#resize\" rel=\"nofollow\">sharp</a> to perform its image resizing. <em>You can specify additional options for sharp to use while resizing your images.</em></p>\n</blockquote>\n<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"point_up\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/261d.png\">☝️</g-emoji> How?</p>\n<p dir=\"auto\">Currently (i.e. before the aforementioned PR is merged) is there an option to control the compression level?<br>\nMy photos are shockingly poor post auto-resizing at the moment <g-emoji class=\"g-emoji\" alias=\"frowning\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f626.png\">😦</g-emoji></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1088",
    "id": "1088",
    "createdAt": "2022-09-07T15:24:38Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "jakehopking",
      "avatar": "https://avatars.githubusercontent.com/u/3432643?u=0af30a37a531b00d8fbdf3e898fd111bab725928&v=4",
      "url": "https://github.com/jakehopking"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jakehopking/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jakehopking\">@jakehopking</a> - tomorrow the team and I are going to wrap up the PR that you're mentioning, and that's the move here.</p>\n<p dir=\"auto\">Give us a bit and then you should be able to take advantage of that!</p>",
        "createdAt": "2022-09-08T03:00:26Z",
        "replies": [
          {
            "author": {
              "name": "jakehopking",
              "avatar": "https://avatars.githubusercontent.com/u/3432643?u=0af30a37a531b00d8fbdf3e898fd111bab725928&v=4",
              "url": "https://github.com/jakehopking"
            },
            "body": "<p dir=\"auto\">Thanks for taking the time to reply, and looking forward to the release <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
            "createdAt": "2022-09-08T14:33:20Z"
          },
          {
            "author": {
              "name": "jakehopking",
              "avatar": "https://avatars.githubusercontent.com/u/3432643?u=0af30a37a531b00d8fbdf3e898fd111bab725928&v=4",
              "url": "https://github.com/jakehopking"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> was this enhancement released?</p>",
            "createdAt": "2022-09-14T16:03:46Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Yes! You can now pass a full set of Sharp options to your upload configs! Docs are live!</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/upload/overview\" rel=\"nofollow\">https://payloadcms.com/docs/upload/overview</a></p>\n<p dir=\"auto\">See <code class=\"notranslate\">resizeOptions</code> and <code class=\"notranslate\">formatOptions</code>.</p>\n<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
            "createdAt": "2022-09-14T16:42:00Z"
          },
          {
            "author": {
              "name": "jakehopking",
              "avatar": "https://avatars.githubusercontent.com/u/3432643?u=0af30a37a531b00d8fbdf3e898fd111bab725928&v=4",
              "url": "https://github.com/jakehopking"
            },
            "body": "<p dir=\"auto\">Super, thanks! Already implemented :)<br>\nMight be worth updating your docs to make it obvious that these same options can and should be applied to each resize rule. I initially thought that the <code class=\"notranslate\">formatOptions</code> on the upload object would cascade down to all of <code class=\"notranslate\">imageSizes[]</code> too. Only after comparing the generated sizes, did I notice that only the primary image was affected, and not the resized versions.</p>\n<p dir=\"auto\">Added my approach in case it helps others searching for the same.</p>\n<p dir=\"auto\">Create a list of options you will want to use on your images:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export const sharpFormatOptions = {\n  defaultJPG: {\n    formatOptions: {\n      format: 'jpeg',\n      options: {\n        quality: 90,\n      },\n    },\n  },\n  optimisedWEBP: {\n    ...\n  }\n} as const;\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">sharpFormatOptions</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">defaultJPG</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">formatOptions</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">format</span>: <span class=\"pl-s\">'jpeg'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">quality</span>: <span class=\"pl-c1\">90</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">optimisedWEBP</span>: <span class=\"pl-kos\">{</span>\n    ...\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span> <span class=\"pl-k\">as</span> <span class=\"pl-smi\">const</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Then in your image sizes array, spread the relevant format options into the resize rules:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export const PhotoImageSizes = [\n  {\n    name: ImageSizeNames.original200,\n    width: 2880,\n    height: null,\n    ...sharpFormatOptions.defaultJPG,\n  },\n  {\n    name: ImageSizeNames.original100,\n    width: 1440,\n    height: null,\n    ...sharpFormatOptions.defaultJPG,\n  },\n  ...\n} as const;\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-smi\">PhotoImageSizes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span>\n  <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-smi\">ImageSizeNames</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">original200</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">width</span>: <span class=\"pl-c1\">2880</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">height</span>: <span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span>\n    ...<span class=\"pl-s1\">sharpFormatOptions</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">defaultJPG</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-smi\">ImageSizeNames</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">original100</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">width</span>: <span class=\"pl-c1\">1440</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">height</span>: <span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span>\n    ...<span class=\"pl-s1\">sharpFormatOptions</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">defaultJPG</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  ...\n<span class=\"pl-kos\">}</span> <span class=\"pl-k\">as</span> <span class=\"pl-k\">const</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Then use these inside your media collection, and remember to specify <code class=\"notranslate\">formatOptions</code> on <code class=\"notranslate\">upload</code> too:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import {\n  ImageSizeNames,\n  ImageSizes,\n  MediaSlugs,\n  sharpFormatOptions,\n} from '../tokens';\n\nconst MediaPhotos: CollectionConfig = {\n  slug: MediaSlugs.mediaPhotos,\n  access: {\n    read: (): boolean =&gt; true, // Everyone can read Media\n  },\n  admin: {\n    useAsTitle: 'filename',\n  },\n  upload: {\n    adminThumbnail: ImageSizeNames.thumbnail,\n    imageSizes: [...ImageSizes.PhotoImageSizes],\n    staticURL: '/media/photos',\n    staticDir: 'media/photos',\n    ...sharpFormatOptions.defaultJPG,\n  },\n  fields: [\n    {\n      name: 'alt',\n      label: 'Alt Text',\n      type: 'text',\n      required: true,\n    },\n    categories,\n    tags,\n  ],\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">ImageSizeNames</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-smi\">ImageSizes</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-smi\">MediaSlugs</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-s1\">sharpFormatOptions</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../tokens'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">MediaPhotos</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-smi\">MediaSlugs</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mediaPhotos</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">boolean</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// Everyone can read Media</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'filename'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">upload</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">adminThumbnail</span>: <span class=\"pl-smi\">ImageSizeNames</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">thumbnail</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">imageSizes</span>: <span class=\"pl-kos\">[</span>...<span class=\"pl-smi\">ImageSizes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PhotoImageSizes</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">staticURL</span>: <span class=\"pl-s\">'/media/photos'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">staticDir</span>: <span class=\"pl-s\">'media/photos'</span><span class=\"pl-kos\">,</span>\n    ...<span class=\"pl-s1\">sharpFormatOptions</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">defaultJPG</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'alt'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Alt Text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">categories</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">tags</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>",
            "createdAt": "2022-09-14T22:12:48Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jakehopking/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jakehopking\">@jakehopking</a> - tomorrow the team and I are going to wrap up the PR that you're mentioning, and that's the move here.</p>\n<p dir=\"auto\">Give us a bit and then you should be able to take advantage of that!</p>",
      "createdAt": "2022-09-08T03:00:26Z",
      "chosenAt": "2022-09-08T14:33:22Z",
      "chosenBy": "jakehopking",
      "replies": [
        {
          "author": {
            "name": "jakehopking",
            "avatar": "https://avatars.githubusercontent.com/u/3432643?u=0af30a37a531b00d8fbdf3e898fd111bab725928&v=4",
            "url": "https://github.com/jakehopking"
          },
          "body": "<p dir=\"auto\">Thanks for taking the time to reply, and looking forward to the release <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
          "createdAt": "2022-09-08T14:33:20Z"
        },
        {
          "author": {
            "name": "jakehopking",
            "avatar": "https://avatars.githubusercontent.com/u/3432643?u=0af30a37a531b00d8fbdf3e898fd111bab725928&v=4",
            "url": "https://github.com/jakehopking"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> was this enhancement released?</p>",
          "createdAt": "2022-09-14T16:03:46Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Yes! You can now pass a full set of Sharp options to your upload configs! Docs are live!</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/upload/overview\" rel=\"nofollow\">https://payloadcms.com/docs/upload/overview</a></p>\n<p dir=\"auto\">See <code class=\"notranslate\">resizeOptions</code> and <code class=\"notranslate\">formatOptions</code>.</p>\n<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
          "createdAt": "2022-09-14T16:42:00Z"
        },
        {
          "author": {
            "name": "jakehopking",
            "avatar": "https://avatars.githubusercontent.com/u/3432643?u=0af30a37a531b00d8fbdf3e898fd111bab725928&v=4",
            "url": "https://github.com/jakehopking"
          },
          "body": "<p dir=\"auto\">Super, thanks! Already implemented :)<br>\nMight be worth updating your docs to make it obvious that these same options can and should be applied to each resize rule. I initially thought that the <code class=\"notranslate\">formatOptions</code> on the upload object would cascade down to all of <code class=\"notranslate\">imageSizes[]</code> too. Only after comparing the generated sizes, did I notice that only the primary image was affected, and not the resized versions.</p>\n<p dir=\"auto\">Added my approach in case it helps others searching for the same.</p>\n<p dir=\"auto\">Create a list of options you will want to use on your images:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export const sharpFormatOptions = {\n  defaultJPG: {\n    formatOptions: {\n      format: 'jpeg',\n      options: {\n        quality: 90,\n      },\n    },\n  },\n  optimisedWEBP: {\n    ...\n  }\n} as const;\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">sharpFormatOptions</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">defaultJPG</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">formatOptions</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">format</span>: <span class=\"pl-s\">'jpeg'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">quality</span>: <span class=\"pl-c1\">90</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">optimisedWEBP</span>: <span class=\"pl-kos\">{</span>\n    ...\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span> <span class=\"pl-k\">as</span> <span class=\"pl-smi\">const</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Then in your image sizes array, spread the relevant format options into the resize rules:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export const PhotoImageSizes = [\n  {\n    name: ImageSizeNames.original200,\n    width: 2880,\n    height: null,\n    ...sharpFormatOptions.defaultJPG,\n  },\n  {\n    name: ImageSizeNames.original100,\n    width: 1440,\n    height: null,\n    ...sharpFormatOptions.defaultJPG,\n  },\n  ...\n} as const;\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-smi\">PhotoImageSizes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span>\n  <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-smi\">ImageSizeNames</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">original200</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">width</span>: <span class=\"pl-c1\">2880</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">height</span>: <span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span>\n    ...<span class=\"pl-s1\">sharpFormatOptions</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">defaultJPG</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-smi\">ImageSizeNames</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">original100</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">width</span>: <span class=\"pl-c1\">1440</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">height</span>: <span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span>\n    ...<span class=\"pl-s1\">sharpFormatOptions</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">defaultJPG</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  ...\n<span class=\"pl-kos\">}</span> <span class=\"pl-k\">as</span> <span class=\"pl-k\">const</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Then use these inside your media collection, and remember to specify <code class=\"notranslate\">formatOptions</code> on <code class=\"notranslate\">upload</code> too:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import {\n  ImageSizeNames,\n  ImageSizes,\n  MediaSlugs,\n  sharpFormatOptions,\n} from '../tokens';\n\nconst MediaPhotos: CollectionConfig = {\n  slug: MediaSlugs.mediaPhotos,\n  access: {\n    read: (): boolean =&gt; true, // Everyone can read Media\n  },\n  admin: {\n    useAsTitle: 'filename',\n  },\n  upload: {\n    adminThumbnail: ImageSizeNames.thumbnail,\n    imageSizes: [...ImageSizes.PhotoImageSizes],\n    staticURL: '/media/photos',\n    staticDir: 'media/photos',\n    ...sharpFormatOptions.defaultJPG,\n  },\n  fields: [\n    {\n      name: 'alt',\n      label: 'Alt Text',\n      type: 'text',\n      required: true,\n    },\n    categories,\n    tags,\n  ],\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">ImageSizeNames</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-smi\">ImageSizes</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-smi\">MediaSlugs</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-s1\">sharpFormatOptions</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../tokens'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">MediaPhotos</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-smi\">MediaSlugs</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mediaPhotos</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">boolean</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// Everyone can read Media</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'filename'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">upload</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">adminThumbnail</span>: <span class=\"pl-smi\">ImageSizeNames</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">thumbnail</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">imageSizes</span>: <span class=\"pl-kos\">[</span>...<span class=\"pl-smi\">ImageSizes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PhotoImageSizes</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">staticURL</span>: <span class=\"pl-s\">'/media/photos'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">staticDir</span>: <span class=\"pl-s\">'media/photos'</span><span class=\"pl-kos\">,</span>\n    ...<span class=\"pl-s1\">sharpFormatOptions</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">defaultJPG</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'alt'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Alt Text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">categories</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">tags</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>",
          "createdAt": "2022-09-14T22:12:48Z"
        }
      ]
    }
  },
  {
    "title": "Example for custom leaves missing?",
    "body": "<p dir=\"auto\">Hey, the public-demo examples have been very helpful and much appreciated. However there doesn't appear to be a custom leaves example on the project?</p>\n<p dir=\"auto\">Documentation mentions that there would be custom leaves example too: <a href=\"https://payloadcms.com/docs/fields/rich-text#building-custom-elements-and-leaves\" rel=\"nofollow\">https://payloadcms.com/docs/fields/rich-text#building-custom-elements-and-leaves</a><br>\n<code class=\"notranslate\">For more examples regarding how to define your own elements and leaves, check out the example [RichText field](https://github.com/payloadcms/public-demo/blob/master/src/fields/hero.ts) within the Public Demo source code.</code></p>\n<p dir=\"auto\">I've tried adapting the custom element examples to leaves, but I'm <strong>unable to affect how the rich text editor renders the text (my leaf applied)</strong> in editor. Buttons are working.</p>\n<p dir=\"auto\">I'm trying to add text alignment buttons/leaves, and would probably need to add style property <code class=\"notranslate\">text-align</code> to the affected entity in rich editor. The leaf however appears to affect the JSON output correctly.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1111",
    "id": "1111",
    "createdAt": "2022-09-12T12:45:14Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "jamov",
      "avatar": "https://avatars.githubusercontent.com/u/1397479?v=4",
      "url": "https://github.com/jamov"
    },
    "comments": [
      {
        "author": {
          "name": "jamov",
          "avatar": "https://avatars.githubusercontent.com/u/1397479?v=4",
          "url": "https://github.com/jamov"
        },
        "body": "<p dir=\"auto\">So yea.. appears elements and leaves work very similarly indeed. Found a typo which wasn't causing any issues, except that made the custom leaf/element work only partially. Case closed.</p>",
        "createdAt": "2022-09-12T18:49:37Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jamov",
        "avatar": "https://avatars.githubusercontent.com/u/1397479?v=4",
        "url": "https://github.com/jamov"
      },
      "body": "<p dir=\"auto\">So yea.. appears elements and leaves work very similarly indeed. Found a typo which wasn't causing any issues, except that made the custom leaf/element work only partially. Case closed.</p>",
      "createdAt": "2022-09-12T18:49:37Z",
      "chosenAt": "2022-09-12T18:49:40Z",
      "chosenBy": "jamov",
      "replies": null
    }
  },
  {
    "title": "Webhooks?",
    "body": "<p dir=\"auto\">Does Payload have any concept of webhooks on certain events?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1081",
    "id": "1081",
    "createdAt": "2022-09-07T00:51:38Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "corysimmons",
      "avatar": "https://avatars.githubusercontent.com/u/224636?u=56fea2331ee49d177fe669d62303b8adc010fb5c&v=4",
      "url": "https://github.com/corysimmons"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Payload doesn't have webhooks, it gives you a complete API that other apps can call. You can extend your Payload app to call any code by adding your own hooks <a href=\"https://payloadcms.com/docs/hooks/overview\" rel=\"nofollow\">https://payloadcms.com/docs/hooks/overview</a>.</p>\n<p dir=\"auto\">You can also add custom endpoints through payload or on your express app that can listen for calls.</p>\n<p dir=\"auto\">What are you trying to do?</p>",
        "createdAt": "2022-09-07T01:10:09Z",
        "replies": [
          {
            "author": {
              "name": "corysimmons",
              "avatar": "https://avatars.githubusercontent.com/u/224636?u=56fea2331ee49d177fe669d62303b8adc010fb5c&v=4",
              "url": "https://github.com/corysimmons"
            },
            "body": "<p dir=\"auto\">Thank you.</p>\n<p dir=\"auto\">As an example, in my old CMS, anytime I would publish an Article, I'd have a webhook set up that hit a custom endpoint that recorded some audit log stuff to a table.</p>\n<p dir=\"auto\">Just <em>lots</em> of little things like that where if a piece of content is mutated, I can send the payload of that mutation to a specific endpoint.</p>",
            "createdAt": "2022-09-07T20:25:11Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">You can do all that with Payload Hooks - they can do everything webhooks can do but WAY better!</p>",
            "createdAt": "2022-09-07T20:28:20Z"
          },
          {
            "author": {
              "name": "corysimmons",
              "avatar": "https://avatars.githubusercontent.com/u/224636?u=56fea2331ee49d177fe669d62303b8adc010fb5c&v=4",
              "url": "https://github.com/corysimmons"
            },
            "body": "<p dir=\"auto\">Awesome, awesome. Thank you! :)</p>",
            "createdAt": "2022-09-07T21:57:45Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Payload doesn't have webhooks, it gives you a complete API that other apps can call. You can extend your Payload app to call any code by adding your own hooks <a href=\"https://payloadcms.com/docs/hooks/overview\" rel=\"nofollow\">https://payloadcms.com/docs/hooks/overview</a>.</p>\n<p dir=\"auto\">You can also add custom endpoints through payload or on your express app that can listen for calls.</p>\n<p dir=\"auto\">What are you trying to do?</p>",
      "createdAt": "2022-09-07T01:10:09Z",
      "chosenAt": "2022-09-07T20:22:12Z",
      "chosenBy": "corysimmons",
      "replies": [
        {
          "author": {
            "name": "corysimmons",
            "avatar": "https://avatars.githubusercontent.com/u/224636?u=56fea2331ee49d177fe669d62303b8adc010fb5c&v=4",
            "url": "https://github.com/corysimmons"
          },
          "body": "<p dir=\"auto\">Thank you.</p>\n<p dir=\"auto\">As an example, in my old CMS, anytime I would publish an Article, I'd have a webhook set up that hit a custom endpoint that recorded some audit log stuff to a table.</p>\n<p dir=\"auto\">Just <em>lots</em> of little things like that where if a piece of content is mutated, I can send the payload of that mutation to a specific endpoint.</p>",
          "createdAt": "2022-09-07T20:25:11Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">You can do all that with Payload Hooks - they can do everything webhooks can do but WAY better!</p>",
          "createdAt": "2022-09-07T20:28:20Z"
        },
        {
          "author": {
            "name": "corysimmons",
            "avatar": "https://avatars.githubusercontent.com/u/224636?u=56fea2331ee49d177fe669d62303b8adc010fb5c&v=4",
            "url": "https://github.com/corysimmons"
          },
          "body": "<p dir=\"auto\">Awesome, awesome. Thank you! :)</p>",
          "createdAt": "2022-09-07T21:57:45Z"
        }
      ]
    }
  },
  {
    "title": "Populate value to read only field",
    "body": "<p dir=\"auto\">I have a relation field which link to product collection and this product collection contains of the price of each product. What I am trying to achieve is to populate the price of the product to a read only field after the product is selected. I've attach a screenshot for better understanding.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/18546855/186955315-81ac2c6e-5ae6-49ff-bd17-810550fe9042.png\"><img src=\"https://user-images.githubusercontent.com/18546855/186955315-81ac2c6e-5ae6-49ff-bd17-810550fe9042.png\" alt=\"Screenshot 2022-08-27 at 12 56 29 AM\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1012",
    "id": "1012",
    "createdAt": "2022-08-26T16:59:26Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "jasonkw9",
      "avatar": "https://avatars.githubusercontent.com/u/18546855?v=4",
      "url": "https://github.com/jasonkw9"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jasonkw9/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jasonkw9\">@jasonkw9</a>,</p>\n<p dir=\"auto\">I've done this before for a project where I need to calculate some field based on sibling data changes. To do it I used the <code class=\"notranslate\">useWatchForm</code> hook to calculate the updates in a <code class=\"notranslate\">useEffect</code>. Here is an example:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const ProviderFee: React.FC&lt;{ path: string }&gt; = ({ path }) =&gt; {\n  const { getDataByPath } = useWatchForm();\n  const { value, setValue } = useField({ path });\n\n  const type: string = getDataByPath('type');\n  const amount: number = getDataByPath('amount');\n  const feePercentage: number = getDataByPath('feePercentage');\n\n  useEffect(() =&gt; {\n    if (typeof amount === 'number' &amp;&amp; typeof feePercentage === 'number') {\n      setValue((feePercentage / 100) * Math.abs(amount));\n    } else if (value !== 0 &amp;&amp; value !== undefined) {\n      setValue(0);\n    }\n  }, [value, type, amount, feePercentage, setValue]);\n\n  return (\n    &lt;div&gt;\n      &lt;span&gt;\n        &lt;TextInput\n          path=&quot;fee&quot;\n          name=&quot;providerFee&quot;\n          value={`${value}`}\n          label=&quot;Fee&quot;\n          readOnly\n        /&gt;\n      &lt;/span&gt;\n\n    &lt;/div&gt;\n  );\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-smi\">ProviderFee</span>: <span class=\"pl-smi\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-smi\">FC</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-smi\">string</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> path <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> getDataByPath <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useWatchForm</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> value<span class=\"pl-kos\">,</span> setValue <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useField</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> path <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">type</span>: <span class=\"pl-smi\">string</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">getDataByPath</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'type'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">amount</span>: <span class=\"pl-smi\">number</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">getDataByPath</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'amount'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">feePercentage</span>: <span class=\"pl-smi\">number</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">getDataByPath</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'feePercentage'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-en\">useEffect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">amount</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'number'</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">feePercentage</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-en\">setValue</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">feePercentage</span> <span class=\"pl-c1\">/</span> <span class=\"pl-c1\">100</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">*</span> <span class=\"pl-smi\">Math</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">abs</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">amount</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">0</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">value</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">undefined</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-en\">setValue</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">type</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">amount</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">feePercentage</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">setValue</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>\n    <span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">div</span><span class=\"pl-kos\">&gt;</span>\n      <span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">span</span><span class=\"pl-kos\">&gt;</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-smi\">TextInput</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"fee\"</span>\n          <span class=\"pl-s1\">name</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"providerFee\"</span>\n          <span class=\"pl-s1\">value</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span>`${<span class=\"pl-smi\">value</span><span class=\"pl-kos\">}</span>`<span class=\"pl-kos\">}</span>\n          <span class=\"pl-smi\">label</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"Fee\"</span>\n          <span class=\"pl-s1\">readOnly</span>\n        <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-s1\">span</span><span class=\"pl-c1\">&gt;</span>\n\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-s1\">div</span><span class=\"pl-c1\">&gt;</span>\n  <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Then the field is used in the config:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// collection\nconst orders = {\nslug: 'orders',\nfields: [\n /* ... */\n        {\n          name: 'providerFee',\n          type: 'number',\n          defaultValue: 0,\n          admin: {\n            condition: (data) =&gt; (data.type === 'withdrawal'),\n            components: {\n              Field: ProviderFee,\n            },\n          },\n        },\n    ],\n}\"><pre class=\"notranslate\"><span class=\"pl-c\">// collection</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">orders</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n<span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'orders'</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n <span class=\"pl-c\">/* ... */</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'providerFee'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">defaultValue</span>: <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-en\">condition</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">type</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'withdrawal'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">components</span>: <span class=\"pl-kos\">{</span>\n              <span class=\"pl-c1\">Field</span>: <span class=\"pl-smi\">ProviderFee</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span></pre></div>",
        "createdAt": "2022-08-29T13:26:29Z",
        "replies": null
      },
      {
        "author": {
          "name": "jasonkw9",
          "avatar": "https://avatars.githubusercontent.com/u/18546855?v=4",
          "url": "https://github.com/jasonkw9"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a>,</p>\n<p dir=\"auto\">Thank you so much for your suggestion but I have one more question. Since my products relation field only returning the ID of the product, how do I get the price of the selected product instead? I've tried to use getDataByPath('items') which return me an array of the products I selected but price is not included inside the array.</p>\n<p dir=\"auto\">Here's my sample code:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n      name: &quot;items&quot;,\n      type: &quot;array&quot;,\n      label: &quot;Products&quot;,\n      fields: [\n        {\n          type: &quot;row&quot;,\n          fields: [\n            {\n              name: &quot;orderItem&quot;,\n              type: &quot;relationship&quot;,\n              relationTo: &quot;products&quot;,\n              required: true,\n              admin: {\n                width: &quot;50%&quot;,\n              },\n            },\n            {\n              name: &quot;productPrice&quot;,\n              type: &quot;number&quot;,\n              defaultValue: 0,\n              admin: {\n                readOnly: true,\n                components: {\n                  Field: ProductPrice,\n                },\n              },\n            },\n            {\n              name: &quot;quantity&quot;,\n              type: &quot;number&quot;,\n              required: true,\n              admin: {\n                width: &quot;10%&quot;,\n              },\n            },\n          ],\n        },\n      ],\n    },\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n      name: \"items\",\n      type: \"array\",\n      label: \"Products\",\n      fields: [\n        {\n          type: \"row\",\n          fields: [\n            {\n              name: \"orderItem\",\n              type: \"relationship\",\n              relationTo: \"products\",\n              required: true,\n              admin: {\n                width: \"50%\",\n              },\n            },\n            {\n              name: \"productPrice\",\n              type: \"number\",\n              defaultValue: 0,\n              admin: {\n                readOnly: true,\n                components: {\n                  Field: ProductPrice,\n                },\n              },\n            },\n            {\n              name: \"quantity\",\n              type: \"number\",\n              required: true,\n              admin: {\n                width: \"10%\",\n              },\n            },\n          ],\n        },\n      ],\n    },\n</code></pre></div>",
        "createdAt": "2022-08-29T17:03:49Z",
        "replies": [
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Oh gotcha, I overlooked the relationship piece. You can do an async call out to fetch the product in your useEffect. Try this in your component:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const orderItem: string = getDataByPath('orderItem');\nconst { value, setValue } = useField({ path });\n\nuseEffect(() =&gt; {\n  const setPrice = async () =&gt; {\n    if (orderItem) {\n      const result = await fetch(`/api/products/${orderItem}`);\n      if (result.ok) {\n        const data = await result.json();\n        setValue(data.price);\n      }\n    }\n  }\n  setPrice();\n}, [orderItem, setValue]);\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">orderItem</span>: <span class=\"pl-smi\">string</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">getDataByPath</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'orderItem'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> value<span class=\"pl-kos\">,</span> setValue <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useField</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> path <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">useEffect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-en\">setPrice</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">orderItem</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">const</span> <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`/api/products/<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">orderItem</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">result</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">ok</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">data</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">result</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">json</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-en\">setValue</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">price</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span>\n  <span class=\"pl-en\">setPrice</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">orderItem</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">setValue</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>",
            "createdAt": "2022-08-29T18:11:15Z"
          },
          {
            "author": {
              "name": "jasonkw9",
              "avatar": "https://avatars.githubusercontent.com/u/18546855?v=4",
              "url": "https://github.com/jasonkw9"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> , thank you so much for your help! I manage to achieve what I want</p>",
            "createdAt": "2022-08-30T16:33:00Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jasonkw9/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jasonkw9\">@jasonkw9</a>,</p>\n<p dir=\"auto\">I've done this before for a project where I need to calculate some field based on sibling data changes. To do it I used the <code class=\"notranslate\">useWatchForm</code> hook to calculate the updates in a <code class=\"notranslate\">useEffect</code>. Here is an example:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const ProviderFee: React.FC&lt;{ path: string }&gt; = ({ path }) =&gt; {\n  const { getDataByPath } = useWatchForm();\n  const { value, setValue } = useField({ path });\n\n  const type: string = getDataByPath('type');\n  const amount: number = getDataByPath('amount');\n  const feePercentage: number = getDataByPath('feePercentage');\n\n  useEffect(() =&gt; {\n    if (typeof amount === 'number' &amp;&amp; typeof feePercentage === 'number') {\n      setValue((feePercentage / 100) * Math.abs(amount));\n    } else if (value !== 0 &amp;&amp; value !== undefined) {\n      setValue(0);\n    }\n  }, [value, type, amount, feePercentage, setValue]);\n\n  return (\n    &lt;div&gt;\n      &lt;span&gt;\n        &lt;TextInput\n          path=&quot;fee&quot;\n          name=&quot;providerFee&quot;\n          value={`${value}`}\n          label=&quot;Fee&quot;\n          readOnly\n        /&gt;\n      &lt;/span&gt;\n\n    &lt;/div&gt;\n  );\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-smi\">ProviderFee</span>: <span class=\"pl-smi\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-smi\">FC</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-smi\">string</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> path <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> getDataByPath <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useWatchForm</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> value<span class=\"pl-kos\">,</span> setValue <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useField</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> path <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">type</span>: <span class=\"pl-smi\">string</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">getDataByPath</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'type'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">amount</span>: <span class=\"pl-smi\">number</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">getDataByPath</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'amount'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">feePercentage</span>: <span class=\"pl-smi\">number</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">getDataByPath</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'feePercentage'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-en\">useEffect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">amount</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'number'</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">feePercentage</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-en\">setValue</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">feePercentage</span> <span class=\"pl-c1\">/</span> <span class=\"pl-c1\">100</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">*</span> <span class=\"pl-smi\">Math</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">abs</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">amount</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">0</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">value</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">undefined</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-en\">setValue</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">type</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">amount</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">feePercentage</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">setValue</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>\n    <span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">div</span><span class=\"pl-kos\">&gt;</span>\n      <span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">span</span><span class=\"pl-kos\">&gt;</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-smi\">TextInput</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"fee\"</span>\n          <span class=\"pl-s1\">name</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"providerFee\"</span>\n          <span class=\"pl-s1\">value</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span>`${<span class=\"pl-smi\">value</span><span class=\"pl-kos\">}</span>`<span class=\"pl-kos\">}</span>\n          <span class=\"pl-smi\">label</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"Fee\"</span>\n          <span class=\"pl-s1\">readOnly</span>\n        <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-s1\">span</span><span class=\"pl-c1\">&gt;</span>\n\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-s1\">div</span><span class=\"pl-c1\">&gt;</span>\n  <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Then the field is used in the config:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// collection\nconst orders = {\nslug: 'orders',\nfields: [\n /* ... */\n        {\n          name: 'providerFee',\n          type: 'number',\n          defaultValue: 0,\n          admin: {\n            condition: (data) =&gt; (data.type === 'withdrawal'),\n            components: {\n              Field: ProviderFee,\n            },\n          },\n        },\n    ],\n}\"><pre class=\"notranslate\"><span class=\"pl-c\">// collection</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">orders</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n<span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'orders'</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n <span class=\"pl-c\">/* ... */</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'providerFee'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">defaultValue</span>: <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-en\">condition</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">type</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'withdrawal'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">components</span>: <span class=\"pl-kos\">{</span>\n              <span class=\"pl-c1\">Field</span>: <span class=\"pl-smi\">ProviderFee</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span></pre></div>",
      "createdAt": "2022-08-29T13:26:29Z",
      "chosenAt": "2022-08-29T13:27:40Z",
      "chosenBy": "denolfe",
      "replies": null
    }
  },
  {
    "title": "Not possible to have an upload to be optional, is it a bug?",
    "body": "<p dir=\"auto\">When I test the upload feature, it seems like an upload field is not optional. For example,</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { CollectionConfig } from &quot;payload/types&quot;;\n\nconst Test:CollectionConfig = {\n  slug: 'tests',\n  fields: [\n      {\n        name: 'metaCoverImage',\n        label: 'Cover Image',\n        type: 'upload',\n        relationTo: 'media',\n        required: true,\n      },\n      {\n        name: 'metaCustomOgImage',\n        label: 'Custom OG Image (front-end will fallback to cover image if not presented)',\n        type: 'upload',\n        relationTo: 'media',\n      },\n    ]\n}\n\nexport default Test;\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/types\"</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">Test</span>:<span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'tests'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'metaCoverImage'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Cover Image'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'upload'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'media'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'metaCustomOgImage'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Custom OG Image (front-end will fallback to cover image if not presented)'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'upload'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'media'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">Test</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">The second upload field should be optional, however, it raises an exception when no upload is presented. Is this a design decision or a bug? If it is a design decision, then is there a way to have an optional upload?</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/62678592/187333956-655bb28e-116e-4a74-b0c7-4e77a01f035d.png\"><img src=\"https://user-images.githubusercontent.com/62678592/187333956-655bb28e-116e-4a74-b0c7-4e77a01f035d.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1023",
    "id": "1023",
    "createdAt": "2022-08-30T02:21:41Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "hunghvu",
      "avatar": "https://avatars.githubusercontent.com/u/62678592?u=6e546aadac8a22f7ffc7a95dd0177b9726071ebe&v=4",
      "url": "https://github.com/hunghvu"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/hunghvu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hunghvu\">@hunghvu</a>, it looks like a regression from the changes we made to futher validate upload and relationships. I'll get a fix out soon!</p>",
        "createdAt": "2022-08-30T02:38:18Z",
        "replies": [
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">OK, this is fixed now, please upgrade to v1.0.30.</p>\n<p dir=\"auto\">Thanks for asking or I wouldn't have caught it!</p>",
            "createdAt": "2022-08-30T02:58:53Z"
          },
          {
            "author": {
              "name": "hunghvu",
              "avatar": "https://avatars.githubusercontent.com/u/62678592?u=6e546aadac8a22f7ffc7a95dd0177b9726071ebe&v=4",
              "url": "https://github.com/hunghvu"
            },
            "body": "<p dir=\"auto\">Can confirm that it was fixed. I always love this lightning-fast response from the team. Keep up the great work!</p>",
            "createdAt": "2022-08-30T03:13:28Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/hunghvu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hunghvu\">@hunghvu</a>, it looks like a regression from the changes we made to futher validate upload and relationships. I'll get a fix out soon!</p>",
      "createdAt": "2022-08-30T02:38:18Z",
      "chosenAt": "2022-08-30T03:13:33Z",
      "chosenBy": "hunghvu",
      "replies": [
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">OK, this is fixed now, please upgrade to v1.0.30.</p>\n<p dir=\"auto\">Thanks for asking or I wouldn't have caught it!</p>",
          "createdAt": "2022-08-30T02:58:53Z"
        },
        {
          "author": {
            "name": "hunghvu",
            "avatar": "https://avatars.githubusercontent.com/u/62678592?u=6e546aadac8a22f7ffc7a95dd0177b9726071ebe&v=4",
            "url": "https://github.com/hunghvu"
          },
          "body": "<p dir=\"auto\">Can confirm that it was fixed. I always love this lightning-fast response from the team. Keep up the great work!</p>",
          "createdAt": "2022-08-30T03:13:28Z"
        }
      ]
    }
  },
  {
    "title": "Access to payload object on plugin initialization",
    "body": "<p dir=\"auto\">Hi everyone,<br>\nIs there a way to access the payload object inside plugin at the beginning?</p>\n<p dir=\"auto\">The reason: I'm trying to build a plugin, which requires some initial data (kind of default value) to be write into the auth collection for the very first time the plug in got enabled.</p>\n<p dir=\"auto\">I've checked the <code class=\"notranslate\">public-demo</code> <code class=\"notranslate\">seed</code> function, but it's called directly in the server.ts, not in the plugin config.</p>\n<p dir=\"auto\">Any ideas appreciated, thanks.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/1018",
    "id": "1018",
    "createdAt": "2022-08-28T21:38:37Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "khakimvinh",
      "avatar": "https://avatars.githubusercontent.com/u/24789737?v=4",
      "url": "https://github.com/khakimvinh"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/khakimvinh/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/khakimvinh\">@khakimvinh</a> , this is a great question. All config and plugin initialization is done <em>before</em> accessing the backend.</p>\n<p dir=\"auto\">If you need your plugin to perform some sort of action, your plugin could utilize the <code class=\"notranslate\">onInit</code> function of the config, which gives it access to the payload local API. Here is an example:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  onInit: async (payload) =&gt; {\n    await payload.create({\n      collection: 'my-collection',\n      data: {\n        // Set field values here\n      },\n    });\n  },\"><pre class=\"notranslate\">  <span class=\"pl-s1\">onInit</span>: <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'my-collection'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c\">// Set field values here</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">Worth noting that if you populate this function inside of your plugin, any other <code class=\"notranslate\">onInit</code> usage will likely be wiped out.</p>\n<p dir=\"auto\">Because this is a function and not a property that can be spread - what I'd recommend is having your plugin <em>export an additional function</em> that can be put into the main config's <code class=\"notranslate\">onInit</code>. This would mitigate the above issue. Give that a go and let me know if you run into any issues <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
        "createdAt": "2022-08-29T12:50:09Z",
        "replies": [
          {
            "author": {
              "name": "khakimvinh",
              "avatar": "https://avatars.githubusercontent.com/u/24789737?v=4",
              "url": "https://github.com/khakimvinh"
            },
            "body": "<p dir=\"auto\">Thank you very much <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/denolfe/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/denolfe\">@denolfe</a><br>\nI somehow missed the <code class=\"notranslate\">onInit</code> in the doc...</p>",
            "createdAt": "2022-08-30T02:40:20Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/khakimvinh/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/khakimvinh\">@khakimvinh</a> , this is a great question. All config and plugin initialization is done <em>before</em> accessing the backend.</p>\n<p dir=\"auto\">If you need your plugin to perform some sort of action, your plugin could utilize the <code class=\"notranslate\">onInit</code> function of the config, which gives it access to the payload local API. Here is an example:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  onInit: async (payload) =&gt; {\n    await payload.create({\n      collection: 'my-collection',\n      data: {\n        // Set field values here\n      },\n    });\n  },\"><pre class=\"notranslate\">  <span class=\"pl-s1\">onInit</span>: <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'my-collection'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c\">// Set field values here</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">Worth noting that if you populate this function inside of your plugin, any other <code class=\"notranslate\">onInit</code> usage will likely be wiped out.</p>\n<p dir=\"auto\">Because this is a function and not a property that can be spread - what I'd recommend is having your plugin <em>export an additional function</em> that can be put into the main config's <code class=\"notranslate\">onInit</code>. This would mitigate the above issue. Give that a go and let me know if you run into any issues <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
      "createdAt": "2022-08-29T12:50:09Z",
      "chosenAt": "2022-08-29T12:50:34Z",
      "chosenBy": "denolfe",
      "replies": [
        {
          "author": {
            "name": "khakimvinh",
            "avatar": "https://avatars.githubusercontent.com/u/24789737?v=4",
            "url": "https://github.com/khakimvinh"
          },
          "body": "<p dir=\"auto\">Thank you very much <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/denolfe/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/denolfe\">@denolfe</a><br>\nI somehow missed the <code class=\"notranslate\">onInit</code> in the doc...</p>",
          "createdAt": "2022-08-30T02:40:20Z"
        }
      ]
    }
  },
  {
    "title": "Create new menu global after creating a page",
    "body": "<p dir=\"auto\">Hi!</p>\n<p dir=\"auto\">i am trying to add a page to the global menu after its being created so far i have managed to replace the menu.</p>\n<p dir=\"auto\">This is my current code run in page afterchange hook:</p>\n<div class=\"highlight highlight-source-tsx notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" import payload from &quot;payload&quot;;\n\nexport const addPageToMenu = async (args) =&gt; {\n  if (args.operation === &quot;create&quot; {\n  \n    let menu = await payload.findGlobal({ slug: &quot;mainMenu&quot; });\n\n    if (args.doc) {\n      await payload.updateGlobal({\n        slug: &quot;mainMenu&quot;,\n        data: {\n          items: [\n            {\n              type: &quot;link&quot;,\n              label: args.doc.title,\n              link: {\n                type: &quot;reference&quot;,\n                reference: {\n                  value: args.doc.id,\n                  relationTo: &quot;pages&quot;,\n                },\n              },\n              subMenu: { blocks: 0 },\n            },\n            ...menu.items.map((item) =&gt; {\n              return {\n                link: {\n                  ...item.link,\n                  reference: {\n                    ...item.link.reference,\n                    value: {\n                      ...item.link.reference.value,\n                      layout: {\n                        ...item.link.reference.value.layout,\n                      },\n                    },\n                  },\n                },\n                ...item,\n              };\n            }),\n          ],\n        },\n      });\n\n      return args.doc;\n    }\n  }\n  return args.doc;\n};\n\n\"><pre class=\"notranslate\"> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload\"</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">addPageToMenu</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">\"create\"</span><span class=\"pl-kos\"></span> <span class=\"pl-kos\">{</span>\n  \n    <span class=\"pl-k\">let</span> <span class=\"pl-s1\">menu</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">findGlobal</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">\"mainMenu\"</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">updateGlobal</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">\"mainMenu\"</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">items</span>: <span class=\"pl-kos\">[</span>\n            <span class=\"pl-kos\">{</span>\n              <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"link\"</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">label</span>: <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">title</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">link</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"reference\"</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">reference</span>: <span class=\"pl-kos\">{</span>\n                  <span class=\"pl-c1\">value</span>: <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n                  <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">\"pages\"</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">subMenu</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">blocks</span>: <span class=\"pl-c1\">0</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            ...<span class=\"pl-s1\">menu</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">items</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">item</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n              <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">link</span>: <span class=\"pl-kos\">{</span>\n                  ...<span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">,</span>\n                  <span class=\"pl-c1\">reference</span>: <span class=\"pl-kos\">{</span>\n                    ...<span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">,</span>\n                    <span class=\"pl-c1\">value</span>: <span class=\"pl-kos\">{</span>\n                      ...<span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">,</span>\n                      <span class=\"pl-c1\">layout</span>: <span class=\"pl-kos\">{</span>\n                        ...<span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">layout</span><span class=\"pl-kos\">,</span>\n                      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n                    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n                  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n                ...<span class=\"pl-s1\">item</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n</pre></div>\n<p dir=\"auto\">this create a new entry but the old entries loses connection  is there a way to just use the ids instead of passing the whole referenced document? i.e</p>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  &quot;items&quot;: [\n    {\n      &quot;link&quot;: {\n        &quot;reference&quot;: &quot;id of  document&quot;\n      }\n    }\n  ]\n}\n\"><pre class=\"notranslate\">{\n  <span class=\"pl-ent\">\"items\"</span>: [\n    {\n      <span class=\"pl-ent\">\"link\"</span>: {\n        <span class=\"pl-ent\">\"reference\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>id of  document<span class=\"pl-pds\">\"</span></span>\n      }\n    }\n  ]\n}\n</pre></div>\n<p dir=\"auto\">Error Message:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/54339202/187102179-f746b5b6-5314-46ba-9661-51a2dd444690.png\"><img src=\"https://user-images.githubusercontent.com/54339202/187102179-f746b5b6-5314-46ba-9661-51a2dd444690.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/1019",
    "id": "1019",
    "createdAt": "2022-08-29T00:44:40Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "Braggedtooth",
      "avatar": "https://avatars.githubusercontent.com/u/54339202?v=4",
      "url": "https://github.com/Braggedtooth"
    },
    "comments": [
      {
        "author": {
          "name": "Braggedtooth",
          "avatar": "https://avatars.githubusercontent.com/u/54339202?v=4",
          "url": "https://github.com/Braggedtooth"
        },
        "body": "<p dir=\"auto\">Hi!</p>\n<p dir=\"auto\">I figured it out, the solution is in my question. Just have to pass the id as value instead of the whole object.<br>\ni dont know why i didnt try that first even tho that was how i wanted it to work..<br>\nwelp will leave this here. Maybe helps someone else 👍🏿</p>",
        "createdAt": "2022-08-29T01:03:11Z",
        "replies": null
      },
      {
        "author": {
          "name": "Braggedtooth",
          "avatar": "https://avatars.githubusercontent.com/u/54339202?v=4",
          "url": "https://github.com/Braggedtooth"
        },
        "body": "<p dir=\"auto\">Solution hook for adding page when created and deleting when page is deleted.</p>\n<div class=\"highlight highlight-source-tsx notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import payload from &quot;payload&quot;;\nimport { FieldHookArgs } from &quot;payload/dist/fields/config/types&quot;;\nimport { MainMenu, Page } from &quot;../../payload-types&quot;;\n\n/**\n *  fetches the main menu from the database\n */\nconst fetchMenu = async (): Promise&lt;MainMenu&gt; =&gt;\n  await payload.findGlobal({ slug: &quot;mainMenu&quot; });\n\n/**\n *  fetch the menu, add the new page to it, and then update the menu\n * @param args - {\n * @returns The page that was created.\n */\nexport const addPageToMenu = async (args: {\n  doc: Page;\n  operation: FieldHookArgs[&quot;operation&quot;];\n}) =&gt; {\n  const menu = await fetchMenu();\n  if (args.operation === &quot;create&quot;) {\n    const newArray = menu.items.map((item) =&gt; {\n      return {\n        ...item,\n        link: {\n          ...item.link,\n          reference: {\n            value:\n              typeof item.link.reference.value !== &quot;string&quot; &amp;&amp;\n              item.link.reference.value.id,\n            relationTo: item.link.reference.relationTo,\n          },\n        },\n      };\n    });\n    if (args.doc &amp;&amp; menu) {\n      await payload.updateGlobal({\n        slug: &quot;mainMenu&quot;,\n        data: {\n          items: [\n            ...newArray,\n            {\n              type: &quot;link&quot;,\n              label: args.doc.title,\n              link: {\n                type: &quot;reference&quot;,\n                reference: {\n                  value: args.doc.id,\n                  relationTo: &quot;pages&quot;,\n                },\n              },\n              subMenu: { blocks: 0 },\n            },\n          ],\n        },\n      });\n\n      return args.doc;\n    }\n  }\n};\n/**\n *  fetches the menu, filters out the item with the id that matches the id passed in as an argument,\n * and then updates the menu with the filtered array\n * @param args - { id: string }\n * @returns The return type is a Promise&lt;void&gt;\n */\n\nexport const deleteMenu = async (args: { id: string }) =&gt; {\n  const menu = await fetchMenu();\n  const deleteArray = menu.items.filter(\n    (element) =&gt;\n      typeof element !== &quot;string&quot; &amp;&amp;\n      typeof element.link.reference.value !== &quot;string&quot; &amp;&amp;\n      element.link.reference.value.id !== args.id\n  );\n  await payload.updateGlobal({\n    slug: &quot;mainMenu&quot;,\n    data: {\n      items: [\n        ...deleteArray.map((item) =&gt; {\n          return {\n            ...item,\n            link: {\n              ...item.link,\n              reference: {\n                value:\n                  typeof item.link.reference.value !== &quot;string&quot; &amp;&amp;\n                  item.link.reference.value.id,\n                relationTo: item.link.reference.relationTo,\n              },\n            },\n          };\n        }),\n      ],\n    },\n  });\n  return;\n};\n\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">FieldHookArgs</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/dist/fields/config/types\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">MainMenu</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">Page</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"../../payload-types\"</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">/**</span>\n<span class=\"pl-c\"> *  fetches the main menu from the database</span>\n<span class=\"pl-c\"> */</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">fetchMenu</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">Promise</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">MainMenu</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=&gt;</span>\n  <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">findGlobal</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">\"mainMenu\"</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">/**</span>\n<span class=\"pl-c\"> *  fetch the menu, add the new page to it, and then update the menu</span>\n<span class=\"pl-c\"> * <span class=\"pl-k\">@param</span> args - {</span>\n<span class=\"pl-c\"> * <span class=\"pl-k\">@returns</span> The page that was created.</span>\n<span class=\"pl-c\"> */</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">addPageToMenu</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span>: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">doc</span>: <span class=\"pl-smi\">Page</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-c1\">operation</span>: <span class=\"pl-smi\">FieldHookArgs</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">\"operation\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">menu</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetchMenu</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">\"create\"</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">newArray</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">menu</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">items</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">item</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n        ...<span class=\"pl-s1\">item</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">link</span>: <span class=\"pl-kos\">{</span>\n          ...<span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">reference</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">value</span>:\n              <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s\">\"string\"</span> <span class=\"pl-c1\">&amp;&amp;</span>\n              <span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">relationTo</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">menu</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">updateGlobal</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">\"mainMenu\"</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">items</span>: <span class=\"pl-kos\">[</span>\n            ...<span class=\"pl-s1\">newArray</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">{</span>\n              <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"link\"</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">label</span>: <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">title</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">link</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"reference\"</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">reference</span>: <span class=\"pl-kos\">{</span>\n                  <span class=\"pl-c1\">value</span>: <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n                  <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">\"pages\"</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">subMenu</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">blocks</span>: <span class=\"pl-c1\">0</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">/**</span>\n<span class=\"pl-c\"> *  fetches the menu, filters out the item with the id that matches the id passed in as an argument,</span>\n<span class=\"pl-c\"> * and then updates the menu with the filtered array</span>\n<span class=\"pl-c\"> * <span class=\"pl-k\">@param</span> args - { id: string }</span>\n<span class=\"pl-c\"> * <span class=\"pl-k\">@returns</span> The return type is a Promise&lt;void&gt;</span>\n<span class=\"pl-c\"> */</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">deleteMenu</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-smi\">string</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">menu</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetchMenu</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">deleteArray</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">menu</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">items</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">filter</span><span class=\"pl-kos\">(</span>\n    <span class=\"pl-kos\">(</span><span class=\"pl-s1\">element</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span>\n      <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">element</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s\">\"string\"</span> <span class=\"pl-c1\">&amp;&amp;</span>\n      <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">element</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s\">\"string\"</span> <span class=\"pl-c1\">&amp;&amp;</span>\n      <span class=\"pl-s1\">element</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span>\n  <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">updateGlobal</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">\"mainMenu\"</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">items</span>: <span class=\"pl-kos\">[</span>\n        ...<span class=\"pl-s1\">deleteArray</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">item</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n            ...<span class=\"pl-s1\">item</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">link</span>: <span class=\"pl-kos\">{</span>\n              ...<span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">reference</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">value</span>:\n                  <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s\">\"string\"</span> <span class=\"pl-c1\">&amp;&amp;</span>\n                  <span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">relationTo</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">return</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>",
        "createdAt": "2022-08-29T02:27:14Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "Braggedtooth",
        "avatar": "https://avatars.githubusercontent.com/u/54339202?v=4",
        "url": "https://github.com/Braggedtooth"
      },
      "body": "<p dir=\"auto\">Solution hook for adding page when created and deleting when page is deleted.</p>\n<div class=\"highlight highlight-source-tsx notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import payload from &quot;payload&quot;;\nimport { FieldHookArgs } from &quot;payload/dist/fields/config/types&quot;;\nimport { MainMenu, Page } from &quot;../../payload-types&quot;;\n\n/**\n *  fetches the main menu from the database\n */\nconst fetchMenu = async (): Promise&lt;MainMenu&gt; =&gt;\n  await payload.findGlobal({ slug: &quot;mainMenu&quot; });\n\n/**\n *  fetch the menu, add the new page to it, and then update the menu\n * @param args - {\n * @returns The page that was created.\n */\nexport const addPageToMenu = async (args: {\n  doc: Page;\n  operation: FieldHookArgs[&quot;operation&quot;];\n}) =&gt; {\n  const menu = await fetchMenu();\n  if (args.operation === &quot;create&quot;) {\n    const newArray = menu.items.map((item) =&gt; {\n      return {\n        ...item,\n        link: {\n          ...item.link,\n          reference: {\n            value:\n              typeof item.link.reference.value !== &quot;string&quot; &amp;&amp;\n              item.link.reference.value.id,\n            relationTo: item.link.reference.relationTo,\n          },\n        },\n      };\n    });\n    if (args.doc &amp;&amp; menu) {\n      await payload.updateGlobal({\n        slug: &quot;mainMenu&quot;,\n        data: {\n          items: [\n            ...newArray,\n            {\n              type: &quot;link&quot;,\n              label: args.doc.title,\n              link: {\n                type: &quot;reference&quot;,\n                reference: {\n                  value: args.doc.id,\n                  relationTo: &quot;pages&quot;,\n                },\n              },\n              subMenu: { blocks: 0 },\n            },\n          ],\n        },\n      });\n\n      return args.doc;\n    }\n  }\n};\n/**\n *  fetches the menu, filters out the item with the id that matches the id passed in as an argument,\n * and then updates the menu with the filtered array\n * @param args - { id: string }\n * @returns The return type is a Promise&lt;void&gt;\n */\n\nexport const deleteMenu = async (args: { id: string }) =&gt; {\n  const menu = await fetchMenu();\n  const deleteArray = menu.items.filter(\n    (element) =&gt;\n      typeof element !== &quot;string&quot; &amp;&amp;\n      typeof element.link.reference.value !== &quot;string&quot; &amp;&amp;\n      element.link.reference.value.id !== args.id\n  );\n  await payload.updateGlobal({\n    slug: &quot;mainMenu&quot;,\n    data: {\n      items: [\n        ...deleteArray.map((item) =&gt; {\n          return {\n            ...item,\n            link: {\n              ...item.link,\n              reference: {\n                value:\n                  typeof item.link.reference.value !== &quot;string&quot; &amp;&amp;\n                  item.link.reference.value.id,\n                relationTo: item.link.reference.relationTo,\n              },\n            },\n          };\n        }),\n      ],\n    },\n  });\n  return;\n};\n\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">FieldHookArgs</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"payload/dist/fields/config/types\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">MainMenu</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">Page</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"../../payload-types\"</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">/**</span>\n<span class=\"pl-c\"> *  fetches the main menu from the database</span>\n<span class=\"pl-c\"> */</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">fetchMenu</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">Promise</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">MainMenu</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">=&gt;</span>\n  <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">findGlobal</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">\"mainMenu\"</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">/**</span>\n<span class=\"pl-c\"> *  fetch the menu, add the new page to it, and then update the menu</span>\n<span class=\"pl-c\"> * <span class=\"pl-k\">@param</span> args - {</span>\n<span class=\"pl-c\"> * <span class=\"pl-k\">@returns</span> The page that was created.</span>\n<span class=\"pl-c\"> */</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">addPageToMenu</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span>: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">doc</span>: <span class=\"pl-smi\">Page</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-c1\">operation</span>: <span class=\"pl-smi\">FieldHookArgs</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">\"operation\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">menu</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetchMenu</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">\"create\"</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">newArray</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">menu</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">items</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">item</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n        ...<span class=\"pl-s1\">item</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">link</span>: <span class=\"pl-kos\">{</span>\n          ...<span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">reference</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">value</span>:\n              <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s\">\"string\"</span> <span class=\"pl-c1\">&amp;&amp;</span>\n              <span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">relationTo</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">menu</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">updateGlobal</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">\"mainMenu\"</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">items</span>: <span class=\"pl-kos\">[</span>\n            ...<span class=\"pl-s1\">newArray</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">{</span>\n              <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"link\"</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">label</span>: <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">title</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">link</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"reference\"</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">reference</span>: <span class=\"pl-kos\">{</span>\n                  <span class=\"pl-c1\">value</span>: <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n                  <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">\"pages\"</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">subMenu</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">blocks</span>: <span class=\"pl-c1\">0</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">/**</span>\n<span class=\"pl-c\"> *  fetches the menu, filters out the item with the id that matches the id passed in as an argument,</span>\n<span class=\"pl-c\"> * and then updates the menu with the filtered array</span>\n<span class=\"pl-c\"> * <span class=\"pl-k\">@param</span> args - { id: string }</span>\n<span class=\"pl-c\"> * <span class=\"pl-k\">@returns</span> The return type is a Promise&lt;void&gt;</span>\n<span class=\"pl-c\"> */</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">deleteMenu</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-smi\">string</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">menu</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetchMenu</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">deleteArray</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">menu</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">items</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">filter</span><span class=\"pl-kos\">(</span>\n    <span class=\"pl-kos\">(</span><span class=\"pl-s1\">element</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span>\n      <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">element</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s\">\"string\"</span> <span class=\"pl-c1\">&amp;&amp;</span>\n      <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">element</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s\">\"string\"</span> <span class=\"pl-c1\">&amp;&amp;</span>\n      <span class=\"pl-s1\">element</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s1\">args</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span>\n  <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">updateGlobal</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">\"mainMenu\"</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">items</span>: <span class=\"pl-kos\">[</span>\n        ...<span class=\"pl-s1\">deleteArray</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">item</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n            ...<span class=\"pl-s1\">item</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">link</span>: <span class=\"pl-kos\">{</span>\n              ...<span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">reference</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">value</span>:\n                  <span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s\">\"string\"</span> <span class=\"pl-c1\">&amp;&amp;</span>\n                  <span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s1\">item</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">link</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reference</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">relationTo</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">return</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>",
      "createdAt": "2022-08-29T02:27:14Z",
      "chosenAt": "2022-08-29T02:27:17Z",
      "chosenBy": "Braggedtooth",
      "replies": null
    }
  },
  {
    "title": "run test on local API",
    "body": "<p dir=\"auto\">I have some code that uses the local API, and I'd like to test it.</p>\n<p dir=\"auto\">So I followed this tutorial: <a href=\"https://payloadcms.com/blog/typescript-jest-vscode-debugger-tutorial\" rel=\"nofollow\">https://payloadcms.com/blog/typescript-jest-vscode-debugger-tutorial</a></p>\n<p dir=\"auto\">The thing is, if I write this code:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const users = await payload.find({\n            collection: 'users'\n        });\nexpect(users).toBeDefined();\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">users</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'users'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">users</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toBeDefined</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">I get the following error: <code class=\"notranslate\"> Cannot read properties of undefined (reading 'collections')</code></p>\n<p dir=\"auto\">According to <a href=\"https://github.com/payloadcms/payload/discussions/598\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/598/hovercard\">this discussion</a>, it's due to the fact that payload is initialized in a different process than the one in which the test is executed.</p>\n<p dir=\"auto\">My question is, is there any way to configure payload so my test works ?</p>\n<p dir=\"auto\">(additionally, I have some problem with the database, since I need it to be populated in order to run my test.)</p>",
    "url": "https://github.com/payloadcms/payload/discussions/985",
    "id": "985",
    "createdAt": "2022-08-22T13:04:31Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "MattRvt",
      "avatar": "https://avatars.githubusercontent.com/u/52105158?u=e7eac1c6b36d6df11e0b816084bf6f89feb1c9c1&v=4",
      "url": "https://github.com/MattRvt"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/MattRvt/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/MattRvt\">@MattRvt</a> , we do testing like this within Payload's test suite. That would probably be a good place to start. The high-level idea is that you'll need to call <code class=\"notranslate\">payload.init</code> within your test suite before making any calls via the local API.</p>\n<p dir=\"auto\">For example, looking at our access-control test suite:</p>\n<ul dir=\"auto\">\n<li>There is a <code class=\"notranslate\">beforeAll</code> block that calls a helper function - <a href=\"https://github.com/payloadcms/payload/blob/master/test/access-control/int.spec.ts#L13\">link</a></li>\n<li>The helper function calls <code class=\"notranslate\">payload.init</code> internally - <a href=\"https://github.com/payloadcms/payload/blob/master/test/helpers/configHelpers.ts#L26\">link</a></li>\n</ul>\n<p dir=\"auto\">Data seeding can either be done within a <a href=\"https://github.com/payloadcms/payload/blob/master/test/access-control/int.spec.ts#L17\">jest block</a> or done via the <a href=\"https://github.com/payloadcms/payload/blob/master/test/access-control/config.ts#L119\">onInit config function</a></p>",
        "createdAt": "2022-08-22T14:46:49Z",
        "replies": null
      },
      {
        "author": {
          "name": "MattRvt",
          "avatar": "https://avatars.githubusercontent.com/u/52105158?u=e7eac1c6b36d6df11e0b816084bf6f89feb1c9c1&v=4",
          "url": "https://github.com/MattRvt"
        },
        "body": "<h2 dir=\"auto\">Payload init</h2>\n<p dir=\"auto\">That's what I saw in the repository, but I was afraid it was an oversized solution. But if it's the best one, I'll use it.</p>\n<h2 dir=\"auto\">DB init</h2>\n<p dir=\"auto\">My test DB contains about 100 entries. So I'm looking for a way to import them all at once.</p>\n<p dir=\"auto\">To fill the DB, it is not possible to use a dump (created with mongodump) as mongodb-memory-server does not allow to do it directly, but maybe there is another solution.</p>\n<p dir=\"auto\">I will try to export my database in JSON and then import it using the method you describe, but it doesn't seem to be an ideal solution.</p>\n<h3 dir=\"auto\">Is it possible to use my local DB?</h3>\n<blockquote>\n<p dir=\"auto\">Payload will automatically attempt to use mongodb-memory-server if two conditions are met:</p>\n<ol dir=\"auto\">\n<li>It is locally installed in your project</li>\n<li>NODE_ENV is equal to test</li>\n</ol>\n</blockquote>\n<p dir=\"auto\">So, I simply uninstall <code class=\"notranslate\">mongodb-memory-server</code> and Payload is still trying to use mongodb-memory-server</p>\n<p dir=\"auto\">I will try to export my database in JSON and then import it using the method you describe, but it doesn't seem to be an ideal solution.</p>\n<p dir=\"auto\">Thank you for your help</p>",
        "createdAt": "2022-08-23T08:15:41Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/MattRvt/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/MattRvt\">@MattRvt</a> , we do testing like this within Payload's test suite. That would probably be a good place to start. The high-level idea is that you'll need to call <code class=\"notranslate\">payload.init</code> within your test suite before making any calls via the local API.</p>\n<p dir=\"auto\">For example, looking at our access-control test suite:</p>\n<ul dir=\"auto\">\n<li>There is a <code class=\"notranslate\">beforeAll</code> block that calls a helper function - <a href=\"https://github.com/payloadcms/payload/blob/master/test/access-control/int.spec.ts#L13\">link</a></li>\n<li>The helper function calls <code class=\"notranslate\">payload.init</code> internally - <a href=\"https://github.com/payloadcms/payload/blob/master/test/helpers/configHelpers.ts#L26\">link</a></li>\n</ul>\n<p dir=\"auto\">Data seeding can either be done within a <a href=\"https://github.com/payloadcms/payload/blob/master/test/access-control/int.spec.ts#L17\">jest block</a> or done via the <a href=\"https://github.com/payloadcms/payload/blob/master/test/access-control/config.ts#L119\">onInit config function</a></p>",
      "createdAt": "2022-08-22T14:46:49Z",
      "chosenAt": "2022-08-22T14:46:55Z",
      "chosenBy": "denolfe",
      "replies": null
    }
  },
  {
    "title": "Unable to save document (form submissions) with REST API",
    "body": "<p dir=\"auto\">Hi,<br>\nI tried <a href=\"https://github.com/payloadcms/plugin-form-builder\">payloadcms/plugin-form-builder</a> and I have some questions. How to create form submissions? Should I point my HTML directly to Payload? Richt now, I have proxy function that process data and after that I tried to create new form submission using REST API.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const formSubmission = {\n  form: '&lt;some-mongo-id&gt;',\n  submissionData: [\n    { field: ...', value: '...' },\n    ...\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">formSubmission</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">form</span>: <span class=\"pl-s\">'&lt;some-mongo-id&gt;'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">submissionData</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">field</span>: ...<span class=\"pl-s\">', value: '</span><span class=\"pl-kos\">.</span><span class=\"pl-kos\">.</span><span class=\"pl-kos\">.</span>' },\n    ...\n}</pre></div>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const res = await apiFetch('&lt;api-url&gt;/form-submissions', {\n  body: JSON.stringify(formSubmission),\n  method: 'POST',\n})\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">res</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">apiFetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'&lt;api-url&gt;/form-submissions'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">body</span>: <span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">formSubmission</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'POST'</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const formData = new FormData()\nformData.append('_payload', JSON.stringify(formSubmission))\n\nconst res = await apiFetch('&lt;api-url&gt;/form-submissions', {\n  body: formData,\n  headers: {\n    'Content-Type': 'multipart/form-data',\n  },\n  method: 'POST',\n})\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">formData</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">FormData</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-s1\">formData</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">append</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'_payload'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">formSubmission</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">res</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">apiFetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'&lt;api-url&gt;/form-submissions'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">body</span>: <span class=\"pl-s1\">formData</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">headers</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s\">'Content-Type'</span>: <span class=\"pl-s\">'multipart/form-data'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'POST'</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">Neither of these approaches work. They return validation error that prop <code class=\"notranslate\">form</code> is missing,  Do you have any ideas what I am doing wrong? I think the documentation lacks details on how to work with REST mutations.</p>\n<p dir=\"auto\">Thanks!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/914",
    "id": "914",
    "createdAt": "2022-08-10T22:10:38Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "lksfrn",
      "avatar": "https://avatars.githubusercontent.com/u/29776261?u=7ab4dc930c50a3af6c833764e9a74559b705878f&v=4",
      "url": "https://github.com/lksfrn"
    },
    "comments": [
      {
        "author": {
          "name": "JarrodMFlesch",
          "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
          "url": "https://github.com/JarrodMFlesch"
        },
        "body": "<p dir=\"auto\">That should work...</p>\n<p dir=\"auto\">Here is a snippet pulled from a site my team built.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\nconst dataToSend = Object.entries(data).map(([name, value]) =&gt; ({\n  field: name,\n  value\n}));\n\nconst req = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/form-submissions`, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    form: formID,\n    submissionData: dataToSend\n  })\n})\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">dataToSend</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">entries</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">name</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">value</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">field</span>: <span class=\"pl-s1\">name</span><span class=\"pl-kos\">,</span>\n  value\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">req</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">NEXT_PUBLIC_API_URL</span><span class=\"pl-kos\">}</span></span>/api/form-submissions`</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'POST'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">headers</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s\">'Content-Type'</span>: <span class=\"pl-s\">'application/json'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">body</span>: <span class=\"pl-smi\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">form</span>: <span class=\"pl-s1\">formID</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">submissionData</span>: <span class=\"pl-s1\">dataToSend</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div>",
        "createdAt": "2022-08-11T02:13:43Z",
        "replies": [
          {
            "author": {
              "name": "lksfrn",
              "avatar": "https://avatars.githubusercontent.com/u/29776261?u=7ab4dc930c50a3af6c833764e9a74559b705878f&v=4",
              "url": "https://github.com/lksfrn"
            },
            "body": "<p dir=\"auto\">Thank you, I think the problem was that I did not specified <code class=\"notranslate\">Content-Type</code>. Dummy mistake!</p>",
            "createdAt": "2022-08-21T21:20:41Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "JarrodMFlesch",
        "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
        "url": "https://github.com/JarrodMFlesch"
      },
      "body": "<p dir=\"auto\">That should work...</p>\n<p dir=\"auto\">Here is a snippet pulled from a site my team built.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\nconst dataToSend = Object.entries(data).map(([name, value]) =&gt; ({\n  field: name,\n  value\n}));\n\nconst req = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/form-submissions`, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    form: formID,\n    submissionData: dataToSend\n  })\n})\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">dataToSend</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">entries</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">name</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">value</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">field</span>: <span class=\"pl-s1\">name</span><span class=\"pl-kos\">,</span>\n  value\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">req</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">NEXT_PUBLIC_API_URL</span><span class=\"pl-kos\">}</span></span>/api/form-submissions`</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'POST'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">headers</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s\">'Content-Type'</span>: <span class=\"pl-s\">'application/json'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">body</span>: <span class=\"pl-smi\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">form</span>: <span class=\"pl-s1\">formID</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">submissionData</span>: <span class=\"pl-s1\">dataToSend</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div>",
      "createdAt": "2022-08-11T02:13:43Z",
      "chosenAt": "2022-08-21T21:20:41Z",
      "chosenBy": "lksfrn",
      "replies": [
        {
          "author": {
            "name": "lksfrn",
            "avatar": "https://avatars.githubusercontent.com/u/29776261?u=7ab4dc930c50a3af6c833764e9a74559b705878f&v=4",
            "url": "https://github.com/lksfrn"
          },
          "body": "<p dir=\"auto\">Thank you, I think the problem was that I did not specified <code class=\"notranslate\">Content-Type</code>. Dummy mistake!</p>",
          "createdAt": "2022-08-21T21:20:41Z"
        }
      ]
    }
  },
  {
    "title": "Is it possible to add some custom config in a field config?",
    "body": "<p dir=\"auto\">We're building a custom UI field. It looks like this:</p>\n<div class=\"highlight highlight-source-tsx notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { merge } from 'lodash';\nimport { Field } from 'payload/types';\n\nimport { LinkTo } from './ui/LinkTo';\n\ninterface Options {\n  collectionSlug: string;\n}\n\n// By dynamically building fields in code configurations are reusable and concise\nexport const linkTo = (options: Options, overrides?: Partial&lt;Field&gt;): Field =&gt; {\n  const { collectionSlug } = options;\n\n  return merge&lt;Field, Partial&lt;Field&gt; | undefined&gt;(\n    {\n      name: 'linkTo',\n      type: 'ui',\n      admin: {\n        position: 'sidebar',\n        components: {\n          Field: (props: Field) =&gt; (\n            &lt;LinkTo {...props} collectionSlug={collectionSlug} /&gt;\n          ),\n        },\n      },\n    },\n    overrides\n  );\n};\n\n// usage\n\nconst Tag = {\n  slug: 'tags',\n  fields: [\n    //...\n    linkTo({ collectionSlug: 'tags' }),\n    //...\n  ]\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">merge</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'lodash'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">Field</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">LinkTo</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./ui/LinkTo'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">interface</span> <span class=\"pl-smi\">Options</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">collectionSlug</span>: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-c\">// By dynamically building fields in code configurations are reusable and concise</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">linkTo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">options</span>: <span class=\"pl-smi\">Options</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">overrides</span>?: <span class=\"pl-smi\">Partial</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">Field</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">Field</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> collectionSlug <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">options</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-en\">merge</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">Field</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">Partial</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">Field</span><span class=\"pl-kos\">&gt;</span> <span class=\"pl-c1\">|</span> <span class=\"pl-c1\">undefined</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">(</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'linkTo'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'ui'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">position</span>: <span class=\"pl-s\">'sidebar'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">components</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-en\">Field</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">props</span>: <span class=\"pl-smi\">Field</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span>\n            <span class=\"pl-c1\">&lt;</span><span class=\"pl-smi\">LinkTo</span> <span class=\"pl-kos\">{</span>...<span class=\"pl-s1\">props</span><span class=\"pl-kos\">}</span> <span class=\"pl-c1\">collectionSlug</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">collectionSlug</span><span class=\"pl-kos\">}</span> <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n          <span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">overrides</span>\n  <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// usage</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">Tag</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'tags'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-c\">//...</span>\n    <span class=\"pl-en\">linkTo</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">collectionSlug</span>: <span class=\"pl-s\">'tags'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c\">//...</span>\n  <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">You can see two twisted place:</p>\n<ol dir=\"auto\">\n<li><code class=\"notranslate\">linkTo({ collectionSlug: 'tags' })</code> I already passed a slug in to collection config, but I still need to pass it again.</li>\n</ol>\n<p dir=\"auto\">I think if I can get the current collection slug directly in the <code class=\"notranslate\">LinkTo</code> component would be much easier.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const config = useCollectionConfig();\"><pre class=\"notranslate\"><code class=\"notranslate\">const config = useCollectionConfig();\n</code></pre></div>\n<ol start=\"2\" dir=\"auto\">\n<li><code class=\"notranslate\">LinkTo</code> already gets the field config as the input props, but I cannot pass any additional config to it except writing a wrapper component like this.</li>\n</ol>\n<p dir=\"auto\">I think if I can pass some custom configurations would be much easier:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n    {\n      name: 'linkTo',\n      type: 'ui',\n      admin: {\n        position: 'sidebar',\n        collectionSlug,\n        components: LinkTo,\n      },\n      // or an explicit field to pass custom configs\n      custom: {\n        collectionSlug,\n      }\n    },\n\n// Get collectionSlug from custom config\nconst LinkTo = ({ admin: { collectionSlug } }) =&gt; {\n\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">\n    {\n      name: 'linkTo',\n      type: 'ui',\n      admin: {\n        position: 'sidebar',\n        collectionSlug,\n        components: LinkTo,\n      },\n      // or an explicit field to pass custom configs\n      custom: {\n        collectionSlug,\n      }\n    },\n\n// Get collectionSlug from custom config\nconst LinkTo = ({ admin: { collectionSlug } }) =&gt; {\n\n}\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/979",
    "id": "979",
    "createdAt": "2022-08-21T10:11:09Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "Stupidism",
      "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
      "url": "https://github.com/Stupidism"
    },
    "comments": [
      {
        "author": {
          "name": "Stupidism",
          "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
          "url": "https://github.com/Stupidism"
        },
        "body": "<p dir=\"auto\">I found I can get the current collection info with hook: <code class=\"notranslate\">useDocumentInfo</code>. It can solve this specific issue for now:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  const { collection } = useDocumentInfo();\n  const collectionSlug = collection?.slug || '';\n\n// or in non react component\n\n\nconst getCurrentCollectionSlug = () =&gt; {\n  const match =\n    /\\/admin\\/collections\\/([a-z-]*)\\/.*/.exec(window.location.pathname) || [];\n\n  if (!match) return '';\n\n  return match[1];\n};\"><pre class=\"notranslate\"><code class=\"notranslate\">  const { collection } = useDocumentInfo();\n  const collectionSlug = collection?.slug || '';\n\n// or in non react component\n\n\nconst getCurrentCollectionSlug = () =&gt; {\n  const match =\n    /\\/admin\\/collections\\/([a-z-]*)\\/.*/.exec(window.location.pathname) || [];\n\n  if (!match) return '';\n\n  return match[1];\n};\n</code></pre></div>",
        "createdAt": "2022-08-21T15:46:35Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "Stupidism",
        "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
        "url": "https://github.com/Stupidism"
      },
      "body": "<p dir=\"auto\">I found I can get the current collection info with hook: <code class=\"notranslate\">useDocumentInfo</code>. It can solve this specific issue for now:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  const { collection } = useDocumentInfo();\n  const collectionSlug = collection?.slug || '';\n\n// or in non react component\n\n\nconst getCurrentCollectionSlug = () =&gt; {\n  const match =\n    /\\/admin\\/collections\\/([a-z-]*)\\/.*/.exec(window.location.pathname) || [];\n\n  if (!match) return '';\n\n  return match[1];\n};\"><pre class=\"notranslate\"><code class=\"notranslate\">  const { collection } = useDocumentInfo();\n  const collectionSlug = collection?.slug || '';\n\n// or in non react component\n\n\nconst getCurrentCollectionSlug = () =&gt; {\n  const match =\n    /\\/admin\\/collections\\/([a-z-]*)\\/.*/.exec(window.location.pathname) || [];\n\n  if (!match) return '';\n\n  return match[1];\n};\n</code></pre></div>",
      "createdAt": "2022-08-21T15:46:35Z",
      "chosenAt": "2022-08-28T05:38:41Z",
      "chosenBy": "Stupidism",
      "replies": null
    }
  },
  {
    "title": "Question: Can I disable blockName in editor view?",
    "body": "<p dir=\"auto\">Hey Payload community,</p>\n<p dir=\"auto\"><strong>Question:</strong><br>\nIs there anyway to disable the automatically applied blockName of a blocks field?</p>\n<blockquote>\n<p dir=\"auto\"><strong>Auto-generated data per block</strong><br>\n...<br>\n<strong>blockName</strong><br>\nThe Admin panel provides each block with a blockName field which optionally allows editors to label their blocks for better editability and readability.</p>\n</blockquote>\n<ul dir=\"auto\">\n<li><a href=\"https://payloadcms.com/docs/fields/blocks#block-configs:~:text=Auto%2Dgenerated%20data%20per%20block\" rel=\"nofollow\">docs link</a></li>\n</ul>\n<p dir=\"auto\"><strong>Example Screenshot:</strong><br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/101012384/182721085-bbf01001-cd03-4eac-bd80-017a9df7bf72.png\"><img width=\"1026\" alt=\"Screen Shot 2022-08-03 at 6 08 23 PM\" src=\"https://user-images.githubusercontent.com/101012384/182721085-bbf01001-cd03-4eac-bd80-017a9df7bf72.png\" style=\"max-width: 100%;\"></a></p>\n<ul dir=\"auto\">\n<li>in this SS the current block's blockName is left blank, which displays as \"Untitled\"</li>\n</ul>\n<p dir=\"auto\"><strong>Use case:</strong><br>\nOur content team uses the blockName input to label the \"Pages\" of an entry, but not the Pages' nested \"Content\" blocks, and new editors get confused that they're not using the CMS properly when they see a bunch of Untitled's sprinkled everywhere.</p>\n<p dir=\"auto\"><strong>Note to maintainers:</strong><br>\nIf it currently isn't possible, my 2 cents are that adding a configuration option on the block field to disable/hide the blockName property would complement the composability/customizability of your nested/recursive blocks, Tabs, etc. nicely.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/886",
    "id": "886",
    "createdAt": "2022-08-03T22:15:49Z",
    "upvotes": 3,
    "commentTotal": 2,
    "author": {
      "name": "andwrobs",
      "avatar": "https://avatars.githubusercontent.com/u/101012384?u=716f55d08cbb33242adb1ebadfad47def9e98881&v=4",
      "url": "https://github.com/andwrobs"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey @andwrobs — this is a perfectly valid request. Right now, you could hide it with custom CSS, but we could easily support this internally. We would accept a PR to do so. Just would require CMD+F through the whole project, find all instances of <code class=\"notranslate\">blockName</code>, and address each to make it optional. That'd be how I'd do it.</p>\n<p dir=\"auto\">We'd probably want to think of how to expose this to the config.... i.e. if there are other \"blockName\" properties in the future, do we scope them all to a <code class=\"notranslate\">field.blockName</code> object? And then, to disable, you'd do <code class=\"notranslate\">field.blockName.disable</code> or similar?</p>\n<p dir=\"auto\">I could think of maybe renaming <code class=\"notranslate\">[Untitled]</code> as a future property, and even renaming the field <code class=\"notranslate\">blockName</code> to something else on the data perspective.</p>\n<p dir=\"auto\">Whaddya think?</p>",
        "createdAt": "2022-08-04T18:21:57Z",
        "replies": [
          {
            "author": {
              "name": "andwrobs",
              "avatar": "https://avatars.githubusercontent.com/u/101012384?u=716f55d08cbb33242adb1ebadfad47def9e98881&v=4",
              "url": "https://github.com/andwrobs"
            },
            "body": "<p dir=\"auto\">I could see these properties being useful:</p>\n<ul dir=\"auto\">\n<li>field.blockName.disable</li>\n<li>field.blockName.placeholder</li>\n<li>field.blockName.default</li>\n<li>field.blockName.unique</li>\n</ul>\n<p dir=\"auto\">Unsure if there would be a use for <em>disable</em> <strong>and</strong> <em>hide</em>, e.g. using hooks to populate blockNames similarly to how you would an auto generated internalTitle top level field.</p>\n<p dir=\"auto\">w.r.t renaming blockName, for some \"block types\" I could see \"blockTitle\" making more sense, but then in others blockName is probably semantically closer. No strong opinion there.</p>\n<p dir=\"auto\">I'll post the custom CSS if/when we implement that stopgap &amp; take a stab at a PR, would love to get a contribution in to this awesome project <g-emoji class=\"g-emoji\" alias=\"100\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f4af.png\">💯</g-emoji></p>",
            "createdAt": "2022-08-05T13:16:58Z"
          }
        ]
      },
      {
        "author": {
          "name": "andwrobs",
          "avatar": "https://avatars.githubusercontent.com/u/101012384?u=716f55d08cbb33242adb1ebadfad47def9e98881&v=4",
          "url": "https://github.com/andwrobs"
        },
        "body": "<p dir=\"auto\">^ following with steps for proposed (&amp; working) solution before potential additional PR discussion:</p>\n<h3 dir=\"auto\">To hide the blockName inputs, follow these steps:</h3>\n<p dir=\"auto\"><strong>make sure sass &amp; sass-loader are installed</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"npm i sass sass-loader\"><pre class=\"notranslate\"><code class=\"notranslate\">npm i sass sass-loader\n</code></pre></div>\n<p dir=\"auto\"><strong>create/update custom stylesheet</strong>,  @ relative CMS <code class=\"notranslate\">src/styles/custom.scss</code></p>\n<div class=\"highlight highlight-source-css-scss notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"...\n\n@import '~payload/scss';\n\ndiv.section-title {\n  display: none;\n}\"><pre class=\"notranslate\">...\n\n<span class=\"pl-k\">@import</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>~payload/scss<span class=\"pl-pds\">'</span></span>;\n\n<span class=\"pl-ent\">div</span><span class=\"pl-e\">.section-title</span> {\n  <span class=\"pl-c1\"><span class=\"pl-c1\">display</span></span>: <span class=\"pl-c1\">none</span>;\n}</pre></div>\n<p dir=\"auto\"><strong>include custom stylesheet with this payload.config.ts config</strong></p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export default buildConfig({\n  ...\n  admin: {\n    ...\n    // override existing payload styles with custom look\n    css: path.resolve(__dirname, 'styles/custom.scss'),\n    ...\n  },\n  ...\n}) \"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-en\">buildConfig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  ...\n  <span class=\"pl-s1\">admin</span>: <span class=\"pl-kos\">{</span>\n    ...\n    <span class=\"pl-c\">// override existing payload styles with custom look</span>\n    <span class=\"pl-s1\">css</span>: <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'styles/custom.scss'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    ...\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  ...\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> </pre></div>\n<p dir=\"auto\"><strong>result</strong><br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/101012384/185001343-7a94adff-c1c6-460b-9b82-da64225e72e0.png\"><img width=\"334\" alt=\"custom-scss\" src=\"https://user-images.githubusercontent.com/101012384/185001343-7a94adff-c1c6-460b-9b82-da64225e72e0.png\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Relevant Docs</h3>\n<ul dir=\"auto\">\n<li><a href=\"https://payloadcms.com/docs/admin/customizing-css\" rel=\"nofollow\">https://payloadcms.com/docs/admin/customizing-css</a></li>\n<li><a href=\"https://github.com/payloadcms/public-demo/blob/master/src/payload.config.ts\">https://github.com/payloadcms/public-demo/blob/master/src/payload.config.ts</a></li>\n<li><a href=\"https://github.com/payloadcms/public-demo/blob/master/src/styles/custom.scss\">https://github.com/payloadcms/public-demo/blob/master/src/styles/custom.scss</a></li>\n<li><a aria-label=\"Discussion #721\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4198294\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/721\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/721/hovercard?comment_id=3302529\" href=\"https://github.com/payloadcms/payload/discussions/721#discussioncomment-3302529\">#721 (comment)</a></li>\n</ul>",
        "createdAt": "2022-08-16T23:26:45Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey @andwrobs — this is a perfectly valid request. Right now, you could hide it with custom CSS, but we could easily support this internally. We would accept a PR to do so. Just would require CMD+F through the whole project, find all instances of <code class=\"notranslate\">blockName</code>, and address each to make it optional. That'd be how I'd do it.</p>\n<p dir=\"auto\">We'd probably want to think of how to expose this to the config.... i.e. if there are other \"blockName\" properties in the future, do we scope them all to a <code class=\"notranslate\">field.blockName</code> object? And then, to disable, you'd do <code class=\"notranslate\">field.blockName.disable</code> or similar?</p>\n<p dir=\"auto\">I could think of maybe renaming <code class=\"notranslate\">[Untitled]</code> as a future property, and even renaming the field <code class=\"notranslate\">blockName</code> to something else on the data perspective.</p>\n<p dir=\"auto\">Whaddya think?</p>",
      "createdAt": "2022-08-04T18:21:57Z",
      "chosenAt": "2022-08-06T13:18:23Z",
      "chosenBy": "andwrobs",
      "replies": [
        {
          "author": {
            "name": "andwrobs",
            "avatar": "https://avatars.githubusercontent.com/u/101012384?u=716f55d08cbb33242adb1ebadfad47def9e98881&v=4",
            "url": "https://github.com/andwrobs"
          },
          "body": "<p dir=\"auto\">I could see these properties being useful:</p>\n<ul dir=\"auto\">\n<li>field.blockName.disable</li>\n<li>field.blockName.placeholder</li>\n<li>field.blockName.default</li>\n<li>field.blockName.unique</li>\n</ul>\n<p dir=\"auto\">Unsure if there would be a use for <em>disable</em> <strong>and</strong> <em>hide</em>, e.g. using hooks to populate blockNames similarly to how you would an auto generated internalTitle top level field.</p>\n<p dir=\"auto\">w.r.t renaming blockName, for some \"block types\" I could see \"blockTitle\" making more sense, but then in others blockName is probably semantically closer. No strong opinion there.</p>\n<p dir=\"auto\">I'll post the custom CSS if/when we implement that stopgap &amp; take a stab at a PR, would love to get a contribution in to this awesome project <g-emoji class=\"g-emoji\" alias=\"100\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f4af.png\">💯</g-emoji></p>",
          "createdAt": "2022-08-05T13:16:58Z"
        }
      ]
    }
  },
  {
    "title": "Does payload have list reactive?",
    "body": "<p dir=\"auto\">Suppose I have 2 user.<br>\nUser A open a posts listing page. When user B create new post, User A will see that post added to posts listing page imediately without refresh the page. Is this possible?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/934",
    "id": "934",
    "createdAt": "2022-08-14T11:43:42Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "pttsync",
      "avatar": "https://avatars.githubusercontent.com/u/89760396?v=4",
      "url": "https://github.com/pttsync"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/pttsync/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/pttsync\">@pttsync</a> , unfortunately, the current admin UI does not have the ability to reflect new documents without a refresh or page change. Feel free to make a new discussion under \"Feature Requests &amp; Ideas\" with what you're looking to see, so we can track the interest from the community via upvotes.</p>\n<p dir=\"auto\">If you're looking to get really in the weeds, this could possibly be done if you swap out the default list view with a customized one that has the functionality you need - maybe polling the API on an interval. Docs regarding that <a href=\"https://payloadcms.com/docs/admin/components#collections\" rel=\"nofollow\">here</a></p>",
        "createdAt": "2022-08-15T17:40:58Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/pttsync/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/pttsync\">@pttsync</a> , unfortunately, the current admin UI does not have the ability to reflect new documents without a refresh or page change. Feel free to make a new discussion under \"Feature Requests &amp; Ideas\" with what you're looking to see, so we can track the interest from the community via upvotes.</p>\n<p dir=\"auto\">If you're looking to get really in the weeds, this could possibly be done if you swap out the default list view with a customized one that has the functionality you need - maybe polling the API on an interval. Docs regarding that <a href=\"https://payloadcms.com/docs/admin/components#collections\" rel=\"nofollow\">here</a></p>",
      "createdAt": "2022-08-15T17:40:58Z",
      "chosenAt": "2022-08-15T17:41:00Z",
      "chosenBy": "denolfe",
      "replies": null
    }
  },
  {
    "title": "How to search collection that has a relationship element content in rich text field?",
    "body": "<p dir=\"auto\">I am implementing a feature to get all other entries that has a relationship link to current entry. For example I have an author collection and an article collection. The article has a relationship field author. This feature shows how many articles are using this author instance as their relationship field author's value. In fact I using the rest api <code class=\"notranslate\">?where[author][equals]=author_id</code> to search this and it works.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/57319837/182019742-1ec4c109-a2b7-499a-8f24-5fa4ece5adcf.png\"><img src=\"https://user-images.githubusercontent.com/57319837/182019742-1ec4c109-a2b7-499a-8f24-5fa4ece5adcf.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">But if I use a relationship in rich text that link to the author. Then how to search the collection that its rich text field has a relationship link to the author_id?</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/57319837/182020025-cc9c958d-c480-4db6-811a-e0dac3b89248.png\"><img src=\"https://user-images.githubusercontent.com/57319837/182020025-cc9c958d-c480-4db6-811a-e0dac3b89248.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/852",
    "id": "852",
    "createdAt": "2022-07-31T09:34:12Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "EasonSoong",
      "avatar": "https://avatars.githubusercontent.com/u/57319837?u=f5c8feb6afdcc1332ef8738f1af1746b1ea1448c&v=4",
      "url": "https://github.com/EasonSoong"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/EasonSoong/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/EasonSoong\">@EasonSoong</a> —</p>\n<p dir=\"auto\">You should be able to do this with something like:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"where: { myRichTextField: { contains: authorID } }\"><pre class=\"notranslate\"><code class=\"notranslate\">where: { myRichTextField: { contains: authorID } }\n</code></pre></div>\n<p dir=\"auto\">Rich text fields can be queried on just like any other field, so give that a shot!</p>",
        "createdAt": "2022-08-01T12:16:54Z",
        "replies": [
          {
            "author": {
              "name": "EasonSoong",
              "avatar": "https://avatars.githubusercontent.com/u/57319837?u=f5c8feb6afdcc1332ef8738f1af1746b1ea1448c&v=4",
              "url": "https://github.com/EasonSoong"
            },
            "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>, thanks for your replying. And I tried to search document in this way but it did not worked. Below is my search params.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// rest api search \napi/collection?where[testRichText.value.id][equals]=rich-text\n// my collection field definition\n{\n  name: 'testRichText',\n  type: 'richText',\n}\n// data saved in my collection\n&quot;testRichText&quot;: [\n    {\n      &quot;children&quot;: [\n        {\n          &quot;text&quot;: &quot;&quot;\n        }\n      ],\n      &quot;type&quot;: &quot;relationship&quot;,\n      &quot;value&quot;: {\n        &quot;id&quot;: &quot;rich-text&quot;\n      },\n      &quot;relationTo&quot;: &quot;authors&quot;\n    },\n    {\n      &quot;children&quot;: [\n        {\n          &quot;text&quot;: &quot;&quot;\n        }\n      ]\n    }\n]\"><pre class=\"notranslate\"><span class=\"pl-c\">// rest api search </span>\n<span class=\"pl-s1\">api</span><span class=\"pl-c1\">/</span><span class=\"pl-s1\">collection</span>?<span class=\"pl-s1\">where</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">testRichText</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">equals</span><span class=\"pl-kos\">]</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">rich</span><span class=\"pl-c1\">-</span><span class=\"pl-s1\">text</span>\n<span class=\"pl-c\">// my collection field definition</span>\n<span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'testRichText'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'richText'</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-c\">// data saved in my collection</span>\n<span class=\"pl-s\">\"testRichText\"</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s\">\"children\"</span>: <span class=\"pl-kos\">[</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-s\">\"text\"</span>: <span class=\"pl-s\">\"\"</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-s\">\"type\"</span>: <span class=\"pl-s\">\"relationship\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-s\">\"value\"</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s\">\"id\"</span>: <span class=\"pl-s\">\"rich-text\"</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-s\">\"relationTo\"</span>: <span class=\"pl-s\">\"authors\"</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s\">\"children\"</span>: <span class=\"pl-kos\">[</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-s\">\"text\"</span>: <span class=\"pl-s\">\"\"</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">]</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">]</span></pre></div>\n<p dir=\"auto\">I looked into the code of how to find a document in db because I want to figure out why my search api did not work. And I found my query was finally transformed to <code class=\"notranslate\">{\"testRichText\":{\"$eq\":\"rich-text\"}}</code>. The <code class=\"notranslate\">.value.id</code> was ignored. That's the key factor in fact.</p>\n<p dir=\"auto\">At last I found a buildQuery function and I think the problem is in <a href=\"https://github.com/payloadcms/payload/blob/master/src/mongoose/buildQuery.ts#L160\">here</a>.</p>\n<p dir=\"auto\">I think it's because the rich text doesn't have clear schema definition. The <code class=\"notranslate\">schema.pathType</code> will return adhocOrUndefined for the path <code class=\"notranslate\">testRichText.value</code> or <code class=\"notranslate\">testRichText.value.id</code>. And the real query to mongo will become another way other than how I write the code.</p>\n<p dir=\"auto\">And I think the blocks field has the same issue if one of the added block contains a rich text content.</p>",
            "createdAt": "2022-08-02T08:46:21Z"
          },
          {
            "author": {
              "name": "EasonSoong",
              "avatar": "https://avatars.githubusercontent.com/u/57319837?u=f5c8feb6afdcc1332ef8738f1af1746b1ea1448c&v=4",
              "url": "https://github.com/EasonSoong"
            },
            "body": "<p dir=\"auto\">Is this an issue of the buildQuery or I didn't use it correctly?</p>",
            "createdAt": "2022-08-04T06:54:48Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/EasonSoong/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/EasonSoong\">@EasonSoong</a> — I just looked into this and figured out a way to make this work.</p>\n<p dir=\"auto\"><a aria-label=\"Pull request #888\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1328768543\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/888\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/888/hovercard\" href=\"https://github.com/payloadcms/payload/pull/888\">#888</a></p>\n<p dir=\"auto\">This will be released shortly.</p>\n<p dir=\"auto\">But basically, once it's merged, to query against rich text field content, you need to do something like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"where: { 'myRichTextField.children.value.id': { equals: yourID } }\"><pre class=\"notranslate\"><code class=\"notranslate\">where: { 'myRichTextField.children.value.id': { equals: yourID } }\n</code></pre></div>\n<p dir=\"auto\">We will be deploying a patch version with this new feature shortly!</p>",
            "createdAt": "2022-08-04T15:02:09Z"
          }
        ]
      },
      {
        "author": {
          "name": "EasonSoong",
          "avatar": "https://avatars.githubusercontent.com/u/57319837?u=f5c8feb6afdcc1332ef8738f1af1746b1ea1448c&v=4",
          "url": "https://github.com/EasonSoong"
        },
        "body": "<p dir=\"auto\">Hello <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> , I tried this feature in the newest payload version. And it works when I trying to search relationship in a rich text field. Thanks you for that!<br>\nBut I still cannot search relationship in a block rich text field.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// I have a article collection which use a block field\nexport const Articles: CollectionConfig = {\n    fields: [\n        {\n            name: 'content',\n            type: 'blocks',\n            blocks: [Content, Media, Button],\n        },\n    ]\n};\n// And the Content block has a rich text field\nexport const Content: Block = {\n  fields: [\n      {\n          name: 'richText',\n          type: 'richText',\n      }\n  ],\n};\n// My saved data in database\n{\n    content: [{\n        blockType: &quot;content&quot;,\n        id: &quot;62e63a7bc3b0131e1b5d53a9&quot;,\n        richText: [{\n            children: [{text: ''}],\n            relationTo: &quot;authors&quot;,\n            type: &quot;relationship&quot;,\n            value: { id: &quot;rich-text&quot; }\n        }]\n    }]\n}\"><pre class=\"notranslate\"><span class=\"pl-c\">// I have a article collection which use a block field</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-v\">Articles</span>: <span class=\"pl-v\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'content'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'blocks'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">blocks</span>: <span class=\"pl-kos\">[</span><span class=\"pl-v\">Content</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Media</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Button</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// And the Content block has a rich text field</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-v\">Content</span>: <span class=\"pl-v\">Block</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'richText'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'richText'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// My saved data in database</span>\n<span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">content</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">blockType</span>: <span class=\"pl-s\">\"content\"</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">id</span>: <span class=\"pl-s\">\"62e63a7bc3b0131e1b5d53a9\"</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">richText</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">children</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span><span class=\"pl-c1\">text</span>: <span class=\"pl-s\">''</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">\"authors\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"relationship\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">value</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-s\">\"rich-text\"</span> <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">My search api:<br>\n<code class=\"notranslate\">/api/articles?where[content.richText.value.id][equals]=rich-text&amp;depth=0</code></p>\n<p dir=\"auto\">When I try to search relationship in rich text content from block field, the return result of buildQuery still ignore my path after content. Could you help to check this?</p>",
        "createdAt": "2022-08-08T05:45:17Z",
        "replies": [
          {
            "author": {
              "name": "EasonSoong",
              "avatar": "https://avatars.githubusercontent.com/u/57319837?u=f5c8feb6afdcc1332ef8738f1af1746b1ea1448c&v=4",
              "url": "https://github.com/EasonSoong"
            },
            "body": "<p dir=\"auto\">Do we have a plan we fix this?</p>",
            "createdAt": "2022-08-11T01:04:13Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/EasonSoong/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/EasonSoong\">@EasonSoong</a> - yes, sorry, was traveling today but this will be checked into first thing tomorrow!</p>",
            "createdAt": "2022-08-11T03:02:04Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">OK <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/EasonSoong/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/EasonSoong\">@EasonSoong</a> there was a bug related to an update of Mongoose. I just fixed it. You should now be able to query on fields within blocks.</p>\n<p dir=\"auto\">Will you give it a shot?</p>",
            "createdAt": "2022-08-11T22:07:03Z"
          },
          {
            "author": {
              "name": "EasonSoong",
              "avatar": "https://avatars.githubusercontent.com/u/57319837?u=f5c8feb6afdcc1332ef8738f1af1746b1ea1448c&v=4",
              "url": "https://github.com/EasonSoong"
            },
            "body": "<p dir=\"auto\">Sorry <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>, it seems that it makes a progress but didn't resolve the issue completely. The path after content.richText is still been ignored.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/57319837/184306968-6d5fe7f2-ee56-417b-b114-8fcf9d53c3c4.png\"><img src=\"https://user-images.githubusercontent.com/57319837/184306968-6d5fe7f2-ee56-417b-b114-8fcf9d53c3c4.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"queryBuild:  {\n  where: { and: [], 'content.richText.value.id': { equals: 'test-213' } }\n}\nquery:  { 'content.richText': { '$eq': 'test-213' } }\"><pre class=\"notranslate\">queryBuild:  <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">where</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">and</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'content.richText.value.id'</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">equals</span>: <span class=\"pl-s\">'test-213'</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\nquery:  <span class=\"pl-kos\">{</span> <span class=\"pl-s\">'content.richText'</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-s\">'$eq'</span>: <span class=\"pl-s\">'test-213'</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span></pre></div>",
            "createdAt": "2022-08-12T07:36:45Z"
          },
          {
            "author": {
              "name": "EasonSoong",
              "avatar": "https://avatars.githubusercontent.com/u/57319837?u=f5c8feb6afdcc1332ef8738f1af1746b1ea1448c&v=4",
              "url": "https://github.com/EasonSoong"
            },
            "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> , I upgraded my payload to 1.0.22 and it works now. You are really awesome, thank you~</p>",
            "createdAt": "2022-08-15T03:02:17Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/EasonSoong/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/EasonSoong\">@EasonSoong</a> —</p>\n<p dir=\"auto\">You should be able to do this with something like:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"where: { myRichTextField: { contains: authorID } }\"><pre class=\"notranslate\"><code class=\"notranslate\">where: { myRichTextField: { contains: authorID } }\n</code></pre></div>\n<p dir=\"auto\">Rich text fields can be queried on just like any other field, so give that a shot!</p>",
      "createdAt": "2022-08-01T12:16:54Z",
      "chosenAt": "2022-08-05T08:09:27Z",
      "chosenBy": "EasonSoong",
      "replies": [
        {
          "author": {
            "name": "EasonSoong",
            "avatar": "https://avatars.githubusercontent.com/u/57319837?u=f5c8feb6afdcc1332ef8738f1af1746b1ea1448c&v=4",
            "url": "https://github.com/EasonSoong"
          },
          "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>, thanks for your replying. And I tried to search document in this way but it did not worked. Below is my search params.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// rest api search \napi/collection?where[testRichText.value.id][equals]=rich-text\n// my collection field definition\n{\n  name: 'testRichText',\n  type: 'richText',\n}\n// data saved in my collection\n&quot;testRichText&quot;: [\n    {\n      &quot;children&quot;: [\n        {\n          &quot;text&quot;: &quot;&quot;\n        }\n      ],\n      &quot;type&quot;: &quot;relationship&quot;,\n      &quot;value&quot;: {\n        &quot;id&quot;: &quot;rich-text&quot;\n      },\n      &quot;relationTo&quot;: &quot;authors&quot;\n    },\n    {\n      &quot;children&quot;: [\n        {\n          &quot;text&quot;: &quot;&quot;\n        }\n      ]\n    }\n]\"><pre class=\"notranslate\"><span class=\"pl-c\">// rest api search </span>\n<span class=\"pl-s1\">api</span><span class=\"pl-c1\">/</span><span class=\"pl-s1\">collection</span>?<span class=\"pl-s1\">where</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">testRichText</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">equals</span><span class=\"pl-kos\">]</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">rich</span><span class=\"pl-c1\">-</span><span class=\"pl-s1\">text</span>\n<span class=\"pl-c\">// my collection field definition</span>\n<span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'testRichText'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'richText'</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-c\">// data saved in my collection</span>\n<span class=\"pl-s\">\"testRichText\"</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s\">\"children\"</span>: <span class=\"pl-kos\">[</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-s\">\"text\"</span>: <span class=\"pl-s\">\"\"</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-s\">\"type\"</span>: <span class=\"pl-s\">\"relationship\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-s\">\"value\"</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s\">\"id\"</span>: <span class=\"pl-s\">\"rich-text\"</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-s\">\"relationTo\"</span>: <span class=\"pl-s\">\"authors\"</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s\">\"children\"</span>: <span class=\"pl-kos\">[</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-s\">\"text\"</span>: <span class=\"pl-s\">\"\"</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">]</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">]</span></pre></div>\n<p dir=\"auto\">I looked into the code of how to find a document in db because I want to figure out why my search api did not work. And I found my query was finally transformed to <code class=\"notranslate\">{\"testRichText\":{\"$eq\":\"rich-text\"}}</code>. The <code class=\"notranslate\">.value.id</code> was ignored. That's the key factor in fact.</p>\n<p dir=\"auto\">At last I found a buildQuery function and I think the problem is in <a href=\"https://github.com/payloadcms/payload/blob/master/src/mongoose/buildQuery.ts#L160\">here</a>.</p>\n<p dir=\"auto\">I think it's because the rich text doesn't have clear schema definition. The <code class=\"notranslate\">schema.pathType</code> will return adhocOrUndefined for the path <code class=\"notranslate\">testRichText.value</code> or <code class=\"notranslate\">testRichText.value.id</code>. And the real query to mongo will become another way other than how I write the code.</p>\n<p dir=\"auto\">And I think the blocks field has the same issue if one of the added block contains a rich text content.</p>",
          "createdAt": "2022-08-02T08:46:21Z"
        },
        {
          "author": {
            "name": "EasonSoong",
            "avatar": "https://avatars.githubusercontent.com/u/57319837?u=f5c8feb6afdcc1332ef8738f1af1746b1ea1448c&v=4",
            "url": "https://github.com/EasonSoong"
          },
          "body": "<p dir=\"auto\">Is this an issue of the buildQuery or I didn't use it correctly?</p>",
          "createdAt": "2022-08-04T06:54:48Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/EasonSoong/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/EasonSoong\">@EasonSoong</a> — I just looked into this and figured out a way to make this work.</p>\n<p dir=\"auto\"><a aria-label=\"Pull request #888\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1328768543\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/888\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/888/hovercard\" href=\"https://github.com/payloadcms/payload/pull/888\">#888</a></p>\n<p dir=\"auto\">This will be released shortly.</p>\n<p dir=\"auto\">But basically, once it's merged, to query against rich text field content, you need to do something like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"where: { 'myRichTextField.children.value.id': { equals: yourID } }\"><pre class=\"notranslate\"><code class=\"notranslate\">where: { 'myRichTextField.children.value.id': { equals: yourID } }\n</code></pre></div>\n<p dir=\"auto\">We will be deploying a patch version with this new feature shortly!</p>",
          "createdAt": "2022-08-04T15:02:09Z"
        }
      ]
    }
  },
  {
    "title": "How do I get posts that have a certain category set to it?",
    "body": "<p dir=\"auto\">Currently I'm using QueryString like so:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const stringifiedQuery = qs.stringify(\n  {\n    where: {\n      category: {\n        name: {\n          equals: req.query.name,\n        },\n      },\n    },\n  },\n  { addQueryPrefix: true }\n);\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">stringifiedQuery</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">qs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span>\n  <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">where</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">category</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">equals</span>: <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">query</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">addQueryPrefix</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">But I am still getting back all posts instead of the ones with a certain category.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Post: {\n  /*...*/\n  title,\n  category: Category,\n  /*...*/\n}\n\nCategory: {\n  id,\n  name,\n}\"><pre class=\"notranslate\">Post: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">/*...*/</span>\n  <span class=\"pl-s1\">title</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-s1\">category</span>: <span class=\"pl-smi\">Category</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c\">/*...*/</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-smi\">Category</span>: <span class=\"pl-kos\">{</span>\n  id<span class=\"pl-kos\">,</span>\n  name<span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\"></span></pre></div>\n<p dir=\"auto\">How would I write my QueryString so I only get back the posts with a certain category?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/913",
    "id": "913",
    "createdAt": "2022-08-10T14:23:47Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "ahmetskilinc",
      "avatar": "https://avatars.githubusercontent.com/u/37756565?u=415fbff61c78c5f13f13b02a92a118819683596e&v=4",
      "url": "https://github.com/ahmetskilinc"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ahmetskilinc/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ahmetskilinc\">@ahmetskilinc</a> — here's how you'd do that:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const stringifiedQuery = qs.stringify(\n  {\n    where: {\n      'category.name': {\n        equals: req.query.name,\n      },\n    },\n  },\n  { addQueryPrefix: true }\n);\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">stringifiedQuery</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">qs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span>\n  <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">where</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s\">'category.name'</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">equals</span>: <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">query</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">addQueryPrefix</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">You have to use dot notation to query on nested relationship fields, but this should be golden!</p>",
        "createdAt": "2022-08-11T16:38:13Z",
        "replies": [
          {
            "author": {
              "name": "ahmetskilinc",
              "avatar": "https://avatars.githubusercontent.com/u/37756565?u=415fbff61c78c5f13f13b02a92a118819683596e&v=4",
              "url": "https://github.com/ahmetskilinc"
            },
            "body": "<p dir=\"auto\">Thank you!</p>",
            "createdAt": "2022-08-11T17:09:11Z"
          },
          {
            "author": {
              "name": "ahmetskilinc",
              "avatar": "https://avatars.githubusercontent.com/u/37756565?u=415fbff61c78c5f13f13b02a92a118819683596e&v=4",
              "url": "https://github.com/ahmetskilinc"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> how about with an array of <code class=\"notranslate\">tags</code>?</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Post: {\n  /*...*/\n  title,\n  tags: Tag[],\n  /*...*/\n}\n\nTag: {\n  id,\n  name,\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">Post: {\n  /*...*/\n  title,\n  tags: Tag[],\n  /*...*/\n}\n\nTag: {\n  id,\n  name,\n}\n</code></pre></div>",
            "createdAt": "2022-08-11T17:16:05Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ahmetskilinc/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ahmetskilinc\">@ahmetskilinc</a> — here's how you'd do that:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const stringifiedQuery = qs.stringify(\n  {\n    where: {\n      'category.name': {\n        equals: req.query.name,\n      },\n    },\n  },\n  { addQueryPrefix: true }\n);\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">stringifiedQuery</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">qs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span>\n  <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">where</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s\">'category.name'</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">equals</span>: <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">query</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">addQueryPrefix</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">You have to use dot notation to query on nested relationship fields, but this should be golden!</p>",
      "createdAt": "2022-08-11T16:38:13Z",
      "chosenAt": "2022-08-11T17:21:22Z",
      "chosenBy": "ahmetskilinc",
      "replies": [
        {
          "author": {
            "name": "ahmetskilinc",
            "avatar": "https://avatars.githubusercontent.com/u/37756565?u=415fbff61c78c5f13f13b02a92a118819683596e&v=4",
            "url": "https://github.com/ahmetskilinc"
          },
          "body": "<p dir=\"auto\">Thank you!</p>",
          "createdAt": "2022-08-11T17:09:11Z"
        },
        {
          "author": {
            "name": "ahmetskilinc",
            "avatar": "https://avatars.githubusercontent.com/u/37756565?u=415fbff61c78c5f13f13b02a92a118819683596e&v=4",
            "url": "https://github.com/ahmetskilinc"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> how about with an array of <code class=\"notranslate\">tags</code>?</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Post: {\n  /*...*/\n  title,\n  tags: Tag[],\n  /*...*/\n}\n\nTag: {\n  id,\n  name,\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">Post: {\n  /*...*/\n  title,\n  tags: Tag[],\n  /*...*/\n}\n\nTag: {\n  id,\n  name,\n}\n</code></pre></div>",
          "createdAt": "2022-08-11T17:16:05Z"
        }
      ]
    }
  },
  {
    "title": "How to get relationship field's targeted collection in Admin UI",
    "body": "<p dir=\"auto\">Hi everyone,<br>\nCurrently I'm trying to explore developing plugin in Payload to add UI fields on multiple collections. When going into specific collection in admin, it's possible to get other fields' value using useWatchForm(). But (1-1) relationship field only return id of the referred doc, without knowing where it's come from. Is there any way to get this done?</p>\n<p dir=\"auto\">The only work around I found currently is all relationship field change to multiple:<br>\nrelationTo: 'targetCollection'   =&gt;   relationTo: ['targetCollection']<br>\nhence the value the field will change from id only to {value: id, relationTo: 'targetCollection'} But this kind of adding unnecessary data in the collection.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/891",
    "id": "891",
    "createdAt": "2022-08-04T19:17:26Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "khakimvinh",
      "avatar": "https://avatars.githubusercontent.com/u/24789737?v=4",
      "url": "https://github.com/khakimvinh"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/khakimvinh/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/khakimvinh\">@khakimvinh</a> — I'm following what you are looking to do.</p>\n<p dir=\"auto\">I would avoid changing the fields to multiple like you said, because like you noticed, that <em><strong>changes the shape of the data</strong></em>. You probably want your plugin to handle <a href=\"https://payloadcms.com/docs/fields/relationship#how-the-data-is-saved\" rel=\"nofollow\">all four types of relationship field data</a>.</p>\n<p dir=\"auto\">You can access the config for the collection you're working in, and find the relevant field that corresponds to the field that you're interacting with.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// import the hook\nimport { useConfig } from 'payload/components/utilities';\n\n// use it in your React component\nconst config = useConfig();\"><pre class=\"notranslate\"><span class=\"pl-c\">// import the hook</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">useConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/utilities'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// use it in your React component</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">config</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useConfig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Could you do that? To find the field recursively, you would need to parse the field's <code class=\"notranslate\">path</code> that you are trying to work with. For example, top-level relationship fields like <code class=\"notranslate\">myRelationshipField</code> would just have a path like that - <code class=\"notranslate\">myRelationshipField</code>.</p>\n<p dir=\"auto\">But, nested fields, like say one within an array, would have a path like <code class=\"notranslate\">someArrayField.0.myRelationshipField</code>. And you'd need to take that path, and then traverse the collection config to find the field config itself. Then you could access the <code class=\"notranslate\">relationTo</code>.</p>\n<p dir=\"auto\">Does that make sense?</p>",
        "createdAt": "2022-08-04T20:19:38Z",
        "replies": [
          {
            "author": {
              "name": "khakimvinh",
              "avatar": "https://avatars.githubusercontent.com/u/24789737?v=4",
              "url": "https://github.com/khakimvinh"
            },
            "body": "<p dir=\"auto\">Thanks a lot! I end up looking around and found useDocumentInfo() in utilities, which is exactly what I need. This hook return current active collection, with that the rest is all good! Also, I would suggest adding these amazing hooks into the current Payload doc.</p>",
            "createdAt": "2022-08-04T21:29:12Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/khakimvinh/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/khakimvinh\">@khakimvinh</a> — I'm following what you are looking to do.</p>\n<p dir=\"auto\">I would avoid changing the fields to multiple like you said, because like you noticed, that <em><strong>changes the shape of the data</strong></em>. You probably want your plugin to handle <a href=\"https://payloadcms.com/docs/fields/relationship#how-the-data-is-saved\" rel=\"nofollow\">all four types of relationship field data</a>.</p>\n<p dir=\"auto\">You can access the config for the collection you're working in, and find the relevant field that corresponds to the field that you're interacting with.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// import the hook\nimport { useConfig } from 'payload/components/utilities';\n\n// use it in your React component\nconst config = useConfig();\"><pre class=\"notranslate\"><span class=\"pl-c\">// import the hook</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">useConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/utilities'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// use it in your React component</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">config</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useConfig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Could you do that? To find the field recursively, you would need to parse the field's <code class=\"notranslate\">path</code> that you are trying to work with. For example, top-level relationship fields like <code class=\"notranslate\">myRelationshipField</code> would just have a path like that - <code class=\"notranslate\">myRelationshipField</code>.</p>\n<p dir=\"auto\">But, nested fields, like say one within an array, would have a path like <code class=\"notranslate\">someArrayField.0.myRelationshipField</code>. And you'd need to take that path, and then traverse the collection config to find the field config itself. Then you could access the <code class=\"notranslate\">relationTo</code>.</p>\n<p dir=\"auto\">Does that make sense?</p>",
      "createdAt": "2022-08-04T20:19:38Z",
      "chosenAt": "2022-08-04T21:29:14Z",
      "chosenBy": "khakimvinh",
      "replies": [
        {
          "author": {
            "name": "khakimvinh",
            "avatar": "https://avatars.githubusercontent.com/u/24789737?v=4",
            "url": "https://github.com/khakimvinh"
          },
          "body": "<p dir=\"auto\">Thanks a lot! I end up looking around and found useDocumentInfo() in utilities, which is exactly what I need. This hook return current active collection, with that the rest is all good! Also, I would suggest adding these amazing hooks into the current Payload doc.</p>",
          "createdAt": "2022-08-04T21:29:12Z"
        }
      ]
    }
  },
  {
    "title": "Does the payload support space?",
    "body": "<p dir=\"auto\">just like: <a href=\"https://www.contentful.com/help/spaces-and-organizations/\" rel=\"nofollow\">https://www.contentful.com/help/spaces-and-organizations/</a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/869",
    "id": "869",
    "createdAt": "2022-08-02T15:24:02Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "zhounewz",
      "avatar": "https://avatars.githubusercontent.com/u/16400882?u=0b9839b373d35997a96ca00f71550153d6c8d945&v=4",
      "url": "https://github.com/zhounewz"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Interesting! Can you explain your use-case for something like this?</p>\n<p dir=\"auto\">Payload has open ended user models and access control for you to define for your own needs. As you're able to do this on a per-project basis I'm not sure how it fits into the core product. It seems like a candidate for some kind of plugin, at least that is my initial reaction without any context.</p>",
        "createdAt": "2022-08-02T15:52:31Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Interesting! Can you explain your use-case for something like this?</p>\n<p dir=\"auto\">Payload has open ended user models and access control for you to define for your own needs. As you're able to do this on a per-project basis I'm not sure how it fits into the core product. It seems like a candidate for some kind of plugin, at least that is my initial reaction without any context.</p>",
      "createdAt": "2022-08-02T15:52:31Z",
      "chosenAt": "2022-08-03T01:25:56Z",
      "chosenBy": "zhounewz",
      "replies": null
    }
  },
  {
    "title": "Production deploy gives 404  on /admin (not on /api)",
    "body": "<p dir=\"auto\">Hey guys,</p>\n<p dir=\"auto\">So I've setup payload to run over <a href=\"https://domainx.dev\" rel=\"nofollow\">https://domainx.dev</a> through an nginx proxy.<br>\nIn my .env (ecosystem.config.js) I've got <code class=\"notranslate\">\"SERVER_URL\": \"https://domainx.dev\",</code>.<br>\nIn nginx I'm doing <code class=\"notranslate\">proxy_pass http://localhost:3000;</code></p>\n<p dir=\"auto\">When I got to <code class=\"notranslate\">https://domainx.dev/api/pages</code> I get a result, but when I go to <code class=\"notranslate\">https://domainx.dev/admin</code> I get <code class=\"notranslate\">Cannot GET /admin</code>.<br>\nThis does work without production mode.</p>\n<p dir=\"auto\">Any tips? I'm slowly giving up hope <g-emoji class=\"g-emoji\" alias=\"exploding_head\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f92f.png\">🤯</g-emoji></p>",
    "url": "https://github.com/payloadcms/payload/discussions/860",
    "id": "860",
    "createdAt": "2022-08-01T17:55:15Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "falko100",
      "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
      "url": "https://github.com/falko100"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/falko100/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/falko100\">@falko100</a> —</p>\n<p dir=\"auto\">Looks like there is a similar discussion <a href=\"https://github.com/payloadcms/payload/discussions/828\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/828/hovercard\">here</a>.</p>\n<p dir=\"auto\">Here's what a typical NGINX config looks like when we deploy to production:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"server {\n  index index.html;\n\n  server_name mywebsite.com;\n\n  location / {\n    proxy_pass http://localhost:1337;\n    proxy_http_version 1.1;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection 'upgrade';\n    proxy_set_header Host $host;\n    proxy_cache_bypass $http_upgrade;\n    proxy_set_header X-Forwarded-For $remote_addr;\n  }\n\n  listen 443 ssl; # managed by Certbot\n  ssl_certificate /etc/letsencrypt/live/mywebsite.com/fullchain.pem; # managed by Certbot\n  ssl_certificate_key /etc/letsencrypt/live/mywebsite.com/privkey.pem; # managed by Certbot\n  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\n  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\n}\n\nserver {\n  if ($host = mywebsite.com) {\n      return 301 https://$host$request_uri;\n  } # managed by Certbot\n\n  listen 80;\n\n  server_name mywebsite.com;\n  return 404; # managed by Certbot\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">server {\n  index index.html;\n\n  server_name mywebsite.com;\n\n  location / {\n    proxy_pass http://localhost:1337;\n    proxy_http_version 1.1;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection 'upgrade';\n    proxy_set_header Host $host;\n    proxy_cache_bypass $http_upgrade;\n    proxy_set_header X-Forwarded-For $remote_addr;\n  }\n\n  listen 443 ssl; # managed by Certbot\n  ssl_certificate /etc/letsencrypt/live/mywebsite.com/fullchain.pem; # managed by Certbot\n  ssl_certificate_key /etc/letsencrypt/live/mywebsite.com/privkey.pem; # managed by Certbot\n  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\n  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\n}\n\nserver {\n  if ($host = mywebsite.com) {\n      return 301 https://$host$request_uri;\n  } # managed by Certbot\n\n  listen 80;\n\n  server_name mywebsite.com;\n  return 404; # managed by Certbot\n}\n</code></pre></div>\n<p dir=\"auto\">One thing you could try is naming your <code class=\"notranslate\">SERVER_URL</code> environment variable to <code class=\"notranslate\">PAYLOAD_PUBLIC_SERVER_URL</code>. By default, Payload does not expose ANY environment variables to the admin panel for security reasons. Instead, we only expose variables prefixed with <code class=\"notranslate\">PAYLOAD_PUBLIC_</code>. <a href=\"https://payloadcms.com/docs/configuration/overview#using-environment-variables-in-your-config\" rel=\"nofollow\">Here are some docs about this</a>.</p>\n<p dir=\"auto\">I'm not sure, but if your NGINX config looks similar to ours, maybe your SERVER_URL has something to do with your issue.</p>\n<p dir=\"auto\">Last thing I'd check: can you serve in production locally? Like, running <code class=\"notranslate\">build</code> and then serving locally? You may be having a Webpack error, where your admin panel is not successfully building. That would cause an /admin 404. You need to have successfully run <code class=\"notranslate\">yarn build</code> or similar before you can serve in production.</p>\n<p dir=\"auto\">We'll figure it out!</p>",
        "createdAt": "2022-08-01T18:11:41Z",
        "replies": [
          {
            "author": {
              "name": "falko100",
              "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
              "url": "https://github.com/falko100"
            },
            "body": "<p dir=\"auto\">Thanks for the quick reply. The main problem is that for some reason the admin panel route is secured in production mode. All other environment variables are send to my process.</p>\n<p dir=\"auto\">We are running payload on 3000 and Nuxt on 8080.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"server {\n    server_name dtm.coddin.dev;\n\n    location ~* /(cms|api|admin|__webpack_hmr|media) {\n        proxy_pass http://localhost:3000;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-For $remote_addr;\n        proxy_cache_bypass $http_upgrade;\n    }\n\n    location / {\n        proxy_pass http://localhost:8080;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n\n    listen 443 ssl; # managed by Certbot\n    ssl_certificate /etc/letsencrypt/live/dtm.coddin.dev/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/dtm.coddin.dev/privkey.pem; # managed by Certbot\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\n\n}\n\nserver {\n    if ($host = dtm.coddin.dev) {\n        return 301 https://$host$request_uri;\n    } # managed by Certbot\n\n\n    listen 80;\n    server_name dtm.coddin.dev;\n    return 404; # managed by Certbot\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">server {\n    server_name dtm.coddin.dev;\n\n    location ~* /(cms|api|admin|__webpack_hmr|media) {\n        proxy_pass http://localhost:3000;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-For $remote_addr;\n        proxy_cache_bypass $http_upgrade;\n    }\n\n    location / {\n        proxy_pass http://localhost:8080;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n\n    listen 443 ssl; # managed by Certbot\n    ssl_certificate /etc/letsencrypt/live/dtm.coddin.dev/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/dtm.coddin.dev/privkey.pem; # managed by Certbot\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\n\n}\n\nserver {\n    if ($host = dtm.coddin.dev) {\n        return 301 https://$host$request_uri;\n    } # managed by Certbot\n\n\n    listen 80;\n    server_name dtm.coddin.dev;\n    return 404; # managed by Certbot\n}\n</code></pre></div>\n<p dir=\"auto\">Here is my pm2 config;</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"module.exports = {\n  apps : [\n      {\n        name: &quot;frontend&quot;,\n        script: &quot;./.output/server/index.mjs&quot;,\n        cwd: &quot;./frontend&quot;,\n        watch: true,\n        env: {\n          &quot;NODE_ENV&quot;: &quot;production&quot;,\n          &quot;PORT&quot;: 8080,\n          &quot;NITRO_PORT&quot;: 8080,\n          &quot;API_BASE_URL&quot;: &quot;https://dtm.coddin.dev/api/&quot;\n        }\n      },\n      {\n        name: &quot;backend&quot;,\n        script: &quot;./server.js&quot;,\n        cwd: &quot;./backend/dist&quot;,\n        watch: true,\n        env: {\n          &quot;NODE_ENV&quot;: &quot;production&quot;,\n          &quot;PORT&quot;: 3000,\n          &quot;MONGODB_URI&quot;: &quot;insert_correct_connection_url_here&quot;,\n          &quot;PAYLOAD_SECRET&quot;: &quot;I'm not gonna tell you my secret&quot;,\n          &quot;SERVER_URL&quot;: &quot;https://dtm.coddin.dev&quot;,\n          &quot;PAYLOAD_PUBLIC_SERVER_URL&quot;: &quot;https://dtm.coddin.dev&quot;,\n          &quot;FRONTEND_URL&quot;: &quot;https://dtm.coddin.dev&quot;,\n          &quot;SMTP_HOST&quot;: &quot;secret.hostname&quot;,\n          &quot;SMTP_USER&quot;: &quot;username&quot;,\n          &quot;SMTP_PASS&quot;: &quot;ssssh&quot;,\n          &quot;SMTP_PORT&quot;: 1337\n        }\n      },\n  ]\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">module.exports = {\n  apps : [\n      {\n        name: \"frontend\",\n        script: \"./.output/server/index.mjs\",\n        cwd: \"./frontend\",\n        watch: true,\n        env: {\n          \"NODE_ENV\": \"production\",\n          \"PORT\": 8080,\n          \"NITRO_PORT\": 8080,\n          \"API_BASE_URL\": \"https://dtm.coddin.dev/api/\"\n        }\n      },\n      {\n        name: \"backend\",\n        script: \"./server.js\",\n        cwd: \"./backend/dist\",\n        watch: true,\n        env: {\n          \"NODE_ENV\": \"production\",\n          \"PORT\": 3000,\n          \"MONGODB_URI\": \"insert_correct_connection_url_here\",\n          \"PAYLOAD_SECRET\": \"I'm not gonna tell you my secret\",\n          \"SERVER_URL\": \"https://dtm.coddin.dev\",\n          \"PAYLOAD_PUBLIC_SERVER_URL\": \"https://dtm.coddin.dev\",\n          \"FRONTEND_URL\": \"https://dtm.coddin.dev\",\n          \"SMTP_HOST\": \"secret.hostname\",\n          \"SMTP_USER\": \"username\",\n          \"SMTP_PASS\": \"ssssh\",\n          \"SMTP_PORT\": 1337\n        }\n      },\n  ]\n}\n</code></pre></div>",
            "createdAt": "2022-08-01T18:35:54Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Have you ensured that you have built before serving in production? Do you have a <code class=\"notranslate\">./build</code> folder on the server, with a properly built admin panel, including an <code class=\"notranslate\">index.html</code> file in it?</p>",
            "createdAt": "2022-08-01T18:49:25Z"
          },
          {
            "author": {
              "name": "falko100",
              "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
              "url": "https://github.com/falko100"
            },
            "body": "<p dir=\"auto\">I just checked. There is a build folder with an <code class=\"notranslate\">index.html</code> and a lot of <code class=\"notranslate\">.js</code> an <code class=\"notranslate\">.woff</code> files.<br>\nRunning the same server <code class=\"notranslate\">cd dist &amp;&amp; node server.js</code> without <code class=\"notranslate\">NODE_ENV=production</code> the admin panel works.</p>",
            "createdAt": "2022-08-01T18:54:17Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">OK. Can you rule out this being an NGINX config issue by just commenting out your entire Nuxt server block, and setting your first Payload location block like this?</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  location / {\n    // block config here\n  }\"><pre class=\"notranslate\"><code class=\"notranslate\">  location / {\n    // block config here\n  }\n</code></pre></div>",
            "createdAt": "2022-08-01T19:44:02Z"
          },
          {
            "author": {
              "name": "falko100",
              "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
              "url": "https://github.com/falko100"
            },
            "body": "<p dir=\"auto\">I'm sure sure. I have the same problem locally.<br>\nI'm gonna try with a clean payload install. Hold up <g-emoji class=\"g-emoji\" alias=\"grin\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f601.png\">😁</g-emoji></p>",
            "createdAt": "2022-08-01T19:48:51Z"
          },
          {
            "author": {
              "name": "falko100",
              "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
              "url": "https://github.com/falko100"
            },
            "body": "<p dir=\"auto\">Steps to reproduce:</p>\n<ol dir=\"auto\">\n<li><code class=\"notranslate\">$ npx create-payload-app</code></li>\n<li><code class=\"notranslate\">$ cd prod-test</code></li>\n<li><code class=\"notranslate\">$ yarn build</code></li>\n<li><code class=\"notranslate\">$ cp .env dist &amp;&amp; cd dist</code></li>\n<li><code class=\"notranslate\">$ NODE_ENV=production node server.js</code></li>\n</ol>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/11974977/182233674-41eacfc3-c15d-49a8-8585-b69c23298fef.png\"><img width=\"326\" alt=\"image\" src=\"https://user-images.githubusercontent.com/11974977/182233674-41eacfc3-c15d-49a8-8585-b69c23298fef.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Works if I run the server with <code class=\"notranslate\">$ node server.js</code></p>",
            "createdAt": "2022-08-01T19:53:34Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Ah, figured it out! Thanks for the steps here.</p>\n<p dir=\"auto\">To determine where the <code class=\"notranslate\">build</code> files are, we are currently doing the following:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"path.resolve(process.cwd(), 'build')\"><pre class=\"notranslate\"><span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">cwd</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'build'</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">In your case, you're running the server in production directly from the <code class=\"notranslate\">dist</code> folder rather than from an npm script or similar from the root folder. This also causes you to need to duplicate your <code class=\"notranslate\">.env</code> file to the <code class=\"notranslate\">dist</code> folder when normally you shouldn't need to do that.</p>\n<p dir=\"auto\">I think what we can do is improve the way that we are finding the <code class=\"notranslate\">build</code> folder, rather than relying on <code class=\"notranslate\">process.cwd()</code> like that, which will make this more bulletproof. But in the meantime, you could adjust your <code class=\"notranslate\">pm2</code> script to execute using the <code class=\"notranslate\">cwd</code> set to the root of the Payload folder. That will solve this!</p>",
            "createdAt": "2022-08-01T20:13:20Z"
          },
          {
            "author": {
              "name": "falko100",
              "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
              "url": "https://github.com/falko100"
            },
            "body": "<p dir=\"auto\">Ahh ok. I can do that, but then I get an error that the <code class=\"notranslate\">payload.config.js</code> is missing.</p>",
            "createdAt": "2022-08-01T20:35:12Z"
          },
          {
            "author": {
              "name": "falko100",
              "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
              "url": "https://github.com/falko100"
            },
            "body": "<p dir=\"auto\">Steps to reproduce:</p>\n<p dir=\"auto\">$ npx create-payload-app<br>\n$ cd prod-test<br>\n$ yarn build<br>\n$ NODE_ENV=production node dist/server.js</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/11974977/182247829-ac7b9577-9c53-48d5-a971-10762b8e8a68.png\"><img width=\"1395\" alt=\"image\" src=\"https://user-images.githubusercontent.com/11974977/182247829-ac7b9577-9c53-48d5-a971-10762b8e8a68.png\" style=\"max-width: 100%;\"></a></p>",
            "createdAt": "2022-08-01T21:15:19Z"
          },
          {
            "author": {
              "name": "falko100",
              "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
              "url": "https://github.com/falko100"
            },
            "body": "<p dir=\"auto\">This can be solved by adding environment variable; PAYLOAD_CONFIG_PATH=dist/payload.config.js<br>\nServer works great now. Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> for the help (and the amazing CMS, love it! <g-emoji class=\"g-emoji\" alias=\"heart\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2764.png\">❤️</g-emoji>)</p>",
            "createdAt": "2022-08-01T21:29:10Z"
          }
        ]
      },
      {
        "author": {
          "name": "falko100",
          "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
          "url": "https://github.com/falko100"
        },
        "body": "<p dir=\"auto\">Answered by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>.<br>\nA new problem arised, but the initial problem is resolved.</p>\n<blockquote>\n<p dir=\"auto\">Ah, figured it out! Thanks for the steps here.</p>\n<p dir=\"auto\">To determine where the <code class=\"notranslate\">build</code> files are, we are currently doing the following:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"path.resolve(process.cwd(), 'build')\"><pre class=\"notranslate\"><span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">cwd</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'build'</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">In your case, you're running the server in production directly from the <code class=\"notranslate\">dist</code> folder rather than from an npm script or similar from the root folder. This also causes you to need to duplicate your <code class=\"notranslate\">.env</code> file to the <code class=\"notranslate\">dist</code> folder when normally you shouldn't need to do that.</p>\n<p dir=\"auto\">I think what we can do is improve the way that we are finding the <code class=\"notranslate\">build</code> folder, rather than relying on <code class=\"notranslate\">process.cwd()</code> like that, which will make this more bulletproof. But in the meantime, you could adjust your <code class=\"notranslate\">pm2</code> script to execute using the <code class=\"notranslate\">cwd</code> set to the root of the Payload folder. That will solve this!</p>\n</blockquote>",
        "createdAt": "2022-08-01T21:19:05Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "falko100",
        "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
        "url": "https://github.com/falko100"
      },
      "body": "<p dir=\"auto\">Answered by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>.<br>\nA new problem arised, but the initial problem is resolved.</p>\n<blockquote>\n<p dir=\"auto\">Ah, figured it out! Thanks for the steps here.</p>\n<p dir=\"auto\">To determine where the <code class=\"notranslate\">build</code> files are, we are currently doing the following:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"path.resolve(process.cwd(), 'build')\"><pre class=\"notranslate\"><span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">cwd</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'build'</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">In your case, you're running the server in production directly from the <code class=\"notranslate\">dist</code> folder rather than from an npm script or similar from the root folder. This also causes you to need to duplicate your <code class=\"notranslate\">.env</code> file to the <code class=\"notranslate\">dist</code> folder when normally you shouldn't need to do that.</p>\n<p dir=\"auto\">I think what we can do is improve the way that we are finding the <code class=\"notranslate\">build</code> folder, rather than relying on <code class=\"notranslate\">process.cwd()</code> like that, which will make this more bulletproof. But in the meantime, you could adjust your <code class=\"notranslate\">pm2</code> script to execute using the <code class=\"notranslate\">cwd</code> set to the root of the Payload folder. That will solve this!</p>\n</blockquote>",
      "createdAt": "2022-08-01T21:19:05Z",
      "chosenAt": "2022-08-01T21:19:08Z",
      "chosenBy": "falko100",
      "replies": null
    }
  },
  {
    "title": "email field randomly not loaded in Edit mode after changing languages",
    "body": "<p dir=\"auto\">Hi everyone,<br>\nI found that the email field sometime randomly not loaded when get in Edit mode of User collection.<br>\nWhen I'm at Edit view of a user, changing language make the field blank. Go back out to the list and get back in doesn't help.</p>\n<video src=\"https://user-images.githubusercontent.com/24789737/180661975-7bb45378-7785-4ebe-b037-f6f09c7e37ad.mp4\" data-canonical-src=\"https://user-images.githubusercontent.com/24789737/180661975-7bb45378-7785-4ebe-b037-f6f09c7e37ad.mp4\" controls=\"controls\" muted=\"muted\" class=\"d-block rounded-bottom-2 border-top width-fit\" style=\"max-height:640px; min-height: 200px\">\n\n  </video>\n<p dir=\"auto\">This happens on both demo (<a href=\"https://demo.payloadcms.com/\" rel=\"nofollow\">https://demo.payloadcms.com/</a>) and my local running repo. I also tried both Chrome and Firefox both behave the same. Any ideas?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/801",
    "id": "801",
    "createdAt": "2022-07-24T01:39:08Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "khakimvinh",
      "avatar": "https://avatars.githubusercontent.com/u/24789737?v=4",
      "url": "https://github.com/khakimvinh"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/khakimvinh/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/khakimvinh\">@khakimvinh</a> — I'm going to personally check into this one today.</p>\n<p dir=\"auto\">Thanks for the report!</p>",
        "createdAt": "2022-07-25T14:30:59Z",
        "replies": [
          {
            "author": {
              "name": "khakimvinh",
              "avatar": "https://avatars.githubusercontent.com/u/24789737?v=4",
              "url": "https://github.com/khakimvinh"
            },
            "body": "<p dir=\"auto\">hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> , thanks for looking into this, may I ask if any updates? I don't mean to push or anything, just want to know if there's any work around for this issue, as I also found the same behavior on some other fields in the personal profile page...</p>",
            "createdAt": "2022-08-01T04:45:03Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/khakimvinh/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/khakimvinh\">@khakimvinh</a> — this is fixed and released in <code class=\"notranslate\">1.0.10</code>!</p>",
            "createdAt": "2022-08-01T12:04:25Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/khakimvinh/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/khakimvinh\">@khakimvinh</a> — I'm going to personally check into this one today.</p>\n<p dir=\"auto\">Thanks for the report!</p>",
      "createdAt": "2022-07-25T14:30:59Z",
      "chosenAt": "2022-08-01T15:45:47Z",
      "chosenBy": "khakimvinh",
      "replies": [
        {
          "author": {
            "name": "khakimvinh",
            "avatar": "https://avatars.githubusercontent.com/u/24789737?v=4",
            "url": "https://github.com/khakimvinh"
          },
          "body": "<p dir=\"auto\">hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> , thanks for looking into this, may I ask if any updates? I don't mean to push or anything, just want to know if there's any work around for this issue, as I also found the same behavior on some other fields in the personal profile page...</p>",
          "createdAt": "2022-08-01T04:45:03Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/khakimvinh/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/khakimvinh\">@khakimvinh</a> — this is fixed and released in <code class=\"notranslate\">1.0.10</code>!</p>",
          "createdAt": "2022-08-01T12:04:25Z"
        }
      ]
    }
  },
  {
    "title": "How to organize data for pages with different designs?",
    "body": "<p dir=\"auto\">If I'm making a blog, it's obvious that I need a Post collection, where each document represents a single article.</p>\n<p dir=\"auto\">But what if I'm making a general-purpose marketing site where I have a few different pages that all have different designs and therefore need different fields for content? These solutions pop in my mind:</p>\n<ol dir=\"auto\">\n<li>Have a separate collection for each page.</li>\n<li>Have a single Pages collection. In this case, I don't see how each page would have different fields.</li>\n<li>Use the Global and specify each page as an object inside. That just sounds wrong.</li>\n</ol>\n<p dir=\"auto\">The first approach seems the most rational, but what bothers me is that I'd have a <em>collection</em> with just a <em>single</em> document inside. Kind of like the Global collection. Does that make sense? Or there's a better way?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/832",
    "id": "832",
    "createdAt": "2022-07-27T11:36:34Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "hdodov",
      "avatar": "https://avatars.githubusercontent.com/u/5570098?u=99fa010aba0ab1241292d2c35ba4c5c30699291b&v=4",
      "url": "https://github.com/hdodov"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Great question! I would head on over to the demo.payloadcms.com example and see if that accomplishes what you want. On the pages collection there is a design templating approach that is very flexible by giving content authors a choice of different layouts and using content blocks to make pages that are very composable.</p>\n<p dir=\"auto\">All the source code for the project is available too so take what you like and delete or modify the rest. It is found at <a href=\"https://gitbub.com/payloadcms/public-demo\" rel=\"nofollow\">https://gitbub.com/payloadcms/public-demo</a></p>\n<p dir=\"auto\">Does that help?</p>",
        "createdAt": "2022-07-27T12:02:44Z",
        "replies": [
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">You could also consider making a field in the pages collection called <code class=\"notranslate\">design</code> as a select or radio type. Then use the conditional properties so that your design specific fields are only used when needed.<br>\nThat would be a good approach if you don't want to give as much editor control as the public-demo has.</p>",
            "createdAt": "2022-07-27T15:34:37Z"
          },
          {
            "author": {
              "name": "hdodov",
              "avatar": "https://avatars.githubusercontent.com/u/5570098?u=99fa010aba0ab1241292d2c35ba4c5c30699291b&v=4",
              "url": "https://github.com/hdodov"
            },
            "body": "<p dir=\"auto\">Sounds great, thanks!</p>",
            "createdAt": "2022-07-27T19:02:51Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Great question! I would head on over to the demo.payloadcms.com example and see if that accomplishes what you want. On the pages collection there is a design templating approach that is very flexible by giving content authors a choice of different layouts and using content blocks to make pages that are very composable.</p>\n<p dir=\"auto\">All the source code for the project is available too so take what you like and delete or modify the rest. It is found at <a href=\"https://gitbub.com/payloadcms/public-demo\" rel=\"nofollow\">https://gitbub.com/payloadcms/public-demo</a></p>\n<p dir=\"auto\">Does that help?</p>",
      "createdAt": "2022-07-27T12:02:44Z",
      "chosenAt": "2022-07-27T19:02:53Z",
      "chosenBy": "hdodov",
      "replies": [
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">You could also consider making a field in the pages collection called <code class=\"notranslate\">design</code> as a select or radio type. Then use the conditional properties so that your design specific fields are only used when needed.<br>\nThat would be a good approach if you don't want to give as much editor control as the public-demo has.</p>",
          "createdAt": "2022-07-27T15:34:37Z"
        },
        {
          "author": {
            "name": "hdodov",
            "avatar": "https://avatars.githubusercontent.com/u/5570098?u=99fa010aba0ab1241292d2c35ba4c5c30699291b&v=4",
            "url": "https://github.com/hdodov"
          },
          "body": "<p dir=\"auto\">Sounds great, thanks!</p>",
          "createdAt": "2022-07-27T19:02:51Z"
        }
      ]
    }
  },
  {
    "title": "Payload CMS with NGINX in Production with HTTPS",
    "body": "<p dir=\"auto\">I have followed all of the steps in the Digital Ocean guide and have updated my <code class=\"notranslate\">serverURL</code> but I am still getting a 404 when I attempt to route <code class=\"notranslate\">/admin</code></p>\n<p dir=\"auto\">I have set up nginx and certbot with letsencrypt, but I cannot access the frontend admin pannel.  Thanks for all your help!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/828",
    "id": "828",
    "createdAt": "2022-07-26T10:00:16Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "xr71",
      "avatar": "https://avatars.githubusercontent.com/u/7232592?u=5a8afc7639468445ddb99a18087d445de8c5a78a&v=4",
      "url": "https://github.com/xr71"
    },
    "comments": [
      {
        "author": {
          "name": "MinSomai",
          "avatar": "https://avatars.githubusercontent.com/u/21338691?u=c2be75f889472dcfd6f5dedaacaba2a34046ed06&v=4",
          "url": "https://github.com/MinSomai"
        },
        "body": "<p dir=\"auto\">can you post your nginx conf. if possible.</p>",
        "createdAt": "2022-07-26T11:12:49Z",
        "replies": null
      },
      {
        "author": {
          "name": "xr71",
          "avatar": "https://avatars.githubusercontent.com/u/7232592?u=5a8afc7639468445ddb99a18087d445de8c5a78a&v=4",
          "url": "https://github.com/xr71"
        },
        "body": "<p dir=\"auto\">Sorry, dumb mistake, just fixed it; I had to add the proxy block in nginx.conf for /admin to pass to localhost:3000/admin.  Thanks!</p>",
        "createdAt": "2022-07-27T03:21:51Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "xr71",
        "avatar": "https://avatars.githubusercontent.com/u/7232592?u=5a8afc7639468445ddb99a18087d445de8c5a78a&v=4",
        "url": "https://github.com/xr71"
      },
      "body": "<p dir=\"auto\">Sorry, dumb mistake, just fixed it; I had to add the proxy block in nginx.conf for /admin to pass to localhost:3000/admin.  Thanks!</p>",
      "createdAt": "2022-07-27T03:21:51Z",
      "chosenAt": "2022-07-27T03:21:54Z",
      "chosenBy": "xr71",
      "replies": null
    }
  },
  {
    "title": "Media Upload",
    "body": "<p dir=\"auto\">How can I add Media(image, video, etc) in Post Collection</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const Posts = {\n  slug: 'posts',\n  admin: {\n    defaultColumns: ['title', 'author', 'category', 'tags', 'status'],\n    useAsTitle: 'title',\n  },\n  access: {\n    read: () =&gt; true,\n  },\n  fields: [\n    {\n      name: 'title',\n      type: 'text',\n    },\n    {\n      name: 'author',\n      type: 'relationship',\n      relationTo: 'users',\n    },\n    {\n      name: 'publishedDate',\n      type: 'date',\n    },\n    {\n      name: 'category',\n      type: 'relationship',\n      relationTo: 'categories'\n    },\n\n    {\n      name: 'tags',\n      type: 'relationship',\n      relationTo: 'tags',\n      hasMany: true,\n    },\n    {\n      name: 'content',\n      type: 'richText'\n    },\n    {\n      name: 'status',\n      type: 'select',\n      options: [\n        {\n          value: 'draft',\n          label: 'Draft',\n        },\n        {\n          value: 'published',\n          label: 'Published',\n        },\n      ],\n      defaultValue: 'draft',\n      admin: {\n        position: 'sidebar',\n      }\n    }\n  ],\n}\n\nexport default Posts;\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-v\">Posts</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'posts'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">defaultColumns</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'title'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'author'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'category'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'tags'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'status'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'title'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'title'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'author'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'users'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'publishedDate'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'date'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'category'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'categories'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'tags'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'tags'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">hasMany</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'content'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'richText'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'status'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'select'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">[</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">value</span>: <span class=\"pl-s\">'draft'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Draft'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">value</span>: <span class=\"pl-s\">'published'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Published'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">defaultValue</span>: <span class=\"pl-s\">'draft'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">position</span>: <span class=\"pl-s\">'sidebar'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-v\">Posts</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Preview<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/c1d644e2b1d3cd33b84bae7abc21f33e74463b990566f1dfeb4170b4bc45293a/68747470733a2f2f692e6962622e636f2f5774747357686d2f53637265656e73686f742d322e706e67\"><img src=\"https://camo.githubusercontent.com/c1d644e2b1d3cd33b84bae7abc21f33e74463b990566f1dfeb4170b4bc45293a/68747470733a2f2f692e6962622e636f2f5774747357686d2f53637265656e73686f742d322e706e67\" alt=\"screenshot\" data-canonical-src=\"https://i.ibb.co/WttsWhm/Screenshot-2.png\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/827",
    "id": "827",
    "createdAt": "2022-07-26T05:26:13Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "momin-riyadh",
      "avatar": "https://avatars.githubusercontent.com/u/8707777?u=3e55bcb0700d0462fc93681d20db62823d506923&v=4",
      "url": "https://github.com/momin-riyadh"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">You can do this by adding a relationship field with <code class=\"notranslate\">relationTo</code> to your media collection's slug like this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  name: 'image',\n  type: 'upload',\n  required: true,\n  relationTo: 'media',\n},\"><pre class=\"notranslate\"><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'image'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'upload'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'media'</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">More info in the docs on the <a href=\"https://payloadcms.com/docs/fields/relationship\" rel=\"nofollow\">relationship</a> and <a href=\"https://payloadcms.com/docs/upload/overview\" rel=\"nofollow\">upload</a> pages.</p>",
        "createdAt": "2022-07-26T12:03:46Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">You can do this by adding a relationship field with <code class=\"notranslate\">relationTo</code> to your media collection's slug like this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  name: 'image',\n  type: 'upload',\n  required: true,\n  relationTo: 'media',\n},\"><pre class=\"notranslate\"><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'image'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'upload'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'media'</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">More info in the docs on the <a href=\"https://payloadcms.com/docs/fields/relationship\" rel=\"nofollow\">relationship</a> and <a href=\"https://payloadcms.com/docs/upload/overview\" rel=\"nofollow\">upload</a> pages.</p>",
      "createdAt": "2022-07-26T12:03:46Z",
      "chosenAt": "2022-07-26T12:03:49Z",
      "chosenBy": "denolfe",
      "replies": null
    }
  },
  {
    "title": "Media Upload Feature",
    "body": "<p dir=\"auto\">For publishing blog posts, we should need to add the MEDIA (image, video, sound, etc) feature in a text editor</p>",
    "url": "https://github.com/payloadcms/payload/discussions/826",
    "id": "826",
    "createdAt": "2022-07-26T03:46:37Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "momin-riyadh",
      "avatar": "https://avatars.githubusercontent.com/u/8707777?u=3e55bcb0700d0462fc93681d20db62823d506923&v=4",
      "url": "https://github.com/momin-riyadh"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/momin-riyadh/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/momin-riyadh\">@momin-riyadh</a> , if I'm understanding you correctly - this is already possible. In your blog post collection, you can make the relationship field to your media required by adding <code class=\"notranslate\">required: true</code> like this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  name: 'image',\n  type: 'upload',\n  required: true, // Add this\n  relationTo: 'media',\n},\"><pre class=\"notranslate\"><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'image'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'upload'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// Add this</span>\n  <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'media'</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>",
        "createdAt": "2022-07-26T03:53:48Z",
        "replies": [
          {
            "author": {
              "name": "momin-riyadh",
              "avatar": "https://avatars.githubusercontent.com/u/8707777?u=3e55bcb0700d0462fc93681d20db62823d506923&v=4",
              "url": "https://github.com/momin-riyadh"
            },
            "body": "<p dir=\"auto\">Thanks, denolfe! I'm a beginner and exploring</p>",
            "createdAt": "2022-07-26T04:05:44Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/momin-riyadh/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/momin-riyadh\">@momin-riyadh</a> , if I'm understanding you correctly - this is already possible. In your blog post collection, you can make the relationship field to your media required by adding <code class=\"notranslate\">required: true</code> like this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  name: 'image',\n  type: 'upload',\n  required: true, // Add this\n  relationTo: 'media',\n},\"><pre class=\"notranslate\"><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'image'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'upload'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// Add this</span>\n  <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'media'</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>",
      "createdAt": "2022-07-26T03:53:48Z",
      "chosenAt": "2022-07-26T12:00:19Z",
      "chosenBy": "denolfe",
      "replies": [
        {
          "author": {
            "name": "momin-riyadh",
            "avatar": "https://avatars.githubusercontent.com/u/8707777?u=3e55bcb0700d0462fc93681d20db62823d506923&v=4",
            "url": "https://github.com/momin-riyadh"
          },
          "body": "<p dir=\"auto\">Thanks, denolfe! I'm a beginner and exploring</p>",
          "createdAt": "2022-07-26T04:05:44Z"
        }
      ]
    }
  },
  {
    "title": "WordPress like admin panel",
    "body": "<p dir=\"auto\">I'm a Web Front-End Developer who will be responsible for the complete lifecycle of scalable, secure, and well-designed software products from research and design to implementation. I’ll be working closely with designers, analysts, quality assurance, and other teams to translate each design into real-life products.</p>\n<p dir=\"auto\">I'm just exploring payload! Looking for something similar to or better than WP CMS and I'm determined to switch MERN stack.</p>\n<p dir=\"auto\">My question is: Am I implementing payload for all kinds of application admin panels like e-commerce, erp, etc?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/815",
    "id": "815",
    "createdAt": "2022-07-25T11:35:18Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "momin-riyadh",
      "avatar": "https://avatars.githubusercontent.com/u/8707777?u=3e55bcb0700d0462fc93681d20db62823d506923&v=4",
      "url": "https://github.com/momin-riyadh"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/momin-riyadh/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/momin-riyadh\">@momin-riyadh</a> — pumped that you've found us!</p>\n<p dir=\"auto\">Payload can work for any type of app admin panel you can think of. Ecommerce and ERP included.</p>\n<p dir=\"auto\">To-date, a ton of very advanced apps have been built which are powered by Payload:</p>\n<ul dir=\"auto\">\n<li>Uber-like snow plowing service, and another lawncare equivalent is coming out soon</li>\n<li>Virtual events platform</li>\n<li>Video game backend</li>\n<li>Ecommerce sites</li>\n<li>Large, enterprise websites</li>\n<li>Small designer websites</li>\n<li>Assessment tool-style questionnaire which calculates scores and presents them to users</li>\n<li>Broadcast platform</li>\n</ul>\n<p dir=\"auto\">Lots more. You can build anything! It's a perfect replacement for WP.</p>",
        "createdAt": "2022-07-25T14:30:26Z",
        "replies": [
          {
            "author": {
              "name": "momin-riyadh",
              "avatar": "https://avatars.githubusercontent.com/u/8707777?u=3e55bcb0700d0462fc93681d20db62823d506923&v=4",
              "url": "https://github.com/momin-riyadh"
            },
            "body": "<p dir=\"auto\">Good to know! Let's the explore begin. I will be happy to know contribute guidelines and willing to suggest a lot of feature and many more.....</p>\n<p dir=\"auto\">Thanks Payload Teams</p>",
            "createdAt": "2022-07-25T15:49:17Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/momin-riyadh/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/momin-riyadh\">@momin-riyadh</a> — pumped that you've found us!</p>\n<p dir=\"auto\">Payload can work for any type of app admin panel you can think of. Ecommerce and ERP included.</p>\n<p dir=\"auto\">To-date, a ton of very advanced apps have been built which are powered by Payload:</p>\n<ul dir=\"auto\">\n<li>Uber-like snow plowing service, and another lawncare equivalent is coming out soon</li>\n<li>Virtual events platform</li>\n<li>Video game backend</li>\n<li>Ecommerce sites</li>\n<li>Large, enterprise websites</li>\n<li>Small designer websites</li>\n<li>Assessment tool-style questionnaire which calculates scores and presents them to users</li>\n<li>Broadcast platform</li>\n</ul>\n<p dir=\"auto\">Lots more. You can build anything! It's a perfect replacement for WP.</p>",
      "createdAt": "2022-07-25T14:30:26Z",
      "chosenAt": "2022-07-26T12:05:02Z",
      "chosenBy": "denolfe",
      "replies": [
        {
          "author": {
            "name": "momin-riyadh",
            "avatar": "https://avatars.githubusercontent.com/u/8707777?u=3e55bcb0700d0462fc93681d20db62823d506923&v=4",
            "url": "https://github.com/momin-riyadh"
          },
          "body": "<p dir=\"auto\">Good to know! Let's the explore begin. I will be happy to know contribute guidelines and willing to suggest a lot of feature and many more.....</p>\n<p dir=\"auto\">Thanks Payload Teams</p>",
          "createdAt": "2022-07-25T15:49:17Z"
        }
      ]
    }
  },
  {
    "title": "Upload field => hasMany",
    "body": "<p dir=\"auto\">its possible to link upload field type to many media ?<br>\nsuch as :</p>\n<p dir=\"auto\">{<br>\nname:'posters',<br>\ntype:'upload',<br>\nrealtionTo:'media',<br>\nhasMany:true<br>\n}</p>",
    "url": "https://github.com/payloadcms/payload/discussions/803",
    "id": "803",
    "createdAt": "2022-07-24T02:02:11Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "wikoci",
      "avatar": "https://avatars.githubusercontent.com/u/74468439?v=4",
      "url": "https://github.com/wikoci"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">I think this could be better achieved by using an array with the upload field on each row.</p>",
        "createdAt": "2022-07-24T02:23:43Z",
        "replies": null
      },
      {
        "author": {
          "name": "wikoci",
          "avatar": "https://avatars.githubusercontent.com/u/74468439?v=4",
          "url": "https://github.com/wikoci"
        },
        "body": "<p dir=\"auto\">noted.<br>\nAlso I can't upload many files to media collection in one request.</p>",
        "createdAt": "2022-07-24T03:47:12Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">I think this could be better achieved by using an array with the upload field on each row.</p>",
      "createdAt": "2022-07-24T02:23:43Z",
      "chosenAt": "2022-07-24T03:23:49Z",
      "chosenBy": "wikoci",
      "replies": null
    }
  },
  {
    "title": "How to add audit info like createdBy and updatedBy? (similar to createdAt and updatedAt)",
    "body": "<p dir=\"auto\">We want to record info like who created/update the doc<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/179928894-5158d0d9-78a3-4411-8368-e27883d24616.png\"><img src=\"https://user-images.githubusercontent.com/5801015/179928894-5158d0d9-78a3-4411-8368-e27883d24616.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/777",
    "id": "777",
    "createdAt": "2022-07-20T07:58:55Z",
    "upvotes": 3,
    "commentTotal": 2,
    "author": {
      "name": "Stupidism",
      "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
      "url": "https://github.com/Stupidism"
    },
    "comments": [
      {
        "author": {
          "name": "zhounewz",
          "avatar": "https://avatars.githubusercontent.com/u/16400882?u=0b9839b373d35997a96ca00f71550153d6c8d945&v=4",
          "url": "https://github.com/zhounewz"
        },
        "body": "<p dir=\"auto\">same request</p>",
        "createdAt": "2022-07-20T08:30:34Z",
        "replies": null
      },
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Yes, this can be done w/ hooks and access control. Here is an example collection:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const Posts: CollectionConfig = {\n  slug: 'posts',\n  hooks: {\n    beforeChange: [\n      ({ req, operation, data }) =&gt; {\n        if (req.user) {\n          if (operation === 'create') {\n            data.updatedBy = req.user.id;\n            data.createdBy = req.user.id;\n          } else if (operation === 'update') {\n            data.updatedBy = req.user.id;\n          }\n          return data;\n        }\n      },\n    ],\n  },\n  fields: [\n    {\n      name: 'createdBy',\n      type: 'relationship',\n      relationTo: 'users',\n      access: {\n        update: () =&gt; false,\n      },\n      admin: {\n        readOnly: true,\n        position: 'sidebar',\n        condition: (data) =&gt; !!data?.createdBy,\n      },\n    },\n    {\n      name: 'createdBy',\n      type: 'relationship',\n      relationTo: 'users',\n      access: {\n        update: () =&gt; false,\n      },\n      admin: {\n        readOnly: true,\n        position: 'sidebar',\n        condition: (data) =&gt; !!data?.createdBy,\n      },\n    },\n    // Other fields\n  ],\n};\nexport default Posts;\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-smi\">Posts</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'posts'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req<span class=\"pl-kos\">,</span> operation<span class=\"pl-kos\">,</span> data <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'create'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">updatedBy</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">createdBy</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'update'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">updatedBy</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-kos\">}</span>\n          <span class=\"pl-k\">return</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'createdBy'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'users'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">update</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">readOnly</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">position</span>: <span class=\"pl-s\">'sidebar'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-en\">condition</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">!</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">createdBy</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'createdBy'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'users'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">update</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">readOnly</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">position</span>: <span class=\"pl-s\">'sidebar'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-en\">condition</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">!</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">createdBy</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c\">// Other fields</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">Posts</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">This will now show in the admin sidebar</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/65888/180038730-431e0b54-6d63-4526-b06c-fe0efb6b7f87.png\"><img width=\"353\" alt=\"image\" src=\"https://user-images.githubusercontent.com/65888/180038730-431e0b54-6d63-4526-b06c-fe0efb6b7f87.png\" style=\"max-width: 100%;\"></a></p>",
        "createdAt": "2022-07-20T16:52:01Z",
        "replies": [
          {
            "author": {
              "name": "Stupidism",
              "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
              "url": "https://github.com/Stupidism"
            },
            "body": "<p dir=\"auto\">Is it possible to add these two fields' information in the area of the screenshot I took above?</p>",
            "createdAt": "2022-07-21T01:00:23Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">Yes, this can be done w/ hooks and access control. Here is an example collection:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const Posts: CollectionConfig = {\n  slug: 'posts',\n  hooks: {\n    beforeChange: [\n      ({ req, operation, data }) =&gt; {\n        if (req.user) {\n          if (operation === 'create') {\n            data.updatedBy = req.user.id;\n            data.createdBy = req.user.id;\n          } else if (operation === 'update') {\n            data.updatedBy = req.user.id;\n          }\n          return data;\n        }\n      },\n    ],\n  },\n  fields: [\n    {\n      name: 'createdBy',\n      type: 'relationship',\n      relationTo: 'users',\n      access: {\n        update: () =&gt; false,\n      },\n      admin: {\n        readOnly: true,\n        position: 'sidebar',\n        condition: (data) =&gt; !!data?.createdBy,\n      },\n    },\n    {\n      name: 'createdBy',\n      type: 'relationship',\n      relationTo: 'users',\n      access: {\n        update: () =&gt; false,\n      },\n      admin: {\n        readOnly: true,\n        position: 'sidebar',\n        condition: (data) =&gt; !!data?.createdBy,\n      },\n    },\n    // Other fields\n  ],\n};\nexport default Posts;\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-smi\">Posts</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'posts'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req<span class=\"pl-kos\">,</span> operation<span class=\"pl-kos\">,</span> data <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'create'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">updatedBy</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">createdBy</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'update'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">updatedBy</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-kos\">}</span>\n          <span class=\"pl-k\">return</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'createdBy'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'users'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">update</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">readOnly</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">position</span>: <span class=\"pl-s\">'sidebar'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-en\">condition</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">!</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">createdBy</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'createdBy'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'users'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">update</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">readOnly</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">position</span>: <span class=\"pl-s\">'sidebar'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-en\">condition</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">!</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">createdBy</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c\">// Other fields</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">Posts</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">This will now show in the admin sidebar</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/65888/180038730-431e0b54-6d63-4526-b06c-fe0efb6b7f87.png\"><img width=\"353\" alt=\"image\" src=\"https://user-images.githubusercontent.com/65888/180038730-431e0b54-6d63-4526-b06c-fe0efb6b7f87.png\" style=\"max-width: 100%;\"></a></p>",
      "createdAt": "2022-07-20T16:52:01Z",
      "chosenAt": "2022-07-20T16:52:10Z",
      "chosenBy": "denolfe",
      "replies": [
        {
          "author": {
            "name": "Stupidism",
            "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
            "url": "https://github.com/Stupidism"
          },
          "body": "<p dir=\"auto\">Is it possible to add these two fields' information in the area of the screenshot I took above?</p>",
          "createdAt": "2022-07-21T01:00:23Z"
        }
      ]
    }
  },
  {
    "title": "How to upgrade to v1.0.x from 0.19.x?",
    "body": "<p dir=\"auto\">Congrats on the v1.0 release! I have a question regarding the update procedure.</p>\n<p dir=\"auto\">I have a fresh local install of v0.19.1 for testing purposes. My guess is a simple <code class=\"notranslate\">npm install</code> is not enough to perform an update. I did look at the <a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#104-2022-07-19\">changelog</a> but found no instruction. How can I perform an update?</p>\n<p dir=\"auto\">Here is a log of when I ran <code class=\"notranslate\">npm install</code>.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\nPS C:\\Users\\test\\Documents\\github\\cms-trial\\payload-app&gt; npm install\nnpm WARN ERESOLVE overriding peer dependency\nnpm WARN While resolving: mini-create-react-context@0.4.1\nnpm WARN Found: react@18.2.0\nnpm WARN node_modules/react\nnpm WARN   react@&quot;^18.0.0&quot; from payload@0.19.1\nnpm WARN   node_modules/payload\nnpm WARN     payload@&quot;^0.19.1&quot; from the root project     \nnpm WARN   19 more (react-animate-height, react-onclickoutside, ...)\nnpm WARN\nnpm WARN Could not resolve dependency:\nnpm WARN peer react@&quot;^0.14.0 || ^15.0.0 || ^16.0.0 || ^17.0.0&quot; from mini-create-react-context@0.4.1\nnpm WARN node_modules/mini-create-react-context\nnpm WARN   mini-create-react-context@&quot;^0.4.0&quot; from react-router@5.3.3\nnpm WARN   node_modules/react-router\nnpm WARN\nnpm WARN Conflicting peer dependency: react@17.0.2\nnpm WARN node_modules/react\nnpm WARN   peer react@&quot;^0.14.0 || ^15.0.0 || ^16.0.0 || ^17.0.0&quot; from mini-create-react-context@0.4.1\nnpm WARN   node_modules/mini-create-react-context\nnpm WARN     mini-create-react-context@&quot;^0.4.0&quot; from react-router@5.3.3\nnpm WARN     node_modules/react-router\nnpm WARN ERESOLVE overriding peer dependency\nnpm WARN While resolving: react-diff-viewer@3.1.1\nnpm WARN Found: react@18.2.0\nnpm WARN node_modules/payload/node_modules/react\nnpm WARN   react@&quot;^18.0.0&quot; from payload@0.19.1\nnpm WARN   node_modules/payload\nnpm WARN     payload@&quot;^0.19.1&quot; from the root project\nnpm WARN   1 more (react-dom)\nnpm WARN \nnpm WARN Could not resolve dependency:\nnpm WARN peer react@&quot;^15.3.0 || ^16.0.0&quot; from react-diff-viewer@3.1.1\nnpm WARN node_modules/payload/node_modules/react-diff-viewer\nnpm WARN   react-diff-viewer@&quot;^3.1.1&quot; from payload@0.19.1\nnpm WARN   node_modules/payload\nnpm WARN\nnpm WARN Conflicting peer dependency: react@16.14.0\nnpm WARN node_modules/react\nnpm WARN   peer react@&quot;^15.3.0 || ^16.0.0&quot; from react-diff-viewer@3.1.1\nnpm WARN   node_modules/payload/node_modules/react-diff-viewer\nnpm WARN     react-diff-viewer@&quot;^3.1.1&quot; from payload@0.19.1\nnpm WARN     node_modules/payload\nnpm WARN ERESOLVE overriding peer dependency\nnpm WARN While resolving: react-diff-viewer@3.1.1\nnpm WARN Found: react-dom@18.2.0\nnpm WARN node_modules/payload/node_modules/react-dom\nnpm WARN   react-dom@&quot;^18.0.0&quot; from payload@0.19.1\nnpm WARN   node_modules/payload\nnpm WARN     payload@&quot;^0.19.1&quot; from the root project\nnpm WARN\nnpm WARN Could not resolve dependency:\nnpm WARN peer react-dom@&quot;^15.3.0 || ^16.0.0&quot; from react-diff-viewer@3.1.1\nnpm WARN node_modules/payload/node_modules/react-diff-viewer\nnpm WARN   react-diff-viewer@&quot;^3.1.1&quot; from payload@0.19.1\nnpm WARN   node_modules/payload\nnpm WARN\nnpm WARN Conflicting peer dependency: react-dom@16.14.0\nnpm WARN node_modules/react-dom\nnpm WARN   peer react-dom@&quot;^15.3.0 || ^16.0.0&quot; from react-diff-viewer@3.1.1\nnpm WARN   node_modules/payload/node_modules/react-diff-viewer\nnpm WARN     react-diff-viewer@&quot;^3.1.1&quot; from payload@0.19.1\nnpm WARN     node_modules/payload\nnpm WARN skipping integrity check for git dependency ssh://git@github.com/bcherny/json-schema-ref-parser.git\n\nadded 10 packages, removed 8 packages, changed 89 packages, and audited 1338 packages in 3m\n\n171 packages are looking for funding\n  run `npm fund` for details\n\n6 vulnerabilities (2 moderate, 4 high)\n\nSome issues need review, and may require choosing\na different dependency.\n\nRun `npm audit` for details.\n\"><pre class=\"notranslate\"><code class=\"notranslate\">\nPS C:\\Users\\test\\Documents\\github\\cms-trial\\payload-app&gt; npm install\nnpm WARN ERESOLVE overriding peer dependency\nnpm WARN While resolving: mini-create-react-context@0.4.1\nnpm WARN Found: react@18.2.0\nnpm WARN node_modules/react\nnpm WARN   react@\"^18.0.0\" from payload@0.19.1\nnpm WARN   node_modules/payload\nnpm WARN     payload@\"^0.19.1\" from the root project     \nnpm WARN   19 more (react-animate-height, react-onclickoutside, ...)\nnpm WARN\nnpm WARN Could not resolve dependency:\nnpm WARN peer react@\"^0.14.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\" from mini-create-react-context@0.4.1\nnpm WARN node_modules/mini-create-react-context\nnpm WARN   mini-create-react-context@\"^0.4.0\" from react-router@5.3.3\nnpm WARN   node_modules/react-router\nnpm WARN\nnpm WARN Conflicting peer dependency: react@17.0.2\nnpm WARN node_modules/react\nnpm WARN   peer react@\"^0.14.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\" from mini-create-react-context@0.4.1\nnpm WARN   node_modules/mini-create-react-context\nnpm WARN     mini-create-react-context@\"^0.4.0\" from react-router@5.3.3\nnpm WARN     node_modules/react-router\nnpm WARN ERESOLVE overriding peer dependency\nnpm WARN While resolving: react-diff-viewer@3.1.1\nnpm WARN Found: react@18.2.0\nnpm WARN node_modules/payload/node_modules/react\nnpm WARN   react@\"^18.0.0\" from payload@0.19.1\nnpm WARN   node_modules/payload\nnpm WARN     payload@\"^0.19.1\" from the root project\nnpm WARN   1 more (react-dom)\nnpm WARN \nnpm WARN Could not resolve dependency:\nnpm WARN peer react@\"^15.3.0 || ^16.0.0\" from react-diff-viewer@3.1.1\nnpm WARN node_modules/payload/node_modules/react-diff-viewer\nnpm WARN   react-diff-viewer@\"^3.1.1\" from payload@0.19.1\nnpm WARN   node_modules/payload\nnpm WARN\nnpm WARN Conflicting peer dependency: react@16.14.0\nnpm WARN node_modules/react\nnpm WARN   peer react@\"^15.3.0 || ^16.0.0\" from react-diff-viewer@3.1.1\nnpm WARN   node_modules/payload/node_modules/react-diff-viewer\nnpm WARN     react-diff-viewer@\"^3.1.1\" from payload@0.19.1\nnpm WARN     node_modules/payload\nnpm WARN ERESOLVE overriding peer dependency\nnpm WARN While resolving: react-diff-viewer@3.1.1\nnpm WARN Found: react-dom@18.2.0\nnpm WARN node_modules/payload/node_modules/react-dom\nnpm WARN   react-dom@\"^18.0.0\" from payload@0.19.1\nnpm WARN   node_modules/payload\nnpm WARN     payload@\"^0.19.1\" from the root project\nnpm WARN\nnpm WARN Could not resolve dependency:\nnpm WARN peer react-dom@\"^15.3.0 || ^16.0.0\" from react-diff-viewer@3.1.1\nnpm WARN node_modules/payload/node_modules/react-diff-viewer\nnpm WARN   react-diff-viewer@\"^3.1.1\" from payload@0.19.1\nnpm WARN   node_modules/payload\nnpm WARN\nnpm WARN Conflicting peer dependency: react-dom@16.14.0\nnpm WARN node_modules/react-dom\nnpm WARN   peer react-dom@\"^15.3.0 || ^16.0.0\" from react-diff-viewer@3.1.1\nnpm WARN   node_modules/payload/node_modules/react-diff-viewer\nnpm WARN     react-diff-viewer@\"^3.1.1\" from payload@0.19.1\nnpm WARN     node_modules/payload\nnpm WARN skipping integrity check for git dependency ssh://git@github.com/bcherny/json-schema-ref-parser.git\n\nadded 10 packages, removed 8 packages, changed 89 packages, and audited 1338 packages in 3m\n\n171 packages are looking for funding\n  run `npm fund` for details\n\n6 vulnerabilities (2 moderate, 4 high)\n\nSome issues need review, and may require choosing\na different dependency.\n\nRun `npm audit` for details.\n\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/775",
    "id": "775",
    "createdAt": "2022-07-20T01:15:25Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "hunghvu",
      "avatar": "https://avatars.githubusercontent.com/u/62678592?u=6e546aadac8a22f7ffc7a95dd0177b9726071ebe&v=4",
      "url": "https://github.com/hunghvu"
    },
    "comments": [
      {
        "author": {
          "name": "wojciechkrol",
          "avatar": "https://avatars.githubusercontent.com/u/14108143?u=a50f83a499fdf37dbee3b4686403648ee4507a1a&v=4",
          "url": "https://github.com/wojciechkrol"
        },
        "body": "<p dir=\"auto\">Change <code class=\"notranslate\">payload</code> version to <code class=\"notranslate\">^1.0.7</code> in your <code class=\"notranslate\">package.json</code> and run <code class=\"notranslate\">yarn install</code></p>",
        "createdAt": "2022-07-20T09:15:31Z",
        "replies": null
      },
      {
        "author": {
          "name": "torunai",
          "avatar": "https://avatars.githubusercontent.com/u/4068382?u=26b6bcf22be0496a0c2c19e575e5a7fc6624efe3&v=4",
          "url": "https://github.com/torunai"
        },
        "body": "<p dir=\"auto\">You could try running <code class=\"notranslate\">yarn upgrade-interactive --latest</code>. It will ask you which packages you want to update to the latest version. Worked perfectly on my end.</p>",
        "createdAt": "2022-07-20T11:36:37Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "wojciechkrol",
        "avatar": "https://avatars.githubusercontent.com/u/14108143?u=a50f83a499fdf37dbee3b4686403648ee4507a1a&v=4",
        "url": "https://github.com/wojciechkrol"
      },
      "body": "<p dir=\"auto\">Change <code class=\"notranslate\">payload</code> version to <code class=\"notranslate\">^1.0.7</code> in your <code class=\"notranslate\">package.json</code> and run <code class=\"notranslate\">yarn install</code></p>",
      "createdAt": "2022-07-20T09:15:31Z",
      "chosenAt": "2022-07-20T16:29:34Z",
      "chosenBy": "denolfe",
      "replies": null
    }
  },
  {
    "title": "Question about array field PUT rest api",
    "body": "<p dir=\"auto\">I have an array field with different data, to which payload adds an ID to each entry.<br>\nWhat I want to achieve is through a PUT request modify a single entry in this array, using this ID, but I can't find  a way. Something like<br>\n<code class=\"notranslate\">content: {id: thirdItemID, value: newValue}</code></p>\n<p dir=\"auto\">The only way for something like this to work is to send a request with the <strong>whole</strong> array and modifying the desired entry.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"content: \n[\n  {id: firstItemId, value: originalValue},\n  {id: secondItemId, value: originalValue},\n  {id: thirdItemID, value: newValue}, // &lt;-- this is the one i'm editing\n]\"><pre class=\"notranslate\"><code class=\"notranslate\">content: \n[\n  {id: firstItemId, value: originalValue},\n  {id: secondItemId, value: originalValue},\n  {id: thirdItemID, value: newValue}, // &lt;-- this is the one i'm editing\n]\n</code></pre></div>\n<p dir=\"auto\">While writing this I thought about making a custom endpoint in my collection, but is there a simpler way around this? Thanks in advanced. Please let me know if i'm not being clear : )</p>",
    "url": "https://github.com/payloadcms/payload/discussions/752",
    "id": "752",
    "createdAt": "2022-07-14T15:43:37Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "gonzam88",
      "avatar": "https://avatars.githubusercontent.com/u/6289953?u=964dbaf32492efedc92230ee51de16ffac6a9684&v=4",
      "url": "https://github.com/gonzam88"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/gonzam88/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gonzam88\">@gonzam88</a>,</p>\n<p dir=\"auto\">As you've figured already, sending the PUT with items missing from the array will update the \"content\" to be missing your other data and there isn't a way to tell Payload to leave them in. The array IDs was added to allow undefined fields to be saved correctly array objects shift around. There isn't a PATCH operation that would give you this today.</p>\n<p dir=\"auto\">You would need to make a custom endpoint for that. Alternatively you could structure your data to be an array that contains relationships. In that way the collection would have an endpoint that can modify one single item from having it's own collection, but that would have other implications to editor experience.</p>\n<p dir=\"auto\">Is there something in your implementation that makes it hard to fetch the full document and PUT it all back with the changes you need?<br>\nHave you looked in to doing it with GraphQL? That might be an option but I need to dig more to find out.</p>",
        "createdAt": "2022-07-15T15:48:20Z",
        "replies": [
          {
            "author": {
              "name": "gonzam88",
              "avatar": "https://avatars.githubusercontent.com/u/6289953?u=964dbaf32492efedc92230ee51de16ffac6a9684&v=4",
              "url": "https://github.com/gonzam88"
            },
            "body": "<p dir=\"auto\">Thanks for the reply, just confirming my suspicions. I will PUT the whole array, just trying to check if there was a more straightforward way around this.</p>",
            "createdAt": "2022-07-15T15:52:13Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/gonzam88/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gonzam88\">@gonzam88</a>,</p>\n<p dir=\"auto\">As you've figured already, sending the PUT with items missing from the array will update the \"content\" to be missing your other data and there isn't a way to tell Payload to leave them in. The array IDs was added to allow undefined fields to be saved correctly array objects shift around. There isn't a PATCH operation that would give you this today.</p>\n<p dir=\"auto\">You would need to make a custom endpoint for that. Alternatively you could structure your data to be an array that contains relationships. In that way the collection would have an endpoint that can modify one single item from having it's own collection, but that would have other implications to editor experience.</p>\n<p dir=\"auto\">Is there something in your implementation that makes it hard to fetch the full document and PUT it all back with the changes you need?<br>\nHave you looked in to doing it with GraphQL? That might be an option but I need to dig more to find out.</p>",
      "createdAt": "2022-07-15T15:48:20Z",
      "chosenAt": "2022-07-15T15:50:34Z",
      "chosenBy": "gonzam88",
      "replies": [
        {
          "author": {
            "name": "gonzam88",
            "avatar": "https://avatars.githubusercontent.com/u/6289953?u=964dbaf32492efedc92230ee51de16ffac6a9684&v=4",
            "url": "https://github.com/gonzam88"
          },
          "body": "<p dir=\"auto\">Thanks for the reply, just confirming my suspicions. I will PUT the whole array, just trying to check if there was a more straightforward way around this.</p>",
          "createdAt": "2022-07-15T15:52:13Z"
        }
      ]
    }
  },
  {
    "title": "Adding Calculations to Collection Form",
    "body": "<p dir=\"auto\">I am struggling to calculate fields which would benefit from being worked out before submission. I can see there is <code class=\"notranslate\">useField</code> , <code class=\"notranslate\">siblingData</code> and <code class=\"notranslate\">useWatchForm</code>. I assume these are used in some fashion to achieve this.</p>\n<p dir=\"auto\">I can't find any information on how to use math to automate some of the fields, but I assume that it's more than capable in PayloadCMS. I'm just getting to grips with js, react and typescript, so I'm not well versed in the correct syntax and structure of the code just yet, so just keep making spaghetti code and creating a tonne of errors and not getting anywhere very quickly.</p>\n<p dir=\"auto\">How would I go about grabbing 2 or 3 numerical fields to then calculate to find the total?</p>\n<p dir=\"auto\">This is an example of my code. I'm basically trying to do pretty simple maths, but I don't know where to pull my data from or how to calculate it. Can anyone give me some pointers?</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import {\n    CollectionConfig,\n} from 'payload/types';\n\n\nconst userHealthCheck: CollectionConfig = {\n    slug: 'userhealthcheck',\n    admin: {\n        defaultColumns: ['name', 'height', 'weight', 'hips', 'waist'],\n        useAsTitle: 'title',\n    },\n    access: {\n        read: () =&gt; true,\n    },\n    fields: [{\n            name: 'name',\n            type: 'text',\n            label: 'Name'\n        },\n        {\n            name: 'height',\n            type: 'number',\n            label: 'Height in cm'\n        },\n        {\n            name: 'weight',\n            type: 'number',\n            label: 'Weight in kg'\n        },\n        {\n            name: 'hips',\n            type: 'number',\n            label: 'Hips'\n        },\n        {\n            name: 'waist',\n            type: 'number',\n            label: 'Waist'\n        },\n        {\n            name: 'waisttohips_ratio',\n            type: 'number',\n            label: 'Waist to Hips Ratio'\n            //Calculate Waist / Hips = Waist Hips ratio\n        },\n        {\n            name: 'bmi',\n            type: 'number',\n            label: 'BMI',\n            //Calculate [weight (kg) / height (cm) / height (cm)] x 10,000\n        }\n\n    ]\n}\nexport default userHealthCheck;\n\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-v\">CollectionConfig</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">userHealthCheck</span>: <span class=\"pl-v\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'userhealthcheck'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">defaultColumns</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'name'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'height'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'weight'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'hips'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'waist'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'title'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'name'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Name'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'height'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Height in cm'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'weight'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Weight in kg'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'hips'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Hips'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'waist'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Waist'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'waisttohips_ratio'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Waist to Hips Ratio'</span>\n            <span class=\"pl-c\">//Calculate Waist / Hips = Waist Hips ratio</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'bmi'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'BMI'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c\">//Calculate [weight (kg) / height (cm) / height (cm)] x 10,000</span>\n        <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-s1\">userHealthCheck</span><span class=\"pl-kos\">;</span></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/736",
    "id": "736",
    "createdAt": "2022-07-10T18:34:40Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "GronsoBitburg",
      "avatar": "https://avatars.githubusercontent.com/u/67450408?v=4",
      "url": "https://github.com/GronsoBitburg"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/GronsoBitburg/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/GronsoBitburg\">@GronsoBitburg</a>,</p>\n<p dir=\"auto\">That sounds like a good use for hooks.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { CollectionBeforeChangeHook } from 'payload/types'\n\nconst healthCheckCalculations: CollectionBeforeChangeHook : CollectionBeforeChangeHook  = ({data}) =&gt; {\n  data.bmi = data.weight / data.height / data.height * 10000;\n  data.waisttohips_ratio = data.waist / data.hips;\n}\n\nconst userHealthCheck: CollectionConfig = {\n  slug: 'userhealthcheck',\n  hooks: {\n    beforeChange: [ healthCheckCalculations ],\n  },\n  // rest of the collection\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">CollectionBeforeChangeHook</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">healthCheckCalculations</span>: <span class=\"pl-smi\">CollectionBeforeChangeHook</span> : <span class=\"pl-smi\">CollectionBeforeChangeHook</span>  <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>data<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">bmi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">weight</span> <span class=\"pl-c1\">/</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">height</span> <span class=\"pl-c1\">/</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">height</span> <span class=\"pl-c1\">*</span> <span class=\"pl-c1\">10000</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">waisttohips_ratio</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">waist</span> <span class=\"pl-c1\">/</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">hips</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">userHealthCheck</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'userhealthcheck'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span> <span class=\"pl-s1\">healthCheckCalculations</span> <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c\">// rest of the collection</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">By the way, that read access () =&gt; true means that everybody including guest users who have not logged in can query and read your data on this collection. I want to be sure you know that since it sounds like some personal information.</p>",
        "createdAt": "2022-07-12T03:48:19Z",
        "replies": [
          {
            "author": {
              "name": "GronsoBitburg",
              "avatar": "https://avatars.githubusercontent.com/u/67450408?v=4",
              "url": "https://github.com/GronsoBitburg"
            },
            "body": "<p dir=\"auto\">Just trying out your code and I'm getting two errors:</p>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"[{\n\t&quot;resource&quot;: &quot;/gronso/health-payload-cms/src/collections/HealthCheck.ts&quot;,\n\t&quot;owner&quot;: &quot;typescript&quot;,\n\t&quot;code&quot;: &quot;2304&quot;,\n\t&quot;severity&quot;: 8,\n\t&quot;message&quot;: &quot;Cannot find name 'BeforeChangeHook'.&quot;,\n\t&quot;source&quot;: &quot;ts&quot;,\n\t&quot;startLineNumber&quot;: 1,\n\t&quot;startColumn&quot;: 32,\n\t&quot;endLineNumber&quot;: 1,\n\t&quot;endColumn&quot;: 48\n}]\n[{\n\t&quot;resource&quot;: &quot;/gronso/health-payload-cms/src/collections/HealthCheck.ts&quot;,\n\t&quot;owner&quot;: &quot;typescript&quot;,\n\t&quot;code&quot;: &quot;1005&quot;,\n\t&quot;severity&quot;: 8,\n\t&quot;message&quot;: &quot;',' expected.&quot;,\n\t&quot;source&quot;: &quot;ts&quot;,\n\t&quot;startLineNumber&quot;: 1,\n\t&quot;startColumn&quot;: 48,\n\t&quot;endLineNumber&quot;: 1,\n\t&quot;endColumn&quot;: 49\n}]\"><pre class=\"notranslate\">[{\n\t<span class=\"pl-ent\">\"resource\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/gronso/health-payload-cms/src/collections/HealthCheck.ts<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"owner\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>typescript<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"code\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2304<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"severity\"</span>: <span class=\"pl-c1\">8</span>,\n\t<span class=\"pl-ent\">\"message\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Cannot find name 'BeforeChangeHook'.<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"source\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ts<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"startLineNumber\"</span>: <span class=\"pl-c1\">1</span>,\n\t<span class=\"pl-ent\">\"startColumn\"</span>: <span class=\"pl-c1\">32</span>,\n\t<span class=\"pl-ent\">\"endLineNumber\"</span>: <span class=\"pl-c1\">1</span>,\n\t<span class=\"pl-ent\">\"endColumn\"</span>: <span class=\"pl-c1\">48</span>\n}]\n[{\n\t<span class=\"pl-ent\">\"resource\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/gronso/health-payload-cms/src/collections/HealthCheck.ts<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"owner\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>typescript<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"code\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1005<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"severity\"</span>: <span class=\"pl-c1\">8</span>,\n\t<span class=\"pl-ent\">\"message\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>',' expected.<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"source\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ts<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"startLineNumber\"</span>: <span class=\"pl-c1\">1</span>,\n\t<span class=\"pl-ent\">\"startColumn\"</span>: <span class=\"pl-c1\">48</span>,\n\t<span class=\"pl-ent\">\"endLineNumber\"</span>: <span class=\"pl-c1\">1</span>,\n\t<span class=\"pl-ent\">\"endColumn\"</span>: <span class=\"pl-c1\">49</span>\n}]</pre></div>\n<p dir=\"auto\">Somehow <code class=\"notranslate\">BeforeChangeHook</code> can't be found.<br>\nThis is my code with your suggestion added, have I done something wrong?</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const healthCheckCalculations: BeforeChangeHook: CollectionBeforeChangeHook  = ({data}) =&gt; {\n    data.bmi = data.weight / data.height / data.height * 10000;\n    data.waisttohips_ratio = data.waist / data.hips;\n  }\n\nimport {\n    CollectionConfig, CollectionBeforeChangeHook\n} from 'payload/types';\n\n\nconst userHealthCheck: CollectionConfig = {\n    slug: 'userhealthcheck',\n    hooks: {\n        beforeChange: [ healthCheckCalculations ]\n},\n    admin: {\n        defaultColumns: ['name', 'height', 'weight', 'hips', 'waist'],\n        useAsTitle: 'title',\n    },\n    access: {\n        read: () =&gt; true,\n    },\n    fields: [{\n            name: 'name',\n            type: 'text',\n            label: 'Name'\n        },\n        {\n            name: 'height',\n            type: 'number',\n            label: 'Height in cm'\n        },\n        {\n            name: 'weight',\n            type: 'number',\n            label: 'Weight in kg'\n        },\n        {\n            name: 'hips',\n            type: 'number',\n            label: 'Hips'\n        },\n        {\n            name: 'waist',\n            type: 'number',\n            label: 'Waist'\n        },\n        {\n            name: 'waisttohips_ratio',\n            type: 'number',\n            label: 'Waist to Hips Ratio'\n            //Calculate Waist / Hips = Waist Hips ratio\n        },\n        {\n            name: 'bmi',\n            type: 'number',\n            label: 'BMI',\n            //Calculate [weight (kg) / height (cm) / height (cm)] x 10,000\n        }\n\n    ]\n}\nexport default userHealthCheck;\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">healthCheckCalculations</span>: <span class=\"pl-v\">BeforeChangeHook</span>: <span class=\"pl-v\">CollectionBeforeChangeHook</span>  <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>data<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">bmi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">weight</span> <span class=\"pl-c1\">/</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">height</span> <span class=\"pl-c1\">/</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">height</span> <span class=\"pl-c1\">*</span> <span class=\"pl-c1\">10000</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">waisttohips_ratio</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">waist</span> <span class=\"pl-c1\">/</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">hips</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-v\">CollectionConfig</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">CollectionBeforeChangeHook</span>\n<span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">userHealthCheck</span>: <span class=\"pl-v\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'userhealthcheck'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span> <span class=\"pl-s1\">healthCheckCalculations</span> <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">defaultColumns</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'name'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'height'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'weight'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'hips'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'waist'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'title'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'name'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Name'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'height'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Height in cm'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'weight'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Weight in kg'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'hips'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Hips'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'waist'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Waist'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'waisttohips_ratio'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Waist to Hips Ratio'</span>\n            <span class=\"pl-c\">//Calculate Waist / Hips = Waist Hips ratio</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'bmi'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'BMI'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c\">//Calculate [weight (kg) / height (cm) / height (cm)] x 10,000</span>\n        <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-s1\">userHealthCheck</span><span class=\"pl-kos\">;</span></pre></div>",
            "createdAt": "2022-07-12T14:10:28Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Check my answer for updated code. I didn't have the import at the top and <code class=\"notranslate\">BeforeChangeHook</code> was supposed to be <code class=\"notranslate\">CollectionBeforeChangeHook</code>. Sorry about the confusion.</p>",
            "createdAt": "2022-07-12T14:45:33Z"
          },
          {
            "author": {
              "name": "GronsoBitburg",
              "avatar": "https://avatars.githubusercontent.com/u/67450408?v=4",
              "url": "https://github.com/GronsoBitburg"
            },
            "body": "<p dir=\"auto\">I'm sorry for being a pain Dan.<br>\nI noticing that there was still an error occurring and I had no idea why.</p>\n<p dir=\"auto\">After a bit of bumbling about with the code I realised that</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const healthCheckCalculations : CollectionBeforeChangeHook : CollectionBeforeChangeHook  = ({data}) =&gt; {\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">healthCheckCalculations</span> : <span class=\"pl-v\">CollectionBeforeChangeHook</span> : <span class=\"pl-v\">CollectionBeforeChangeHook</span>  <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>data<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\"></span><span class=\"pl-kos\"></span></pre></div>\n<p dir=\"auto\">was throwing an error and that by deleting <code class=\"notranslate\"> : CollectionBeforeChangeHook</code> to now be:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const healthCheckCalculations : CollectionBeforeChangeHook  = ({data}) =&gt; {\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">healthCheckCalculations</span> : <span class=\"pl-v\">CollectionBeforeChangeHook</span>  <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>data<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span></pre></div>\n<p dir=\"auto\">This fixed the issue and now the code works flawlessly. Thank you so much for helping me.</p>",
            "createdAt": "2022-07-12T18:10:21Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Of course, sorry I was editing on mobile! Glad you worked it out.</p>",
            "createdAt": "2022-07-12T18:18:53Z"
          }
        ]
      },
      {
        "author": {
          "name": "GronsoBitburg",
          "avatar": "https://avatars.githubusercontent.com/u/67450408?v=4",
          "url": "https://github.com/GronsoBitburg"
        },
        "body": "<p dir=\"auto\">Wait... It's that easy? I was really over complicating it</p>\n<p dir=\"auto\">Thank you so much for taking the time to help. I was thinking that it was gonna be a lot more complicated to get that working.</p>\n<p dir=\"auto\">The read access () =&gt; true is just so I can play around with payload as I'll have to figure out the api section (when I get to that bit). This project won't go any further than my intranet so I'm pretty comfortable with that. To be honest, I should have removed that for any new user reading my post.</p>",
        "createdAt": "2022-07-12T13:06:18Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/GronsoBitburg/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/GronsoBitburg\">@GronsoBitburg</a>,</p>\n<p dir=\"auto\">That sounds like a good use for hooks.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { CollectionBeforeChangeHook } from 'payload/types'\n\nconst healthCheckCalculations: CollectionBeforeChangeHook : CollectionBeforeChangeHook  = ({data}) =&gt; {\n  data.bmi = data.weight / data.height / data.height * 10000;\n  data.waisttohips_ratio = data.waist / data.hips;\n}\n\nconst userHealthCheck: CollectionConfig = {\n  slug: 'userhealthcheck',\n  hooks: {\n    beforeChange: [ healthCheckCalculations ],\n  },\n  // rest of the collection\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">CollectionBeforeChangeHook</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">healthCheckCalculations</span>: <span class=\"pl-smi\">CollectionBeforeChangeHook</span> : <span class=\"pl-smi\">CollectionBeforeChangeHook</span>  <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>data<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">bmi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">weight</span> <span class=\"pl-c1\">/</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">height</span> <span class=\"pl-c1\">/</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">height</span> <span class=\"pl-c1\">*</span> <span class=\"pl-c1\">10000</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">waisttohips_ratio</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">waist</span> <span class=\"pl-c1\">/</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">hips</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">userHealthCheck</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'userhealthcheck'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span> <span class=\"pl-s1\">healthCheckCalculations</span> <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c\">// rest of the collection</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">By the way, that read access () =&gt; true means that everybody including guest users who have not logged in can query and read your data on this collection. I want to be sure you know that since it sounds like some personal information.</p>",
      "createdAt": "2022-07-12T03:48:19Z",
      "chosenAt": "2022-07-12T13:06:31Z",
      "chosenBy": "GronsoBitburg",
      "replies": [
        {
          "author": {
            "name": "GronsoBitburg",
            "avatar": "https://avatars.githubusercontent.com/u/67450408?v=4",
            "url": "https://github.com/GronsoBitburg"
          },
          "body": "<p dir=\"auto\">Just trying out your code and I'm getting two errors:</p>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"[{\n\t&quot;resource&quot;: &quot;/gronso/health-payload-cms/src/collections/HealthCheck.ts&quot;,\n\t&quot;owner&quot;: &quot;typescript&quot;,\n\t&quot;code&quot;: &quot;2304&quot;,\n\t&quot;severity&quot;: 8,\n\t&quot;message&quot;: &quot;Cannot find name 'BeforeChangeHook'.&quot;,\n\t&quot;source&quot;: &quot;ts&quot;,\n\t&quot;startLineNumber&quot;: 1,\n\t&quot;startColumn&quot;: 32,\n\t&quot;endLineNumber&quot;: 1,\n\t&quot;endColumn&quot;: 48\n}]\n[{\n\t&quot;resource&quot;: &quot;/gronso/health-payload-cms/src/collections/HealthCheck.ts&quot;,\n\t&quot;owner&quot;: &quot;typescript&quot;,\n\t&quot;code&quot;: &quot;1005&quot;,\n\t&quot;severity&quot;: 8,\n\t&quot;message&quot;: &quot;',' expected.&quot;,\n\t&quot;source&quot;: &quot;ts&quot;,\n\t&quot;startLineNumber&quot;: 1,\n\t&quot;startColumn&quot;: 48,\n\t&quot;endLineNumber&quot;: 1,\n\t&quot;endColumn&quot;: 49\n}]\"><pre class=\"notranslate\">[{\n\t<span class=\"pl-ent\">\"resource\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/gronso/health-payload-cms/src/collections/HealthCheck.ts<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"owner\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>typescript<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"code\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2304<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"severity\"</span>: <span class=\"pl-c1\">8</span>,\n\t<span class=\"pl-ent\">\"message\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Cannot find name 'BeforeChangeHook'.<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"source\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ts<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"startLineNumber\"</span>: <span class=\"pl-c1\">1</span>,\n\t<span class=\"pl-ent\">\"startColumn\"</span>: <span class=\"pl-c1\">32</span>,\n\t<span class=\"pl-ent\">\"endLineNumber\"</span>: <span class=\"pl-c1\">1</span>,\n\t<span class=\"pl-ent\">\"endColumn\"</span>: <span class=\"pl-c1\">48</span>\n}]\n[{\n\t<span class=\"pl-ent\">\"resource\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/gronso/health-payload-cms/src/collections/HealthCheck.ts<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"owner\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>typescript<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"code\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1005<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"severity\"</span>: <span class=\"pl-c1\">8</span>,\n\t<span class=\"pl-ent\">\"message\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>',' expected.<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"source\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ts<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-ent\">\"startLineNumber\"</span>: <span class=\"pl-c1\">1</span>,\n\t<span class=\"pl-ent\">\"startColumn\"</span>: <span class=\"pl-c1\">48</span>,\n\t<span class=\"pl-ent\">\"endLineNumber\"</span>: <span class=\"pl-c1\">1</span>,\n\t<span class=\"pl-ent\">\"endColumn\"</span>: <span class=\"pl-c1\">49</span>\n}]</pre></div>\n<p dir=\"auto\">Somehow <code class=\"notranslate\">BeforeChangeHook</code> can't be found.<br>\nThis is my code with your suggestion added, have I done something wrong?</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const healthCheckCalculations: BeforeChangeHook: CollectionBeforeChangeHook  = ({data}) =&gt; {\n    data.bmi = data.weight / data.height / data.height * 10000;\n    data.waisttohips_ratio = data.waist / data.hips;\n  }\n\nimport {\n    CollectionConfig, CollectionBeforeChangeHook\n} from 'payload/types';\n\n\nconst userHealthCheck: CollectionConfig = {\n    slug: 'userhealthcheck',\n    hooks: {\n        beforeChange: [ healthCheckCalculations ]\n},\n    admin: {\n        defaultColumns: ['name', 'height', 'weight', 'hips', 'waist'],\n        useAsTitle: 'title',\n    },\n    access: {\n        read: () =&gt; true,\n    },\n    fields: [{\n            name: 'name',\n            type: 'text',\n            label: 'Name'\n        },\n        {\n            name: 'height',\n            type: 'number',\n            label: 'Height in cm'\n        },\n        {\n            name: 'weight',\n            type: 'number',\n            label: 'Weight in kg'\n        },\n        {\n            name: 'hips',\n            type: 'number',\n            label: 'Hips'\n        },\n        {\n            name: 'waist',\n            type: 'number',\n            label: 'Waist'\n        },\n        {\n            name: 'waisttohips_ratio',\n            type: 'number',\n            label: 'Waist to Hips Ratio'\n            //Calculate Waist / Hips = Waist Hips ratio\n        },\n        {\n            name: 'bmi',\n            type: 'number',\n            label: 'BMI',\n            //Calculate [weight (kg) / height (cm) / height (cm)] x 10,000\n        }\n\n    ]\n}\nexport default userHealthCheck;\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">healthCheckCalculations</span>: <span class=\"pl-v\">BeforeChangeHook</span>: <span class=\"pl-v\">CollectionBeforeChangeHook</span>  <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>data<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">bmi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">weight</span> <span class=\"pl-c1\">/</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">height</span> <span class=\"pl-c1\">/</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">height</span> <span class=\"pl-c1\">*</span> <span class=\"pl-c1\">10000</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">waisttohips_ratio</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">waist</span> <span class=\"pl-c1\">/</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">hips</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-v\">CollectionConfig</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">CollectionBeforeChangeHook</span>\n<span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">userHealthCheck</span>: <span class=\"pl-v\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'userhealthcheck'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span> <span class=\"pl-s1\">healthCheckCalculations</span> <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">defaultColumns</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'name'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'height'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'weight'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'hips'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'waist'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'title'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'name'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Name'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'height'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Height in cm'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'weight'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Weight in kg'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'hips'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Hips'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'waist'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Waist'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'waisttohips_ratio'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Waist to Hips Ratio'</span>\n            <span class=\"pl-c\">//Calculate Waist / Hips = Waist Hips ratio</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'bmi'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'number'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'BMI'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c\">//Calculate [weight (kg) / height (cm) / height (cm)] x 10,000</span>\n        <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-s1\">userHealthCheck</span><span class=\"pl-kos\">;</span></pre></div>",
          "createdAt": "2022-07-12T14:10:28Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Check my answer for updated code. I didn't have the import at the top and <code class=\"notranslate\">BeforeChangeHook</code> was supposed to be <code class=\"notranslate\">CollectionBeforeChangeHook</code>. Sorry about the confusion.</p>",
          "createdAt": "2022-07-12T14:45:33Z"
        },
        {
          "author": {
            "name": "GronsoBitburg",
            "avatar": "https://avatars.githubusercontent.com/u/67450408?v=4",
            "url": "https://github.com/GronsoBitburg"
          },
          "body": "<p dir=\"auto\">I'm sorry for being a pain Dan.<br>\nI noticing that there was still an error occurring and I had no idea why.</p>\n<p dir=\"auto\">After a bit of bumbling about with the code I realised that</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const healthCheckCalculations : CollectionBeforeChangeHook : CollectionBeforeChangeHook  = ({data}) =&gt; {\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">healthCheckCalculations</span> : <span class=\"pl-v\">CollectionBeforeChangeHook</span> : <span class=\"pl-v\">CollectionBeforeChangeHook</span>  <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>data<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\"></span><span class=\"pl-kos\"></span></pre></div>\n<p dir=\"auto\">was throwing an error and that by deleting <code class=\"notranslate\"> : CollectionBeforeChangeHook</code> to now be:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const healthCheckCalculations : CollectionBeforeChangeHook  = ({data}) =&gt; {\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">healthCheckCalculations</span> : <span class=\"pl-v\">CollectionBeforeChangeHook</span>  <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>data<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span></pre></div>\n<p dir=\"auto\">This fixed the issue and now the code works flawlessly. Thank you so much for helping me.</p>",
          "createdAt": "2022-07-12T18:10:21Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Of course, sorry I was editing on mobile! Glad you worked it out.</p>",
          "createdAt": "2022-07-12T18:18:53Z"
        }
      ]
    }
  },
  {
    "title": "CORS issue?",
    "body": "<p dir=\"auto\">I've tried adding a domain to the <code class=\"notranslate\">csrf</code> whitelist but I'm still not seeing an <code class=\"notranslate\">Access-Control-Allow-Origin</code> header being supplied by the server and my vue app is complaining. Do I need to explicitly add this header?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/395",
    "id": "395",
    "createdAt": "2021-12-14T22:15:46Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "ssyberg",
      "avatar": "https://avatars.githubusercontent.com/u/1661046?v=4",
      "url": "https://github.com/ssyberg"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">The <code class=\"notranslate\">Access-Control-Allow-Origin</code> header should be included automatically in the API after you have added it to your config.</p>\n<p dir=\"auto\">Could you share what you you have in your Payload config for CSRF? Perhaps you're setting it as a string and not in a an array?<br>\nCould it be that you're using an env variable that isn't available with your deployment?</p>\n<p dir=\"auto\">I'm happy to look if you have more info to share, thanks!</p>",
        "createdAt": "2021-12-14T22:27:01Z",
        "replies": [
          {
            "author": {
              "name": "ssyberg",
              "avatar": "https://avatars.githubusercontent.com/u/1661046?v=4",
              "url": "https://github.com/ssyberg"
            },
            "body": "<blockquote>\n<p dir=\"auto\">The <code class=\"notranslate\">Access-Control-Allow-Origin</code> header should be included automatically in the API after you have added it to your config.</p>\n</blockquote>\n<p dir=\"auto\">As in this should have been added as soon as I populated the <code class=\"notranslate\">csrf</code> config? That's kind of what I was assuming would happen but it sure didn't seem to do it.</p>\n<blockquote>\n<p dir=\"auto\">Could you share what you you have in your Payload config for CSRF?</p>\n</blockquote>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  csrf: [\n    'http://localhost:8080'\n  ]\"><pre class=\"notranslate\"><code class=\"notranslate\">  csrf: [\n    'http://localhost:8080'\n  ]\n</code></pre></div>",
            "createdAt": "2021-12-14T22:31:25Z"
          },
          {
            "author": {
              "name": "ssyberg",
              "avatar": "https://avatars.githubusercontent.com/u/1661046?v=4",
              "url": "https://github.com/ssyberg"
            },
            "body": "<p dir=\"auto\">I'll just provide the whole thing, nothing secret here:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"export default buildConfig({\n  serverURL: 'http://localhost:3000',\n  admin: {\n    user: Users.slug,\n  },\n  collections: [\n    Informationals,\n    Users,\n    Medias\n  ],\n  csrf: [\n    'http://localhost:8080'\n  ]\n});\"><pre class=\"notranslate\"><code class=\"notranslate\">export default buildConfig({\n  serverURL: 'http://localhost:3000',\n  admin: {\n    user: Users.slug,\n  },\n  collections: [\n    Informationals,\n    Users,\n    Medias\n  ],\n  csrf: [\n    'http://localhost:8080'\n  ]\n});\n</code></pre></div>",
            "createdAt": "2021-12-14T22:32:19Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ssyberg/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ssyberg\">@ssyberg</a>  Thanks for sharing your config. The csrf should be your domain and you can add cors too. We need to tell the Payload API (<code class=\"notranslate\">serverURL</code>, localhost:3000) to allow requests from localhost:8080, the vue app.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export default buildConfig({\n  serverURL: 'http://localhost:3000',\n  admin: {\n    user: Users.slug,\n  },\n  collections: [\n    Informationals,\n    Users,\n    Medias\n  ],\n  csrf: [\n    'http://localhost:8080'\n  ],\n  cors: [\n     'http://localhost:8080'\n   ]\n});\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-en\">buildConfig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">serverURL</span>: <span class=\"pl-s\">'http://localhost:3000'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">user</span>: <span class=\"pl-v\">Users</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">slug</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">collections</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-v\">Informationals</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-v\">Users</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-v\">Medias</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">csrf</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-s\">'http://localhost:8080'</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">cors</span>: <span class=\"pl-kos\">[</span>\n     <span class=\"pl-s\">'http://localhost:8080'</span>\n   <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Does that help?</p>",
            "createdAt": "2021-12-14T23:21:58Z"
          },
          {
            "author": {
              "name": "ssyberg",
              "avatar": "https://avatars.githubusercontent.com/u/1661046?v=4",
              "url": "https://github.com/ssyberg"
            },
            "body": "<p dir=\"auto\">Oh! I don't think I saw that documented, but it's possible I missed it.</p>",
            "createdAt": "2021-12-14T23:46:23Z"
          },
          {
            "author": {
              "name": "ssyberg",
              "avatar": "https://avatars.githubusercontent.com/u/1661046?v=4",
              "url": "https://github.com/ssyberg"
            },
            "body": "<p dir=\"auto\">ACK nm I see it now.</p>",
            "createdAt": "2021-12-14T23:49:28Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">For a little bit of context here, the <code class=\"notranslate\">csrf</code> config property does not affect CORS whatsoever—instead it's meant to protect your API against cross-site request forgery attacks.</p>\n<p dir=\"auto\">For security, we use HTTP-only cookies (many other headless CMS do not!) so we're protected from many XSS attacks, but HTTP-only cookies can still be vulnerable to CSRF type attacks.</p>\n<p dir=\"auto\">To prevent against this, we require developers to manually whitelist domains that they will allow requests to be authenticated from using our HTTP-only cookie using the <code class=\"notranslate\">csrf</code> property of the Payload config. If you are only authenticating via your Payload admin panel, then this does not apply to you. But, if you are using Payload authentication in your own apps and they run on different domains from your Payload API, you might want to whitelist the domains that your own app(s) are running on so that Payload allows access to the HTTP-only cookie accordingly.</p>\n<p dir=\"auto\">It's a pretty neat security measure.</p>\n<p dir=\"auto\">Then, like you've found, the <code class=\"notranslate\">cors</code> property is actually the one you were looking for. Happy to hear you're up and running!</p>",
            "createdAt": "2021-12-15T14:54:10Z"
          },
          {
            "author": {
              "name": "ahmetskilinc",
              "avatar": "https://avatars.githubusercontent.com/u/37756565?u=415fbff61c78c5f13f13b02a92a118819683596e&v=4",
              "url": "https://github.com/ahmetskilinc"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> I've made my config to be same as above, but I'm still getting a CORS error.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"serverURL: process.env.PAYLOAD_PUBLIC_BASE_DNS,\nadmin: {\n  user: Users.slug,\n},\ncollections: [...],\nglobals: [...],\nplugins: [addCloudinary],\ncors: [&quot;http://localhost:3001&quot;],\ncsrf: [&quot;http://localhost:3001&quot;],\"><pre class=\"notranslate\"><span class=\"pl-s1\">serverURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_PUBLIC_BASE_DNS</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">admin</span>: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">user</span>: <span class=\"pl-v\">Users</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">slug</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">collections</span>: <span class=\"pl-kos\">[</span>...<span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">globals</span>: <span class=\"pl-kos\">[</span>...<span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">plugins</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s1\">addCloudinary</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">cors</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">\"http://localhost:3001\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">csrf</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">\"http://localhost:3001\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">Is there something I'm missing? I keep getting CORS error from my NextJS app trying to make PUT requests into a collection, however, it works from Postman.</p>",
            "createdAt": "2022-07-09T18:53:09Z"
          }
        ]
      },
      {
        "author": {
          "name": "ssyberg",
          "avatar": "https://avatars.githubusercontent.com/u/1661046?v=4",
          "url": "https://github.com/ssyberg"
        },
        "body": "<p dir=\"auto\">UPDATE: I misread the docs / am a CORS noob and this is not needed, see the correct reply below!</p>\n<p dir=\"auto\"><del>JFYI if anyone else comes across this, I solved by explicitly adding the cors package and adding to the server config. I'm pretty sure that <code class=\"notranslate\">app.use</code> has to be called before the <code class=\"notranslate\">payload.init</code> which I'm guessing adds all the routing</del></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"var cors = require('cors');\nvar corsOptions = {\n  origin: 'http://localhost:8080',\n  credentials: true,\n  optionsSuccessStatus: 200 // some legacy browsers (IE11, various SmartTVs) choke on 204\n}\n\napp.use(cors(corsOptions));\"><pre class=\"notranslate\"><code class=\"notranslate\">var cors = require('cors');\nvar corsOptions = {\n  origin: 'http://localhost:8080',\n  credentials: true,\n  optionsSuccessStatus: 200 // some legacy browsers (IE11, various SmartTVs) choke on 204\n}\n\napp.use(cors(corsOptions));\n</code></pre></div>",
        "createdAt": "2021-12-14T22:27:22Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Note for anyone else that sees this: Payload does not require you to use the third-party <code class=\"notranslate\">cors</code> package. Instead, just use the <code class=\"notranslate\">cors</code> property on the Payload config and you'll be good to go!</p>",
            "createdAt": "2021-12-15T14:54:50Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">The <code class=\"notranslate\">Access-Control-Allow-Origin</code> header should be included automatically in the API after you have added it to your config.</p>\n<p dir=\"auto\">Could you share what you you have in your Payload config for CSRF? Perhaps you're setting it as a string and not in a an array?<br>\nCould it be that you're using an env variable that isn't available with your deployment?</p>\n<p dir=\"auto\">I'm happy to look if you have more info to share, thanks!</p>",
      "createdAt": "2021-12-14T22:27:01Z",
      "chosenAt": "2021-12-15T14:57:25Z",
      "chosenBy": "ssyberg",
      "replies": [
        {
          "author": {
            "name": "ssyberg",
            "avatar": "https://avatars.githubusercontent.com/u/1661046?v=4",
            "url": "https://github.com/ssyberg"
          },
          "body": "<blockquote>\n<p dir=\"auto\">The <code class=\"notranslate\">Access-Control-Allow-Origin</code> header should be included automatically in the API after you have added it to your config.</p>\n</blockquote>\n<p dir=\"auto\">As in this should have been added as soon as I populated the <code class=\"notranslate\">csrf</code> config? That's kind of what I was assuming would happen but it sure didn't seem to do it.</p>\n<blockquote>\n<p dir=\"auto\">Could you share what you you have in your Payload config for CSRF?</p>\n</blockquote>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  csrf: [\n    'http://localhost:8080'\n  ]\"><pre class=\"notranslate\"><code class=\"notranslate\">  csrf: [\n    'http://localhost:8080'\n  ]\n</code></pre></div>",
          "createdAt": "2021-12-14T22:31:25Z"
        },
        {
          "author": {
            "name": "ssyberg",
            "avatar": "https://avatars.githubusercontent.com/u/1661046?v=4",
            "url": "https://github.com/ssyberg"
          },
          "body": "<p dir=\"auto\">I'll just provide the whole thing, nothing secret here:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"export default buildConfig({\n  serverURL: 'http://localhost:3000',\n  admin: {\n    user: Users.slug,\n  },\n  collections: [\n    Informationals,\n    Users,\n    Medias\n  ],\n  csrf: [\n    'http://localhost:8080'\n  ]\n});\"><pre class=\"notranslate\"><code class=\"notranslate\">export default buildConfig({\n  serverURL: 'http://localhost:3000',\n  admin: {\n    user: Users.slug,\n  },\n  collections: [\n    Informationals,\n    Users,\n    Medias\n  ],\n  csrf: [\n    'http://localhost:8080'\n  ]\n});\n</code></pre></div>",
          "createdAt": "2021-12-14T22:32:19Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ssyberg/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ssyberg\">@ssyberg</a>  Thanks for sharing your config. The csrf should be your domain and you can add cors too. We need to tell the Payload API (<code class=\"notranslate\">serverURL</code>, localhost:3000) to allow requests from localhost:8080, the vue app.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export default buildConfig({\n  serverURL: 'http://localhost:3000',\n  admin: {\n    user: Users.slug,\n  },\n  collections: [\n    Informationals,\n    Users,\n    Medias\n  ],\n  csrf: [\n    'http://localhost:8080'\n  ],\n  cors: [\n     'http://localhost:8080'\n   ]\n});\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-en\">buildConfig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">serverURL</span>: <span class=\"pl-s\">'http://localhost:3000'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">user</span>: <span class=\"pl-v\">Users</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">slug</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">collections</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-v\">Informationals</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-v\">Users</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-v\">Medias</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">csrf</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-s\">'http://localhost:8080'</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">cors</span>: <span class=\"pl-kos\">[</span>\n     <span class=\"pl-s\">'http://localhost:8080'</span>\n   <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Does that help?</p>",
          "createdAt": "2021-12-14T23:21:58Z"
        },
        {
          "author": {
            "name": "ssyberg",
            "avatar": "https://avatars.githubusercontent.com/u/1661046?v=4",
            "url": "https://github.com/ssyberg"
          },
          "body": "<p dir=\"auto\">Oh! I don't think I saw that documented, but it's possible I missed it.</p>",
          "createdAt": "2021-12-14T23:46:23Z"
        },
        {
          "author": {
            "name": "ssyberg",
            "avatar": "https://avatars.githubusercontent.com/u/1661046?v=4",
            "url": "https://github.com/ssyberg"
          },
          "body": "<p dir=\"auto\">ACK nm I see it now.</p>",
          "createdAt": "2021-12-14T23:49:28Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">For a little bit of context here, the <code class=\"notranslate\">csrf</code> config property does not affect CORS whatsoever—instead it's meant to protect your API against cross-site request forgery attacks.</p>\n<p dir=\"auto\">For security, we use HTTP-only cookies (many other headless CMS do not!) so we're protected from many XSS attacks, but HTTP-only cookies can still be vulnerable to CSRF type attacks.</p>\n<p dir=\"auto\">To prevent against this, we require developers to manually whitelist domains that they will allow requests to be authenticated from using our HTTP-only cookie using the <code class=\"notranslate\">csrf</code> property of the Payload config. If you are only authenticating via your Payload admin panel, then this does not apply to you. But, if you are using Payload authentication in your own apps and they run on different domains from your Payload API, you might want to whitelist the domains that your own app(s) are running on so that Payload allows access to the HTTP-only cookie accordingly.</p>\n<p dir=\"auto\">It's a pretty neat security measure.</p>\n<p dir=\"auto\">Then, like you've found, the <code class=\"notranslate\">cors</code> property is actually the one you were looking for. Happy to hear you're up and running!</p>",
          "createdAt": "2021-12-15T14:54:10Z"
        },
        {
          "author": {
            "name": "ahmetskilinc",
            "avatar": "https://avatars.githubusercontent.com/u/37756565?u=415fbff61c78c5f13f13b02a92a118819683596e&v=4",
            "url": "https://github.com/ahmetskilinc"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> I've made my config to be same as above, but I'm still getting a CORS error.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"serverURL: process.env.PAYLOAD_PUBLIC_BASE_DNS,\nadmin: {\n  user: Users.slug,\n},\ncollections: [...],\nglobals: [...],\nplugins: [addCloudinary],\ncors: [&quot;http://localhost:3001&quot;],\ncsrf: [&quot;http://localhost:3001&quot;],\"><pre class=\"notranslate\"><span class=\"pl-s1\">serverURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_PUBLIC_BASE_DNS</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">admin</span>: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">user</span>: <span class=\"pl-v\">Users</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">slug</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">collections</span>: <span class=\"pl-kos\">[</span>...<span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">globals</span>: <span class=\"pl-kos\">[</span>...<span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">plugins</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s1\">addCloudinary</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">cors</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">\"http://localhost:3001\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">csrf</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">\"http://localhost:3001\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">Is there something I'm missing? I keep getting CORS error from my NextJS app trying to make PUT requests into a collection, however, it works from Postman.</p>",
          "createdAt": "2022-07-09T18:53:09Z"
        }
      ]
    }
  },
  {
    "title": "Unable to create first user. Getting refused connection",
    "body": "<p dir=\"auto\">No idea why this isn't working. All I've done is create a payload project and run <code class=\"notranslate\">$ npm run dev</code>.</p>\n<p dir=\"auto\">I am running a node instance on a machine on my local network, I have all ports open in ufw to my machine I'm currently working on.</p>\n<p dir=\"auto\"><strong>Terminal Reports:</strong></p>\n<blockquote>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ npm run dev\n&gt; payload-blog-typescript@1.0.0 dev\n&gt; cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts nodemon\n\n[nodemon] 2.0.19\n[nodemon] to restart at any time, enter `rs`\n[nodemon] watching path(s): *.*\n[nodemon] watching extensions: ts\n[nodemon] starting `ts-node src/server.ts`\n[21:59:01] INFO (payload): Starting Payload...\n[21:59:02] INFO (payload): Payload Admin URL: http://localhost:3000/admin\n[21:59:02] INFO (payload): Connected to Mongo server successfully!\nwebpack built f0d434148af6fe3871a0 in 1806ms\nwebpack compiled successfully\"><pre class=\"notranslate\"><code class=\"notranslate\">$ npm run dev\n&gt; payload-blog-typescript@1.0.0 dev\n&gt; cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts nodemon\n\n[nodemon] 2.0.19\n[nodemon] to restart at any time, enter `rs`\n[nodemon] watching path(s): *.*\n[nodemon] watching extensions: ts\n[nodemon] starting `ts-node src/server.ts`\n[21:59:01] INFO (payload): Starting Payload...\n[21:59:02] INFO (payload): Payload Admin URL: http://localhost:3000/admin\n[21:59:02] INFO (payload): Connected to Mongo server successfully!\nwebpack built f0d434148af6fe3871a0 in 1806ms\nwebpack compiled successfully\n</code></pre></div>\n</blockquote>\n<p dir=\"auto\"><strong>The admin page loads and then both Chrome and Edge report:</strong></p>\n<blockquote>\n<p dir=\"auto\"><code class=\"notranslate\">api.js:5          GET http://localhost:3000/api/users/me net::ERR_CONNECTION_REFUSED</code></p>\n<blockquote>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"get @ api.js:5\nfetchMe  @  index.js:53\n(anonymous)  @  index.js:62\ncommitHookEffectListMount @  react-dom.development.js:23150\ncommitPassiveMountOnFiber  @  react-dom.development.js:24931\ncommitPassiveMountEffects_complete  @  react-dom.development.js:24891\ncommitPassiveMountEffects_begin  @  react-dom.development.js:24878\ncommitPassiveMountEffects  @  react-dom.development.js:24866\nflushPassiveEffectsImpl  @ react-dom.development.js:27039\nflushPassiveEffects @ react-dom.development.js:26984\n(anonymous) @ react-dom.development.js:26769\nworkLoop @ scheduler.development.js:266\nflushWork @ scheduler.development.js:239\nperformWorkUntilDeadline @ scheduler.development.js:533\"><pre class=\"notranslate\"><code class=\"notranslate\">get @ api.js:5\nfetchMe  @  index.js:53\n(anonymous)  @  index.js:62\ncommitHookEffectListMount @  react-dom.development.js:23150\ncommitPassiveMountOnFiber  @  react-dom.development.js:24931\ncommitPassiveMountEffects_complete  @  react-dom.development.js:24891\ncommitPassiveMountEffects_begin  @  react-dom.development.js:24878\ncommitPassiveMountEffects  @  react-dom.development.js:24866\nflushPassiveEffectsImpl  @ react-dom.development.js:27039\nflushPassiveEffects @ react-dom.development.js:26984\n(anonymous) @ react-dom.development.js:26769\nworkLoop @ scheduler.development.js:266\nflushWork @ scheduler.development.js:239\nperformWorkUntilDeadline @ scheduler.development.js:533\n</code></pre></div>\n</blockquote>\n</blockquote>\n<blockquote>\n<p dir=\"auto\"><code class=\"notranslate\">Uncaught (in promise) TypeError: Failed to fetch</code></p>\n<blockquote>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"at Object.get (api.js:5:1)\nat fetchMe (index.js:53:35)\nat index.js:62:1\nat commitHookEffectListMount (react-dom.development.js:23150:1)\nat commitPassiveMountOnFiber (react-dom.development.js:24931:1)\nat commitPassiveMountEffects_complete (react-dom.development.js:24891:1)\nat commitPassiveMountEffects_begin (react-dom.development.js:24878:1)\nat commitPassiveMountEffects (react-dom.development.js:24866:1)\nat flushPassiveEffectsImpl (react-dom.development.js:27039:1)\nat flushPassiveEffects (react-dom.development.js:26984:1)\"><pre class=\"notranslate\"><code class=\"notranslate\">at Object.get (api.js:5:1)\nat fetchMe (index.js:53:35)\nat index.js:62:1\nat commitHookEffectListMount (react-dom.development.js:23150:1)\nat commitPassiveMountOnFiber (react-dom.development.js:24931:1)\nat commitPassiveMountEffects_complete (react-dom.development.js:24891:1)\nat commitPassiveMountEffects_begin (react-dom.development.js:24878:1)\nat commitPassiveMountEffects (react-dom.development.js:24866:1)\nat flushPassiveEffectsImpl (react-dom.development.js:27039:1)\nat flushPassiveEffects (react-dom.development.js:26984:1)\n</code></pre></div>\n</blockquote>\n</blockquote>\n<p dir=\"auto\">When Clicking on the Create button at <code class=\"notranslate\">localmachine:3000/admin/create-first-user</code> I get this error:</p>\n<blockquote>\n<p dir=\"auto\"><code class=\"notranslate\">POST http://localhost:3000/api/users/first-register net::ERR_CONNECTION_REFUSED</code></p>\n<blockquote>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"post @ api.js:16\n(anonymous) @ index.js:116\nawait in (anonymous) (async)  \nonSubmit @ index.js:298\ncallCallback @ react-dom.development.js:4164\ninvokeGuardedCallbackDev @ react-dom.development.js:4213\ninvokeGuardedCallback @ react-dom.development.js:4277\ninvokeGuardedCallbackAndCatchFirstError @ react-dom.development.js:4291\nexecuteDispatch @ react-dom.development.js:9041\nprocessDispatchQueueItemsInOrder @ react-dom.development.js:9073\nprocessDispatchQueue @ react-dom.development.js:9086\ndispatchEventsForPlugins @ react-dom.development.js:9097\n(anonymous) @ react-dom.development.js:9288\nbatchedUpdates$1 @ react-dom.development.js:26140\nbatchedUpdates @ react-dom.development.js:3991\ndispatchEventForPluginEventSystem @ react-dom.development.js:9287\ndispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay @ react-dom.development.js:6465\ndispatchEvent @ react-dom.development.js:6457\ndispatchDiscreteEvent @ react-dom.development.js:6430\"><pre class=\"notranslate\"><code class=\"notranslate\">post @ api.js:16\n(anonymous) @ index.js:116\nawait in (anonymous) (async)  \nonSubmit @ index.js:298\ncallCallback @ react-dom.development.js:4164\ninvokeGuardedCallbackDev @ react-dom.development.js:4213\ninvokeGuardedCallback @ react-dom.development.js:4277\ninvokeGuardedCallbackAndCatchFirstError @ react-dom.development.js:4291\nexecuteDispatch @ react-dom.development.js:9041\nprocessDispatchQueueItemsInOrder @ react-dom.development.js:9073\nprocessDispatchQueue @ react-dom.development.js:9086\ndispatchEventsForPlugins @ react-dom.development.js:9097\n(anonymous) @ react-dom.development.js:9288\nbatchedUpdates$1 @ react-dom.development.js:26140\nbatchedUpdates @ react-dom.development.js:3991\ndispatchEventForPluginEventSystem @ react-dom.development.js:9287\ndispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay @ react-dom.development.js:6465\ndispatchEvent @ react-dom.development.js:6457\ndispatchDiscreteEvent @ react-dom.development.js:6430\n</code></pre></div>\n</blockquote>\n</blockquote>\n<p dir=\"auto\">No idea how to troubleshoot the issue as I can't see any files or anyone else having this issue. I'm running v16 of nodejs and mongo is working correctly and has built the Database and collections. It seems as if Payload stumbled at the last hurdle and I have no idea what's causing it.</p>\n<p dir=\"auto\">Anyone have any idea what's causing this?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/728",
    "id": "728",
    "createdAt": "2022-07-07T22:53:33Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "GronsoBitburg",
      "avatar": "https://avatars.githubusercontent.com/u/67450408?v=4",
      "url": "https://github.com/GronsoBitburg"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/GronsoBitburg/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/GronsoBitburg\">@GronsoBitburg</a> — I think this sounds like it has to do with your local environment rather than Payload. it seems like you are not able to connect to <code class=\"notranslate\">localhost:3000</code>.</p>\n<p dir=\"auto\">What I'd do is try and start a simple Express server listening on port <code class=\"notranslate\">3000</code> and then try and load it in your browser to see if you can access it.</p>\n<p dir=\"auto\">Create a new directory and put the following two files in it:</p>\n<p dir=\"auto\"><code class=\"notranslate\">package.json</code></p>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  &quot;name&quot;: &quot;express-app&quot;,\n  &quot;version&quot;: &quot;1.0.0&quot;,\n  &quot;description&quot;: &quot;&quot;,\n  &quot;main&quot;: &quot;server.js&quot;,\n  &quot;scripts&quot;: {\n    &quot;start&quot;: &quot;node server.js&quot;\n  },\n  &quot;author&quot;: &quot;&quot;,\n  &quot;license&quot;: &quot;ISC&quot;,\n  &quot;dependencies&quot;: {\n    &quot;express&quot;: &quot;^4.18.1&quot;\n  }\n}\"><pre class=\"notranslate\">{\n  <span class=\"pl-ent\">\"name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>express-app<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"version\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.0.0<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"description\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"main\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>server.js<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"scripts\"</span>: {\n    <span class=\"pl-ent\">\"start\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node server.js<span class=\"pl-pds\">\"</span></span>\n  },\n  <span class=\"pl-ent\">\"author\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"license\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ISC<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"dependencies\"</span>: {\n    <span class=\"pl-ent\">\"express\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^4.18.1<span class=\"pl-pds\">\"</span></span>\n  }\n}</pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">server.js</code></p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const express = require('express');\n\nconst expressApp = express();\n\nexpressApp.get('/', (_, res) =&gt; {\n  return res.send('Hello world');\n})\n\nexpressApp.listen(3000, async () =&gt; {\n  console.log('Now listening on port 3000');\n});\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">express</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'express'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expressApp</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">express</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expressApp</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">_</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">send</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Hello world'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-s1\">expressApp</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">listen</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">3000</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Now listening on port 3000'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Then run <code class=\"notranslate\">npm install</code> and then <code class=\"notranslate\">node server.js</code> at your command line in that folder, and see if you can open up <code class=\"notranslate\">http://localhost:3000</code> in your browser. Does it say \"Hello world\"?</p>",
        "createdAt": "2022-07-08T20:02:53Z",
        "replies": [
          {
            "author": {
              "name": "GronsoBitburg",
              "avatar": "https://avatars.githubusercontent.com/u/67450408?v=4",
              "url": "https://github.com/GronsoBitburg"
            },
            "body": "<p dir=\"auto\">Hi James, thanks for the quick reply.</p>\n<p dir=\"auto\">Yeah, the express app does indeed show 'Hello World'.</p>\n<p dir=\"auto\">I can create a user via my browser on my server using localhost and have access to the admin page when using my server locally, but that is far from ideal.<br>\nAs soon as I try to connect via my network, I can view the page <code class=\"notranslate\">http://192.168.50.93:3000/admin</code> that now only displays 'Loading' at the top left of the screen. Since I have successfully created a user it seems be stuck infinitely trying to fetch something.</p>\n<p dir=\"auto\">with the following errors in chrome's dev tools:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[HMR] connected          client.js:95\nFailed to load resource: net::ERR_CONNECTION_REFUSED          api.js:5\nUncaught (in promise) TypeError: Failed to fetch\"><pre class=\"notranslate\"><code class=\"notranslate\">[HMR] connected          client.js:95\nFailed to load resource: net::ERR_CONNECTION_REFUSED          api.js:5\nUncaught (in promise) TypeError: Failed to fetch\n</code></pre></div>\n<p dir=\"auto\">Previously when faced with similar issues like this in environments such as Vue or Angular I would just use:<br>\n<code class=\"notranslate\">npm run dev --disable-host-check</code>  or <code class=\"notranslate\">ng serve --host 0.0.0.0 --disableHostCheck</code> to remedy the issue.</p>\n<p dir=\"auto\">I also tried to change <code class=\"notranslate\">serverURL: 'http://localhost:3000',</code> to <code class=\"notranslate\">serverURL: 'http://0.0.0.0:3000',</code> in payload.config.ts too but no dice. But I do get a different error though...</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[HMR] connected          client.js:95\napi.js:5          GET http://0.0.0.0:3000/api/users/me net::ERR_ADDRESS_INVALID\"><pre class=\"notranslate\"><code class=\"notranslate\">[HMR] connected          client.js:95\napi.js:5          GET http://0.0.0.0:3000/api/users/me net::ERR_ADDRESS_INVALID\n</code></pre></div>",
            "createdAt": "2022-07-09T01:18:26Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Ah, you need to set your config's <code class=\"notranslate\">serverURL</code> to <code class=\"notranslate\">http://192.168.50.93:3000</code>. I think your <code class=\"notranslate\">serverURL</code> says localhost, is that right?</p>",
            "createdAt": "2022-07-09T01:45:21Z"
          },
          {
            "author": {
              "name": "GronsoBitburg",
              "avatar": "https://avatars.githubusercontent.com/u/67450408?v=4",
              "url": "https://github.com/GronsoBitburg"
            },
            "body": "<p dir=\"auto\">Yep, It was a CORS error. It only affected my site when it tried to access the api.<br>\nI Just couldn't figure it out there. Changing serverURL to suit my browser input did the trick. (I always login using my server name <a href=\"http://jupiter:3000/\" rel=\"nofollow\">http://jupiter:3000/</a>)</p>\n<p dir=\"auto\">Thanks for your help, I really appreciate it.</p>",
            "createdAt": "2022-07-09T02:02:34Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/GronsoBitburg/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/GronsoBitburg\">@GronsoBitburg</a> — I think this sounds like it has to do with your local environment rather than Payload. it seems like you are not able to connect to <code class=\"notranslate\">localhost:3000</code>.</p>\n<p dir=\"auto\">What I'd do is try and start a simple Express server listening on port <code class=\"notranslate\">3000</code> and then try and load it in your browser to see if you can access it.</p>\n<p dir=\"auto\">Create a new directory and put the following two files in it:</p>\n<p dir=\"auto\"><code class=\"notranslate\">package.json</code></p>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  &quot;name&quot;: &quot;express-app&quot;,\n  &quot;version&quot;: &quot;1.0.0&quot;,\n  &quot;description&quot;: &quot;&quot;,\n  &quot;main&quot;: &quot;server.js&quot;,\n  &quot;scripts&quot;: {\n    &quot;start&quot;: &quot;node server.js&quot;\n  },\n  &quot;author&quot;: &quot;&quot;,\n  &quot;license&quot;: &quot;ISC&quot;,\n  &quot;dependencies&quot;: {\n    &quot;express&quot;: &quot;^4.18.1&quot;\n  }\n}\"><pre class=\"notranslate\">{\n  <span class=\"pl-ent\">\"name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>express-app<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"version\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.0.0<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"description\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"main\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>server.js<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"scripts\"</span>: {\n    <span class=\"pl-ent\">\"start\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node server.js<span class=\"pl-pds\">\"</span></span>\n  },\n  <span class=\"pl-ent\">\"author\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"license\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ISC<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"dependencies\"</span>: {\n    <span class=\"pl-ent\">\"express\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^4.18.1<span class=\"pl-pds\">\"</span></span>\n  }\n}</pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">server.js</code></p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const express = require('express');\n\nconst expressApp = express();\n\nexpressApp.get('/', (_, res) =&gt; {\n  return res.send('Hello world');\n})\n\nexpressApp.listen(3000, async () =&gt; {\n  console.log('Now listening on port 3000');\n});\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">express</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'express'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expressApp</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">express</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expressApp</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">_</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">send</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Hello world'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-s1\">expressApp</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">listen</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">3000</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Now listening on port 3000'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Then run <code class=\"notranslate\">npm install</code> and then <code class=\"notranslate\">node server.js</code> at your command line in that folder, and see if you can open up <code class=\"notranslate\">http://localhost:3000</code> in your browser. Does it say \"Hello world\"?</p>",
      "createdAt": "2022-07-08T20:02:53Z",
      "chosenAt": "2022-07-12T12:25:08Z",
      "chosenBy": "GronsoBitburg",
      "replies": [
        {
          "author": {
            "name": "GronsoBitburg",
            "avatar": "https://avatars.githubusercontent.com/u/67450408?v=4",
            "url": "https://github.com/GronsoBitburg"
          },
          "body": "<p dir=\"auto\">Hi James, thanks for the quick reply.</p>\n<p dir=\"auto\">Yeah, the express app does indeed show 'Hello World'.</p>\n<p dir=\"auto\">I can create a user via my browser on my server using localhost and have access to the admin page when using my server locally, but that is far from ideal.<br>\nAs soon as I try to connect via my network, I can view the page <code class=\"notranslate\">http://192.168.50.93:3000/admin</code> that now only displays 'Loading' at the top left of the screen. Since I have successfully created a user it seems be stuck infinitely trying to fetch something.</p>\n<p dir=\"auto\">with the following errors in chrome's dev tools:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[HMR] connected          client.js:95\nFailed to load resource: net::ERR_CONNECTION_REFUSED          api.js:5\nUncaught (in promise) TypeError: Failed to fetch\"><pre class=\"notranslate\"><code class=\"notranslate\">[HMR] connected          client.js:95\nFailed to load resource: net::ERR_CONNECTION_REFUSED          api.js:5\nUncaught (in promise) TypeError: Failed to fetch\n</code></pre></div>\n<p dir=\"auto\">Previously when faced with similar issues like this in environments such as Vue or Angular I would just use:<br>\n<code class=\"notranslate\">npm run dev --disable-host-check</code>  or <code class=\"notranslate\">ng serve --host 0.0.0.0 --disableHostCheck</code> to remedy the issue.</p>\n<p dir=\"auto\">I also tried to change <code class=\"notranslate\">serverURL: 'http://localhost:3000',</code> to <code class=\"notranslate\">serverURL: 'http://0.0.0.0:3000',</code> in payload.config.ts too but no dice. But I do get a different error though...</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[HMR] connected          client.js:95\napi.js:5          GET http://0.0.0.0:3000/api/users/me net::ERR_ADDRESS_INVALID\"><pre class=\"notranslate\"><code class=\"notranslate\">[HMR] connected          client.js:95\napi.js:5          GET http://0.0.0.0:3000/api/users/me net::ERR_ADDRESS_INVALID\n</code></pre></div>",
          "createdAt": "2022-07-09T01:18:26Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Ah, you need to set your config's <code class=\"notranslate\">serverURL</code> to <code class=\"notranslate\">http://192.168.50.93:3000</code>. I think your <code class=\"notranslate\">serverURL</code> says localhost, is that right?</p>",
          "createdAt": "2022-07-09T01:45:21Z"
        },
        {
          "author": {
            "name": "GronsoBitburg",
            "avatar": "https://avatars.githubusercontent.com/u/67450408?v=4",
            "url": "https://github.com/GronsoBitburg"
          },
          "body": "<p dir=\"auto\">Yep, It was a CORS error. It only affected my site when it tried to access the api.<br>\nI Just couldn't figure it out there. Changing serverURL to suit my browser input did the trick. (I always login using my server name <a href=\"http://jupiter:3000/\" rel=\"nofollow\">http://jupiter:3000/</a>)</p>\n<p dir=\"auto\">Thanks for your help, I really appreciate it.</p>",
          "createdAt": "2022-07-09T02:02:34Z"
        }
      ]
    }
  },
  {
    "title": "Advice for global translations",
    "body": "<p dir=\"auto\">I'm migrating a website from Wordpress to nextjs/paylaodcms and I have tons of \"global translations\" - e.g. header/footer/buttons/contact phone numbers/... - components are not part of any collection.</p>\n<p dir=\"auto\">My approach would be to create a collection, called Translations with a unique name e.g. <code class=\"notranslate\">header.contact.phone</code> and I fetch that on each nextpage and pass it to a context.</p>\n<p dir=\"auto\">My question is - is there a better advice / strategy?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/729",
    "id": "729",
    "createdAt": "2022-07-08T07:47:04Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "wiesson",
      "avatar": "https://avatars.githubusercontent.com/u/933231?v=4",
      "url": "https://github.com/wiesson"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Yes. Have you looked at globals?<br>\n<a href=\"https://payloadcms.com/docs/configuration/globals\" rel=\"nofollow\">https://payloadcms.com/docs/configuration/globals</a></p>\n<p dir=\"auto\">You can find an example in the public demo: <a href=\"https://github.com/payloadcms/public-demo/blob/master/src/globals/MainMenu.ts\">https://github.com/payloadcms/public-demo/blob/master/src/globals/MainMenu.ts</a></p>\n<p dir=\"auto\">I hope that helps.</p>",
        "createdAt": "2022-07-08T10:53:26Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Yes. Have you looked at globals?<br>\n<a href=\"https://payloadcms.com/docs/configuration/globals\" rel=\"nofollow\">https://payloadcms.com/docs/configuration/globals</a></p>\n<p dir=\"auto\">You can find an example in the public demo: <a href=\"https://github.com/payloadcms/public-demo/blob/master/src/globals/MainMenu.ts\">https://github.com/payloadcms/public-demo/blob/master/src/globals/MainMenu.ts</a></p>\n<p dir=\"auto\">I hope that helps.</p>",
      "createdAt": "2022-07-08T10:53:26Z",
      "chosenAt": "2022-07-08T11:05:04Z",
      "chosenBy": "wiesson",
      "replies": null
    }
  },
  {
    "title": "Keep getting \"You are not allowed to perform this action.\" when trying to save.",
    "body": "<p dir=\"auto\">I hosted Payload on Northflank, I'm able to access it and created a login but whenever I try to create a new document in Payload and save it I get the following in the logs:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"stdout F [10:02:38] ERROR (payload): Forbidden: You are not allowed to perform this action.\nstdout F     at Layer.handle [as handle_request] (/home/node/node_modules/express/lib/router/layer.js:95:5)\nstdout F     at Route.dispatch (/home/node/node_modules/express/lib/router/route.js:114:3)\nstdout F     at next (/home/node/node_modules/express/lib/router/route.js:138:14)\nstdout F     at next (/home/node/node_modules/express/lib/router/route.js:144:13)\nstdout F     at Layer.handle [as handle_request] (/home/node/node_modules/express/lib/router/layer.js:95:5)\nstdout F     at updateHandler (/home/node/node_modules/payload/src/preferences/requestHandlers/update.ts:12:29)\nstdout F     at update (/home/node/node_modules/payload/src/preferences/operations/update.ts:23:11)\nstdout F     at new UnauthorizedError (/home/node/node_modules/payload/src/errors/UnathorizedError.ts:6:5)\nstdout F     at new APIError (/home/node/node_modules/payload/src/errors/APIError.ts:43:5)\nstdout F     at new ExtendableError (/home/node/node_modules/payload/src/errors/APIError.ts:26:11)\"><pre class=\"notranslate\"><code class=\"notranslate\">stdout F [10:02:38] ERROR (payload): Forbidden: You are not allowed to perform this action.\nstdout F     at Layer.handle [as handle_request] (/home/node/node_modules/express/lib/router/layer.js:95:5)\nstdout F     at Route.dispatch (/home/node/node_modules/express/lib/router/route.js:114:3)\nstdout F     at next (/home/node/node_modules/express/lib/router/route.js:138:14)\nstdout F     at next (/home/node/node_modules/express/lib/router/route.js:144:13)\nstdout F     at Layer.handle [as handle_request] (/home/node/node_modules/express/lib/router/layer.js:95:5)\nstdout F     at updateHandler (/home/node/node_modules/payload/src/preferences/requestHandlers/update.ts:12:29)\nstdout F     at update (/home/node/node_modules/payload/src/preferences/operations/update.ts:23:11)\nstdout F     at new UnauthorizedError (/home/node/node_modules/payload/src/errors/UnathorizedError.ts:6:5)\nstdout F     at new APIError (/home/node/node_modules/payload/src/errors/APIError.ts:43:5)\nstdout F     at new ExtendableError (/home/node/node_modules/payload/src/errors/APIError.ts:26:11)\n</code></pre></div>\n<ul dir=\"auto\">\n<li>PayloadCMS v0.18.5</li>\n<li>Northflank</li>\n<li>MongoDB as add-on in Northflank</li>\n<li>API Route works but obviously no data</li>\n<li>Have been able to create account and login</li>\n</ul>\n<p dir=\"auto\">What could be the issue?</p>\n<p dir=\"auto\">If you need anything other info, please let me know.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/719",
    "id": "719",
    "createdAt": "2022-07-06T10:09:58Z",
    "upvotes": 1,
    "commentTotal": 4,
    "author": {
      "name": "ahmetskilinc",
      "avatar": "https://avatars.githubusercontent.com/u/37756565?u=415fbff61c78c5f13f13b02a92a118819683596e&v=4",
      "url": "https://github.com/ahmetskilinc"
    },
    "comments": [
      {
        "author": {
          "name": "MinSomai",
          "avatar": "https://avatars.githubusercontent.com/u/21338691?u=c2be75f889472dcfd6f5dedaacaba2a34046ed06&v=4",
          "url": "https://github.com/MinSomai"
        },
        "body": "<p dir=\"auto\">for me this usually happens because of two reasons (Rest API).</p>\n<ul dir=\"auto\">\n<li>expired tokens, because I've yet to implement auto refresh</li>\n<li>forgot to include token in the header</li>\n</ul>",
        "createdAt": "2022-07-06T10:27:12Z",
        "replies": [
          {
            "author": {
              "name": "ahmetskilinc",
              "avatar": "https://avatars.githubusercontent.com/u/37756565?u=415fbff61c78c5f13f13b02a92a118819683596e&v=4",
              "url": "https://github.com/ahmetskilinc"
            },
            "body": "<p dir=\"auto\">Which tokens would have expired? I've only just set it up.</p>",
            "createdAt": "2022-07-06T11:45:55Z"
          },
          {
            "author": {
              "name": "MinSomai",
              "avatar": "https://avatars.githubusercontent.com/u/21338691?u=c2be75f889472dcfd6f5dedaacaba2a34046ed06&v=4",
              "url": "https://github.com/MinSomai"
            },
            "body": "<p dir=\"auto\">are you sending JWT token with the create/POST request?</p>",
            "createdAt": "2022-07-06T18:57:58Z"
          },
          {
            "author": {
              "name": "ahmetskilinc",
              "avatar": "https://avatars.githubusercontent.com/u/37756565?u=415fbff61c78c5f13f13b02a92a118819683596e&v=4",
              "url": "https://github.com/ahmetskilinc"
            },
            "body": "<p dir=\"auto\">I'm not, I haven't seen that in the documentation. I'm only creating/updating in Payload, so isnt auth handled by Payload itself.</p>",
            "createdAt": "2022-07-06T19:05:27Z"
          }
        ]
      },
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">This issue is related to your access control. By default, access control requires a user to be logged in, which should be the case if you're saving from the admin.</p>\n<p dir=\"auto\">Here's where I'd start troubleshooting from:</p>\n<ul dir=\"auto\">\n<li>Can you check what the response is from <code class=\"notranslate\">/api/&lt;user-collection-slug&gt;/me</code>. This will give us an indication of current user access.</li>\n<li>Next, I'd check <code class=\"notranslate\">/api/access</code> and confirm that you have access to <code class=\"notranslate\">create</code> of the specific collection.</li>\n</ul>\n<p dir=\"auto\">Other related questions:</p>\n<ul dir=\"auto\">\n<li>Does it work locally?</li>\n<li>Do you have a custom create access control on the collection? If so, can you post it?</li>\n</ul>",
        "createdAt": "2022-07-06T16:50:14Z",
        "replies": [
          {
            "author": {
              "name": "ahmetskilinc",
              "avatar": "https://avatars.githubusercontent.com/u/37756565?u=415fbff61c78c5f13f13b02a92a118819683596e&v=4",
              "url": "https://github.com/ahmetskilinc"
            },
            "body": "<p dir=\"auto\">Here is the response from <code class=\"notranslate\">/api/users/me</code>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n  &quot;user&quot;: {\n    &quot;id&quot;: &quot;62c4a2f7343b1c2a9e2c334b&quot;,\n    &quot;email&quot;: &quot;email@email.com&quot;, // is correct email\n    &quot;firstName&quot;: &quot;Ahmet&quot;,\n    &quot;lastName&quot;: &quot;Kilinc&quot;,\n    &quot;createdAt&quot;: &quot;2022-07-05T20:45:45.263Z&quot;,\n    &quot;updatedAt&quot;: &quot;2022-07-06T17:01:39.724Z&quot;\n  },\n  &quot;collection&quot;: &quot;users&quot;,\n  &quot;token&quot;: &quot;TOKEN&quot;,\n  &quot;exp&quot;: 1657134099\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n  \"user\": {\n    \"id\": \"62c4a2f7343b1c2a9e2c334b\",\n    \"email\": \"email@email.com\", // is correct email\n    \"firstName\": \"Ahmet\",\n    \"lastName\": \"Kilinc\",\n    \"createdAt\": \"2022-07-05T20:45:45.263Z\",\n    \"updatedAt\": \"2022-07-06T17:01:39.724Z\"\n  },\n  \"collection\": \"users\",\n  \"token\": \"TOKEN\",\n  \"exp\": 1657134099\n}\n</code></pre></div>\n<p dir=\"auto\">As for <code class=\"notranslate\">/api/access</code>: most are set to true, well the ones I've set in the collection file anyway.</p>\n<p dir=\"auto\">It does work locally.</p>\n<p dir=\"auto\">I'm assuming you mean <code class=\"notranslate\">access</code> property in the collection:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"access: {\n\tread: () =&gt; {\n\t\treturn true;\n\t},\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">access: {\n\tread: () =&gt; {\n\t\treturn true;\n\t},\n}\n</code></pre></div>\n<p dir=\"auto\">Just realised, I am not using the local API anymore. Does the create method on access have to also be true too?</p>",
            "createdAt": "2022-07-06T17:08:11Z"
          }
        ]
      },
      {
        "author": {
          "name": "ahmetskilinc",
          "avatar": "https://avatars.githubusercontent.com/u/37756565?u=415fbff61c78c5f13f13b02a92a118819683596e&v=4",
          "url": "https://github.com/ahmetskilinc"
        },
        "body": "<p dir=\"auto\">Added the following to the collection after <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/denolfe/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/denolfe\">@denolfe</a> reminded me of the custom access control rules and it is working now!</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"access: {\n\tread: () =&gt; {\n\t\treturn true;\n\t},\n\tcreate: () =&gt; {\n\t\treturn true;\n\t},\n\tdelete: () =&gt; {\n\t\treturn true;\n\t},\n\tupdate: () =&gt; {\n\t\treturn true;\n\t},\n}\"><pre class=\"notranslate\">access: <span class=\"pl-kos\">{</span>\n\t<span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n\t<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-en\">create</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n\t<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-en\">delete</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n\t<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-en\">update</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n\t<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Is there a better way to set this up? I know theres access control you can add to the <code class=\"notranslate\">payload.config.js</code> file but I wasnt able to set it up locally.</p>",
        "createdAt": "2022-07-06T17:19:03Z",
        "replies": [
          {
            "author": {
              "name": "denolfe",
              "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
              "url": "https://github.com/denolfe"
            },
            "body": "<p dir=\"auto\">I'd be very cautious with setting everything true in this way. Setting to true in this way means \"anyone authenticated or not has access\". By default, payload will use the <a href=\"https://github.com/payloadcms/payload/blob/master/src/auth/defaultAccess.ts#L3\">default access</a>, which requires a user to be logged in. I'd encourage you to use this at a minimum unless you explicitly want <em>anyone</em> to be able to perform the operation.</p>\n<p dir=\"auto\">What was the access control for <code class=\"notranslate\">create</code> set to for the collection you were trying to create a document within <em>when it was not working</em>?</p>\n<p dir=\"auto\">There could also be issues related to CSRF protection. Do you have anything set for the <code class=\"notranslate\">csrf</code> in your payload config?</p>",
            "createdAt": "2022-07-06T18:55:42Z"
          },
          {
            "author": {
              "name": "ahmetskilinc",
              "avatar": "https://avatars.githubusercontent.com/u/37756565?u=415fbff61c78c5f13f13b02a92a118819683596e&v=4",
              "url": "https://github.com/ahmetskilinc"
            },
            "body": "<p dir=\"auto\">I had set Read to true as I couldnt get CSRF or CORS to work locally, it was set to:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\tcors: [&quot;http://localhost&quot;, &quot;http://localhost:3000&quot;, &quot;http://localhost:3001&quot;],\n\tcsrf: [&quot;http://localhost&quot;, &quot;http://localhost:3000&quot;, &quot;http://localhost:3001&quot;],\"><pre class=\"notranslate\">\t<span class=\"pl-s1\">cors</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">\"http://localhost\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"http://localhost:3000\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"http://localhost:3001\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-s1\">csrf</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">\"http://localhost\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"http://localhost:3000\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"http://localhost:3001\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">and still didn't work, so I had allowed only for Read to be true in each collection.</p>",
            "createdAt": "2022-07-06T19:02:32Z"
          },
          {
            "author": {
              "name": "denolfe",
              "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
              "url": "https://github.com/denolfe"
            },
            "body": "<p dir=\"auto\">You'll need to configure these values to include your NorthFlank domains in order to work properly when deployed there. These config values are used to determine cookie auth.</p>",
            "createdAt": "2022-07-06T19:27:14Z"
          }
        ]
      },
      {
        "author": {
          "name": "ahmetskilinc",
          "avatar": "https://avatars.githubusercontent.com/u/37756565?u=415fbff61c78c5f13f13b02a92a118819683596e&v=4",
          "url": "https://github.com/ahmetskilinc"
        },
        "body": "<p dir=\"auto\">Fixed.</p>\n<p dir=\"auto\">I had put the wrong url in the env variable for serverURL.</p>",
        "createdAt": "2022-07-07T09:38:47Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "ahmetskilinc",
        "avatar": "https://avatars.githubusercontent.com/u/37756565?u=415fbff61c78c5f13f13b02a92a118819683596e&v=4",
        "url": "https://github.com/ahmetskilinc"
      },
      "body": "<p dir=\"auto\">Fixed.</p>\n<p dir=\"auto\">I had put the wrong url in the env variable for serverURL.</p>",
      "createdAt": "2022-07-07T09:38:47Z",
      "chosenAt": "2022-07-07T09:38:49Z",
      "chosenBy": "ahmetskilinc",
      "replies": null
    }
  },
  {
    "title": "403 response, You are not allowed to perform this action when trying to populate via api",
    "body": "<p dir=\"auto\">Using a Mocha/Chai env, I am trying to setup a TDD/BDD environment.</p>\n<p dir=\"auto\">When i send this curl from anywhere but the app, it works</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"curl --location --request POST 'http://localhost:8081/api/players' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imlhc2lzYWxvbW9uQGdtYWlsLmNvbSIsImlkIjoiNjJjNjBkMzU4ZjlkN2MxYTZlYjAwZTUzIiwiY29sbGVjdGlvbiI6InVzZXJzIiwiaWF0IjoxNjU3MTY3NjUzLCJleHAiOjE2NTcxNzQ4NTN9.cXB5QSTGxrm92aD505nFzElsFlQDrbZ4U2lSZMS9dd0' \\\n--header 'Cookie: payload-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imlhc2lzYWxvbW9uQGdtYWlsLmNvbSIsImlkIjoiNjJjNjBkMzU4ZjlkN2MxYTZlYjAwZTUzIiwiY29sbGVjdGlvbiI6InVzZXJzIiwiaWF0IjoxNjU3MTY3NjUzLCJleHAiOjE2NTcxNzQ4NTN9.cXB5QSTGxrm92aD505nFzElsFlQDrbZ4U2lSZMS9dd0' \\\n--form 'nickname=&quot;pixel&quot;' \\\n--form 'team=&quot;monitor&quot;' \\\n--form 'ronin=&quot;bandwidth&quot;' \\\n--form 'nationality=&quot;firewall&quot;'\"><pre class=\"notranslate\"><code class=\"notranslate\">curl --location --request POST 'http://localhost:8081/api/players' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imlhc2lzYWxvbW9uQGdtYWlsLmNvbSIsImlkIjoiNjJjNjBkMzU4ZjlkN2MxYTZlYjAwZTUzIiwiY29sbGVjdGlvbiI6InVzZXJzIiwiaWF0IjoxNjU3MTY3NjUzLCJleHAiOjE2NTcxNzQ4NTN9.cXB5QSTGxrm92aD505nFzElsFlQDrbZ4U2lSZMS9dd0' \\\n--header 'Cookie: payload-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imlhc2lzYWxvbW9uQGdtYWlsLmNvbSIsImlkIjoiNjJjNjBkMzU4ZjlkN2MxYTZlYjAwZTUzIiwiY29sbGVjdGlvbiI6InVzZXJzIiwiaWF0IjoxNjU3MTY3NjUzLCJleHAiOjE2NTcxNzQ4NTN9.cXB5QSTGxrm92aD505nFzElsFlQDrbZ4U2lSZMS9dd0' \\\n--form 'nickname=\"pixel\"' \\\n--form 'team=\"monitor\"' \\\n--form 'ronin=\"bandwidth\"' \\\n--form 'nationality=\"firewall\"'\n</code></pre></div>\n<p dir=\"auto\">below code does not seem to save the data on the mongodb besides being the same.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"//chaijs\nconst chai = require('chai');\nconst expect = chai.expect;\nconst chaiHttp = require('chai-http');\nchai.use(chaiHttp);\n//faker\nconst faker = require('@faker-js/faker');\n//server data\nconst uri = process.env.API_URI || 'http://localhost:8081';\n//variables\nlet bearer, message;\n\nsuite('Populate', () =&gt; {\n\tsuiteSetup('Login to the api', async () =&gt; {\n\t\tconst res = await chai.request(uri).post('/api/users/login').send({\n\t\t\temail: 'asd@asd.com',\n\t\t\tpassword: 'a',\n\t\t});\n\t\tmessage = res.body.message;\n\t\tbearer = 'Bearer ' + res.body.token;\n\t});\n\tsuite('Check Auth', () =&gt; {\n\t\ttest('Login successful', () =&gt; {\n\t\t\texpect(message).to.eql('Auth Passed');\n\t\t});\n\t});\n\tsuite('Populate Players', () =&gt; {\n\t\ttest('First Player', async () =&gt; {\n\t\t\tconst res = await chai.request(uri).post('/api/players').set('Authorization', bearer).send({\n\t\t\t\tnickname: 'pixel',\n\t\t\t\tteam: 'pixel',\n\t\t\t\taddress: 'asd',\n\t\t\t\tnationality: 'asdasfasfas',\n\t\t\t});\n\t\t\tconsole.log(res.body);\n\t\t\t// {\n\t\t\t// \terrors: [{ message: 'You are not allowed to perform this action.' }];\n\t\t\t// }\n\t\t});\n\t});\n});\"><pre class=\"notranslate\"><code class=\"notranslate\">//chaijs\nconst chai = require('chai');\nconst expect = chai.expect;\nconst chaiHttp = require('chai-http');\nchai.use(chaiHttp);\n//faker\nconst faker = require('@faker-js/faker');\n//server data\nconst uri = process.env.API_URI || 'http://localhost:8081';\n//variables\nlet bearer, message;\n\nsuite('Populate', () =&gt; {\n\tsuiteSetup('Login to the api', async () =&gt; {\n\t\tconst res = await chai.request(uri).post('/api/users/login').send({\n\t\t\temail: 'asd@asd.com',\n\t\t\tpassword: 'a',\n\t\t});\n\t\tmessage = res.body.message;\n\t\tbearer = 'Bearer ' + res.body.token;\n\t});\n\tsuite('Check Auth', () =&gt; {\n\t\ttest('Login successful', () =&gt; {\n\t\t\texpect(message).to.eql('Auth Passed');\n\t\t});\n\t});\n\tsuite('Populate Players', () =&gt; {\n\t\ttest('First Player', async () =&gt; {\n\t\t\tconst res = await chai.request(uri).post('/api/players').set('Authorization', bearer).send({\n\t\t\t\tnickname: 'pixel',\n\t\t\t\tteam: 'pixel',\n\t\t\t\taddress: 'asd',\n\t\t\t\tnationality: 'asdasfasfas',\n\t\t\t});\n\t\t\tconsole.log(res.body);\n\t\t\t// {\n\t\t\t// \terrors: [{ message: 'You are not allowed to perform this action.' }];\n\t\t\t// }\n\t\t});\n\t});\n});\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/725",
    "id": "725",
    "createdAt": "2022-07-07T04:38:57Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "iasisalomon",
      "avatar": "https://avatars.githubusercontent.com/u/48367845?u=11b37b755a8e188387852838793eabccf2a081bc&v=4",
      "url": "https://github.com/iasisalomon"
    },
    "comments": [
      {
        "author": {
          "name": "iasisalomon",
          "avatar": "https://avatars.githubusercontent.com/u/48367845?u=11b37b755a8e188387852838793eabccf2a081bc&v=4",
          "url": "https://github.com/iasisalomon"
        },
        "body": "<p dir=\"auto\">Found the error i was adding bearer to the token to store it, but needed it pure for token and Cookie.</p>\n<p dir=\"auto\">bearer = 'Bearer ' + res.body.token;</p>\n<p dir=\"auto\">Code that actually works:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\t\ttest('First Player', async () =&gt; {\n\t\t\tconst res = await chai\n\t\t\t\t.request(uri)\n\t\t\t\t.post('/api/players')\n\t\t\t\t.set('Cookie', 'payload-token=' + bearer)\n\t\t\t\t.set('Authorization', bearer)\n\t\t\t\t.send({\n\t\t\t\t\tnickname: 'pixel',\n\t\t\t\t\tteam: 'pixel',\n\t\t\t\t\tronin: 'asd',\n\t\t\t\t\tnationality: 'asdasfasfas',\n\t\t\t\t});\n\t\t\tconsole.log(res.body);\"><pre class=\"notranslate\"><code class=\"notranslate\">\t\ttest('First Player', async () =&gt; {\n\t\t\tconst res = await chai\n\t\t\t\t.request(uri)\n\t\t\t\t.post('/api/players')\n\t\t\t\t.set('Cookie', 'payload-token=' + bearer)\n\t\t\t\t.set('Authorization', bearer)\n\t\t\t\t.send({\n\t\t\t\t\tnickname: 'pixel',\n\t\t\t\t\tteam: 'pixel',\n\t\t\t\t\tronin: 'asd',\n\t\t\t\t\tnationality: 'asdasfasfas',\n\t\t\t\t});\n\t\t\tconsole.log(res.body);\n</code></pre></div>",
        "createdAt": "2022-07-07T05:29:11Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "iasisalomon",
        "avatar": "https://avatars.githubusercontent.com/u/48367845?u=11b37b755a8e188387852838793eabccf2a081bc&v=4",
        "url": "https://github.com/iasisalomon"
      },
      "body": "<p dir=\"auto\">Found the error i was adding bearer to the token to store it, but needed it pure for token and Cookie.</p>\n<p dir=\"auto\">bearer = 'Bearer ' + res.body.token;</p>\n<p dir=\"auto\">Code that actually works:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\t\ttest('First Player', async () =&gt; {\n\t\t\tconst res = await chai\n\t\t\t\t.request(uri)\n\t\t\t\t.post('/api/players')\n\t\t\t\t.set('Cookie', 'payload-token=' + bearer)\n\t\t\t\t.set('Authorization', bearer)\n\t\t\t\t.send({\n\t\t\t\t\tnickname: 'pixel',\n\t\t\t\t\tteam: 'pixel',\n\t\t\t\t\tronin: 'asd',\n\t\t\t\t\tnationality: 'asdasfasfas',\n\t\t\t\t});\n\t\t\tconsole.log(res.body);\"><pre class=\"notranslate\"><code class=\"notranslate\">\t\ttest('First Player', async () =&gt; {\n\t\t\tconst res = await chai\n\t\t\t\t.request(uri)\n\t\t\t\t.post('/api/players')\n\t\t\t\t.set('Cookie', 'payload-token=' + bearer)\n\t\t\t\t.set('Authorization', bearer)\n\t\t\t\t.send({\n\t\t\t\t\tnickname: 'pixel',\n\t\t\t\t\tteam: 'pixel',\n\t\t\t\t\tronin: 'asd',\n\t\t\t\t\tnationality: 'asdasfasfas',\n\t\t\t\t});\n\t\t\tconsole.log(res.body);\n</code></pre></div>",
      "createdAt": "2022-07-07T05:29:11Z",
      "chosenAt": "2022-07-07T14:39:02Z",
      "chosenBy": "denolfe",
      "replies": null
    }
  },
  {
    "title": "MongoDB aggregation commands",
    "body": "<p dir=\"auto\">Is it possible to use MongoDB aggregation commands in local queries? Like distinct() or count()?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/469",
    "id": "469",
    "createdAt": "2022-03-03T17:29:44Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "salomo",
      "avatar": "https://avatars.githubusercontent.com/u/1001173?u=2d8ebd3e2415a9f6d669d695839027dfde59cbd2&v=4",
      "url": "https://github.com/salomo"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/salomo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/salomo\">@salomo</a> — with the Payload Local API, this is currently not possible. But, you can do this via one of two ways:</p>\n<ul dir=\"auto\">\n<li>With Mongoose. You can access the Mongoose model that corresponds to your Payload collection via <code class=\"notranslate\">payload.collections[collectionSlug].Model</code>. Then, you can do whatever you can do with Mongoose.</li>\n<li>With raw MongoDB by writing Mongo queries directly against your database</li>\n</ul>\n<p dir=\"auto\">Does this help you out?</p>",
        "createdAt": "2022-03-03T17:46:07Z",
        "replies": [
          {
            "author": {
              "name": "salomo",
              "avatar": "https://avatars.githubusercontent.com/u/1001173?u=2d8ebd3e2415a9f6d669d695839027dfde59cbd2&v=4",
              "url": "https://github.com/salomo"
            },
            "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>,<br>\nthank you for the fast response.</p>\n<blockquote>\n<p dir=\"auto\">With raw MongoDB by writing Mongo queries directly against your database</p>\n</blockquote>\n<p dir=\"auto\">Is it possible to open a second connection to the database within payload? Doesn’t that interfere with the connection that payload already has opened?</p>",
            "createdAt": "2022-03-03T17:51:09Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/salomo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/salomo\">@salomo</a>,</p>\n<blockquote>\n<p dir=\"auto\">Is it possible to open a second connection to the database within payload? Doesn’t that interfere with the connection that payload already has opened?</p>\n</blockquote>\n<p dir=\"auto\">That shouldn't be an issue, you should be able to have many connections open concurrently unless you've limited that on your database.</p>\n<p dir=\"auto\">If you do have trouble, you can customize the mongoose connection with the <code class=\"notranslate\">mongoOptions</code> setting used for Payload. <a href=\"https://payloadcms.com/docs/getting-started/installation#server\" rel=\"nofollow\">https://payloadcms.com/docs/getting-started/installation#server</a></p>\n<p dir=\"auto\">Mongoose documents those options here: <a href=\"https://mongoosejs.com/docs/connections.html\" rel=\"nofollow\">https://mongoosejs.com/docs/connections.html</a></p>\n<p dir=\"auto\">Let us konw if you have trouble!</p>",
            "createdAt": "2022-03-03T18:11:47Z"
          },
          {
            "author": {
              "name": "salomo",
              "avatar": "https://avatars.githubusercontent.com/u/1001173?u=2d8ebd3e2415a9f6d669d695839027dfde59cbd2&v=4",
              "url": "https://github.com/salomo"
            },
            "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a>,</p>\n<blockquote>\n<p dir=\"auto\">With Mongoose. You can access the Mongoose model that corresponds to your Payload collection via payload.collections[collectionSlug].Model. Then, you can do whatever you can do with Mongoose.</p>\n</blockquote>\n<p dir=\"auto\">I tried the Mongoose solution and it works.<br>\nThanks for your help!</p>",
            "createdAt": "2022-03-03T22:14:43Z"
          },
          {
            "author": {
              "name": "hifreaker",
              "avatar": "https://avatars.githubusercontent.com/u/90789196?u=1bd6c4f6acd3ef768c675579928f5b96fb382d0e&v=4",
              "url": "https://github.com/hifreaker"
            },
            "body": "<blockquote>\n<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/salomo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/salomo\">@salomo</a> — with the Payload Local API, this is currently not possible. But, you can do this via one of two ways:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"* With Mongoose. You can access the Mongoose model that corresponds to your Payload collection via `payload.collections[collectionSlug].Model`. Then, you can do whatever you can do with Mongoose.\n\n* With raw MongoDB by writing Mongo queries directly against your database\"><pre class=\"notranslate\"><code class=\"notranslate\">* With Mongoose. You can access the Mongoose model that corresponds to your Payload collection via `payload.collections[collectionSlug].Model`. Then, you can do whatever you can do with Mongoose.\n\n* With raw MongoDB by writing Mongo queries directly against your database\n</code></pre></div>\n<p dir=\"auto\">Does this help you out?</p>\n</blockquote>\n<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>, Could you please tell me how to do I access payload collection in my custom controller? I'm having some trouble while accessing the collection, maybe I'm not accessing it in the right way. It would be great if you could point out some piece of code.</p>",
            "createdAt": "2022-07-05T14:29:33Z"
          },
          {
            "author": {
              "name": "salomo",
              "avatar": "https://avatars.githubusercontent.com/u/1001173?u=2d8ebd3e2415a9f6d669d695839027dfde59cbd2&v=4",
              "url": "https://github.com/salomo"
            },
            "body": "<p dir=\"auto\">You can do it like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const payload = require('payload');\n\npayload.collections['collection_name'].Model.distinct('field_name', {status: {$eq: '*condition*'}}, async (err, data) =&gt; {\n  if (err) {\n    // handle error\n  } else {\n   // work with data\n  }\n});\"><pre class=\"notranslate\"><code class=\"notranslate\">const payload = require('payload');\n\npayload.collections['collection_name'].Model.distinct('field_name', {status: {$eq: '*condition*'}}, async (err, data) =&gt; {\n  if (err) {\n    // handle error\n  } else {\n   // work with data\n  }\n});\n</code></pre></div>",
            "createdAt": "2022-07-05T15:05:30Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/salomo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/salomo\">@salomo</a> — with the Payload Local API, this is currently not possible. But, you can do this via one of two ways:</p>\n<ul dir=\"auto\">\n<li>With Mongoose. You can access the Mongoose model that corresponds to your Payload collection via <code class=\"notranslate\">payload.collections[collectionSlug].Model</code>. Then, you can do whatever you can do with Mongoose.</li>\n<li>With raw MongoDB by writing Mongo queries directly against your database</li>\n</ul>\n<p dir=\"auto\">Does this help you out?</p>",
      "createdAt": "2022-03-03T17:46:07Z",
      "chosenAt": "2022-03-03T22:15:43Z",
      "chosenBy": "salomo",
      "replies": [
        {
          "author": {
            "name": "salomo",
            "avatar": "https://avatars.githubusercontent.com/u/1001173?u=2d8ebd3e2415a9f6d669d695839027dfde59cbd2&v=4",
            "url": "https://github.com/salomo"
          },
          "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>,<br>\nthank you for the fast response.</p>\n<blockquote>\n<p dir=\"auto\">With raw MongoDB by writing Mongo queries directly against your database</p>\n</blockquote>\n<p dir=\"auto\">Is it possible to open a second connection to the database within payload? Doesn’t that interfere with the connection that payload already has opened?</p>",
          "createdAt": "2022-03-03T17:51:09Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/salomo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/salomo\">@salomo</a>,</p>\n<blockquote>\n<p dir=\"auto\">Is it possible to open a second connection to the database within payload? Doesn’t that interfere with the connection that payload already has opened?</p>\n</blockquote>\n<p dir=\"auto\">That shouldn't be an issue, you should be able to have many connections open concurrently unless you've limited that on your database.</p>\n<p dir=\"auto\">If you do have trouble, you can customize the mongoose connection with the <code class=\"notranslate\">mongoOptions</code> setting used for Payload. <a href=\"https://payloadcms.com/docs/getting-started/installation#server\" rel=\"nofollow\">https://payloadcms.com/docs/getting-started/installation#server</a></p>\n<p dir=\"auto\">Mongoose documents those options here: <a href=\"https://mongoosejs.com/docs/connections.html\" rel=\"nofollow\">https://mongoosejs.com/docs/connections.html</a></p>\n<p dir=\"auto\">Let us konw if you have trouble!</p>",
          "createdAt": "2022-03-03T18:11:47Z"
        },
        {
          "author": {
            "name": "salomo",
            "avatar": "https://avatars.githubusercontent.com/u/1001173?u=2d8ebd3e2415a9f6d669d695839027dfde59cbd2&v=4",
            "url": "https://github.com/salomo"
          },
          "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a>,</p>\n<blockquote>\n<p dir=\"auto\">With Mongoose. You can access the Mongoose model that corresponds to your Payload collection via payload.collections[collectionSlug].Model. Then, you can do whatever you can do with Mongoose.</p>\n</blockquote>\n<p dir=\"auto\">I tried the Mongoose solution and it works.<br>\nThanks for your help!</p>",
          "createdAt": "2022-03-03T22:14:43Z"
        },
        {
          "author": {
            "name": "hifreaker",
            "avatar": "https://avatars.githubusercontent.com/u/90789196?u=1bd6c4f6acd3ef768c675579928f5b96fb382d0e&v=4",
            "url": "https://github.com/hifreaker"
          },
          "body": "<blockquote>\n<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/salomo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/salomo\">@salomo</a> — with the Payload Local API, this is currently not possible. But, you can do this via one of two ways:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"* With Mongoose. You can access the Mongoose model that corresponds to your Payload collection via `payload.collections[collectionSlug].Model`. Then, you can do whatever you can do with Mongoose.\n\n* With raw MongoDB by writing Mongo queries directly against your database\"><pre class=\"notranslate\"><code class=\"notranslate\">* With Mongoose. You can access the Mongoose model that corresponds to your Payload collection via `payload.collections[collectionSlug].Model`. Then, you can do whatever you can do with Mongoose.\n\n* With raw MongoDB by writing Mongo queries directly against your database\n</code></pre></div>\n<p dir=\"auto\">Does this help you out?</p>\n</blockquote>\n<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>, Could you please tell me how to do I access payload collection in my custom controller? I'm having some trouble while accessing the collection, maybe I'm not accessing it in the right way. It would be great if you could point out some piece of code.</p>",
          "createdAt": "2022-07-05T14:29:33Z"
        },
        {
          "author": {
            "name": "salomo",
            "avatar": "https://avatars.githubusercontent.com/u/1001173?u=2d8ebd3e2415a9f6d669d695839027dfde59cbd2&v=4",
            "url": "https://github.com/salomo"
          },
          "body": "<p dir=\"auto\">You can do it like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const payload = require('payload');\n\npayload.collections['collection_name'].Model.distinct('field_name', {status: {$eq: '*condition*'}}, async (err, data) =&gt; {\n  if (err) {\n    // handle error\n  } else {\n   // work with data\n  }\n});\"><pre class=\"notranslate\"><code class=\"notranslate\">const payload = require('payload');\n\npayload.collections['collection_name'].Model.distinct('field_name', {status: {$eq: '*condition*'}}, async (err, data) =&gt; {\n  if (err) {\n    // handle error\n  } else {\n   // work with data\n  }\n});\n</code></pre></div>",
          "createdAt": "2022-07-05T15:05:30Z"
        }
      ]
    }
  },
  {
    "title": "Safari and Chrome incognito Set Cookie issue",
    "body": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">I am experiencing issues with the session cookie not being set in Safari and Chrome incognito.</p>\n<p dir=\"auto\">Updated:<br>\nSafari (doesn't work for both localhost and heroku)<br>\nChrome (doesn't work for heroku)<br>\nFirefox (doesn't work for heroku)</p>\n<p dir=\"auto\">I have a \"customer\" collection that needs to be able to log in on the website, and for that collection I have the auth set to:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"auth: {\n        tokenExpiration: 43200,\n        maxLoginAttempts: 15,\n        lockTime: 60000,\n        cookies: {\n            secure: true,\n            sameSite: 'none'\n        },\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">auth: {\n        tokenExpiration: 43200,\n        maxLoginAttempts: 15,\n        lockTime: 60000,\n        cookies: {\n            secure: true,\n            sameSite: 'none'\n        },\n}\n</code></pre></div>\n<p dir=\"auto\">Taking Safari as an example, I am getting the token in the response:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/10617969/147433365-6a87868b-d5ef-42db-bcdc-4730110b98e4.png\"><img width=\"557\" alt=\"Screen Shot 2021-12-26 at 11 05 37 PM\" src=\"https://user-images.githubusercontent.com/10617969/147433365-6a87868b-d5ef-42db-bcdc-4730110b98e4.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">And the user is logged in, but the cookie is not set. So once I refresh the page, the user is again not logged in.</p>\n<p dir=\"auto\">Would greatly appreciate any ideas on how to fix this.</p>\n<p dir=\"auto\">Thank you, Merry Christmas and happy holidays :)</p>",
    "url": "https://github.com/payloadcms/payload/discussions/401",
    "id": "401",
    "createdAt": "2021-12-27T04:12:14Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "vstarush",
      "avatar": "https://avatars.githubusercontent.com/u/10617969?v=4",
      "url": "https://github.com/vstarush"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/vstarush/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vstarush\">@vstarush</a> —</p>\n<p dir=\"auto\">What domain(s) are you using for your Payload API and your frontend website API?</p>\n<p dir=\"auto\">It looks like you are specifying <code class=\"notranslate\">Secure</code> on your cookie, but using an insecure domain (<code class=\"notranslate\">http://localhost:3000</code>). This may cause the cookie rejection.</p>\n<p dir=\"auto\">Also, another thing to check into would be how browsers have started to handle third-party cookies. By default, third-party cookies are now rejected across the board - which means that if you have your API and your website running on separate domains, you won't be able to use the cookie as you're intending to. I'm not yet sure that this is the issue you're experiencing though.</p>\n<p dir=\"auto\">First, I'd check the <code class=\"notranslate\">Secure</code> setting. Maybe only enable <code class=\"notranslate\">Secure</code> in production environments or deployments where you can ensure HTTPS on both your API and your site.</p>\n<p dir=\"auto\">Let me know what URLs you're using for your Payload API and your frontend site and we can go from there!</p>",
        "createdAt": "2021-12-28T16:40:10Z",
        "replies": [
          {
            "author": {
              "name": "vstarush",
              "avatar": "https://avatars.githubusercontent.com/u/10617969?v=4",
              "url": "https://github.com/vstarush"
            },
            "body": "<p dir=\"auto\">Thank you <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> ! Placing the frontend and backend under same domain worked like a charm.</p>",
            "createdAt": "2022-06-15T03:04:38Z"
          },
          {
            "author": {
              "name": "ayusshrathore",
              "avatar": "https://avatars.githubusercontent.com/u/61450246?u=5da35e984f8ac1aafb652e1f08dc24be0fa81905&v=4",
              "url": "https://github.com/ayusshrathore"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/vstarush/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vstarush\">@vstarush</a>, could you please elaborate how did you resolve this? I'm currently facing this issue too.</p>",
            "createdAt": "2022-07-04T14:47:46Z"
          },
          {
            "author": {
              "name": "ayusshrathore",
              "avatar": "https://avatars.githubusercontent.com/u/61450246?u=5da35e984f8ac1aafb652e1f08dc24be0fa81905&v=4",
              "url": "https://github.com/ayusshrathore"
            },
            "body": "<blockquote>\n<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/vstarush/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vstarush\">@vstarush</a> —</p>\n<p dir=\"auto\">What domain(s) are you using for your Payload API and your frontend website API?</p>\n<p dir=\"auto\">It looks like you are specifying <code class=\"notranslate\">Secure</code> on your cookie, but using an insecure domain (<code class=\"notranslate\">http://localhost:3000</code>). This may cause the cookie rejection.</p>\n<p dir=\"auto\">Also, another thing to check into would be how browsers have started to handle third-party cookies. By default, third-party cookies are now rejected across the board - which means that if you have your API and your website running on separate domains, you won't be able to use the cookie as you're intending to. I'm not yet sure that this is the issue you're experiencing though.</p>\n<p dir=\"auto\">First, I'd check the <code class=\"notranslate\">Secure</code> setting. Maybe only enable <code class=\"notranslate\">Secure</code> in production environments or deployments where you can ensure HTTPS on both your API and your site.</p>\n<p dir=\"auto\">Let me know what URLs you're using for your Payload API and your frontend site and we can go from there!</p>\n</blockquote>\n<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>, I'm facing this issue too. Cookies are not being set at my end too. I'm running the frontend server on <code class=\"notranslate\">http://localhost:3000</code> and the backend is hosted on AWS for testing purposes. What should I do so to resolve this?</p>",
            "createdAt": "2022-07-04T15:23:28Z"
          }
        ]
      },
      {
        "author": {
          "name": "vstarush",
          "avatar": "https://avatars.githubusercontent.com/u/10617969?v=4",
          "url": "https://github.com/vstarush"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ayusshrathore/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ayusshrathore\">@ayusshrathore</a></p>\n<p dir=\"auto\">What solved the problem for me is putting the front end and backend under same domain. For example:</p>\n<p dir=\"auto\">Frontend: <a href=\"https://domain.com\" rel=\"nofollow\">https://domain.com</a><br>\nBackend: <a href=\"https://backend.domain.com\" rel=\"nofollow\">https://backend.domain.com</a></p>\n<p dir=\"auto\">The problem is, as <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> mentioned, with the third-party cookies, browsers now do not allow to set them from a different domain. But if the frontend and backend is under one domain, all works fine.</p>",
        "createdAt": "2022-07-04T16:53:14Z",
        "replies": [
          {
            "author": {
              "name": "ayusshrathore",
              "avatar": "https://avatars.githubusercontent.com/u/61450246?u=5da35e984f8ac1aafb652e1f08dc24be0fa81905&v=4",
              "url": "https://github.com/ayusshrathore"
            },
            "body": "<p dir=\"auto\">How do I make it work, if I don't have a subdomain? And how did you test it locally before going in production?</p>",
            "createdAt": "2022-07-04T16:59:45Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Things are changing so quickly in regards to third-party cookies that I would probably stand up a staging backend AND a staging frontend, each with subdomains on the same domain, to determine with certainty that your cookies will be considered first-party and therefore work.</p>\n<p dir=\"auto\">One other note, I'm not sure off the top of my head. But if you are using 2 subdomains, you may need to set the <code class=\"notranslate\">cookieDomain</code> option of your auth config to be equal to the root domain (NOT a subdomain). If you put a dot before the domain, that will signify that it can be used across all subdomains.</p>\n<p dir=\"auto\">Example cookie domain: <code class=\"notranslate\">.website.com</code>. This would then work for <code class=\"notranslate\">frontend.website.com</code> AND <code class=\"notranslate\">.backend.website.com</code>.</p>",
            "createdAt": "2022-07-04T17:15:49Z"
          },
          {
            "author": {
              "name": "ayusshrathore",
              "avatar": "https://avatars.githubusercontent.com/u/61450246?u=5da35e984f8ac1aafb652e1f08dc24be0fa81905&v=4",
              "url": "https://github.com/ayusshrathore"
            },
            "body": "<p dir=\"auto\">Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> for a precise and quick reply. I guess that makes up for the question. I'd try and see if that works. Thanks, again!</p>",
            "createdAt": "2022-07-04T18:47:20Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/vstarush/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vstarush\">@vstarush</a> —</p>\n<p dir=\"auto\">What domain(s) are you using for your Payload API and your frontend website API?</p>\n<p dir=\"auto\">It looks like you are specifying <code class=\"notranslate\">Secure</code> on your cookie, but using an insecure domain (<code class=\"notranslate\">http://localhost:3000</code>). This may cause the cookie rejection.</p>\n<p dir=\"auto\">Also, another thing to check into would be how browsers have started to handle third-party cookies. By default, third-party cookies are now rejected across the board - which means that if you have your API and your website running on separate domains, you won't be able to use the cookie as you're intending to. I'm not yet sure that this is the issue you're experiencing though.</p>\n<p dir=\"auto\">First, I'd check the <code class=\"notranslate\">Secure</code> setting. Maybe only enable <code class=\"notranslate\">Secure</code> in production environments or deployments where you can ensure HTTPS on both your API and your site.</p>\n<p dir=\"auto\">Let me know what URLs you're using for your Payload API and your frontend site and we can go from there!</p>",
      "createdAt": "2021-12-28T16:40:10Z",
      "chosenAt": "2022-06-15T03:01:02Z",
      "chosenBy": "vstarush",
      "replies": [
        {
          "author": {
            "name": "vstarush",
            "avatar": "https://avatars.githubusercontent.com/u/10617969?v=4",
            "url": "https://github.com/vstarush"
          },
          "body": "<p dir=\"auto\">Thank you <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> ! Placing the frontend and backend under same domain worked like a charm.</p>",
          "createdAt": "2022-06-15T03:04:38Z"
        },
        {
          "author": {
            "name": "ayusshrathore",
            "avatar": "https://avatars.githubusercontent.com/u/61450246?u=5da35e984f8ac1aafb652e1f08dc24be0fa81905&v=4",
            "url": "https://github.com/ayusshrathore"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/vstarush/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vstarush\">@vstarush</a>, could you please elaborate how did you resolve this? I'm currently facing this issue too.</p>",
          "createdAt": "2022-07-04T14:47:46Z"
        },
        {
          "author": {
            "name": "ayusshrathore",
            "avatar": "https://avatars.githubusercontent.com/u/61450246?u=5da35e984f8ac1aafb652e1f08dc24be0fa81905&v=4",
            "url": "https://github.com/ayusshrathore"
          },
          "body": "<blockquote>\n<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/vstarush/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vstarush\">@vstarush</a> —</p>\n<p dir=\"auto\">What domain(s) are you using for your Payload API and your frontend website API?</p>\n<p dir=\"auto\">It looks like you are specifying <code class=\"notranslate\">Secure</code> on your cookie, but using an insecure domain (<code class=\"notranslate\">http://localhost:3000</code>). This may cause the cookie rejection.</p>\n<p dir=\"auto\">Also, another thing to check into would be how browsers have started to handle third-party cookies. By default, third-party cookies are now rejected across the board - which means that if you have your API and your website running on separate domains, you won't be able to use the cookie as you're intending to. I'm not yet sure that this is the issue you're experiencing though.</p>\n<p dir=\"auto\">First, I'd check the <code class=\"notranslate\">Secure</code> setting. Maybe only enable <code class=\"notranslate\">Secure</code> in production environments or deployments where you can ensure HTTPS on both your API and your site.</p>\n<p dir=\"auto\">Let me know what URLs you're using for your Payload API and your frontend site and we can go from there!</p>\n</blockquote>\n<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>, I'm facing this issue too. Cookies are not being set at my end too. I'm running the frontend server on <code class=\"notranslate\">http://localhost:3000</code> and the backend is hosted on AWS for testing purposes. What should I do so to resolve this?</p>",
          "createdAt": "2022-07-04T15:23:28Z"
        }
      ]
    }
  },
  {
    "title": "Geospatial Queries / Field",
    "body": "<p dir=\"auto\">Does PayloadCMS supports geospatial queries? (<a href=\"https://www.mongodb.com/docs/manual/geospatial-queries/\" rel=\"nofollow\">https://www.mongodb.com/docs/manual/geospatial-queries/</a>). I'd like to create a custom field that gets lat/lng from an autocompleted address.</p>\n<p dir=\"auto\">Goal: I want to find database entries according to a radius around a point or within a geofence and show them on my website. (For example, show related entries that are nearby)</p>",
    "url": "https://github.com/payloadcms/payload/discussions/704",
    "id": "704",
    "createdAt": "2022-07-02T06:06:24Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "wiesson",
      "avatar": "https://avatars.githubusercontent.com/u/933231?v=4",
      "url": "https://github.com/wiesson"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Great question! Look at the docs for the point field.</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/fields/point\" rel=\"nofollow\">https://payloadcms.com/docs/fields/point</a></p>\n<p dir=\"auto\">Based on what you said it should get you everything you need.</p>",
        "createdAt": "2022-07-02T11:40:16Z",
        "replies": [
          {
            "author": {
              "name": "wiesson",
              "avatar": "https://avatars.githubusercontent.com/u/933231?v=4",
              "url": "https://github.com/wiesson"
            },
            "body": "<p dir=\"auto\">Not sure how I could miss that <g-emoji class=\"g-emoji\" alias=\"sweat_smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f605.png\">😅</g-emoji></p>",
            "createdAt": "2022-07-02T11:53:59Z"
          },
          {
            "author": {
              "name": "wiesson",
              "avatar": "https://avatars.githubusercontent.com/u/933231?v=4",
              "url": "https://github.com/wiesson"
            },
            "body": "<p dir=\"auto\">Btw, any hint (or even better an example), how I could create a custom field that loads data from an API endpoint (based on input) and renders a select field for the addresses?</p>\n<p dir=\"auto\">Something like this (example taken from graphcms)<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/933231/177026483-31c0cb88-d2cf-417c-8199-f4939dd2a1b6.png\"><img width=\"785\" alt=\"Screenshot 2022-07-03 at 07 38 07\" src=\"https://user-images.githubusercontent.com/933231/177026483-31c0cb88-d2cf-417c-8199-f4939dd2a1b6.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">(I have a react component ready that loads google maps sdk, has an input field, etc...)</p>\n<p dir=\"auto\">// edit:</p>\n<p dir=\"auto\">Just found <a href=\"https://github.com/payloadcms/custom-field-guide\">https://github.com/payloadcms/custom-field-guide</a> and <a href=\"https://github.com/payloadcms/public-demo/tree/master/src/fields\">https://github.com/payloadcms/public-demo/tree/master/src/fields</a> to look at <g-emoji class=\"g-emoji\" alias=\"eyes\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f440.png\">👀</g-emoji></p>",
            "createdAt": "2022-07-03T05:38:33Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">You got it. The <code class=\"notranslate\">ui</code> field is useful if you don't have data directly on the field and want to show a custom element in the edit view and/or cell views.</p>\n<p dir=\"auto\">When you do have data to store on the field, you can use whatever field type is best reflected by the data and still write your own custom components as explained in that guide. The main difference is having to update values. UI fields are nice in that you don't have to set values and can just get other field data to display what you need.</p>",
            "createdAt": "2022-07-03T10:20:17Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Great question! Look at the docs for the point field.</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/fields/point\" rel=\"nofollow\">https://payloadcms.com/docs/fields/point</a></p>\n<p dir=\"auto\">Based on what you said it should get you everything you need.</p>",
      "createdAt": "2022-07-02T11:40:16Z",
      "chosenAt": "2022-07-03T05:47:36Z",
      "chosenBy": "wiesson",
      "replies": [
        {
          "author": {
            "name": "wiesson",
            "avatar": "https://avatars.githubusercontent.com/u/933231?v=4",
            "url": "https://github.com/wiesson"
          },
          "body": "<p dir=\"auto\">Not sure how I could miss that <g-emoji class=\"g-emoji\" alias=\"sweat_smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f605.png\">😅</g-emoji></p>",
          "createdAt": "2022-07-02T11:53:59Z"
        },
        {
          "author": {
            "name": "wiesson",
            "avatar": "https://avatars.githubusercontent.com/u/933231?v=4",
            "url": "https://github.com/wiesson"
          },
          "body": "<p dir=\"auto\">Btw, any hint (or even better an example), how I could create a custom field that loads data from an API endpoint (based on input) and renders a select field for the addresses?</p>\n<p dir=\"auto\">Something like this (example taken from graphcms)<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/933231/177026483-31c0cb88-d2cf-417c-8199-f4939dd2a1b6.png\"><img width=\"785\" alt=\"Screenshot 2022-07-03 at 07 38 07\" src=\"https://user-images.githubusercontent.com/933231/177026483-31c0cb88-d2cf-417c-8199-f4939dd2a1b6.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">(I have a react component ready that loads google maps sdk, has an input field, etc...)</p>\n<p dir=\"auto\">// edit:</p>\n<p dir=\"auto\">Just found <a href=\"https://github.com/payloadcms/custom-field-guide\">https://github.com/payloadcms/custom-field-guide</a> and <a href=\"https://github.com/payloadcms/public-demo/tree/master/src/fields\">https://github.com/payloadcms/public-demo/tree/master/src/fields</a> to look at <g-emoji class=\"g-emoji\" alias=\"eyes\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f440.png\">👀</g-emoji></p>",
          "createdAt": "2022-07-03T05:38:33Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">You got it. The <code class=\"notranslate\">ui</code> field is useful if you don't have data directly on the field and want to show a custom element in the edit view and/or cell views.</p>\n<p dir=\"auto\">When you do have data to store on the field, you can use whatever field type is best reflected by the data and still write your own custom components as explained in that guide. The main difference is having to update values. UI fields are nice in that you don't have to set values and can just get other field data to display what you need.</p>",
          "createdAt": "2022-07-03T10:20:17Z"
        }
      ]
    }
  },
  {
    "title": "Does creating Media by LocalAPI triggers upload file ?",
    "body": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">I'm writing a custom media (audio) upload function. Since my storage is on S3, and I want to have custom API response, I opted to use a custom express route with LocalAPI instead of payload REST endpoint.</p>\n<p dir=\"auto\">Since I manually upload the Media to S3,  I want to use LocalAPI only to add a record to DB. However I ran to the following error when calling <code class=\"notranslate\">payload.create</code> method: <code class=\"notranslate\">MissingFile: No files were uploaded.</code></p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">I do have <code class=\"notranslate\">disableLocalStorage</code> in my <code class=\"notranslate\">Audio</code> collection, it looks like this::<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16315811/176024737-ce52dfbe-14d8-4945-a9ea-00b80646fa04.png\"><img src=\"https://user-images.githubusercontent.com/16315811/176024737-ce52dfbe-14d8-4945-a9ea-00b80646fa04.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n</li>\n<li>\n<p dir=\"auto\">In my custom express route, I call Payload local API to create a <code class=\"notranslate\">Audio</code> record like this:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16315811/176025531-7d370a84-5616-4e0d-b0cf-65bd7da018ba.png\"><img src=\"https://user-images.githubusercontent.com/16315811/176025531-7d370a84-5616-4e0d-b0cf-65bd7da018ba.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n</li>\n</ul>\n<p dir=\"auto\">The error stack would lead me to this line: <code class=\"notranslate\">https://github.com/payloadcms/payload/blob/master/src/collections/operations/create.ts#L97</code>.</p>\n<p dir=\"auto\">Is there anyway to ignore uploading file in my case ?</p>\n<p dir=\"auto\">Thanks in advance for your helps !</p>",
    "url": "https://github.com/payloadcms/payload/discussions/693",
    "id": "693",
    "createdAt": "2022-06-27T20:06:19Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "henrituan",
      "avatar": "https://avatars.githubusercontent.com/u/16315811?u=0e2eff9646d9417e476fcf69e3047f86c3f35031&v=4",
      "url": "https://github.com/henrituan"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/henrituan/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/henrituan\">@henrituan</a> — I can give you a few answers here. First up, a few questions:</p>\n<blockquote>\n<p dir=\"auto\">I'm writing a custom media (audio) upload function. Since my storage is on S3, and I want to have custom API response, I opted to use a custom express route with LocalAPI instead of payload REST endpoint.</p>\n</blockquote>\n<p dir=\"auto\">First up, what types of things are you trying to do to your custom response? You may be able to accomplish what you need with <code class=\"notranslate\">afterRead</code> hooks on a collection but if there's something else that you'd like to modify from our built-in REST responses, which you can't do now, I'd be happy to brainstorm how to expose what you need so you can re-use built-in endpoints. But, if you do indeed want to have a custom REST endpoint, this should be 100% doable.</p>\n<p dir=\"auto\">Next, have you seen the <code class=\"notranslate\">payload-plugin-cloud-storage</code> package? It helps you automatically ship off files to S3 or similar, and this might be of use to you:</p>\n<p dir=\"auto\"><a href=\"https://www.npmjs.com/package/payload-plugin-cloud-storage\" rel=\"nofollow\">https://www.npmjs.com/package/payload-plugin-cloud-storage</a></p>\n<p dir=\"auto\">Finally, if you do want to use Payload's Local API to upload files, right now the local <code class=\"notranslate\">create</code> operation requires a file path to a locally stored file, and then automatically parses all information it needs from the file that is read from disk. This however could be expanded on, so that the <code class=\"notranslate\">create</code> operation can <em><strong>directly take a file</strong></em> instead of reading it from disk. We would add a new property to the arguments called <code class=\"notranslate\">file</code> and then use that instead of getting a file by path.</p>\n<p dir=\"auto\">This would all need to be done in the following file:<br>\n<a href=\"https://github.com/payloadcms/payload/blob/master/src/collections/operations/local/create.ts\">https://github.com/payloadcms/payload/blob/master/src/collections/operations/local/create.ts</a></p>\n<p dir=\"auto\">If you would like to make a PR to the create operation, please do! Otherwise I think we can get to this shortly as well.</p>\n<p dir=\"auto\">Let me know!</p>",
        "createdAt": "2022-06-29T16:35:43Z",
        "replies": [
          {
            "author": {
              "name": "henrituan",
              "avatar": "https://avatars.githubusercontent.com/u/16315811?u=0e2eff9646d9417e476fcf69e3047f86c3f35031&v=4",
              "url": "https://github.com/henrituan"
            },
            "body": "<p dir=\"auto\">Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> ,</p>\n<p dir=\"auto\">1st question: My usecase is batch-uploading mp3 files. I used <a href=\"https://github.com/dropzone-ui/dropzone-ui-react#dropzoneuiresponse\">this library</a> and it requires a custom REST response for each uploaded file in the batch.<br>\nI certainly can use other library like <code class=\"notranslate\">react-dropzone</code> to avoid this constraint, but I feel like an option to send file into <code class=\"notranslate\">payload.create</code> will be  useful for many other usecases.</p>\n<p dir=\"auto\">2nd question: yes, I did use <code class=\"notranslate\">payload-plugin-cloud-storage</code>, however there is some constraints in the plugin (I can't have file prefix in bucket name), so I stop using the library. I then implemented a simple S3 uploading function so the plugin is not so neccessary.</p>\n<p dir=\"auto\">Finally: Yes I'll look into it and summit  PR !</p>",
            "createdAt": "2022-06-29T19:27:52Z"
          },
          {
            "author": {
              "name": "henrituan",
              "avatar": "https://avatars.githubusercontent.com/u/16315811?u=0e2eff9646d9417e476fcf69e3047f86c3f35031&v=4",
              "url": "https://github.com/henrituan"
            },
            "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>,</p>\n<p dir=\"auto\">Here is the PR following our discussion: <a aria-label=\"Pull request #708\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1292141114\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/708\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/708/hovercard\" href=\"https://github.com/payloadcms/payload/pull/708\">#708</a><br>\nPS: I did not add any test because I didn't know where to add</p>",
            "createdAt": "2022-07-02T21:04:07Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/henrituan/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/henrituan\">@henrituan</a> — I can give you a few answers here. First up, a few questions:</p>\n<blockquote>\n<p dir=\"auto\">I'm writing a custom media (audio) upload function. Since my storage is on S3, and I want to have custom API response, I opted to use a custom express route with LocalAPI instead of payload REST endpoint.</p>\n</blockquote>\n<p dir=\"auto\">First up, what types of things are you trying to do to your custom response? You may be able to accomplish what you need with <code class=\"notranslate\">afterRead</code> hooks on a collection but if there's something else that you'd like to modify from our built-in REST responses, which you can't do now, I'd be happy to brainstorm how to expose what you need so you can re-use built-in endpoints. But, if you do indeed want to have a custom REST endpoint, this should be 100% doable.</p>\n<p dir=\"auto\">Next, have you seen the <code class=\"notranslate\">payload-plugin-cloud-storage</code> package? It helps you automatically ship off files to S3 or similar, and this might be of use to you:</p>\n<p dir=\"auto\"><a href=\"https://www.npmjs.com/package/payload-plugin-cloud-storage\" rel=\"nofollow\">https://www.npmjs.com/package/payload-plugin-cloud-storage</a></p>\n<p dir=\"auto\">Finally, if you do want to use Payload's Local API to upload files, right now the local <code class=\"notranslate\">create</code> operation requires a file path to a locally stored file, and then automatically parses all information it needs from the file that is read from disk. This however could be expanded on, so that the <code class=\"notranslate\">create</code> operation can <em><strong>directly take a file</strong></em> instead of reading it from disk. We would add a new property to the arguments called <code class=\"notranslate\">file</code> and then use that instead of getting a file by path.</p>\n<p dir=\"auto\">This would all need to be done in the following file:<br>\n<a href=\"https://github.com/payloadcms/payload/blob/master/src/collections/operations/local/create.ts\">https://github.com/payloadcms/payload/blob/master/src/collections/operations/local/create.ts</a></p>\n<p dir=\"auto\">If you would like to make a PR to the create operation, please do! Otherwise I think we can get to this shortly as well.</p>\n<p dir=\"auto\">Let me know!</p>",
      "createdAt": "2022-06-29T16:35:43Z",
      "chosenAt": "2022-07-06T21:04:06Z",
      "chosenBy": "henrituan",
      "replies": [
        {
          "author": {
            "name": "henrituan",
            "avatar": "https://avatars.githubusercontent.com/u/16315811?u=0e2eff9646d9417e476fcf69e3047f86c3f35031&v=4",
            "url": "https://github.com/henrituan"
          },
          "body": "<p dir=\"auto\">Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> ,</p>\n<p dir=\"auto\">1st question: My usecase is batch-uploading mp3 files. I used <a href=\"https://github.com/dropzone-ui/dropzone-ui-react#dropzoneuiresponse\">this library</a> and it requires a custom REST response for each uploaded file in the batch.<br>\nI certainly can use other library like <code class=\"notranslate\">react-dropzone</code> to avoid this constraint, but I feel like an option to send file into <code class=\"notranslate\">payload.create</code> will be  useful for many other usecases.</p>\n<p dir=\"auto\">2nd question: yes, I did use <code class=\"notranslate\">payload-plugin-cloud-storage</code>, however there is some constraints in the plugin (I can't have file prefix in bucket name), so I stop using the library. I then implemented a simple S3 uploading function so the plugin is not so neccessary.</p>\n<p dir=\"auto\">Finally: Yes I'll look into it and summit  PR !</p>",
          "createdAt": "2022-06-29T19:27:52Z"
        },
        {
          "author": {
            "name": "henrituan",
            "avatar": "https://avatars.githubusercontent.com/u/16315811?u=0e2eff9646d9417e476fcf69e3047f86c3f35031&v=4",
            "url": "https://github.com/henrituan"
          },
          "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>,</p>\n<p dir=\"auto\">Here is the PR following our discussion: <a aria-label=\"Pull request #708\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1292141114\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/708\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/708/hovercard\" href=\"https://github.com/payloadcms/payload/pull/708\">#708</a><br>\nPS: I did not add any test because I didn't know where to add</p>",
          "createdAt": "2022-07-02T21:04:07Z"
        }
      ]
    }
  },
  {
    "title": "Query by publishDate is not working",
    "body": "<h2 dir=\"auto\">Background</h2>\n<p dir=\"auto\">I want to have a simple scheduled publish feature like this</p>\n<p dir=\"auto\"><a aria-label=\"Discussion #567\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4081832\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/567\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/567/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/567\">#567</a></p>\n<h2 dir=\"auto\">Repro Steps</h2>\n<ol dir=\"auto\">\n<li>start server</li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"git clone git@github.com:Stupidism/seo-mono.git\ngit checkout feng/test-scheduled-publish\npnpm I\nnx run seo-payload:serve\"><pre class=\"notranslate\"><code class=\"notranslate\">git clone git@github.com:Stupidism/seo-mono.git\ngit checkout feng/test-scheduled-publish\npnpm I\nnx run seo-payload:serve\n</code></pre></div>\n<ol start=\"2\" dir=\"auto\">\n<li>Create a doc and publish for the first time</li>\n</ol>\n<p dir=\"auto\"><a href=\"http://localhost:3333/admin/collections/test-drafts/62be8d54722f5bd46633ca9f\" rel=\"nofollow\">http://localhost:3333/admin/collections/test-drafts/62be8d54722f5bd46633ca9f</a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/176833617-18414535-77cb-43f4-b6e2-3f844834acd5.png\"><img width=\"1563\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5801015/176833617-18414535-77cb-43f4-b6e2-3f844834acd5.png\" style=\"max-width: 100%;\"></a></p>\n<ol start=\"3\" dir=\"auto\">\n<li>Query the doc with playground (to simulate guest access)</li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"# Write your query or mutation here\nquery findTestDrafts {\n    TestDrafts {\n      docs {\n        name\n        publishDate\n      }\n    }\n  }\"><pre class=\"notranslate\"><code class=\"notranslate\"># Write your query or mutation here\nquery findTestDrafts {\n    TestDrafts {\n      docs {\n        name\n        publishDate\n      }\n    }\n  }\n</code></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/176833580-11f1398a-5d6e-4170-835c-606e672fde78.png\"><img width=\"1206\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5801015/176833580-11f1398a-5d6e-4170-835c-606e672fde78.png\" style=\"max-width: 100%;\"></a></p>\n<ol start=\"4\" dir=\"auto\">\n<li>Update the doc with a publishDate after today:</li>\n</ol>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/176833741-f5641998-5f08-4fe5-937b-f6990d3c6179.png\"><img width=\"1666\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5801015/176833741-f5641998-5f08-4fe5-937b-f6990d3c6179.png\" style=\"max-width: 100%;\"></a></p>\n<ol start=\"5\" dir=\"auto\">\n<li>query the doc with playground again<br>\nNow u can see the updated version instead of the former version:</li>\n</ol>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5801015/176833825-fc31a3dc-d0ae-4108-8419-82c5ea439ee5.png\"><img width=\"1335\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5801015/176833825-fc31a3dc-d0ae-4108-8419-82c5ea439ee5.png\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">According to requirement and the description from the code snnipet, it should return the version that publishDate smaller than today.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/702",
    "id": "702",
    "createdAt": "2022-07-01T06:04:29Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "Stupidism",
      "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
      "url": "https://github.com/Stupidism"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Stupidism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Stupidism\">@Stupidism</a>,</p>\n<p dir=\"auto\">I'm glad to see you are exploring this solution more. Looking at the code for the access control, it is doing exactly what you're asking it to.<br>\nThe access control on TestDrafts for <code class=\"notranslate\">read</code> first checks if a user is logged in before querying publishDate. Unless you have logged out it won't bother querying the way you are expecting.</p>\n<p dir=\"auto\">When you are querying in step 5, try from an incognito window or add a step to logout from the admin UI first.</p>\n<p dir=\"auto\">I was able to do this from your repro to be sure.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6434612/176883183-369463cc-1ce0-4126-ada0-0adbc4d31d7a.png\"><img src=\"https://user-images.githubusercontent.com/6434612/176883183-369463cc-1ce0-4126-ada0-0adbc4d31d7a.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">If your app will have authenticated users and admin users for the panel either by role or using a separate auth collection, remember to add those conditions to your read access function as well to gate the content.</p>",
        "createdAt": "2022-07-01T11:11:18Z",
        "replies": [
          {
            "author": {
              "name": "Stupidism",
              "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
              "url": "https://github.com/Stupidism"
            },
            "body": "<p dir=\"auto\">Aha, I get what you mean now.</p>\n<p dir=\"auto\">My understanding was wrong. I was expecting to see the <code class=\"notranslate\">Before</code> version, when <code class=\"notranslate\">After</code> version is not published</p>",
            "createdAt": "2022-07-01T13:19:11Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Ah! Sure, you could still have that but you'll need to modify the query to use an <code class=\"notranslate\">or</code> operator to allow the before to come through under the different conditions.</p>",
            "createdAt": "2022-07-01T15:01:44Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Stupidism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Stupidism\">@Stupidism</a>,</p>\n<p dir=\"auto\">I'm glad to see you are exploring this solution more. Looking at the code for the access control, it is doing exactly what you're asking it to.<br>\nThe access control on TestDrafts for <code class=\"notranslate\">read</code> first checks if a user is logged in before querying publishDate. Unless you have logged out it won't bother querying the way you are expecting.</p>\n<p dir=\"auto\">When you are querying in step 5, try from an incognito window or add a step to logout from the admin UI first.</p>\n<p dir=\"auto\">I was able to do this from your repro to be sure.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6434612/176883183-369463cc-1ce0-4126-ada0-0adbc4d31d7a.png\"><img src=\"https://user-images.githubusercontent.com/6434612/176883183-369463cc-1ce0-4126-ada0-0adbc4d31d7a.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">If your app will have authenticated users and admin users for the panel either by role or using a separate auth collection, remember to add those conditions to your read access function as well to gate the content.</p>",
      "createdAt": "2022-07-01T11:11:18Z",
      "chosenAt": "2022-07-01T13:19:14Z",
      "chosenBy": "Stupidism",
      "replies": [
        {
          "author": {
            "name": "Stupidism",
            "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
            "url": "https://github.com/Stupidism"
          },
          "body": "<p dir=\"auto\">Aha, I get what you mean now.</p>\n<p dir=\"auto\">My understanding was wrong. I was expecting to see the <code class=\"notranslate\">Before</code> version, when <code class=\"notranslate\">After</code> version is not published</p>",
          "createdAt": "2022-07-01T13:19:11Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Ah! Sure, you could still have that but you'll need to modify the query to use an <code class=\"notranslate\">or</code> operator to allow the before to come through under the different conditions.</p>",
          "createdAt": "2022-07-01T15:01:44Z"
        }
      ]
    }
  },
  {
    "title": "How to support auto generate slug from title field in collections",
    "body": "<p dir=\"auto\">For example,</p>\n<p dir=\"auto\">If editor input<br>\n<code class=\"notranslate\">How to support auto generate slug from title field in collections</code> as the title of the post/article.</p>\n<p dir=\"auto\">I want another field slug to be auto-genrated with slug</p>\n<p dir=\"auto\"><code class=\"notranslate\">how-to-support-auto-generate-slug-from-title-field-incollectionss</code></p>",
    "url": "https://github.com/payloadcms/payload/discussions/584",
    "id": "584",
    "createdAt": "2022-05-24T06:02:47Z",
    "upvotes": 3,
    "commentTotal": 4,
    "author": {
      "name": "Stupidism",
      "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
      "url": "https://github.com/Stupidism"
    },
    "comments": [
      {
        "author": {
          "name": "GeorgeyB",
          "avatar": "https://avatars.githubusercontent.com/u/13889255?u=e9fa49c94b3d8476b0db260a459e9c16d6a7d208&v=4",
          "url": "https://github.com/GeorgeyB"
        },
        "body": "<p dir=\"auto\">I've done a similar thing. I used the <code class=\"notranslate\">beforeChange</code> hook.</p>\n<p dir=\"auto\">Given the following creator function:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"function generateSlugFrom(titleField: string, slugField = 'slug'): BeforeChangeHook&lt;Product&gt; {\n    return ({ data }) =&gt; {\n        if (!(titleField in data)) {\n            return data;\n        }\n\n        return {\n            ...data,\n            [slugField]: slugify(data[titleField])\n        };\n    };\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">function generateSlugFrom(titleField: string, slugField = 'slug'): BeforeChangeHook&lt;Product&gt; {\n    return ({ data }) =&gt; {\n        if (!(titleField in data)) {\n            return data;\n        }\n\n        return {\n            ...data,\n            [slugField]: slugify(data[titleField])\n        };\n    };\n}\n</code></pre></div>\n<p dir=\"auto\">I use it like so:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const Products: CollectionConfig = {\n    slug: 'products',\n    hooks: {\n        beforeChange: [generateSlugFrom('name')]\n    },\n    fields: [\n        {\n            name: 'name',\n            label: 'Name',\n            type: 'text'\n        },\n        {\n            name: 'slug',\n            label: 'Slug',\n            type: 'text'\n        },\n    ]\n};\"><pre class=\"notranslate\"><code class=\"notranslate\">const Products: CollectionConfig = {\n    slug: 'products',\n    hooks: {\n        beforeChange: [generateSlugFrom('name')]\n    },\n    fields: [\n        {\n            name: 'name',\n            label: 'Name',\n            type: 'text'\n        },\n        {\n            name: 'slug',\n            label: 'Slug',\n            type: 'text'\n        },\n    ]\n};\n</code></pre></div>\n<p dir=\"auto\">With help of course, from <a href=\"https://www.npmjs.com/package/slugify\" rel=\"nofollow\">slugify</a>.</p>",
        "createdAt": "2022-05-24T09:17:49Z",
        "replies": [
          {
            "author": {
              "name": "Stupidism",
              "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
              "url": "https://github.com/Stupidism"
            },
            "body": "<p dir=\"auto\">Great, that's exactly what I want.</p>",
            "createdAt": "2022-05-24T09:24:35Z"
          }
        ]
      },
      {
        "author": {
          "name": "Stupidism",
          "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
          "url": "https://github.com/Stupidism"
        },
        "body": "<p dir=\"auto\">Another implementation from the public demo: <a href=\"https://github.com/payloadcms/public-demo/blob/master/src/fields/slug.ts\">https://github.com/payloadcms/public-demo/blob/master/src/fields/slug.ts</a></p>",
        "createdAt": "2022-06-13T07:31:18Z",
        "replies": null
      },
      {
        "author": {
          "name": "MinSomai",
          "avatar": "https://avatars.githubusercontent.com/u/21338691?u=c2be75f889472dcfd6f5dedaacaba2a34046ed06&v=4",
          "url": "https://github.com/MinSomai"
        },
        "body": "<p dir=\"auto\">what is the use case for this slug? I can't seem to wrap my head around because we can query with document id only.</p>",
        "createdAt": "2022-06-15T19:44:38Z",
        "replies": [
          {
            "author": {
              "name": "Stupidism",
              "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
              "url": "https://github.com/Stupidism"
            },
            "body": "<p dir=\"auto\">It's more like auto-generate slug before writing to database.<br>\nAre you looking for sth-like slug updates in UI while inputting for name/title?</p>",
            "createdAt": "2022-06-16T13:09:25Z"
          },
          {
            "author": {
              "name": "MinSomai",
              "avatar": "https://avatars.githubusercontent.com/u/21338691?u=c2be75f889472dcfd6f5dedaacaba2a34046ed06&v=4",
              "url": "https://github.com/MinSomai"
            },
            "body": "<p dir=\"auto\">slug is generated fine. I want to use this slug to query document.</p>",
            "createdAt": "2022-06-16T17:12:06Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/MinSomai/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/MinSomai\">@MinSomai</a> — you can totally query via the slug field.</p>\n<p dir=\"auto\">In REST, it'd be <code class=\"notranslate\">?where[slug][equals]=slug-here</code> or similar.</p>\n<p dir=\"auto\">For more, including how to query in GraphQL and the Local API, take a look at the <a href=\"https://payloadcms.com/docs/queries/overview\" rel=\"nofollow\">documentation for querying here</a>.</p>",
            "createdAt": "2022-06-16T17:13:41Z"
          },
          {
            "author": {
              "name": "MinSomai",
              "avatar": "https://avatars.githubusercontent.com/u/21338691?u=c2be75f889472dcfd6f5dedaacaba2a34046ed06&v=4",
              "url": "https://github.com/MinSomai"
            },
            "body": "<p dir=\"auto\">I'm dumb. totally makes sense now, thanks.</p>",
            "createdAt": "2022-06-16T17:17:29Z"
          }
        ]
      },
      {
        "author": {
          "name": "Stupidism",
          "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
          "url": "https://github.com/Stupidism"
        },
        "body": "<p dir=\"auto\">A better solution for slug is to add a custom element:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Articles:\n\nfields: [\n  // ...\n  slug({ trackingField: 'title' }),\n  // ...\n]\n\n// fields/slug.ts\n\nimport { Field } from 'payload/types';\nimport { merge } from 'lodash';\n\nimport { getSlugInput } from './ui/SlugInput';\n\ntype Slug = (\n  options?: { trackingField?: string },\n  overrides?: Partial&lt;Field&gt;\n) =&gt; Field;\n\n// By dynamically building fields in code configurations are reusable and concise\nexport const slug: Slug = ({ trackingField = 'title' } = {}, overrides) =&gt;\n  merge&lt;Field, Partial&lt;Field&gt; | undefined&gt;(\n    {\n      name: 'slug',\n      unique: true,\n      type: 'text',\n      admin: {\n        position: 'sidebar',\n        components: {\n          Field: getSlugInput({ trackingField })\n        }\n      },\n    },\n    overrides\n  );\n\n// SlugInput.tsx\nimport { kebabCase } from 'lodash';\nimport { TextInput, useField, useWatchForm } from 'payload/components/forms';\nimport { useEffect, useRef } from 'react';\n\nexport const getSlugInput = ({ trackingField }: { trackingField: string }) =&gt; () =&gt; {\n  const { getDataByPath } = useWatchForm();\n  const { value: slugValue = '', setValue: setSlugValue } = useField&lt;string&gt;({ path: 'slug' });\n  const trackingFieldValue = getDataByPath&lt;string&gt;(trackingField) || '';\n  const prevTrackingFieldValueRef = useRef(trackingFieldValue);\n  const stopTrackingRef = useRef(false);\n\n  useEffect(() =&gt; {\n    if (!trackingField || stopTrackingRef.current) {\n      return;\n    }\n    if (trackingFieldValue === prevTrackingFieldValueRef.current) {\n      return;\n    }\n    const prevSlugValue = kebabCase(prevTrackingFieldValueRef.current);\n    prevTrackingFieldValueRef.current = trackingFieldValue;\n    if (prevSlugValue !== slugValue) {\n      return;\n    }\n    setSlugValue(kebabCase(trackingFieldValue));\n  }, [trackingFieldValue]);\n\n  return (\n    &lt;div&gt;\n      &lt;TextInput\n        name=&quot;slug&quot;\n        path=&quot;slug&quot;\n        label=&quot;Slug&quot;\n        description={slugValue ? `Auto generated based on ${trackingField}` : `Will be auto-generated from ${trackingField} when save`}\n        value={slugValue}\n        onChange={e =&gt; {\n          setSlugValue(e.target.value);\n          stopTrackingRef.current = true;\n        }}\n      /&gt;\n    &lt;/div&gt;\n  );\n}\n\"><pre class=\"notranslate\"><code class=\"notranslate\">// Articles:\n\nfields: [\n  // ...\n  slug({ trackingField: 'title' }),\n  // ...\n]\n\n// fields/slug.ts\n\nimport { Field } from 'payload/types';\nimport { merge } from 'lodash';\n\nimport { getSlugInput } from './ui/SlugInput';\n\ntype Slug = (\n  options?: { trackingField?: string },\n  overrides?: Partial&lt;Field&gt;\n) =&gt; Field;\n\n// By dynamically building fields in code configurations are reusable and concise\nexport const slug: Slug = ({ trackingField = 'title' } = {}, overrides) =&gt;\n  merge&lt;Field, Partial&lt;Field&gt; | undefined&gt;(\n    {\n      name: 'slug',\n      unique: true,\n      type: 'text',\n      admin: {\n        position: 'sidebar',\n        components: {\n          Field: getSlugInput({ trackingField })\n        }\n      },\n    },\n    overrides\n  );\n\n// SlugInput.tsx\nimport { kebabCase } from 'lodash';\nimport { TextInput, useField, useWatchForm } from 'payload/components/forms';\nimport { useEffect, useRef } from 'react';\n\nexport const getSlugInput = ({ trackingField }: { trackingField: string }) =&gt; () =&gt; {\n  const { getDataByPath } = useWatchForm();\n  const { value: slugValue = '', setValue: setSlugValue } = useField&lt;string&gt;({ path: 'slug' });\n  const trackingFieldValue = getDataByPath&lt;string&gt;(trackingField) || '';\n  const prevTrackingFieldValueRef = useRef(trackingFieldValue);\n  const stopTrackingRef = useRef(false);\n\n  useEffect(() =&gt; {\n    if (!trackingField || stopTrackingRef.current) {\n      return;\n    }\n    if (trackingFieldValue === prevTrackingFieldValueRef.current) {\n      return;\n    }\n    const prevSlugValue = kebabCase(prevTrackingFieldValueRef.current);\n    prevTrackingFieldValueRef.current = trackingFieldValue;\n    if (prevSlugValue !== slugValue) {\n      return;\n    }\n    setSlugValue(kebabCase(trackingFieldValue));\n  }, [trackingFieldValue]);\n\n  return (\n    &lt;div&gt;\n      &lt;TextInput\n        name=\"slug\"\n        path=\"slug\"\n        label=\"Slug\"\n        description={slugValue ? `Auto generated based on ${trackingField}` : `Will be auto-generated from ${trackingField} when save`}\n        value={slugValue}\n        onChange={e =&gt; {\n          setSlugValue(e.target.value);\n          stopTrackingRef.current = true;\n        }}\n      /&gt;\n    &lt;/div&gt;\n  );\n}\n\n</code></pre></div>",
        "createdAt": "2022-07-01T13:32:54Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "Stupidism",
        "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
        "url": "https://github.com/Stupidism"
      },
      "body": "<p dir=\"auto\">A better solution for slug is to add a custom element:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Articles:\n\nfields: [\n  // ...\n  slug({ trackingField: 'title' }),\n  // ...\n]\n\n// fields/slug.ts\n\nimport { Field } from 'payload/types';\nimport { merge } from 'lodash';\n\nimport { getSlugInput } from './ui/SlugInput';\n\ntype Slug = (\n  options?: { trackingField?: string },\n  overrides?: Partial&lt;Field&gt;\n) =&gt; Field;\n\n// By dynamically building fields in code configurations are reusable and concise\nexport const slug: Slug = ({ trackingField = 'title' } = {}, overrides) =&gt;\n  merge&lt;Field, Partial&lt;Field&gt; | undefined&gt;(\n    {\n      name: 'slug',\n      unique: true,\n      type: 'text',\n      admin: {\n        position: 'sidebar',\n        components: {\n          Field: getSlugInput({ trackingField })\n        }\n      },\n    },\n    overrides\n  );\n\n// SlugInput.tsx\nimport { kebabCase } from 'lodash';\nimport { TextInput, useField, useWatchForm } from 'payload/components/forms';\nimport { useEffect, useRef } from 'react';\n\nexport const getSlugInput = ({ trackingField }: { trackingField: string }) =&gt; () =&gt; {\n  const { getDataByPath } = useWatchForm();\n  const { value: slugValue = '', setValue: setSlugValue } = useField&lt;string&gt;({ path: 'slug' });\n  const trackingFieldValue = getDataByPath&lt;string&gt;(trackingField) || '';\n  const prevTrackingFieldValueRef = useRef(trackingFieldValue);\n  const stopTrackingRef = useRef(false);\n\n  useEffect(() =&gt; {\n    if (!trackingField || stopTrackingRef.current) {\n      return;\n    }\n    if (trackingFieldValue === prevTrackingFieldValueRef.current) {\n      return;\n    }\n    const prevSlugValue = kebabCase(prevTrackingFieldValueRef.current);\n    prevTrackingFieldValueRef.current = trackingFieldValue;\n    if (prevSlugValue !== slugValue) {\n      return;\n    }\n    setSlugValue(kebabCase(trackingFieldValue));\n  }, [trackingFieldValue]);\n\n  return (\n    &lt;div&gt;\n      &lt;TextInput\n        name=&quot;slug&quot;\n        path=&quot;slug&quot;\n        label=&quot;Slug&quot;\n        description={slugValue ? `Auto generated based on ${trackingField}` : `Will be auto-generated from ${trackingField} when save`}\n        value={slugValue}\n        onChange={e =&gt; {\n          setSlugValue(e.target.value);\n          stopTrackingRef.current = true;\n        }}\n      /&gt;\n    &lt;/div&gt;\n  );\n}\n\"><pre class=\"notranslate\"><code class=\"notranslate\">// Articles:\n\nfields: [\n  // ...\n  slug({ trackingField: 'title' }),\n  // ...\n]\n\n// fields/slug.ts\n\nimport { Field } from 'payload/types';\nimport { merge } from 'lodash';\n\nimport { getSlugInput } from './ui/SlugInput';\n\ntype Slug = (\n  options?: { trackingField?: string },\n  overrides?: Partial&lt;Field&gt;\n) =&gt; Field;\n\n// By dynamically building fields in code configurations are reusable and concise\nexport const slug: Slug = ({ trackingField = 'title' } = {}, overrides) =&gt;\n  merge&lt;Field, Partial&lt;Field&gt; | undefined&gt;(\n    {\n      name: 'slug',\n      unique: true,\n      type: 'text',\n      admin: {\n        position: 'sidebar',\n        components: {\n          Field: getSlugInput({ trackingField })\n        }\n      },\n    },\n    overrides\n  );\n\n// SlugInput.tsx\nimport { kebabCase } from 'lodash';\nimport { TextInput, useField, useWatchForm } from 'payload/components/forms';\nimport { useEffect, useRef } from 'react';\n\nexport const getSlugInput = ({ trackingField }: { trackingField: string }) =&gt; () =&gt; {\n  const { getDataByPath } = useWatchForm();\n  const { value: slugValue = '', setValue: setSlugValue } = useField&lt;string&gt;({ path: 'slug' });\n  const trackingFieldValue = getDataByPath&lt;string&gt;(trackingField) || '';\n  const prevTrackingFieldValueRef = useRef(trackingFieldValue);\n  const stopTrackingRef = useRef(false);\n\n  useEffect(() =&gt; {\n    if (!trackingField || stopTrackingRef.current) {\n      return;\n    }\n    if (trackingFieldValue === prevTrackingFieldValueRef.current) {\n      return;\n    }\n    const prevSlugValue = kebabCase(prevTrackingFieldValueRef.current);\n    prevTrackingFieldValueRef.current = trackingFieldValue;\n    if (prevSlugValue !== slugValue) {\n      return;\n    }\n    setSlugValue(kebabCase(trackingFieldValue));\n  }, [trackingFieldValue]);\n\n  return (\n    &lt;div&gt;\n      &lt;TextInput\n        name=\"slug\"\n        path=\"slug\"\n        label=\"Slug\"\n        description={slugValue ? `Auto generated based on ${trackingField}` : `Will be auto-generated from ${trackingField} when save`}\n        value={slugValue}\n        onChange={e =&gt; {\n          setSlugValue(e.target.value);\n          stopTrackingRef.current = true;\n        }}\n      /&gt;\n    &lt;/div&gt;\n  );\n}\n\n</code></pre></div>",
      "createdAt": "2022-07-01T13:32:54Z",
      "chosenAt": "2022-07-28T12:10:32Z",
      "chosenBy": "Stupidism",
      "replies": null
    }
  },
  {
    "title": "Cannot run public demo in nrwl nx",
    "body": "<p dir=\"auto\">I know this is not the first question about nrwl nx.</p>\n<blockquote>\n<p dir=\"auto\">Thanks to this thread: <a aria-label=\"Discussion #545\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4035290\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/545\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/545/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/545\">#545</a>, I figured out how to run the start project of payloadcms in NX monorepo. And this is the working repo: <a href=\"https://github.com/Stupidism/seo-mono\">https://github.com/Stupidism/seo-mono</a>.</p>\n</blockquote>\n<p dir=\"auto\">However, when I tried to move the <a href=\"https://github.com/payloadcms/public-demo\">public-demo</a> into my new repo, I met many new errors, I tried to fix them</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> ts errors</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> scss import error</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Unexpected token <code class=\"notranslate\">export</code></li>\n</ul>\n<p dir=\"auto\">I cannot pass the third one and It's weird that only this ts file <code class=\"notranslate\">payload/components/forms.ts</code> is throwing error.</p>\n<p dir=\"auto\">I guess I'm making a very stupid mistake. I tried the following search words but got no luck for now.</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">webpack how to parse export in node_modules</code>,</li>\n<li><code class=\"notranslate\">webpack SyntaxError: Unexpected token 'export'</code></li>\n</ul>\n<h2 dir=\"auto\">To reproduce</h2>\n<p dir=\"auto\">Just clone this repo and switch to the new branch:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"git clone git@github.com:Stupidism/seo-mono.git\npnpm i\"><pre class=\"notranslate\"><code class=\"notranslate\">git clone git@github.com:Stupidism/seo-mono.git\npnpm i\n</code></pre></div>\n<p dir=\"auto\">And then run the project:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nx run seo-payload:serve\"><pre class=\"notranslate\"><code class=\"notranslate\">nx run seo-payload:serve\n</code></pre></div>\n<p dir=\"auto\">You will see this error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/Users/.../.pnpm/payload@0.17.2_zxu4lunrffi22uinww7slmpxf4/node_modules/payload/components/forms.ts:1\nexport {\n^^^^^^\n\nSyntaxError: Unexpected token 'export'\n    at compileFunction (&lt;anonymous&gt;)\n    at Object.compileFunction (node:vm:352:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1033:15)\n    at Module._compile (node:internal/modules/cjs/loader:1069:27)\n    at Module._compile (/Users/stupidism/Documents/seo-mono/node_modules/.pnpm/pirates@4.0.5/node_modules/pirates/lib/index.js:136:24)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Object.newLoader [as .ts] (/Users/stupidism/Documents/seo-mono/node_modules/.pnpm/pirates@4.0.5/node_modules/pirates/lib/index.js:141:7)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n\"><pre class=\"notranslate\"><code class=\"notranslate\">/Users/.../.pnpm/payload@0.17.2_zxu4lunrffi22uinww7slmpxf4/node_modules/payload/components/forms.ts:1\nexport {\n^^^^^^\n\nSyntaxError: Unexpected token 'export'\n    at compileFunction (&lt;anonymous&gt;)\n    at Object.compileFunction (node:vm:352:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1033:15)\n    at Module._compile (node:internal/modules/cjs/loader:1069:27)\n    at Module._compile (/Users/stupidism/Documents/seo-mono/node_modules/.pnpm/pirates@4.0.5/node_modules/pirates/lib/index.js:136:24)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Object.newLoader [as .ts] (/Users/stupidism/Documents/seo-mono/node_modules/.pnpm/pirates@4.0.5/node_modules/pirates/lib/index.js:141:7)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n\n</code></pre></div>\n<p dir=\"auto\">Thanks in advance, this is the first key step for us to migrate from contentful to payloadCMS.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/632",
    "id": "632",
    "createdAt": "2022-06-07T14:34:21Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "Stupidism",
      "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
      "url": "https://github.com/Stupidism"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Stupidism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Stupidism\">@Stupidism</a> — I just followed your reproduction steps and everything worked exactly as expected for me. Opened up in browser and everything.</p>\n<p dir=\"auto\">Payload's webpack config should deliver you everything you need to parse <code class=\"notranslate\">export</code> automatically.</p>\n<p dir=\"auto\">Generally, when we see <code class=\"notranslate\">unexpected token 'export'</code> there is something with your Babel configuration that is incorrect. Try and completely remove your <code class=\"notranslate\">node_modules</code> folder and delete any <code class=\"notranslate\">lock</code> files. Then reinstall dependencies.</p>",
        "createdAt": "2022-06-07T18:15:31Z",
        "replies": [
          {
            "author": {
              "name": "Stupidism",
              "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
              "url": "https://github.com/Stupidism"
            },
            "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>, just double confirm did u skipped this branch checkout step?</p>\n<blockquote>\n<p dir=\"auto\">git checkout feng/copy-public-demo-and-run</p>\n</blockquote>\n<p dir=\"auto\">PS: As u said about the the babel issue, I'm trying to set the babel path for in payload config. because the babel file path in nx is not in to root directory of the project</p>",
            "createdAt": "2022-06-10T04:42:00Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">No, I checked out the branch and it worked perfectly actually!</p>",
            "createdAt": "2022-06-14T22:27:22Z"
          },
          {
            "author": {
              "name": "Stupidism",
              "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
              "url": "https://github.com/Stupidism"
            },
            "body": "<p dir=\"auto\">But I still see this error and asked my colleague to try and he got the same error as well. Really weired.</p>",
            "createdAt": "2022-06-15T03:40:08Z"
          },
          {
            "author": {
              "name": "Stupidism",
              "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
              "url": "https://github.com/Stupidism"
            },
            "body": "<p dir=\"auto\">Is it possible that it's related to system environment? Can u run <code class=\"notranslate\">nx report</code> to verify the environment? mine is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nx report\n\n   Node : 16.15.1\n   OS   : darwin x64\n   pnpm : 7.1.9\n\n   nx : 14.1.9\n   @nrwl/angular : Not Found\n   @nrwl/cypress : 14.1.9\n   @nrwl/detox : Not Found\n   @nrwl/devkit : Not Found\n   @nrwl/eslint-plugin-nx : 14.1.9\n   @nrwl/express : 14.1.9\n   @nrwl/jest : 14.1.9\n   @nrwl/js : Not Found\n   @nrwl/linter : 14.1.9\n   @nrwl/nest : Not Found\n   @nrwl/next : Not Found\n   @nrwl/node : 14.1.9\n   @nrwl/nx-cloud : Not Found\n   @nrwl/nx-plugin : Not Found\n   @nrwl/react : 14.1.9\n   @nrwl/react-native : Not Found\n   @nrwl/schematics : Not Found\n   @nrwl/storybook : Not Found\n   @nrwl/web : 14.1.9\n   @nrwl/workspace : 14.1.9\n   typescript : 4.6.4\"><pre class=\"notranslate\"><code class=\"notranslate\">nx report\n\n   Node : 16.15.1\n   OS   : darwin x64\n   pnpm : 7.1.9\n\n   nx : 14.1.9\n   @nrwl/angular : Not Found\n   @nrwl/cypress : 14.1.9\n   @nrwl/detox : Not Found\n   @nrwl/devkit : Not Found\n   @nrwl/eslint-plugin-nx : 14.1.9\n   @nrwl/express : 14.1.9\n   @nrwl/jest : 14.1.9\n   @nrwl/js : Not Found\n   @nrwl/linter : 14.1.9\n   @nrwl/nest : Not Found\n   @nrwl/next : Not Found\n   @nrwl/node : 14.1.9\n   @nrwl/nx-cloud : Not Found\n   @nrwl/nx-plugin : Not Found\n   @nrwl/react : 14.1.9\n   @nrwl/react-native : Not Found\n   @nrwl/schematics : Not Found\n   @nrwl/storybook : Not Found\n   @nrwl/web : 14.1.9\n   @nrwl/workspace : 14.1.9\n   typescript : 4.6.4\n</code></pre></div>",
            "createdAt": "2022-06-15T03:46:47Z"
          }
        ]
      },
      {
        "author": {
          "name": "Stupidism",
          "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
          "url": "https://github.com/Stupidism"
        },
        "body": "<p dir=\"auto\">Turned out it's related to pnpm. Detailed explanation in this thread: <a aria-label=\"Issue #665\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1274426422\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/665\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/665/hovercard\" href=\"https://github.com/payloadcms/payload/issues/665\">#665</a></p>",
        "createdAt": "2022-06-27T02:48:53Z",
        "replies": null
      },
      {
        "author": {
          "name": "Stupidism",
          "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
          "url": "https://github.com/Stupidism"
        },
        "body": "<p dir=\"auto\">It might need a configuration in <code class=\"notranslate\">payload.admin.webpack</code>  to modify the babel config. My solution now is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// babel.config.js\nmodule.exports = {\n  presets: [\n    [\n      '@babel/preset-env',\n      {\n        modules: 'commonjs',\n        targets: {\n          node: &quot;current&quot;,\n        },\n      },\n    ],\n    '@babel/preset-typescript',\n    '@babel/preset-react',\n  ],\n};\"><pre class=\"notranslate\"><code class=\"notranslate\">// babel.config.js\nmodule.exports = {\n  presets: [\n    [\n      '@babel/preset-env',\n      {\n        modules: 'commonjs',\n        targets: {\n          node: \"current\",\n        },\n      },\n    ],\n    '@babel/preset-typescript',\n    '@babel/preset-react',\n  ],\n};\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import { buildConfig } from 'payload/config';\nimport _ from 'lodash';\n\nimport babelConfig from '../babel.config';\n\nimport { Articles } from './collections/Articles';\nimport { Authors } from './collections/Authors';\n\t@@ -7,14 +10,42 @@ import { ColdArticles } from './collections/ColdArticles';\nimport { Media } from './collections/Media';\nimport { Users } from './collections/Users';\nimport { environment } from './environments/environment';\nimport { ContextField } from './collections/CoontextField';\n\nexport default buildConfig({\n  serverURL: environment.payload.serverUrl,\n  admin: {\n    // the user collection slug to use for authenticating to the admin panel, one per express app\n    user: Users.slug,\n    webpack: (config) =&gt; {\n      return _.merge({}, config, {\n        module: {\n          rules: [\n            {\n              // Override the babel loader\n              // test: /\\.(t|j)sx?$/,\n              // exclude: /node_modules[\\\\/](?!(@payloadcms[\\\\/]payload)[\\\\/]).*/,\n              use: [\n                {\n                  // loader: 'babel-loader',\n                  options: babelConfig,\n                },\n              ],\n            },\n          ],\n        },\n      });\n    },\"><pre class=\"notranslate\"><code class=\"notranslate\">import { buildConfig } from 'payload/config';\nimport _ from 'lodash';\n\nimport babelConfig from '../babel.config';\n\nimport { Articles } from './collections/Articles';\nimport { Authors } from './collections/Authors';\n\t@@ -7,14 +10,42 @@ import { ColdArticles } from './collections/ColdArticles';\nimport { Media } from './collections/Media';\nimport { Users } from './collections/Users';\nimport { environment } from './environments/environment';\nimport { ContextField } from './collections/CoontextField';\n\nexport default buildConfig({\n  serverURL: environment.payload.serverUrl,\n  admin: {\n    // the user collection slug to use for authenticating to the admin panel, one per express app\n    user: Users.slug,\n    webpack: (config) =&gt; {\n      return _.merge({}, config, {\n        module: {\n          rules: [\n            {\n              // Override the babel loader\n              // test: /\\.(t|j)sx?$/,\n              // exclude: /node_modules[\\\\/](?!(@payloadcms[\\\\/]payload)[\\\\/]).*/,\n              use: [\n                {\n                  // loader: 'babel-loader',\n                  options: babelConfig,\n                },\n              ],\n            },\n          ],\n        },\n      });\n    },\n</code></pre></div>",
        "createdAt": "2022-07-01T13:29:58Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "Stupidism",
        "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
        "url": "https://github.com/Stupidism"
      },
      "body": "<p dir=\"auto\">It might need a configuration in <code class=\"notranslate\">payload.admin.webpack</code>  to modify the babel config. My solution now is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// babel.config.js\nmodule.exports = {\n  presets: [\n    [\n      '@babel/preset-env',\n      {\n        modules: 'commonjs',\n        targets: {\n          node: &quot;current&quot;,\n        },\n      },\n    ],\n    '@babel/preset-typescript',\n    '@babel/preset-react',\n  ],\n};\"><pre class=\"notranslate\"><code class=\"notranslate\">// babel.config.js\nmodule.exports = {\n  presets: [\n    [\n      '@babel/preset-env',\n      {\n        modules: 'commonjs',\n        targets: {\n          node: \"current\",\n        },\n      },\n    ],\n    '@babel/preset-typescript',\n    '@babel/preset-react',\n  ],\n};\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import { buildConfig } from 'payload/config';\nimport _ from 'lodash';\n\nimport babelConfig from '../babel.config';\n\nimport { Articles } from './collections/Articles';\nimport { Authors } from './collections/Authors';\n\t@@ -7,14 +10,42 @@ import { ColdArticles } from './collections/ColdArticles';\nimport { Media } from './collections/Media';\nimport { Users } from './collections/Users';\nimport { environment } from './environments/environment';\nimport { ContextField } from './collections/CoontextField';\n\nexport default buildConfig({\n  serverURL: environment.payload.serverUrl,\n  admin: {\n    // the user collection slug to use for authenticating to the admin panel, one per express app\n    user: Users.slug,\n    webpack: (config) =&gt; {\n      return _.merge({}, config, {\n        module: {\n          rules: [\n            {\n              // Override the babel loader\n              // test: /\\.(t|j)sx?$/,\n              // exclude: /node_modules[\\\\/](?!(@payloadcms[\\\\/]payload)[\\\\/]).*/,\n              use: [\n                {\n                  // loader: 'babel-loader',\n                  options: babelConfig,\n                },\n              ],\n            },\n          ],\n        },\n      });\n    },\"><pre class=\"notranslate\"><code class=\"notranslate\">import { buildConfig } from 'payload/config';\nimport _ from 'lodash';\n\nimport babelConfig from '../babel.config';\n\nimport { Articles } from './collections/Articles';\nimport { Authors } from './collections/Authors';\n\t@@ -7,14 +10,42 @@ import { ColdArticles } from './collections/ColdArticles';\nimport { Media } from './collections/Media';\nimport { Users } from './collections/Users';\nimport { environment } from './environments/environment';\nimport { ContextField } from './collections/CoontextField';\n\nexport default buildConfig({\n  serverURL: environment.payload.serverUrl,\n  admin: {\n    // the user collection slug to use for authenticating to the admin panel, one per express app\n    user: Users.slug,\n    webpack: (config) =&gt; {\n      return _.merge({}, config, {\n        module: {\n          rules: [\n            {\n              // Override the babel loader\n              // test: /\\.(t|j)sx?$/,\n              // exclude: /node_modules[\\\\/](?!(@payloadcms[\\\\/]payload)[\\\\/]).*/,\n              use: [\n                {\n                  // loader: 'babel-loader',\n                  options: babelConfig,\n                },\n              ],\n            },\n          ],\n        },\n      });\n    },\n</code></pre></div>",
      "createdAt": "2022-07-01T13:29:58Z",
      "chosenAt": "2022-07-28T12:11:06Z",
      "chosenBy": "Stupidism",
      "replies": null
    }
  },
  {
    "title": "What's  the difference between blocks and relationships?",
    "body": "<p dir=\"auto\">Hi payload dev dudes,</p>\n<p dir=\"auto\">I'm migrating our 50k+ pages SEO web app from Contentful to Payload. I found blocks and relationships to collections(in rich-text editor) both can solve the requirement of inserting structured data into an article.</p>\n<p dir=\"auto\">We're now using contentful embed block(like relationship) to do this. And  the embedded block links to contents(like doc) built from content types(like collections). For example we have pure UI content types like <code class=\"notranslate\">Button</code>, <code class=\"notranslate\">Card</code> and <code class=\"notranslate\">TwitterWidget</code>, also we have business-related content types like <code class=\"notranslate\">TableRealStatisticsForCalifornia</code>.</p>\n<p dir=\"auto\">I'd like to know from the best practice aspect, when should I use blocks and when should I use relationships to collections.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/697",
    "id": "697",
    "createdAt": "2022-06-29T13:03:48Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "Stupidism",
      "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
      "url": "https://github.com/Stupidism"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Stupidism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Stupidism\">@Stupidism</a> — great question and AWESOME to hear that you are moving from Contentful to Payload.</p>\n<p dir=\"auto\">So, when I first started using Contentful, I was a bit surprised by the fact that their solution to \"flexible content\" was simply by building a list of relations to other content models. This meant that I needed to have a content model for <em><strong>every single different \"block\"</strong></em> and that can get unwieldy very quickly. For trivial blocks, like a \"content\" block (which is extremely unlikely to be reused), you still have to make another content model and then just define a relationship.</p>\n<p dir=\"auto\">Payload does things in a much more flexible way, which leaves it up to you to determine if you should use a block or a relationship field.</p>\n<p dir=\"auto\">Payload's blocks are great because the data is <em><strong>stored directly on the top-level document</strong></em> which is great for performance and makes sense from a data model for a lot of cases. If your block's data is a one-off, you should use blocks with specific fields and store the data right on the top-level document.</p>\n<p dir=\"auto\">But, if you wanted to <em>re-use</em> a block's data from page to page, or similar, you still can. In that case, you would build a block that contains a relationship field to another collection, and then just reference the document that you want within the block.</p>\n<p dir=\"auto\">For example, in our <a href=\"https://demo.payloadcms.com\" rel=\"nofollow\">public demo</a> we have a block called <code class=\"notranslate\">Embedded Form</code>. This block contains a relationship field to a <code class=\"notranslate\">forms</code> collection, which lets admins place forms directly within their layout builder but the form itself can be reused across many pages.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6651896/176481382-df95b5db-62ab-438a-9e68-ec66022ef249.png\"><img src=\"https://user-images.githubusercontent.com/6651896/176481382-df95b5db-62ab-438a-9e68-ec66022ef249.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Basically, the rule of thumb for us is that whenever we can, we use blocks and store data directly on the top-level document. But, if the data within a block needs to be reused or should be global, then we would use a relationship field <em><strong>within</strong></em> a block to point to another document.</p>\n<p dir=\"auto\">Does that make sense?</p>",
        "createdAt": "2022-06-29T15:55:56Z",
        "replies": [
          {
            "author": {
              "name": "Stupidism",
              "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
              "url": "https://github.com/Stupidism"
            },
            "body": "<p dir=\"auto\">Yes, I had a similar thought like yours. Thanks~~~</p>",
            "createdAt": "2022-07-01T00:38:00Z"
          }
        ]
      },
      {
        "author": {
          "name": "Stupidism",
          "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
          "url": "https://github.com/Stupidism"
        },
        "body": "<p dir=\"auto\">Just to expand the questions a little bit. Is it possible to insert blocks inside the richtext directly(not with a relationship, and also not break the whole article apart into several blocks)? <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a></p>",
        "createdAt": "2022-07-01T00:58:23Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Yes, it is. The <code class=\"notranslate\">richText</code> field has a <code class=\"notranslate\">relationship</code> element, that allows you to dynamically reference other documents directly within any rich text field.</p>\n<p dir=\"auto\">Here are the docs for that:<br>\n<a href=\"https://payloadcms.com/docs/fields/rich-text#relationship-element\" rel=\"nofollow\">https://payloadcms.com/docs/fields/rich-text#relationship-element</a></p>",
            "createdAt": "2022-07-01T12:15:14Z"
          },
          {
            "author": {
              "name": "Stupidism",
              "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
              "url": "https://github.com/Stupidism"
            },
            "body": "<p dir=\"auto\">In that way, it's a relationship again. I was trying to know if we can do without relationship.</p>",
            "createdAt": "2022-07-01T13:22:33Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Stupidism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Stupidism\">@Stupidism</a> — great question and AWESOME to hear that you are moving from Contentful to Payload.</p>\n<p dir=\"auto\">So, when I first started using Contentful, I was a bit surprised by the fact that their solution to \"flexible content\" was simply by building a list of relations to other content models. This meant that I needed to have a content model for <em><strong>every single different \"block\"</strong></em> and that can get unwieldy very quickly. For trivial blocks, like a \"content\" block (which is extremely unlikely to be reused), you still have to make another content model and then just define a relationship.</p>\n<p dir=\"auto\">Payload does things in a much more flexible way, which leaves it up to you to determine if you should use a block or a relationship field.</p>\n<p dir=\"auto\">Payload's blocks are great because the data is <em><strong>stored directly on the top-level document</strong></em> which is great for performance and makes sense from a data model for a lot of cases. If your block's data is a one-off, you should use blocks with specific fields and store the data right on the top-level document.</p>\n<p dir=\"auto\">But, if you wanted to <em>re-use</em> a block's data from page to page, or similar, you still can. In that case, you would build a block that contains a relationship field to another collection, and then just reference the document that you want within the block.</p>\n<p dir=\"auto\">For example, in our <a href=\"https://demo.payloadcms.com\" rel=\"nofollow\">public demo</a> we have a block called <code class=\"notranslate\">Embedded Form</code>. This block contains a relationship field to a <code class=\"notranslate\">forms</code> collection, which lets admins place forms directly within their layout builder but the form itself can be reused across many pages.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6651896/176481382-df95b5db-62ab-438a-9e68-ec66022ef249.png\"><img src=\"https://user-images.githubusercontent.com/6651896/176481382-df95b5db-62ab-438a-9e68-ec66022ef249.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Basically, the rule of thumb for us is that whenever we can, we use blocks and store data directly on the top-level document. But, if the data within a block needs to be reused or should be global, then we would use a relationship field <em><strong>within</strong></em> a block to point to another document.</p>\n<p dir=\"auto\">Does that make sense?</p>",
      "createdAt": "2022-06-29T15:55:56Z",
      "chosenAt": "2022-07-01T00:38:02Z",
      "chosenBy": "Stupidism",
      "replies": [
        {
          "author": {
            "name": "Stupidism",
            "avatar": "https://avatars.githubusercontent.com/u/5801015?u=c802946f2083746bf933ce14965fffba46b39219&v=4",
            "url": "https://github.com/Stupidism"
          },
          "body": "<p dir=\"auto\">Yes, I had a similar thought like yours. Thanks~~~</p>",
          "createdAt": "2022-07-01T00:38:00Z"
        }
      ]
    }
  },
  {
    "title": "Import a script to collection to use inside a hook",
    "body": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">How do I import a script to a collection to use inside a hook? For example</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/* collections &gt; Product.js */\n\n/* Importing someting*/\nimport { script } from &quot;../utils/scripts&quot;;\n\n/* Creating a collection */\nconst Product = {\n    slug: 'products',\n    ...\n    hooks: {\n        beforeChange: [\n            async () =&gt; { script(); }\n       ]\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">/* collections &gt; Product.js */\n\n/* Importing someting*/\nimport { script } from \"../utils/scripts\";\n\n/* Creating a collection */\nconst Product = {\n    slug: 'products',\n    ...\n    hooks: {\n        beforeChange: [\n            async () =&gt; { script(); }\n       ]\n}\n</code></pre></div>\n<p dir=\"auto\">When I build this it builds ok, but when I am trying to access the admin panel it says in the console \"<strong>webpack_require</strong>(...).config is not a function\". And when I remove the imports, it works fine.</p>\n<p dir=\"auto\">Any ideas how can I make this work?</p>\n<p dir=\"auto\">Thank you!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/695",
    "id": "695",
    "createdAt": "2022-06-28T18:17:10Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "vstarush",
      "avatar": "https://avatars.githubusercontent.com/u/10617969?v=4",
      "url": "https://github.com/vstarush"
    },
    "comments": [
      {
        "author": {
          "name": "vstarush",
          "avatar": "https://avatars.githubusercontent.com/u/10617969?v=4",
          "url": "https://github.com/vstarush"
        },
        "body": "<p dir=\"auto\">Figured it out. Fixed it by changing \"require\" to \"import\" in the script.</p>",
        "createdAt": "2022-06-29T21:03:23Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "vstarush",
        "avatar": "https://avatars.githubusercontent.com/u/10617969?v=4",
        "url": "https://github.com/vstarush"
      },
      "body": "<p dir=\"auto\">Figured it out. Fixed it by changing \"require\" to \"import\" in the script.</p>",
      "createdAt": "2022-06-29T21:03:23Z",
      "chosenAt": "2022-06-29T21:03:27Z",
      "chosenBy": "vstarush",
      "replies": null
    }
  },
  {
    "title": "Serving static assets",
    "body": "<p dir=\"auto\">Hi, I would like to have an example about serving static folders in Payload. Theses files can be used for instance  in <code class=\"notranslate\">admin.meta.favicon</code> field in <code class=\"notranslate\">payload.config.ts</code>.</p>\n<p dir=\"auto\">Here is my project tree:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16315811/175776347-9ccc931a-d737-4371-bab1-6d416813a017.png\"><img src=\"https://user-images.githubusercontent.com/16315811/175776347-9ccc931a-d737-4371-bab1-6d416813a017.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">I tried using <a href=\"https://expressjs.com/en/starter/static-files.html\" rel=\"nofollow\">express.static</a> in my <code class=\"notranslate\">server.ts</code>  as follow but this does not work:</p>\n<p dir=\"auto\"><code class=\"notranslate\">app.use('/public', express.static('assets/public'));</code> =&gt; give 404 on <code class=\"notranslate\">localhost:3000/public</code></p>\n<p dir=\"auto\"><code class=\"notranslate\">app.use('/public', express.static(__dirname + '/assets/public'));</code> =&gt; also give 404 <code class=\"notranslate\">localhost:3000/public</code></p>\n<p dir=\"auto\">Is there any example/documentation about serving static files in Payload that I can take a look at ? Thanks a lots !</p>",
    "url": "https://github.com/payloadcms/payload/discussions/686",
    "id": "686",
    "createdAt": "2022-06-25T14:06:59Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "henrituan",
      "avatar": "https://avatars.githubusercontent.com/u/16315811?u=0e2eff9646d9417e476fcf69e3047f86c3f35031&v=4",
      "url": "https://github.com/henrituan"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">This is really an express question more than to do with Payload.</p>\n<p dir=\"auto\">When you say you get a 404 from <code class=\"notranslate\">localhost:3000/public</code> are you specifying the file too as in <code class=\"notranslate\">localhost:3000/public/favicon.ico</code>? The expected result for hitting just the directory path is a 404 unless you have a handler set also.</p>\n<p dir=\"auto\">Assuming that you are requesting files it has to be a problem with how you are calling express.static. We use <code class=\"notranslate\">path.resolve(__dirname, './assets/public')</code> rather than <code class=\"notranslate\">+</code> to concat path names together.</p>\n<p dir=\"auto\">What happens if you try <code class=\"notranslate\">app.use('/public', express.static(path.resolve(__dirname, './assets/public'));</code>?</p>",
        "createdAt": "2022-06-25T14:43:46Z",
        "replies": [
          {
            "author": {
              "name": "henrituan",
              "avatar": "https://avatars.githubusercontent.com/u/16315811?u=0e2eff9646d9417e476fcf69e3047f86c3f35031&v=4",
              "url": "https://github.com/henrituan"
            },
            "body": "<p dir=\"auto\">Thanks a lots, <code class=\"notranslate\">(path.resolve()</code> indeed solves the problem !</p>",
            "createdAt": "2022-06-25T15:07:18Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">This is really an express question more than to do with Payload.</p>\n<p dir=\"auto\">When you say you get a 404 from <code class=\"notranslate\">localhost:3000/public</code> are you specifying the file too as in <code class=\"notranslate\">localhost:3000/public/favicon.ico</code>? The expected result for hitting just the directory path is a 404 unless you have a handler set also.</p>\n<p dir=\"auto\">Assuming that you are requesting files it has to be a problem with how you are calling express.static. We use <code class=\"notranslate\">path.resolve(__dirname, './assets/public')</code> rather than <code class=\"notranslate\">+</code> to concat path names together.</p>\n<p dir=\"auto\">What happens if you try <code class=\"notranslate\">app.use('/public', express.static(path.resolve(__dirname, './assets/public'));</code>?</p>",
      "createdAt": "2022-06-25T14:43:46Z",
      "chosenAt": "2022-06-25T15:05:42Z",
      "chosenBy": "henrituan",
      "replies": [
        {
          "author": {
            "name": "henrituan",
            "avatar": "https://avatars.githubusercontent.com/u/16315811?u=0e2eff9646d9417e476fcf69e3047f86c3f35031&v=4",
            "url": "https://github.com/henrituan"
          },
          "body": "<p dir=\"auto\">Thanks a lots, <code class=\"notranslate\">(path.resolve()</code> indeed solves the problem !</p>",
          "createdAt": "2022-06-25T15:07:18Z"
        }
      ]
    }
  },
  {
    "title": "Collection endpoints - errors with modules",
    "body": "<p dir=\"auto\">Hello again,</p>\n<p dir=\"auto\">Thanks to <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/GeorgeyB/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/GeorgeyB\">@GeorgeyB</a> (<a aria-label=\"Discussion #675\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"4163125\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/675\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/675/hovercard?comment_id=3001385\" href=\"https://github.com/payloadcms/payload/discussions/675#discussioncomment-3001385\">#675 (comment)</a>) I moved my custom express endpoint implementation to collection property <code class=\"notranslate\">endpoints</code> and REST API works ok but there are a lot of errors in server console - see some of these:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ERROR in ./src/collections/Invoices.ts 3:11-24\nModule not found: Error: Can't resolve 'fs' in '(...)/src/collections'\n...\nERROR in ./node_modules/puppeteer/lib/esm/puppeteer/node/BrowserRunner.js 29:0-46\nModule not found: Error: Can't resolve 'child_process' in '(...)/node_modules/puppeteer/lib/esm/puppeteer/node'\n\nERROR in ./node_modules/puppeteer/lib/esm/puppeteer/node/BrowserRunner.js 30:0-25\nModule not found: Error: Can't resolve 'fs' in '(...)/node_modules/puppeteer/lib/esm/puppeteer/node'\n\nERROR in ./node_modules/puppeteer/lib/esm/puppeteer/node/BrowserRunner.js 32:0-37\nModule not found: Error: Can't resolve 'readline' in '(...)/node_modules/puppeteer/lib/esm/puppeteer/node'\n\nERROR in ./node_modules/puppeteer/lib/esm/puppeteer/node/BrowserRunner.js 34:0-33\nModule not found: Error: Can't resolve 'util' in '(...)/node_modules/puppeteer/lib/esm/puppeteer/node'\n...\nwebpack compiled with 73 errors and 5 warnings\"><pre class=\"notranslate\"><code class=\"notranslate\">ERROR in ./src/collections/Invoices.ts 3:11-24\nModule not found: Error: Can't resolve 'fs' in '(...)/src/collections'\n...\nERROR in ./node_modules/puppeteer/lib/esm/puppeteer/node/BrowserRunner.js 29:0-46\nModule not found: Error: Can't resolve 'child_process' in '(...)/node_modules/puppeteer/lib/esm/puppeteer/node'\n\nERROR in ./node_modules/puppeteer/lib/esm/puppeteer/node/BrowserRunner.js 30:0-25\nModule not found: Error: Can't resolve 'fs' in '(...)/node_modules/puppeteer/lib/esm/puppeteer/node'\n\nERROR in ./node_modules/puppeteer/lib/esm/puppeteer/node/BrowserRunner.js 32:0-37\nModule not found: Error: Can't resolve 'readline' in '(...)/node_modules/puppeteer/lib/esm/puppeteer/node'\n\nERROR in ./node_modules/puppeteer/lib/esm/puppeteer/node/BrowserRunner.js 34:0-33\nModule not found: Error: Can't resolve 'util' in '(...)/node_modules/puppeteer/lib/esm/puppeteer/node'\n...\nwebpack compiled with 73 errors and 5 warnings\n</code></pre></div>\n<p dir=\"auto\">I use much more packages and each used in the handler throws such error \"Module not found\". Surprisingly endpoint works ok and I'm getting a response.</p>\n<p dir=\"auto\">When I used custom express endpoint I hadn't such errors.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/678",
    "id": "678",
    "createdAt": "2022-06-22T20:25:49Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "wojciechkrol",
      "avatar": "https://avatars.githubusercontent.com/u/14108143?u=a50f83a499fdf37dbee3b4686403648ee4507a1a&v=4",
      "url": "https://github.com/wojciechkrol"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/wojciechkrol/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wojciechkrol\">@wojciechkrol</a> — this is because you need to use Webpack <code class=\"notranslate\">alias</code>es to make sure that your custom endpoint code is not loaded into the admin JS bundle. Because the entire Payload config is imported directly in Webpack, and you now have your custom endpoint handlers imported in your Payload code, the admin panel is actually trying to load and execute those modules. And, <code class=\"notranslate\">fs</code> is a server-side only package built into Node.</p>\n<p dir=\"auto\">Here's an example from one of our projects, where we alias a bunch of server-only modules:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"    webpack: (config) =&gt; ({\n      ...config,\n      resolve: {\n        ...config.resolve,\n        alias: [\n          path.resolve(__dirname, './hookHelperFunctions/stripeFunctions'),\n          path.resolve(__dirname, './twilio'),\n          path.resolve(__dirname, './email/sendTemplatedEmail'),\n        ].reduce((alias, aliasPath) =&gt; ({\n          ...alias,\n          [aliasPath]: mockModulePath,\n        }), config.resolve.alias),\n      },\n    }),\"><pre class=\"notranslate\">    <span class=\"pl-s1\">webpack</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">config</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      ...<span class=\"pl-s1\">config</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">resolve</span>: <span class=\"pl-kos\">{</span>\n        ...<span class=\"pl-s1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolve</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">alias</span>: <span class=\"pl-kos\">[</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./hookHelperFunctions/stripeFunctions'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./twilio'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./email/sendTemplatedEmail'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reduce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alias</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">aliasPath</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n          ...<span class=\"pl-s1\">alias</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">[</span><span class=\"pl-s1\">aliasPath</span><span class=\"pl-kos\">]</span>: <span class=\"pl-s1\">mockModulePath</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolve</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">alias</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">We basically tell Webpack that whenever one of those files gets imported, replace that file with the <code class=\"notranslate\">mockModulePath</code> file.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const mockModulePath = path.resolve(__dirname, './mocks/emptyModule.js');\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">mockModulePath</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./mocks/emptyModule.js'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">And then <code class=\"notranslate\">mockModulePath</code> is a file that just exports an empty object:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"module.exports = {};\"><pre class=\"notranslate\"><span class=\"pl-smi\">module</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">exports</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">There are some docs written up for this too here:<br>\n<a href=\"https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules\" rel=\"nofollow\">https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules</a></p>\n<p dir=\"auto\">Give it a shot!</p>",
        "createdAt": "2022-06-22T20:30:24Z",
        "replies": null
      },
      {
        "author": {
          "name": "wojciechkrol",
          "avatar": "https://avatars.githubusercontent.com/u/14108143?u=a50f83a499fdf37dbee3b4686403648ee4507a1a&v=4",
          "url": "https://github.com/wojciechkrol"
        },
        "body": "<p dir=\"auto\">Well, it looks a bit complicated. I will look into this solution. Thank you for the explanation!</p>",
        "createdAt": "2022-06-22T20:39:22Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/wojciechkrol/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wojciechkrol\">@wojciechkrol</a> — this is because you need to use Webpack <code class=\"notranslate\">alias</code>es to make sure that your custom endpoint code is not loaded into the admin JS bundle. Because the entire Payload config is imported directly in Webpack, and you now have your custom endpoint handlers imported in your Payload code, the admin panel is actually trying to load and execute those modules. And, <code class=\"notranslate\">fs</code> is a server-side only package built into Node.</p>\n<p dir=\"auto\">Here's an example from one of our projects, where we alias a bunch of server-only modules:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"    webpack: (config) =&gt; ({\n      ...config,\n      resolve: {\n        ...config.resolve,\n        alias: [\n          path.resolve(__dirname, './hookHelperFunctions/stripeFunctions'),\n          path.resolve(__dirname, './twilio'),\n          path.resolve(__dirname, './email/sendTemplatedEmail'),\n        ].reduce((alias, aliasPath) =&gt; ({\n          ...alias,\n          [aliasPath]: mockModulePath,\n        }), config.resolve.alias),\n      },\n    }),\"><pre class=\"notranslate\">    <span class=\"pl-s1\">webpack</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">config</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      ...<span class=\"pl-s1\">config</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">resolve</span>: <span class=\"pl-kos\">{</span>\n        ...<span class=\"pl-s1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolve</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">alias</span>: <span class=\"pl-kos\">[</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./hookHelperFunctions/stripeFunctions'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./twilio'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./email/sendTemplatedEmail'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reduce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alias</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">aliasPath</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n          ...<span class=\"pl-s1\">alias</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">[</span><span class=\"pl-s1\">aliasPath</span><span class=\"pl-kos\">]</span>: <span class=\"pl-s1\">mockModulePath</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolve</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">alias</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">We basically tell Webpack that whenever one of those files gets imported, replace that file with the <code class=\"notranslate\">mockModulePath</code> file.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const mockModulePath = path.resolve(__dirname, './mocks/emptyModule.js');\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">mockModulePath</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./mocks/emptyModule.js'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">And then <code class=\"notranslate\">mockModulePath</code> is a file that just exports an empty object:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"module.exports = {};\"><pre class=\"notranslate\"><span class=\"pl-smi\">module</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">exports</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">There are some docs written up for this too here:<br>\n<a href=\"https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules\" rel=\"nofollow\">https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules</a></p>\n<p dir=\"auto\">Give it a shot!</p>",
      "createdAt": "2022-06-22T20:30:24Z",
      "chosenAt": "2022-06-22T20:39:36Z",
      "chosenBy": "wojciechkrol",
      "replies": null
    }
  },
  {
    "title": "REQ and USER are undefined running behind nginx proxy",
    "body": "<p dir=\"auto\">I'm having several issues setting up Payload cms behind an Nginx Proxy for production. Basically my admin user is getting a lot of 403 Forbidden responses from the API, like . Doing some tests I console logged my <strong>req</strong>, and <strong>user</strong> variables in the update access hook of a collection, both resulting in undefined. Log-in to admin works, but log-out is weird.<br>\nSometimes, even <code class=\"notranslate\">https://site.com/api/access</code> returns <code class=\"notranslate\">{\"errors\":[{\"message\":\"req is not defined\"}]}</code><br>\nHere´s my configuration file with of course redacted sensitive information</p>\n<p dir=\"auto\"><strong>Nginx configuration</strong></p>\n<div class=\"highlight highlight-source-nginx notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"server {\n    root /var/www/site/dist;\n    index index.html index.htm index.nginx-debian.html;\n    server_name site.com www.site.com;\n\n    # Static Root\n    location / {\n        try_files $uri $uri/ /index.html;\n    }\n\n    # Payload API\n    location /api {\n        proxy_pass http://localhost:1336/api;\n        proxy_http_version 1.1;\n        proxy_set_header X-Forwarded-Host $host;\n        proxy_set_header X-Forwarded-Server $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header Host $http_host;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection &quot;Upgrade&quot;;\n        proxy_pass_request_headers on;\n        proxy_set_header Host $host;\n    }\n\n    # Payload Admin Dashboard\n    location /admin {\n        proxy_pass http://localhost:1336/admin;\n        proxy_http_version 1.1;\n        proxy_set_header X-Forwarded-Host $host;\n        proxy_set_header X-Forwarded-Server $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header Host $http_host;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection &quot;Upgrade&quot;;\n        proxy_pass_request_headers on;\n    }\n\n    # Socket.IO\n    location /socket.io {\n        proxy_pass http://localhost:1336/socket.io;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $host;\n        # proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection &quot;upgrade&quot;;\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">server</span> {\n    <span class=\"pl-k\">root</span> /var/www/site/dist;\n    <span class=\"pl-k\">index</span> index.html index.htm index.nginx-debian.html;\n    <span class=\"pl-k\">server_name</span> site.com www.site.com;\n\n    <span class=\"pl-c\"># Static Root</span>\n    <span class=\"pl-k\">location</span> <span class=\"pl-en\">/ </span>{\n        <span class=\"pl-k\">try_files</span> <span class=\"pl-smi\">$uri</span> <span class=\"pl-smi\">$uri</span>/ /index.html;\n    }\n\n    <span class=\"pl-c\"># Payload API</span>\n    <span class=\"pl-k\">location</span> <span class=\"pl-en\">/api </span>{\n        <span class=\"pl-k\">proxy_pass</span> http://localhost:1336/api;\n        <span class=\"pl-k\">proxy_http_version</span> <span class=\"pl-c1\">1.1</span>;\n        <span class=\"pl-k\">proxy_set_header</span> X-Forwarded-Host <span class=\"pl-smi\">$host</span>;\n        <span class=\"pl-k\">proxy_set_header</span> X-Forwarded-Server <span class=\"pl-smi\">$host</span>;\n        <span class=\"pl-k\">proxy_set_header</span> X-Real-IP <span class=\"pl-smi\">$remote_addr</span>;\n        <span class=\"pl-k\">proxy_set_header</span> X-Forwarded-For <span class=\"pl-smi\">$proxy_add_x_forwarded_for</span>;\n        <span class=\"pl-k\">proxy_set_header</span> X-Forwarded-Proto <span class=\"pl-smi\">$scheme</span>;\n        <span class=\"pl-k\">proxy_set_header</span> Host <span class=\"pl-smi\">$http_host</span>;\n        <span class=\"pl-k\">proxy_set_header</span> Upgrade <span class=\"pl-smi\">$http_upgrade</span>;\n        <span class=\"pl-k\">proxy_set_header</span> Connection <span class=\"pl-s\">\"Upgrade\"</span>;\n        <span class=\"pl-k\">proxy_pass_request_headers</span><span class=\"pl-c1\"> on</span>;\n        <span class=\"pl-k\">proxy_set_header</span> Host <span class=\"pl-smi\">$host</span>;\n    }\n\n    <span class=\"pl-c\"># Payload Admin Dashboard</span>\n    <span class=\"pl-k\">location</span> <span class=\"pl-en\">/admin </span>{\n        <span class=\"pl-k\">proxy_pass</span> http://localhost:1336/admin;\n        <span class=\"pl-k\">proxy_http_version</span> <span class=\"pl-c1\">1.1</span>;\n        <span class=\"pl-k\">proxy_set_header</span> X-Forwarded-Host <span class=\"pl-smi\">$host</span>;\n        <span class=\"pl-k\">proxy_set_header</span> X-Forwarded-Server <span class=\"pl-smi\">$host</span>;\n        <span class=\"pl-k\">proxy_set_header</span> X-Real-IP <span class=\"pl-smi\">$remote_addr</span>;\n        <span class=\"pl-k\">proxy_set_header</span> X-Forwarded-For <span class=\"pl-smi\">$proxy_add_x_forwarded_for</span>;\n        <span class=\"pl-k\">proxy_set_header</span> X-Forwarded-Proto <span class=\"pl-smi\">$scheme</span>;\n        <span class=\"pl-k\">proxy_set_header</span> Host <span class=\"pl-smi\">$http_host</span>;\n        <span class=\"pl-k\">proxy_set_header</span> Upgrade <span class=\"pl-smi\">$http_upgrade</span>;\n        <span class=\"pl-k\">proxy_set_header</span> Connection <span class=\"pl-s\">\"Upgrade\"</span>;\n        <span class=\"pl-k\">proxy_pass_request_headers</span><span class=\"pl-c1\"> on</span>;\n    }\n\n    <span class=\"pl-c\"># Socket.IO</span>\n    <span class=\"pl-k\">location</span> <span class=\"pl-en\">/socket.io </span>{\n        <span class=\"pl-k\">proxy_pass</span> http://localhost:1336/socket.io;\n        <span class=\"pl-k\">proxy_set_header</span> X-Forwarded-For <span class=\"pl-smi\">$proxy_add_x_forwarded_for</span>;\n        <span class=\"pl-k\">proxy_set_header</span> Host <span class=\"pl-smi\">$host</span>;\n        <span class=\"pl-c\"># proxy_http_version 1.1;</span>\n        <span class=\"pl-k\">proxy_set_header</span> Upgrade <span class=\"pl-smi\">$http_upgrade</span>;\n        <span class=\"pl-k\">proxy_set_header</span> Connection <span class=\"pl-s\">\"upgrade\"</span>;\n    }\n}</pre></div>\n<p dir=\"auto\"><strong>payload.config.js</strong></p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { buildConfig } from 'payload/config';\nimport path from 'path';\n\n// Globals\nimport Setup from './globals/Setup';\nimport Avatars from './globals/Avatars';\n\n// Collections\nimport Admins from './collections/Admins';\nimport Users from './collections/Users';\nimport Achievements from './collections/Achievements';\nimport Experiences from './collections/Experiences';\nimport Spaces from './collections/Spaces';\nimport Playlists from './collections/Playlists';\nimport Images from './collections/Images';\nimport Videos from './collections/Videos';\nimport Categories from './collections/Categories';\nimport Sections from './collections/Sections'\n\n// Graphics\nimport Logo from './graphics/Logo';\nimport Icon from './graphics/Icon';\n\nexport default buildConfig({\n  serverURL: process.env.PAYLOAD_PUBLIC_SERVER_URL,\n  cors: '*',\n  admin: {\n    user: Admins.slug,\n    css: path.resolve(__dirname, './styles/style.scss'),\n    scss: path.resolve(__dirname, './styles/vars.scss'),\n    meta: {\n        favicon: '/public/favicon.png'\n    },\n    components: {\n       graphics: {\n        Logo,\n        Icon,\n       },\n     },\n  },\n  debug: process.env.PAYLOAD_PUBLIC_DEBUG,\n  globals: [\n    Setup,\n    Avatars,\n  ],\n  collections: [\n    Categories,\n    Sections,\n    Spaces,\n    Experiences,\n    Playlists,\n    Images, Videos,\n    Users,\n    Achievements,\n    Admins\n    // Add Collections here\n  ],\n  plugins: [],\n  localization: {\n    locales: [\n        'en',\n        'es',\n    ],\n    defaultLocale: 'en',\n    fallback: true,\n  },\n});\n\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">buildConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/config'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">path</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'path'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// Globals</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Setup</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./globals/Setup'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Avatars</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./globals/Avatars'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// Collections</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Admins</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Admins'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Users</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Users'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Achievements</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Achievements'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Experiences</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Experiences'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Spaces</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Spaces'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Playlists</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Playlists'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Images</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Images'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Videos</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Videos'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Categories</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Categories'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Sections</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Sections'</span>\n\n<span class=\"pl-c\">// Graphics</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Logo</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./graphics/Logo'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Icon</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./graphics/Icon'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-en\">buildConfig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">serverURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_PUBLIC_SERVER_URL</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">cors</span>: <span class=\"pl-s\">'*'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">user</span>: <span class=\"pl-v\">Admins</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">slug</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">css</span>: <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./styles/style.scss'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">scss</span>: <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./styles/vars.scss'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">meta</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">favicon</span>: <span class=\"pl-s\">'/public/favicon.png'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">components</span>: <span class=\"pl-kos\">{</span>\n       <span class=\"pl-c1\">graphics</span>: <span class=\"pl-kos\">{</span>\n        Logo<span class=\"pl-kos\">,</span>\n        Icon<span class=\"pl-kos\">,</span>\n       <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n     <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">debug</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_PUBLIC_DEBUG</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">globals</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-v\">Setup</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-v\">Avatars</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">collections</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-v\">Categories</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-v\">Sections</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-v\">Spaces</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-v\">Experiences</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-v\">Playlists</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-v\">Images</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Videos</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-v\">Users</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-v\">Achievements</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-v\">Admins</span>\n    <span class=\"pl-c\">// Add Collections here</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">plugins</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">localization</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">locales</span>: <span class=\"pl-kos\">[</span>\n        <span class=\"pl-s\">'en'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-s\">'es'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">defaultLocale</span>: <span class=\"pl-s\">'en'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">fallback</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\"><strong>.env</strong></p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"MONGODB_URI=mongodb://user:pass@127.0.0.1:27017/db?authSource=admin\nPAYLOAD_SECRET=MYSECRET\nPAYLOAD_CONFIG_PATH=src/payload.config.js\nPAYLOAD_PUBLIC_SERVER_URL=http://localhost:1336\nPAYLOAD_PUBLIC_PORT=1336\nPAYLOAD_PUBLIC_DEBUG=FALSE\nNODE_ENV=PRODUCTION\"><pre class=\"notranslate\">MONGODB_URI=mongodb://user:pass@127.0.0.1:27017/db<span class=\"pl-k\">?</span>authSource=admin\nPAYLOAD_SECRET=MYSECRET\nPAYLOAD_CONFIG_PATH=src/payload.config.js\nPAYLOAD_PUBLIC_SERVER_URL=http://localhost:1336\nPAYLOAD_PUBLIC_PORT=1336\nPAYLOAD_PUBLIC_DEBUG=FALSE\nNODE_ENV=PRODUCTION</pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/663",
    "id": "663",
    "createdAt": "2022-06-16T12:49:35Z",
    "upvotes": 1,
    "commentTotal": 4,
    "author": {
      "name": "gonzam88",
      "avatar": "https://avatars.githubusercontent.com/u/6289953?u=964dbaf32492efedc92230ee51de16ffac6a9684&v=4",
      "url": "https://github.com/gonzam88"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/gonzam88/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gonzam88\">@gonzam88</a> — we've seen similar issues before and it is related to your auth cookie(s) being rejected.</p>\n<p dir=\"auto\">Do you have any cookie options configured on your <code class=\"notranslate\">admins</code> collection? Generally this issue is due to you having a problem with specifying secure cookies, but not using HTTPS, or trying to use cross-domain cookies which are now rejected in newer versions of popular browsers.</p>\n<p dir=\"auto\">A way to check why a cookie is being rejected is to open the Inspector in Chrome, go to the Network tab, and then log in to the admin UI. You should try and find the <code class=\"notranslate\">login</code> network <code class=\"notranslate\">POST</code> request. Click that request, and see if there is a little yellow \"warning\" symbol next to the <code class=\"notranslate\">Set-Cookie</code> header of that request.</p>\n<p dir=\"auto\">Here is a screenshot of a working login request within our demo admin panel:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6651896/174129106-ab6a696a-f60c-416e-be4e-a1c8215b0914.png\"><img width=\"1725\" alt=\"Screen Shot 2022-06-16 at 10 15 46 AM\" src=\"https://user-images.githubusercontent.com/6651896/174129106-ab6a696a-f60c-416e-be4e-a1c8215b0914.png\" style=\"max-width: 100%;\"></a></p>",
        "createdAt": "2022-06-16T17:17:30Z",
        "replies": null
      },
      {
        "author": {
          "name": "gonzam88",
          "avatar": "https://avatars.githubusercontent.com/u/6289953?u=964dbaf32492efedc92230ee51de16ffac6a9684&v=4",
          "url": "https://github.com/gonzam88"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> thanks for the reply. My cookie looks fine <g-emoji class=\"g-emoji\" alias=\"cookie\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f36a.png\">🍪</g-emoji> yet <strong>req</strong> is still undefined. Any other place to look? Thanks in advanced.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6289953/174335867-48fdc77b-0799-4104-9fd1-145c952af2c3.png\"><img src=\"https://user-images.githubusercontent.com/6289953/174335867-48fdc77b-0799-4104-9fd1-145c952af2c3.png\" alt=\"Screen Shot 2022-06-17 at 1 06 28 PM\" style=\"max-width: 100%;\"></a></p>",
        "createdAt": "2022-06-17T16:07:34Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">OK. Can you send the full error message that you're seeing regarding <code class=\"notranslate\">req</code> being undefined? We've never seen that before..</p>\n<p dir=\"auto\">Also, I'm not sure if it's related (don't see how it would be) but generally we just have one <code class=\"notranslate\">location</code> block within our <code class=\"notranslate\">nginx</code> reverse proxy configs, like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"server {\n        server_name website.com;\n\n        location / {\n                proxy_pass http://localhost:1337;\n                proxy_http_version 1.1;\n                proxy_set_header Upgrade $http_upgrade;\n                proxy_set_header Connection 'upgrade';\n                proxy_set_header Host $host;\n                proxy_cache_bypass $http_upgrade;\n                proxy_set_header X-Forwarded-For $remote_addr;\n        }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">server {\n        server_name website.com;\n\n        location / {\n                proxy_pass http://localhost:1337;\n                proxy_http_version 1.1;\n                proxy_set_header Upgrade $http_upgrade;\n                proxy_set_header Connection 'upgrade';\n                proxy_set_header Host $host;\n                proxy_cache_bypass $http_upgrade;\n                proxy_set_header X-Forwarded-For $remote_addr;\n        }\n}\n</code></pre></div>",
            "createdAt": "2022-06-17T17:51:35Z"
          },
          {
            "author": {
              "name": "gonzam88",
              "avatar": "https://avatars.githubusercontent.com/u/6289953?u=964dbaf32492efedc92230ee51de16ffac6a9684&v=4",
              "url": "https://github.com/gonzam88"
            },
            "body": "<p dir=\"auto\">fyi I tried this configuration just in case but got the same result</p>",
            "createdAt": "2022-06-18T21:41:20Z"
          }
        ]
      },
      {
        "author": {
          "name": "gonzam88",
          "avatar": "https://avatars.githubusercontent.com/u/6289953?u=964dbaf32492efedc92230ee51de16ffac6a9684&v=4",
          "url": "https://github.com/gonzam88"
        },
        "body": "<p dir=\"auto\">The thing with the nginx configuration is I need my static vue site running on <strong>/</strong> and then payload on both <strong>/admin</strong> and <strong>/api</strong>. I could be wrong, or maybe there's a better approach way but this worked for me before with other CMSs.</p>\n<p dir=\"auto\">There's actually no error displayed, I just can't edit docs with my admin users unless my access is<br>\n<code class=\"notranslate\">update: ({ req: { user } }) =&gt; { return true },</code></p>\n<p dir=\"auto\">If I try a rule where only admin users can edit like the following I get the typical <strong>You are not allowed to perform this action</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const adminsAndEditors =  async ({ req: { user } }) =&gt; {\n  if (!user) return false // return false to deny a user\n  if(user.collection == 'admins') return true // every admin can edit\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">const adminsAndEditors =  async ({ req: { user } }) =&gt; {\n  if (!user) return false // return false to deny a user\n  if(user.collection == 'admins') return true // every admin can edit\n}\n</code></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6289953/174388558-4b7f6ce0-a5ac-44a4-83a6-9e539d9a48af.png\"><img src=\"https://user-images.githubusercontent.com/6289953/174388558-4b7f6ce0-a5ac-44a4-83a6-9e539d9a48af.png\" alt=\"Creating - Section - Douob - Google Chrome 6_17_2022 4_15_32 PM\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Let me know if there's any other info I can provide.</p>",
        "createdAt": "2022-06-17T19:20:09Z",
        "replies": [
          {
            "author": {
              "name": "gonzam88",
              "avatar": "https://avatars.githubusercontent.com/u/6289953?u=964dbaf32492efedc92230ee51de16ffac6a9684&v=4",
              "url": "https://github.com/gonzam88"
            },
            "body": "<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[19:15:30] ERROR (payload): Forbidden: You are not allowed to perform this action.\n    at new ExtendableError (/var/www/testing-douob-server-payload/node_modules/payload/src/errors/APIError.ts:26:11)\n    at new APIError (/var/www/testing-douob-server-payload/node_modules/payload/src/errors/APIError.ts:43:5)\n    at new Forbidden (/var/www/testing-douob-server-payload/node_modules/payload/src/errors/Forbidden.ts:6:5)\n    at executeAccess (/var/www/testing-douob-server-payload/node_modules/payload/src/auth/executeAccess.ts:9:43)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Payload.create (/var/www/testing-douob-server-payload/node_modules/payload/src/collections/operations/create.ts:74:5)\n    at Payload.create (/var/www/testing-douob-server-payload/node_modules/payload/src/collections/requestHandlers/create.ts:14:17)\"><pre class=\"notranslate\"><code class=\"notranslate\">[19:15:30] ERROR (payload): Forbidden: You are not allowed to perform this action.\n    at new ExtendableError (/var/www/testing-douob-server-payload/node_modules/payload/src/errors/APIError.ts:26:11)\n    at new APIError (/var/www/testing-douob-server-payload/node_modules/payload/src/errors/APIError.ts:43:5)\n    at new Forbidden (/var/www/testing-douob-server-payload/node_modules/payload/src/errors/Forbidden.ts:6:5)\n    at executeAccess (/var/www/testing-douob-server-payload/node_modules/payload/src/auth/executeAccess.ts:9:43)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Payload.create (/var/www/testing-douob-server-payload/node_modules/payload/src/collections/operations/create.ts:74:5)\n    at Payload.create (/var/www/testing-douob-server-payload/node_modules/payload/src/collections/requestHandlers/create.ts:14:17)\n</code></pre></div>",
            "createdAt": "2022-06-17T19:29:41Z"
          }
        ]
      },
      {
        "author": {
          "name": "gonzam88",
          "avatar": "https://avatars.githubusercontent.com/u/6289953?u=964dbaf32492efedc92230ee51de16ffac6a9684&v=4",
          "url": "https://github.com/gonzam88"
        },
        "body": "<p dir=\"auto\">Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> I finally found the error on my side. Given I was using a reverse proxy I thought the Payload <strong>serverUrl</strong> still had to be localhost:1337. For anyone reading, given the way I configured my payload.config.js, this is the .env that finally worked for me, pay attention to PAYLOAD_PUBLIC_SERVER_URL and PAYLOAD_PUBLIC_PORT</p>\n<p dir=\"auto\"><strong>Production Deploy .env</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"MONGODB_URI=mongodb://user:pass@127.0.0.1:27017/db?authSource=admin\nPAYLOAD_SECRET=MYSECRET\nPAYLOAD_CONFIG_PATH=src/payload.config.js\nPAYLOAD_PUBLIC_SERVER_URL=https://mysite.com\nPAYLOAD_PUBLIC_PORT=1336\nPAYLOAD_PUBLIC_DEBUG=FALSE\nNODE_ENV=PRODUCTION\"><pre class=\"notranslate\"><code class=\"notranslate\">MONGODB_URI=mongodb://user:pass@127.0.0.1:27017/db?authSource=admin\nPAYLOAD_SECRET=MYSECRET\nPAYLOAD_CONFIG_PATH=src/payload.config.js\nPAYLOAD_PUBLIC_SERVER_URL=https://mysite.com\nPAYLOAD_PUBLIC_PORT=1336\nPAYLOAD_PUBLIC_DEBUG=FALSE\nNODE_ENV=PRODUCTION\n</code></pre></div>\n<p dir=\"auto\"><strong>Local development .env</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"MONGODB_URI=mongodb://user:pass@127.0.0.1:27017/db?authSource=admin\nPAYLOAD_SECRET=MYSECRET\nPAYLOAD_CONFIG_PATH=src/payload.config.js\nPAYLOAD_PUBLIC_SERVER_URL=https://localhost:3000\nPAYLOAD_PUBLIC_PORT=3000\nPAYLOAD_PUBLIC_DEBUG=TRUE\"><pre class=\"notranslate\"><code class=\"notranslate\">MONGODB_URI=mongodb://user:pass@127.0.0.1:27017/db?authSource=admin\nPAYLOAD_SECRET=MYSECRET\nPAYLOAD_CONFIG_PATH=src/payload.config.js\nPAYLOAD_PUBLIC_SERVER_URL=https://localhost:3000\nPAYLOAD_PUBLIC_PORT=3000\nPAYLOAD_PUBLIC_DEBUG=TRUE\n</code></pre></div>",
        "createdAt": "2022-06-21T23:48:24Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Ah yep. Good call. This makes perfect sense. Happy to hear that you solved it and thank you for following up!</p>",
            "createdAt": "2022-06-22T00:24:30Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "gonzam88",
        "avatar": "https://avatars.githubusercontent.com/u/6289953?u=964dbaf32492efedc92230ee51de16ffac6a9684&v=4",
        "url": "https://github.com/gonzam88"
      },
      "body": "<p dir=\"auto\">Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> I finally found the error on my side. Given I was using a reverse proxy I thought the Payload <strong>serverUrl</strong> still had to be localhost:1337. For anyone reading, given the way I configured my payload.config.js, this is the .env that finally worked for me, pay attention to PAYLOAD_PUBLIC_SERVER_URL and PAYLOAD_PUBLIC_PORT</p>\n<p dir=\"auto\"><strong>Production Deploy .env</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"MONGODB_URI=mongodb://user:pass@127.0.0.1:27017/db?authSource=admin\nPAYLOAD_SECRET=MYSECRET\nPAYLOAD_CONFIG_PATH=src/payload.config.js\nPAYLOAD_PUBLIC_SERVER_URL=https://mysite.com\nPAYLOAD_PUBLIC_PORT=1336\nPAYLOAD_PUBLIC_DEBUG=FALSE\nNODE_ENV=PRODUCTION\"><pre class=\"notranslate\"><code class=\"notranslate\">MONGODB_URI=mongodb://user:pass@127.0.0.1:27017/db?authSource=admin\nPAYLOAD_SECRET=MYSECRET\nPAYLOAD_CONFIG_PATH=src/payload.config.js\nPAYLOAD_PUBLIC_SERVER_URL=https://mysite.com\nPAYLOAD_PUBLIC_PORT=1336\nPAYLOAD_PUBLIC_DEBUG=FALSE\nNODE_ENV=PRODUCTION\n</code></pre></div>\n<p dir=\"auto\"><strong>Local development .env</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"MONGODB_URI=mongodb://user:pass@127.0.0.1:27017/db?authSource=admin\nPAYLOAD_SECRET=MYSECRET\nPAYLOAD_CONFIG_PATH=src/payload.config.js\nPAYLOAD_PUBLIC_SERVER_URL=https://localhost:3000\nPAYLOAD_PUBLIC_PORT=3000\nPAYLOAD_PUBLIC_DEBUG=TRUE\"><pre class=\"notranslate\"><code class=\"notranslate\">MONGODB_URI=mongodb://user:pass@127.0.0.1:27017/db?authSource=admin\nPAYLOAD_SECRET=MYSECRET\nPAYLOAD_CONFIG_PATH=src/payload.config.js\nPAYLOAD_PUBLIC_SERVER_URL=https://localhost:3000\nPAYLOAD_PUBLIC_PORT=3000\nPAYLOAD_PUBLIC_DEBUG=TRUE\n</code></pre></div>",
      "createdAt": "2022-06-21T23:48:24Z",
      "chosenAt": "2022-06-21T23:48:28Z",
      "chosenBy": "gonzam88",
      "replies": [
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Ah yep. Good call. This makes perfect sense. Happy to hear that you solved it and thank you for following up!</p>",
          "createdAt": "2022-06-22T00:24:30Z"
        }
      ]
    }
  },
  {
    "title": "Cannot find SEO fields in documentation",
    "body": "<p dir=\"auto\">In the demo these fields are available;<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/11974977/174630264-27622d61-d2e1-4096-a0ba-32b055e906f5.png\"><img src=\"https://user-images.githubusercontent.com/11974977/174630264-27622d61-d2e1-4096-a0ba-32b055e906f5.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">But in the documentation they are nowhere to be found. Is there any documentation available?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/673",
    "id": "673",
    "createdAt": "2022-06-20T15:00:51Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "falko100",
      "avatar": "https://avatars.githubusercontent.com/u/11974977?u=b9a2ba9401d207496f5f0541746ca40caa618a3e&v=4",
      "url": "https://github.com/falko100"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Good question! The public-demo is a showcase of some of the ways you can customize a Payload project in a unique way. If you want to have anything in your project, just copy the code for it from the public-demo.</p>\n<p dir=\"auto\">The SEO fields specifically are from this plugin: <a href=\"https://github.com/payloadcms/plugin-seo\">https://github.com/payloadcms/plugin-seo</a></p>",
        "createdAt": "2022-06-20T15:10:20Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Good question! The public-demo is a showcase of some of the ways you can customize a Payload project in a unique way. If you want to have anything in your project, just copy the code for it from the public-demo.</p>\n<p dir=\"auto\">The SEO fields specifically are from this plugin: <a href=\"https://github.com/payloadcms/plugin-seo\">https://github.com/payloadcms/plugin-seo</a></p>",
      "createdAt": "2022-06-20T15:10:20Z",
      "chosenAt": "2022-06-20T15:13:16Z",
      "chosenBy": "falko100",
      "replies": null
    }
  },
  {
    "title": "is there any front end example?",
    "body": "<p dir=\"auto\">Hi, I'm new here.</p>\n<p dir=\"auto\">I understand Payload is a headless CMS so I need to develop front end web sites to receive data from Payload and show visual representation. And my question is is there any examples for scaffold front end projects which I can learn how to connect data from Payload and front end.</p>\n<p dir=\"auto\">Thanks in advance.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/659",
    "id": "659",
    "createdAt": "2022-06-15T04:27:57Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "kouohhashi",
      "avatar": "https://avatars.githubusercontent.com/u/5446294?u=b4489f8307c6d2734aff277776230c57aeba68e5&v=4",
      "url": "https://github.com/kouohhashi"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/kouohhashi/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/kouohhashi\">@kouohhashi</a> — welcome!</p>\n<p dir=\"auto\">We do have an in-depth YouTube series that shows how to create an entire website, including Payload and NextJS, from scratch.</p>\n<p dir=\"auto\">You can find the first video in the series here:<br>\n<a href=\"https://www.youtube.com/watch?v=bxWsZTtqs80\" rel=\"nofollow\">https://www.youtube.com/watch?v=bxWsZTtqs80</a></p>\n<p dir=\"auto\">This video in specific combines Next and Payload into a single server, which is not necessarily applicable for huge projects, but can offer some simplicity overall. Lots of stuff can be learned.</p>\n<p dir=\"auto\">Here's the code:<br>\n<a href=\"https://github.com/payloadcms/custom-website-series\">https://github.com/payloadcms/custom-website-series</a></p>\n<p dir=\"auto\">We're planning on releasing lots more of these soon too!</p>",
        "createdAt": "2022-06-15T04:32:46Z",
        "replies": [
          {
            "author": {
              "name": "kouohhashi",
              "avatar": "https://avatars.githubusercontent.com/u/5446294?u=b4489f8307c6d2734aff277776230c57aeba68e5&v=4",
              "url": "https://github.com/kouohhashi"
            },
            "body": "<p dir=\"auto\">Thanks I'll try it!</p>",
            "createdAt": "2022-06-15T11:25:51Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/kouohhashi/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/kouohhashi\">@kouohhashi</a> — welcome!</p>\n<p dir=\"auto\">We do have an in-depth YouTube series that shows how to create an entire website, including Payload and NextJS, from scratch.</p>\n<p dir=\"auto\">You can find the first video in the series here:<br>\n<a href=\"https://www.youtube.com/watch?v=bxWsZTtqs80\" rel=\"nofollow\">https://www.youtube.com/watch?v=bxWsZTtqs80</a></p>\n<p dir=\"auto\">This video in specific combines Next and Payload into a single server, which is not necessarily applicable for huge projects, but can offer some simplicity overall. Lots of stuff can be learned.</p>\n<p dir=\"auto\">Here's the code:<br>\n<a href=\"https://github.com/payloadcms/custom-website-series\">https://github.com/payloadcms/custom-website-series</a></p>\n<p dir=\"auto\">We're planning on releasing lots more of these soon too!</p>",
      "createdAt": "2022-06-15T04:32:46Z",
      "chosenAt": "2022-06-15T11:25:36Z",
      "chosenBy": "kouohhashi",
      "replies": [
        {
          "author": {
            "name": "kouohhashi",
            "avatar": "https://avatars.githubusercontent.com/u/5446294?u=b4489f8307c6d2734aff277776230c57aeba68e5&v=4",
            "url": "https://github.com/kouohhashi"
          },
          "body": "<p dir=\"auto\">Thanks I'll try it!</p>",
          "createdAt": "2022-06-15T11:25:51Z"
        }
      ]
    }
  },
  {
    "title": "adding child when adding parent",
    "body": "<p dir=\"auto\">Is this possible to add children when receiving post request with this kind of content:<br>\n<a href=\"http://localhost:3000/api/parent?depth=1\" rel=\"nofollow\">http://localhost:3000/api/parent?depth=1</a></p>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n    &quot;name&quot;: &quot;parent&quot;,\n    &quot;child&quot;:{\n        &quot;name&quot;: &quot;child&quot;\n    }\n}\"><pre class=\"notranslate\">{\n    <span class=\"pl-ent\">\"name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>parent<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"child\"</span>:{\n        <span class=\"pl-ent\">\"name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>child<span class=\"pl-pds\">\"</span></span>\n    }\n}</pre></div>\n<p dir=\"auto\">This would create child and parent object. Instead, I get <code class=\"notranslate\">child: null</code> in the answer</p>",
    "url": "https://github.com/payloadcms/payload/discussions/638",
    "id": "638",
    "createdAt": "2022-06-08T14:01:44Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "MattRvt",
      "avatar": "https://avatars.githubusercontent.com/u/52105158?u=e7eac1c6b36d6df11e0b816084bf6f89feb1c9c1&v=4",
      "url": "https://github.com/MattRvt"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/MattRvt/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/MattRvt\">@MattRvt</a> — right now, this is not possible. It <em><strong>could</strong></em> be a a future feature that we build, but it'll take some new functionality to achieve. The way we'd do this currently is to first create the nested document, then pass the newly created document's ID to your parent doc.</p>\n<p dir=\"auto\">So:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const parentDocData = {\n    &quot;name&quot;: &quot;parent&quot;,\n    &quot;child&quot;: &quot;6a3434543qw3derra&quot; // ID of newly created child doc\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">parentDocData</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s\">\"name\"</span>: <span class=\"pl-s\">\"parent\"</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s\">\"child\"</span>: <span class=\"pl-s\">\"6a3434543qw3derra\"</span> <span class=\"pl-c\">// ID of newly created child doc</span>\n<span class=\"pl-kos\">}</span></pre></div>",
        "createdAt": "2022-06-08T23:19:45Z",
        "replies": [
          {
            "author": {
              "name": "MattRvt",
              "avatar": "https://avatars.githubusercontent.com/u/52105158?u=e7eac1c6b36d6df11e0b816084bf6f89feb1c9c1&v=4",
              "url": "https://github.com/MattRvt"
            },
            "body": "<p dir=\"auto\">Thank you for your reply. This feature would be awesome.</p>\n<p dir=\"auto\">The same way, being able to create child through the UI from the parent page as it is done with array would be a great feature.</p>\n<p dir=\"auto\">Again, many thanks for your work, your reply and the great documentation <g-emoji class=\"g-emoji\" alias=\"partying_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f973.png\">🥳</g-emoji></p>",
            "createdAt": "2022-06-09T07:49:53Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">You got it!</p>\n<p dir=\"auto\">Actually we are definitely going to allow creating a child through the UI from the parent page. That's on the radar. Stay tuned!</p>",
            "createdAt": "2022-06-09T17:58:30Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/MattRvt/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/MattRvt\">@MattRvt</a> — right now, this is not possible. It <em><strong>could</strong></em> be a a future feature that we build, but it'll take some new functionality to achieve. The way we'd do this currently is to first create the nested document, then pass the newly created document's ID to your parent doc.</p>\n<p dir=\"auto\">So:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const parentDocData = {\n    &quot;name&quot;: &quot;parent&quot;,\n    &quot;child&quot;: &quot;6a3434543qw3derra&quot; // ID of newly created child doc\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">parentDocData</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s\">\"name\"</span>: <span class=\"pl-s\">\"parent\"</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s\">\"child\"</span>: <span class=\"pl-s\">\"6a3434543qw3derra\"</span> <span class=\"pl-c\">// ID of newly created child doc</span>\n<span class=\"pl-kos\">}</span></pre></div>",
      "createdAt": "2022-06-08T23:19:45Z",
      "chosenAt": "2022-06-09T08:36:34Z",
      "chosenBy": "MattRvt",
      "replies": [
        {
          "author": {
            "name": "MattRvt",
            "avatar": "https://avatars.githubusercontent.com/u/52105158?u=e7eac1c6b36d6df11e0b816084bf6f89feb1c9c1&v=4",
            "url": "https://github.com/MattRvt"
          },
          "body": "<p dir=\"auto\">Thank you for your reply. This feature would be awesome.</p>\n<p dir=\"auto\">The same way, being able to create child through the UI from the parent page as it is done with array would be a great feature.</p>\n<p dir=\"auto\">Again, many thanks for your work, your reply and the great documentation <g-emoji class=\"g-emoji\" alias=\"partying_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f973.png\">🥳</g-emoji></p>",
          "createdAt": "2022-06-09T07:49:53Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">You got it!</p>\n<p dir=\"auto\">Actually we are definitely going to allow creating a child through the UI from the parent page. That's on the radar. Stay tuned!</p>",
          "createdAt": "2022-06-09T17:58:30Z"
        }
      ]
    }
  },
  {
    "title": "Help with SSL connection on Amazon DocumentDB",
    "body": "<p dir=\"auto\">Hey folks! First, congratulations. Payload CMS looks amazing.<br>\nWe, here in Chefsclub, are excited to use Payload in some of our usecases.<br>\nA little (and perhaps silly) question comes up to my mind:<br>\nWe are trying to connect payload on a DocumentDB cluster that requires a SSL .pem certificate. Since we can just pass on the init the URI, we are not getting any success to connect without (1 have to disable ssl :(  or 2 use it on the same VPC).<br>\nIs there any plans to make the parameter passed on the Payload init to include the mongoose options, or at least the CA SSL certificate?</p>\n<p dir=\"auto\">Thank you so much.<br>\nFilipe Baeta<br>\nCTO <a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/ChefsClub/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ChefsClub\">@ChefsClub</a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/52",
    "id": "52",
    "createdAt": "2021-02-03T17:42:06Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "upcase-chefs",
      "avatar": "https://avatars.githubusercontent.com/u/21695602?v=4",
      "url": "https://github.com/upcase-chefs"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/upcase-chefs/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/upcase-chefs\">@upcase-chefs</a> — great question and great request. We would be happy to support the passing of Mongoose options.</p>\n<p dir=\"auto\">Give us a bit here and we will make it happen! You can expect this functionality to be released in 1 to 2 days from now.</p>\n<p dir=\"auto\">We will report back to this discussion when we have it added!</p>",
        "createdAt": "2021-02-03T17:51:39Z",
        "replies": [
          {
            "author": {
              "name": "upcase-chefs",
              "avatar": "https://avatars.githubusercontent.com/u/21695602?v=4",
              "url": "https://github.com/upcase-chefs"
            },
            "body": "<p dir=\"auto\">Hey Folks,</p>\n<p dir=\"auto\">My suggested steps:</p>\n<ol dir=\"auto\">\n<li>on the index.js add the follow parameter besides the url: mongoAdditionalOptions</li>\n</ol>\n<p dir=\"auto\">On the connect.js, receive the mongoAdditionalOptions object and append it to the connectionOptions...</p>\n<p dir=\"auto\">var finalOptions = {...connectionOptions, ...mongoAdditionalOptions}<br>\nAlso, on the index.js it's needed read Amazon's .pem file and pass the buffer (or the string. I'm not quite sure) to the mongoose parameters.</p>\n<p dir=\"auto\"><a href=\"https://mongoosejs.com/docs/tutorials/ssl.html\" rel=\"nofollow\">https://mongoosejs.com/docs/tutorials/ssl.html</a></p>\n<p dir=\"auto\">I hope this helps.</p>\n<p dir=\"auto\">We are Eager to buy the Payload licenses. But we still need to fix this one and another bug on Relationship that I just opened there. This is blocking our workload to be implemented.</p>\n<p dir=\"auto\">Cheers.<br>\nChefsclub team.</p>",
            "createdAt": "2021-02-04T15:41:31Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">This is similar to what I came up with.</p>\n<p dir=\"auto\">I named it <code class=\"notranslate\">mongoOptions</code> instead of <code class=\"notranslate\">mongoAdditionalOptions</code>, but the functionality is the same as you described.</p>\n<p dir=\"auto\">Here is the PR:<br>\n<a href=\"https://github.com/payloadcms/payload/pull/56/files\">https://github.com/payloadcms/payload/pull/56/files</a></p>",
            "createdAt": "2021-02-04T16:31:41Z"
          }
        ]
      },
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">This feature is up now in the published v0.2.10! You can update your package.json Payload dependency to <code class=\"notranslate\">\"^0.2.10\"</code> get this change.</p>",
        "createdAt": "2021-02-04T19:40:29Z",
        "replies": [
          {
            "author": {
              "name": "upcase-chefs",
              "avatar": "https://avatars.githubusercontent.com/u/21695602?v=4",
              "url": "https://github.com/upcase-chefs"
            },
            "body": "<p dir=\"auto\">Hey Dan! Thank you and the team so much!<br>\nNow the fun begins :)</p>",
            "createdAt": "2021-02-05T03:17:44Z"
          },
          {
            "author": {
              "name": "prove-ability",
              "avatar": "https://avatars.githubusercontent.com/u/59461181?u=81279f216ab166a481ce9b818a345d380c2d5ec7&v=4",
              "url": "https://github.com/prove-ability"
            },
            "body": "<p dir=\"auto\"><code class=\"notranslate\">yarn update payload@0.2.10</code> did i misunderstand?</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/59461181/172547763-ca300ca2-9677-4e79-8ee1-b96f25a398e5.png\"><img width=\"973\" alt=\"스크린샷 2022-06-08 15 32 13\" src=\"https://user-images.githubusercontent.com/59461181/172547763-ca300ca2-9677-4e79-8ee1-b96f25a398e5.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Thanks in advance!</p>",
            "createdAt": "2022-06-08T06:33:10Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/prove-ability/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/prove-ability\">@prove-ability</a> — Payload version <code class=\"notranslate\">0.2.10</code> is now quite out of date. This discussion was from Feb 2021. We're now at <code class=\"notranslate\">0.17.3</code>. You should use the latest version of Payload instead.</p>",
            "createdAt": "2022-06-08T23:21:04Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">This feature is up now in the published v0.2.10! You can update your package.json Payload dependency to <code class=\"notranslate\">\"^0.2.10\"</code> get this change.</p>",
      "createdAt": "2021-02-04T19:40:29Z",
      "chosenAt": "2021-02-05T03:24:11Z",
      "chosenBy": "DanRibbens",
      "replies": [
        {
          "author": {
            "name": "upcase-chefs",
            "avatar": "https://avatars.githubusercontent.com/u/21695602?v=4",
            "url": "https://github.com/upcase-chefs"
          },
          "body": "<p dir=\"auto\">Hey Dan! Thank you and the team so much!<br>\nNow the fun begins :)</p>",
          "createdAt": "2021-02-05T03:17:44Z"
        },
        {
          "author": {
            "name": "prove-ability",
            "avatar": "https://avatars.githubusercontent.com/u/59461181?u=81279f216ab166a481ce9b818a345d380c2d5ec7&v=4",
            "url": "https://github.com/prove-ability"
          },
          "body": "<p dir=\"auto\"><code class=\"notranslate\">yarn update payload@0.2.10</code> did i misunderstand?</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/59461181/172547763-ca300ca2-9677-4e79-8ee1-b96f25a398e5.png\"><img width=\"973\" alt=\"스크린샷 2022-06-08 15 32 13\" src=\"https://user-images.githubusercontent.com/59461181/172547763-ca300ca2-9677-4e79-8ee1-b96f25a398e5.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Thanks in advance!</p>",
          "createdAt": "2022-06-08T06:33:10Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/prove-ability/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/prove-ability\">@prove-ability</a> — Payload version <code class=\"notranslate\">0.2.10</code> is now quite out of date. This discussion was from Feb 2021. We're now at <code class=\"notranslate\">0.17.3</code>. You should use the latest version of Payload instead.</p>",
          "createdAt": "2022-06-08T23:21:04Z"
        }
      ]
    }
  },
  {
    "title": "Looking for suggestion on how to use publishTime as admin title",
    "body": "<p dir=\"auto\">Hi all,</p>\n<p dir=\"auto\">I have a collection of content that gets updated daily, and my plan was to set the title of the documents to the publishDate, perhaps with a prefix identifying the collection type.</p>\n<p dir=\"auto\">If I point useAsTitle at a date field, this error occurs because publishDate is a Date type, not a string:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/101012384/171496708-525447f9-7b56-4514-94ea-998676cd2c0b.png\"><img width=\"854\" alt=\"Screen Shot 2022-06-01 at 4 27 38 PM\" src=\"https://user-images.githubusercontent.com/101012384/171496708-525447f9-7b56-4514-94ea-998676cd2c0b.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">What I came up with to bypass is use a separate slug field and set its default to the current date:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"...\nadmin: {\n    useAsTitle: &quot;slug&quot;, // &lt;-- can i tie this directly to publishTime instead of adding a slug property? \n    defaultColumns: [&quot;title&quot;, &quot;category&quot;, &quot;publishDate&quot;, &quot;tags&quot;, &quot;status&quot;],\n  },\n  fields: [\n    {\n      name: &quot;slug&quot;,\n      type: &quot;text&quot;,\n      defaultValue: `${new Date().toLocaleDateString()}`,\n      required: true,\n    },\n    {\n      name: &quot;publishTime&quot;, // required\n      type: &quot;date&quot;, // required\n      required: true,\n    },\"><pre class=\"notranslate\"><code class=\"notranslate\">...\nadmin: {\n    useAsTitle: \"slug\", // &lt;-- can i tie this directly to publishTime instead of adding a slug property? \n    defaultColumns: [\"title\", \"category\", \"publishDate\", \"tags\", \"status\"],\n  },\n  fields: [\n    {\n      name: \"slug\",\n      type: \"text\",\n      defaultValue: `${new Date().toLocaleDateString()}`,\n      required: true,\n    },\n    {\n      name: \"publishTime\", // required\n      type: \"date\", // required\n      required: true,\n    },\n</code></pre></div>\n<p dir=\"auto\">... but then there's no guarantee that publishDate and slug will be consistent without a validation step.</p>\n<p dir=\"auto\">Can I do something with a field hook here?</p>\n<p dir=\"auto\">Payload rocks, enjoying digging in — thanks for making it open source!!</p>\n<p dir=\"auto\"><strong>Edit</strong>:<br>\nfound these examples of dynamically generated titles/fields in the public demo:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/payloadcms/public-demo/blob/1ac92b8b6a10c1739a25a3edc74fc75cb948f189/src/collections/Pages/index.ts#L124\">https://github.com/payloadcms/public-demo/blob/1ac92b8b6a10c1739a25a3edc74fc75cb948f189/src/collections/Pages/index.ts#L124</a></li>\n<li><a href=\"https://github.com/payloadcms/public-demo/blob/1ac92b8b6a10c1739a25a3edc74fc75cb948f189/src/collections/Pages/index.ts#L71\">https://github.com/payloadcms/public-demo/blob/1ac92b8b6a10c1739a25a3edc74fc75cb948f189/src/collections/Pages/index.ts#L71</a></li>\n</ul>\n<p dir=\"auto\">... which seem like what I need. Keeping up for viz on how useAsTitle breaks on non-string field types. Is there a validation step that could be built into the config to prevent non-string fields from being set as title? Can help write issue.  Again, Payload rocks - these public examples are extensive.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/623",
    "id": "623",
    "createdAt": "2022-06-01T20:39:13Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "andwrobs",
      "avatar": "https://avatars.githubusercontent.com/u/101012384?u=716f55d08cbb33242adb1ebadfad47def9e98881&v=4",
      "url": "https://github.com/andwrobs"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey @andrew-roca - good questions!</p>\n<p dir=\"auto\">I don't see why date-like fields <em><strong>couldn't</strong></em> be utilized for <code class=\"notranslate\">useAsTitle</code> - this could probably be enabled with a few checks on the frontend to make sure that the data is rendered properly if it is an incoming date. Might not be too tough.</p>\n<p dir=\"auto\">We could also certainly add validation rules to check and ensure that <code class=\"notranslate\">useAsTitle</code> is set to a field that is able to be utilized properly. It would check to see if the field is <code class=\"notranslate\">text</code>, <code class=\"notranslate\">textarea</code>, <code class=\"notranslate\">email</code>, <code class=\"notranslate\">number</code>, and - if we ironed out a way to sanitize the incoming data, the <code class=\"notranslate\">date</code> field could be added to that list.</p>\n<p dir=\"auto\">I'm not sure when the Payload team could get to the above features, but it's certainly interesting. We would happily merge a PR regarding these changes, but we might be able to get to it ourselves at some point too!</p>",
        "createdAt": "2022-06-02T14:43:34Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey @andrew-roca - good questions!</p>\n<p dir=\"auto\">I don't see why date-like fields <em><strong>couldn't</strong></em> be utilized for <code class=\"notranslate\">useAsTitle</code> - this could probably be enabled with a few checks on the frontend to make sure that the data is rendered properly if it is an incoming date. Might not be too tough.</p>\n<p dir=\"auto\">We could also certainly add validation rules to check and ensure that <code class=\"notranslate\">useAsTitle</code> is set to a field that is able to be utilized properly. It would check to see if the field is <code class=\"notranslate\">text</code>, <code class=\"notranslate\">textarea</code>, <code class=\"notranslate\">email</code>, <code class=\"notranslate\">number</code>, and - if we ironed out a way to sanitize the incoming data, the <code class=\"notranslate\">date</code> field could be added to that list.</p>\n<p dir=\"auto\">I'm not sure when the Payload team could get to the above features, but it's certainly interesting. We would happily merge a PR regarding these changes, but we might be able to get to it ourselves at some point too!</p>",
      "createdAt": "2022-06-02T14:43:34Z",
      "chosenAt": "2022-06-02T17:44:54Z",
      "chosenBy": "andwrobs",
      "replies": null
    }
  },
  {
    "title": "GraphQL Query $where Clause Example",
    "body": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">I'm trying to query using the $where clause but am receiving a typed error. I'm following the example at <a href=\"https://payloadcms.com/docs/queries/overview#graphql-find-queries\" rel=\"nofollow\">https://payloadcms.com/docs/queries/overview#graphql-find-queries</a> but still can't figure out why the type conversion is failing.</p>\n<p dir=\"auto\">Playground Query:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/8381608/170415136-5bc9b800-2a06-4293-ae9c-9bd13f32e885.png\"><img width=\"1206\" alt=\"Screen Shot 2022-05-26 at 2 20 13 pm\" src=\"https://user-images.githubusercontent.com/8381608/170415136-5bc9b800-2a06-4293-ae9c-9bd13f32e885.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Types:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/8381608/170415394-d8af22a0-6140-45f1-ab77-701fafc58568.png\"><img width=\"1400\" alt=\"Screen Shot 2022-05-26 at 2 22 31 pm\" src=\"https://user-images.githubusercontent.com/8381608/170415394-d8af22a0-6140-45f1-ab77-701fafc58568.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Any assistance would be greatly appreciated :-)</p>\n<p dir=\"auto\">Thanks</p>",
    "url": "https://github.com/payloadcms/payload/discussions/601",
    "id": "601",
    "createdAt": "2022-05-26T04:24:19Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "freakyfriday",
      "avatar": "https://avatars.githubusercontent.com/u/8381608?v=4",
      "url": "https://github.com/freakyfriday"
    },
    "comments": [
      {
        "author": {
          "name": "freakyfriday",
          "avatar": "https://avatars.githubusercontent.com/u/8381608?v=4",
          "url": "https://github.com/freakyfriday"
        },
        "body": "<p dir=\"auto\">If anyone is following I figured it out. I had to change the type of $where from JSON to Post_where:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/8381608/170416898-b479cca9-e67f-41cc-8b29-7d9cd3be4486.png\"><img width=\"739\" alt=\"Screen Shot 2022-05-26 at 2 37 26 pm\" src=\"https://user-images.githubusercontent.com/8381608/170416898-b479cca9-e67f-41cc-8b29-7d9cd3be4486.png\" style=\"max-width: 100%;\"></a></p>",
        "createdAt": "2022-05-26T04:38:01Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/freakyfriday/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/freakyfriday\">@freakyfriday</a> — I can do you one better.</p>\n<p dir=\"auto\">While your syntax DOES work, the better way would be like this:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6651896/170497591-82b1b954-4604-4f1f-ba55-d86c9cf38b75.png\"><img width=\"1680\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6651896/170497591-82b1b954-4604-4f1f-ba55-d86c9cf38b75.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">No <code class=\"notranslate\">$</code> needed. Just use the <code class=\"notranslate\">where</code> argument!</p>",
            "createdAt": "2022-05-26T13:30:53Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "freakyfriday",
        "avatar": "https://avatars.githubusercontent.com/u/8381608?v=4",
        "url": "https://github.com/freakyfriday"
      },
      "body": "<p dir=\"auto\">If anyone is following I figured it out. I had to change the type of $where from JSON to Post_where:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/8381608/170416898-b479cca9-e67f-41cc-8b29-7d9cd3be4486.png\"><img width=\"739\" alt=\"Screen Shot 2022-05-26 at 2 37 26 pm\" src=\"https://user-images.githubusercontent.com/8381608/170416898-b479cca9-e67f-41cc-8b29-7d9cd3be4486.png\" style=\"max-width: 100%;\"></a></p>",
      "createdAt": "2022-05-26T04:38:01Z",
      "chosenAt": "2022-05-26T04:38:10Z",
      "chosenBy": "freakyfriday",
      "replies": [
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/freakyfriday/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/freakyfriday\">@freakyfriday</a> — I can do you one better.</p>\n<p dir=\"auto\">While your syntax DOES work, the better way would be like this:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6651896/170497591-82b1b954-4604-4f1f-ba55-d86c9cf38b75.png\"><img width=\"1680\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6651896/170497591-82b1b954-4604-4f1f-ba55-d86c9cf38b75.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">No <code class=\"notranslate\">$</code> needed. Just use the <code class=\"notranslate\">where</code> argument!</p>",
          "createdAt": "2022-05-26T13:30:53Z"
        }
      ]
    }
  },
  {
    "title": "Access Collection Internally from Hook",
    "body": "<p dir=\"auto\">Hey again,</p>\n<p dir=\"auto\">So I have a public facing server that Payload is sitting on, so the API is accessible from anywhere. This I have no problem with, however, one of my hooks sends out an email to an email list collection. I definitely don't want to have my users email addresses accessible publicly, however, I do want them to be able to be created and deleted publicly.</p>\n<p dir=\"auto\">Currently I have some hacky code that uses a fetch request from within the payload hook to pull down the email list and send emails out to it, but this is only possible because that collection can be read publicly.</p>\n<p dir=\"auto\">How do I go about accessing Collection Docs internally?</p>\n<p dir=\"auto\">Here is my current (insecure) implementation:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const emailSubscribers = async ({doc}) =&gt; {\n    if(doc.notify === true){\n        const responseEmail = await fetch(HOST+`/api/emaillist`)\n        const emails = await responseEmail.json()\n        const responseImage = await fetch(HOST+`/api/media/${doc.featureImage}`)\n        const image = await responseImage.json()\n\n        let imageBuffer = await axios.get(image.sizes.feature.url, {responseType: 'arraybuffer'})\n        let raw = Buffer.from(imageBuffer.data).toString('base64')\n        let base64Image = `data:${imageBuffer.headers[&quot;content-type&quot;]};base64,${raw}`\n        // console.log(base64Image)\n        for(const emailObj of emails.docs) {\n            const htmlToSend = HtmlTemplate({\n                title: doc.title,\n                subtitle: doc.subtitle,\n                imageLink: base64Image,\n                unsubscribeLink: HOST+&quot;/unsubscribe/&quot;+emailObj.id,\n                postLink: WEBSITE+`/posts/${doc.slug}`\n            })\n            payload.sendEmail({\n                from: &quot;User &lt;User@email.com&gt;&quot;,\n                to: emailObj.email,\n                subject: &quot;New Article!&quot;,\n                html: htmlToSend\n            })\n        }\n            console.log(&quot;Subscribers Notified!&quot;)\n    }\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">emailSubscribers</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>doc<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">if</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">notify</span> <span class=\"pl-c1\">===</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">responseEmail</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">HOST</span><span class=\"pl-c1\">+</span><span class=\"pl-s\">`/api/emaillist`</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">emails</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">responseEmail</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">json</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">responseImage</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">HOST</span><span class=\"pl-c1\">+</span><span class=\"pl-s\">`/api/media/<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">featureImage</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">image</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">responseImage</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">json</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n\n        <span class=\"pl-k\">let</span> <span class=\"pl-s1\">imageBuffer</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">axios</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">image</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">sizes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">feature</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">url</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">responseType</span>: <span class=\"pl-s\">'arraybuffer'</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-k\">let</span> <span class=\"pl-s1\">raw</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Buffer</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">from</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">imageBuffer</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">data</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toString</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'base64'</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-k\">let</span> <span class=\"pl-s1\">base64Image</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">`data:<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">imageBuffer</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">headers</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">\"content-type\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">}</span></span>;base64,<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">raw</span><span class=\"pl-kos\">}</span></span>`</span>\n        <span class=\"pl-c\">// console.log(base64Image)</span>\n        <span class=\"pl-k\">for</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">const</span> <span class=\"pl-s1\">emailObj</span> <span class=\"pl-k\">of</span> <span class=\"pl-s1\">emails</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">docs</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-k\">const</span> <span class=\"pl-s1\">htmlToSend</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">HtmlTemplate</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">title</span>: <span class=\"pl-s1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">title</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">subtitle</span>: <span class=\"pl-s1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">subtitle</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">imageLink</span>: <span class=\"pl-s1\">base64Image</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">unsubscribeLink</span>: <span class=\"pl-c1\">HOST</span><span class=\"pl-c1\">+</span><span class=\"pl-s\">\"/unsubscribe/\"</span><span class=\"pl-c1\">+</span><span class=\"pl-s1\">emailObj</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">postLink</span>: <span class=\"pl-c1\">WEBSITE</span><span class=\"pl-c1\">+</span><span class=\"pl-s\">`/posts/<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">slug</span><span class=\"pl-kos\">}</span></span>`</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n            <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">sendEmail</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">from</span>: <span class=\"pl-s\">\"User &lt;User@email.com&gt;\"</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">to</span>: <span class=\"pl-s1\">emailObj</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">email</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">subject</span>: <span class=\"pl-s\">\"New Article!\"</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">html</span>: <span class=\"pl-s1\">htmlToSend</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-kos\">}</span>\n            <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"Subscribers Notified!\"</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/557",
    "id": "557",
    "createdAt": "2022-05-10T01:32:22Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "peniswafflexd",
      "avatar": "https://avatars.githubusercontent.com/u/28529309?v=4",
      "url": "https://github.com/peniswafflexd"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/peniswafflexd/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/peniswafflexd\">@peniswafflexd</a> — this is super easily solved actually via a few options.</p>\n<p dir=\"auto\">In any case, and as you probably know already, you should restrict <code class=\"notranslate\">read</code> access control to any collections that should not be publicly readable. However, once access is restricted, you can:</p>\n<ol dir=\"auto\">\n<li>First authenticate via logging in with a user that <em><strong>should</strong></em> have <code class=\"notranslate\">read</code> access, and then using the returned token to <a href=\"https://payloadcms.com/docs/authentication/overview#identifying-users-via-the-authorization-header\" rel=\"nofollow\">authenticate in your fetch</a></li>\n<li>Enable <a href=\"https://payloadcms.com/docs/authentication/config#api-keys\" rel=\"nofollow\">API Keys</a> on your Users collection(s), generate a key, and use that</li>\n<li>Use the <a href=\"https://payloadcms.com/docs/local-api/overview\" rel=\"nofollow\">Local API</a> to read your restricted docs. By default, access control is bypassed while using the Local API so you won't have any problems. All you have to do is <code class=\"notranslate\">payload.find({ /* options here */ })</code>. This is how you should typically access Payload operations from hooks, because it avoids having to use an HTTP layer and just stays right on your server. Definitely what we would do.</li>\n</ol>\n<p dir=\"auto\">Do any of these options work? Have you used the Local API yet?</p>",
        "createdAt": "2022-05-10T01:39:16Z",
        "replies": [
          {
            "author": {
              "name": "peniswafflexd",
              "avatar": "https://avatars.githubusercontent.com/u/28529309?v=4",
              "url": "https://github.com/peniswafflexd"
            },
            "body": "<p dir=\"auto\">Wow that was solved super easily!<br>\nSorry my bad, I assumed the local API was something completely different but that solved it straight away.</p>\n<p dir=\"auto\">All I needed to do was swap:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" const responseEmail = await fetch(HOST+`/api/emaillist`)\n        const emails = await responseEmail.json()\"><pre class=\"notranslate\"> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">responseEmail</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">HOST</span><span class=\"pl-c1\">+</span><span class=\"pl-s\">`/api/emaillist`</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">emails</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">responseEmail</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">json</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">with</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" const emails = await payload.find({\n            collection: 'emaillist',\n        });\"><pre class=\"notranslate\"> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">emails</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'emaillist'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">and it worked straight away!</p>\n<p dir=\"auto\">I just turned read access off and it works fine now</p>",
            "createdAt": "2022-05-10T01:44:27Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hell yeah <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji> the local API is one of my personal favorite parts about Payload. Local API + Hooks = <g-emoji class=\"g-emoji\" alias=\"heart\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2764.png\">❤️</g-emoji></p>",
            "createdAt": "2022-05-10T01:50:04Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/peniswafflexd/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/peniswafflexd\">@peniswafflexd</a> — this is super easily solved actually via a few options.</p>\n<p dir=\"auto\">In any case, and as you probably know already, you should restrict <code class=\"notranslate\">read</code> access control to any collections that should not be publicly readable. However, once access is restricted, you can:</p>\n<ol dir=\"auto\">\n<li>First authenticate via logging in with a user that <em><strong>should</strong></em> have <code class=\"notranslate\">read</code> access, and then using the returned token to <a href=\"https://payloadcms.com/docs/authentication/overview#identifying-users-via-the-authorization-header\" rel=\"nofollow\">authenticate in your fetch</a></li>\n<li>Enable <a href=\"https://payloadcms.com/docs/authentication/config#api-keys\" rel=\"nofollow\">API Keys</a> on your Users collection(s), generate a key, and use that</li>\n<li>Use the <a href=\"https://payloadcms.com/docs/local-api/overview\" rel=\"nofollow\">Local API</a> to read your restricted docs. By default, access control is bypassed while using the Local API so you won't have any problems. All you have to do is <code class=\"notranslate\">payload.find({ /* options here */ })</code>. This is how you should typically access Payload operations from hooks, because it avoids having to use an HTTP layer and just stays right on your server. Definitely what we would do.</li>\n</ol>\n<p dir=\"auto\">Do any of these options work? Have you used the Local API yet?</p>",
      "createdAt": "2022-05-10T01:39:16Z",
      "chosenAt": "2022-05-10T01:42:09Z",
      "chosenBy": "peniswafflexd",
      "replies": [
        {
          "author": {
            "name": "peniswafflexd",
            "avatar": "https://avatars.githubusercontent.com/u/28529309?v=4",
            "url": "https://github.com/peniswafflexd"
          },
          "body": "<p dir=\"auto\">Wow that was solved super easily!<br>\nSorry my bad, I assumed the local API was something completely different but that solved it straight away.</p>\n<p dir=\"auto\">All I needed to do was swap:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" const responseEmail = await fetch(HOST+`/api/emaillist`)\n        const emails = await responseEmail.json()\"><pre class=\"notranslate\"> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">responseEmail</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">HOST</span><span class=\"pl-c1\">+</span><span class=\"pl-s\">`/api/emaillist`</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">emails</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">responseEmail</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">json</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">with</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" const emails = await payload.find({\n            collection: 'emaillist',\n        });\"><pre class=\"notranslate\"> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">emails</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'emaillist'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">and it worked straight away!</p>\n<p dir=\"auto\">I just turned read access off and it works fine now</p>",
          "createdAt": "2022-05-10T01:44:27Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Hell yeah <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji> the local API is one of my personal favorite parts about Payload. Local API + Hooks = <g-emoji class=\"g-emoji\" alias=\"heart\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2764.png\">❤️</g-emoji></p>",
          "createdAt": "2022-05-10T01:50:04Z"
        }
      ]
    }
  },
  {
    "title": "Admin translation and localization",
    "body": "<p dir=\"auto\">New to payload and already enjoying it's flexibility and customization options! Gone through most of the documentation and all localization features I've seen so far refer to content localization.</p>\n<p dir=\"auto\">Is there a way to provide translations for the admin tokens like buttons etc.? Additionally, is there a way to provide translations for field labels in the admin panel?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/556",
    "id": "556",
    "createdAt": "2022-05-06T22:25:36Z",
    "upvotes": 3,
    "commentTotal": 1,
    "author": {
      "name": "techpet",
      "avatar": "https://avatars.githubusercontent.com/u/1122529?v=4",
      "url": "https://github.com/techpet"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/techpet/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/techpet\">@techpet</a>, glad you have enjoyed Payload so far!</p>\n<p dir=\"auto\">We have admin panel internationalization on the roadmap. It will take us some time yet. You haven't missed anything, but we'll get there.</p>",
        "createdAt": "2022-05-07T00:52:40Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/techpet/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/techpet\">@techpet</a>, glad you have enjoyed Payload so far!</p>\n<p dir=\"auto\">We have admin panel internationalization on the roadmap. It will take us some time yet. You haven't missed anything, but we'll get there.</p>",
      "createdAt": "2022-05-07T00:52:40Z",
      "chosenAt": "2022-05-09T10:11:48Z",
      "chosenBy": "techpet",
      "replies": null
    }
  },
  {
    "title": "NX monorepo - payload is undefined",
    "body": "<p dir=\"auto\">Hi<br>\nI'm trying to configure Payload as an NX app, but when I'm trying to run payload.init, I receive an error that payload is undefined.</p>\n<p dir=\"auto\">TypeError: Cannot read properties of undefined (reading 'init')<br>\nat /Users/shaked.hadas/Documents/Projects/d-suite/dist/apps/d-editor/webpack:/src/main.ts:16:9<br>\nat /Users/shaked.hadas/Documents/Projects/d-suite/dist/apps/d-editor/main.js:73:3<br>\nat Object. (/Users/shaked.hadas/Documents/Projects/d-suite/dist/apps/d-editor/main.js:78:12)<br>\nat Module._compile (node:internal/modules/cjs/loader:1103:14)<br>\nat Object.Module._extensions..js (node:internal/modules/cjs/loader:1155:10)<br>\nat Module.load (node:internal/modules/cjs/loader:981:32)<br>\nat Function.Module._load (node:internal/modules/cjs/loader:822:12)<br>\nat Function.Module._load (/Users/shaked.hadas/Documents/Projects/d-suite/packages/node/src/executors/node/node-with-require-overrides.ts:16:27)<br>\nat Module.require (node:internal/modules/cjs/loader:1005:19)<br>\nat require (node:internal/modules/cjs/helpers:102:18)</p>\n<p dir=\"auto\">Reproducing the problem:</p>\n<ul dir=\"auto\">\n<li>Create a new workspace</li>\n<li>Generate express app with <code class=\"notranslate\">nx g @nrwl/express:app test</code></li>\n<li>Install payload manually according to <a href=\"https://payloadcms.com/docs/getting-started/installation\" rel=\"nofollow\">https://payloadcms.com/docs/getting-started/installation</a>\n<ul dir=\"auto\">\n<li>npm i --save -</li>\n<li>Create payload.config.ts</li>\n<li>add payload.init({}) to main.ts</li>\n</ul>\n</li>\n</ul>",
    "url": "https://github.com/payloadcms/payload/discussions/545",
    "id": "545",
    "createdAt": "2022-04-26T13:31:59Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "ShakedHad",
      "avatar": "https://avatars.githubusercontent.com/u/25921813?u=a15ebb153847b1db62a44de808eab0f72a80eb2e&v=4",
      "url": "https://github.com/ShakedHad"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ShakedHad/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ShakedHad\">@ShakedHad</a>,</p>\n<p dir=\"auto\">I reproduced the problem you had and was able to get further in the setup by changing the tsconfig.app.json the to have two more settings in the <code class=\"notranslate\">compilerOptions</code>, they are \"esModuleInterop\" set to true and strict set to false.<br>\nWith those changes my <code class=\"notranslate\">tsconfig.app.json</code> is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n  &quot;extends&quot;: &quot;./tsconfig.json&quot;,\n  &quot;compilerOptions&quot;: {\n    &quot;outDir&quot;: &quot;../../dist/out-tsc&quot;,\n    &quot;module&quot;: &quot;commonjs&quot;,\n    &quot;types&quot;: [&quot;node&quot;, &quot;express&quot;],\n    &quot;esModuleInterop&quot;: true,\n    &quot;strict&quot;: false\n  },\n  &quot;exclude&quot;: [&quot;jest.config.ts&quot;, &quot;**/*.spec.ts&quot;, &quot;**/*.test.ts&quot;],\n  &quot;include&quot;: [&quot;**/*.ts&quot;]\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"../../dist/out-tsc\",\n    \"module\": \"commonjs\",\n    \"types\": [\"node\", \"express\"],\n    \"esModuleInterop\": true,\n    \"strict\": false\n  },\n  \"exclude\": [\"jest.config.ts\", \"**/*.spec.ts\", \"**/*.test.ts\"],\n  \"include\": [\"**/*.ts\"]\n}\n</code></pre></div>\n<p dir=\"auto\">Mine still isn't starting so there is one more thing to finish out. The last thing will be to make sure that your payload.config.js is included in the dist. You might have to add to the tsconfig to make that transpile from .ts and then adding to your \"start\" script the path.</p>\n<p dir=\"auto\">Something like this should get you there after you make sure the payload.config.js is written to dist:<br>\n<code class=\"notranslate\">\"start\": \"SET PAYLOAD_CONFIG_PATH=dist/apps/nx-payload/payload.config.js &amp;&amp; nx serve\",</code><br>\nand don't forget to replace \"nx-payload\" with your own app name.</p>\n<p dir=\"auto\">Hope that gets you closer and gives you an idea of what to fix. If you are still struggling, let us know!</p>",
        "createdAt": "2022-04-27T13:42:52Z",
        "replies": [
          {
            "author": {
              "name": "ShakedHad",
              "avatar": "https://avatars.githubusercontent.com/u/25921813?u=a15ebb153847b1db62a44de808eab0f72a80eb2e&v=4",
              "url": "https://github.com/ShakedHad"
            },
            "body": "<p dir=\"auto\">Thank you very much, it worked!</p>\n<p dir=\"auto\">I'm writing here the full configuration steps, for future references:</p>\n<ol dir=\"auto\">\n<li>Add these lines to <code class=\"notranslate\">tsconfig.app.json</code></li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&quot;esModuleInterop&quot;: true,\n    &quot;allowSyntheticDefaultImports&quot;: true,\n    &quot;strict&quot;: false\"><pre class=\"notranslate\"><code class=\"notranslate\">\"esModuleInterop\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"strict\": false\n</code></pre></div>\n<ol start=\"2\" dir=\"auto\">\n<li>In <code class=\"notranslate\">main.ts</code>, update express import to<br>\n<code class=\"notranslate\">import express from 'express';</code></li>\n<li>In <code class=\"notranslate\">project.json</code>, add <code class=\"notranslate\">\"webpackConfig\": \"apps/nx-payload/webpack.config.js\"</code> to <code class=\"notranslate\">targets.build.options</code></li>\n<li>Add file webpack.config.js:</li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"module.exports = (config, context) =&gt; {\n  return {\n    ...config,\n    entry: {\n      ...config.entry,\n      config: './apps/nx-payload/payload.config.ts',\n    },\n    output: {\n      ...config.output,\n      filename: '[name].js',\n    },\n  };\n};\"><pre class=\"notranslate\"><code class=\"notranslate\">module.exports = (config, context) =&gt; {\n  return {\n    ...config,\n    entry: {\n      ...config.entry,\n      config: './apps/nx-payload/payload.config.ts',\n    },\n    output: {\n      ...config.output,\n      filename: '[name].js',\n    },\n  };\n};\n</code></pre></div>\n<ol start=\"5\" dir=\"auto\">\n<li><code class=\"notranslate\">npm install --save dotenv</code></li>\n<li>Add to <code class=\"notranslate\">main.ts</code></li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import dotenv from 'dotenv';\n\ndotenv.config();\"><pre class=\"notranslate\"><code class=\"notranslate\">import dotenv from 'dotenv';\n\ndotenv.config();\n</code></pre></div>\n<ol start=\"7\" dir=\"auto\">\n<li>Create file <code class=\"notranslate\">.env</code> at the root of the nx app, with:<br>\n<code class=\"notranslate\">PAYLOAD_CONFIG_PATH=./dist/apps/nx-payload/config.js</code></li>\n</ol>\n<p dir=\"auto\">That's it, it should work now.<br>\nremember to replace <code class=\"notranslate\">nx-payload</code> with your app name</p>",
            "createdAt": "2022-04-28T10:31:40Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ShakedHad/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ShakedHad\">@ShakedHad</a>,</p>\n<p dir=\"auto\">I reproduced the problem you had and was able to get further in the setup by changing the tsconfig.app.json the to have two more settings in the <code class=\"notranslate\">compilerOptions</code>, they are \"esModuleInterop\" set to true and strict set to false.<br>\nWith those changes my <code class=\"notranslate\">tsconfig.app.json</code> is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n  &quot;extends&quot;: &quot;./tsconfig.json&quot;,\n  &quot;compilerOptions&quot;: {\n    &quot;outDir&quot;: &quot;../../dist/out-tsc&quot;,\n    &quot;module&quot;: &quot;commonjs&quot;,\n    &quot;types&quot;: [&quot;node&quot;, &quot;express&quot;],\n    &quot;esModuleInterop&quot;: true,\n    &quot;strict&quot;: false\n  },\n  &quot;exclude&quot;: [&quot;jest.config.ts&quot;, &quot;**/*.spec.ts&quot;, &quot;**/*.test.ts&quot;],\n  &quot;include&quot;: [&quot;**/*.ts&quot;]\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"../../dist/out-tsc\",\n    \"module\": \"commonjs\",\n    \"types\": [\"node\", \"express\"],\n    \"esModuleInterop\": true,\n    \"strict\": false\n  },\n  \"exclude\": [\"jest.config.ts\", \"**/*.spec.ts\", \"**/*.test.ts\"],\n  \"include\": [\"**/*.ts\"]\n}\n</code></pre></div>\n<p dir=\"auto\">Mine still isn't starting so there is one more thing to finish out. The last thing will be to make sure that your payload.config.js is included in the dist. You might have to add to the tsconfig to make that transpile from .ts and then adding to your \"start\" script the path.</p>\n<p dir=\"auto\">Something like this should get you there after you make sure the payload.config.js is written to dist:<br>\n<code class=\"notranslate\">\"start\": \"SET PAYLOAD_CONFIG_PATH=dist/apps/nx-payload/payload.config.js &amp;&amp; nx serve\",</code><br>\nand don't forget to replace \"nx-payload\" with your own app name.</p>\n<p dir=\"auto\">Hope that gets you closer and gives you an idea of what to fix. If you are still struggling, let us know!</p>",
      "createdAt": "2022-04-27T13:42:52Z",
      "chosenAt": "2022-04-28T10:18:55Z",
      "chosenBy": "ShakedHad",
      "replies": [
        {
          "author": {
            "name": "ShakedHad",
            "avatar": "https://avatars.githubusercontent.com/u/25921813?u=a15ebb153847b1db62a44de808eab0f72a80eb2e&v=4",
            "url": "https://github.com/ShakedHad"
          },
          "body": "<p dir=\"auto\">Thank you very much, it worked!</p>\n<p dir=\"auto\">I'm writing here the full configuration steps, for future references:</p>\n<ol dir=\"auto\">\n<li>Add these lines to <code class=\"notranslate\">tsconfig.app.json</code></li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&quot;esModuleInterop&quot;: true,\n    &quot;allowSyntheticDefaultImports&quot;: true,\n    &quot;strict&quot;: false\"><pre class=\"notranslate\"><code class=\"notranslate\">\"esModuleInterop\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"strict\": false\n</code></pre></div>\n<ol start=\"2\" dir=\"auto\">\n<li>In <code class=\"notranslate\">main.ts</code>, update express import to<br>\n<code class=\"notranslate\">import express from 'express';</code></li>\n<li>In <code class=\"notranslate\">project.json</code>, add <code class=\"notranslate\">\"webpackConfig\": \"apps/nx-payload/webpack.config.js\"</code> to <code class=\"notranslate\">targets.build.options</code></li>\n<li>Add file webpack.config.js:</li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"module.exports = (config, context) =&gt; {\n  return {\n    ...config,\n    entry: {\n      ...config.entry,\n      config: './apps/nx-payload/payload.config.ts',\n    },\n    output: {\n      ...config.output,\n      filename: '[name].js',\n    },\n  };\n};\"><pre class=\"notranslate\"><code class=\"notranslate\">module.exports = (config, context) =&gt; {\n  return {\n    ...config,\n    entry: {\n      ...config.entry,\n      config: './apps/nx-payload/payload.config.ts',\n    },\n    output: {\n      ...config.output,\n      filename: '[name].js',\n    },\n  };\n};\n</code></pre></div>\n<ol start=\"5\" dir=\"auto\">\n<li><code class=\"notranslate\">npm install --save dotenv</code></li>\n<li>Add to <code class=\"notranslate\">main.ts</code></li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import dotenv from 'dotenv';\n\ndotenv.config();\"><pre class=\"notranslate\"><code class=\"notranslate\">import dotenv from 'dotenv';\n\ndotenv.config();\n</code></pre></div>\n<ol start=\"7\" dir=\"auto\">\n<li>Create file <code class=\"notranslate\">.env</code> at the root of the nx app, with:<br>\n<code class=\"notranslate\">PAYLOAD_CONFIG_PATH=./dist/apps/nx-payload/config.js</code></li>\n</ol>\n<p dir=\"auto\">That's it, it should work now.<br>\nremember to replace <code class=\"notranslate\">nx-payload</code> with your app name</p>",
          "createdAt": "2022-04-28T10:31:40Z"
        }
      ]
    }
  },
  {
    "title": "Outputting all other localizations/locales of a collection in the REST API",
    "body": "<p dir=\"auto\">Hey,</p>\n<p dir=\"auto\">When querying my collection via the REST API, I would like it to output all localizations for which that collection has already been localized with.<br>\nThat way, I can use this information to add a language picker to each blog post on my front-end, showing all available languages.<br>\nHow could I do that?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/543",
    "id": "543",
    "createdAt": "2022-04-25T02:20:51Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "AlessioGr",
      "avatar": "https://avatars.githubusercontent.com/u/70709113?u=f22c2c8c53c453557cbae38c6ac9962191be62e8&v=4",
      "url": "https://github.com/AlessioGr"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/AlessioGr/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AlessioGr\">@AlessioGr</a> — more good news!</p>\n<p dir=\"auto\">This is currently possible. <g-emoji class=\"g-emoji\" alias=\"sunglasses\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png\">😎</g-emoji></p>\n<p dir=\"auto\">You can use the query parameter <code class=\"notranslate\">locale=*</code> and all locales will be returned for any given doc through the REST API. Note that this is only possible in REST or Local APIs though, due to how GraphQL data is strictly typed.</p>\n<p dir=\"auto\">Give it a shot!</p>",
        "createdAt": "2022-04-25T13:27:12Z",
        "replies": [
          {
            "author": {
              "name": "AlessioGr",
              "avatar": "https://avatars.githubusercontent.com/u/70709113?u=f22c2c8c53c453557cbae38c6ac9962191be62e8&v=4",
              "url": "https://github.com/AlessioGr"
            },
            "body": "<blockquote>\n<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/AlessioGr/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AlessioGr\">@AlessioGr</a> — more good news!</p>\n<p dir=\"auto\">This is currently possible. <g-emoji class=\"g-emoji\" alias=\"sunglasses\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png\">😎</g-emoji></p>\n<p dir=\"auto\">You can use the query parameter <code class=\"notranslate\">locale=*</code> and all locales will be returned for any given doc through the REST API. Note that this is only possible in REST or Local APIs though, due to how GraphQL data is strictly typed.</p>\n<p dir=\"auto\">Give it a shot!</p>\n</blockquote>\n<p dir=\"auto\">Thank you!! I tried it out, and it does display all languages, but it doesn't quite do what I want it to do. The biggest issue is that it changes a lot of my REST API schema, so I would need to parse it completely differently. Example:</p>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&quot;title&quot;:{\n            &quot;en-SG&quot;:&quot;Thrustmaster TMX Review&quot;,\n            &quot;de-DE&quot;:&quot;Thrustmaster TMX Review DE&quot;\n},\"><pre class=\"notranslate\"><span class=\"pl-ent\">\"title\"</span>:{\n            <span class=\"pl-ent\">\"en-SG\"</span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Thrustmaster TMX Review<span class=\"pl-pds\">\"</span></span>,\n            <span class=\"pl-ent\">\"de-DE\"</span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Thrustmaster TMX Review DE<span class=\"pl-pds\">\"</span></span>\n},</pre></div>\n<p dir=\"auto\">versus just</p>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&quot;title&quot;: &quot;Thrustmaster TMX Review&quot;\"><pre class=\"notranslate\"><span class=\"pl-ent\">\"title\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Thrustmaster TMX Review<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">Instead, I want it to JUST display one language and then display all other possible languages as a separate object - without the content. I used to have an object like this (not containing any content):<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/70709113/165123259-995280ee-28fc-4733-8e6b-ec1b2f3972e7.png\"><img src=\"https://user-images.githubusercontent.com/70709113/165123259-995280ee-28fc-4733-8e6b-ec1b2f3972e7.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Is that possible? Otherwise, I would have these huge Rest API responses for just one language page containing the content of all other languages, even though I basically just need the \"links\" to the other languages, not just the content.</p>",
            "createdAt": "2022-04-25T15:37:47Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Ah ok. I see what you're saying.</p>\n<p dir=\"auto\">What we've seen done in similar situations is to maintain an <code class=\"notranslate\">activeLocales</code> field or similar, maybe positioned in the sidebar of the doc, that allows for you to \"enable\" locales for any given document. Then once you have translated a doc, you would simply add that locale to the list of <code class=\"notranslate\">activeLocales</code> and then boom. You're done.</p>\n<p dir=\"auto\">Would a setup like that work?</p>",
            "createdAt": "2022-04-25T16:09:24Z"
          },
          {
            "author": {
              "name": "AlessioGr",
              "avatar": "https://avatars.githubusercontent.com/u/70709113?u=f22c2c8c53c453557cbae38c6ac9962191be62e8&v=4",
              "url": "https://github.com/AlessioGr"
            },
            "body": "<blockquote>\n<p dir=\"auto\">activeLocales</p>\n</blockquote>\n<p dir=\"auto\">Optimally it should be automated and based on if the translation is published or just drafted, but for now, that would work! What kind of field type would work best there? I've tried a hasMany relation, but I cannot select every single locale in it.</p>",
            "createdAt": "2022-04-25T16:57:02Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Well, do you have a <code class=\"notranslate\">locales</code> collection? That would be the only time you'd want to use a <code class=\"notranslate\">hasMany</code> relationship field - to relate to a locales collection. But typically locales are hardcoded (or shared) in your config and so here I'd just use a <code class=\"notranslate\">select</code> field with <code class=\"notranslate\">hasMany: true</code>, where the <code class=\"notranslate\">options</code> are equal to all of your config's available locales.</p>\n<p dir=\"auto\">You could also prefill / auto-update this field with hooks, too!</p>",
            "createdAt": "2022-04-25T17:08:10Z"
          },
          {
            "author": {
              "name": "AlessioGr",
              "avatar": "https://avatars.githubusercontent.com/u/70709113?u=f22c2c8c53c453557cbae38c6ac9962191be62e8&v=4",
              "url": "https://github.com/AlessioGr"
            },
            "body": "<blockquote>\n<p dir=\"auto\">Well, do you have a <code class=\"notranslate\">locales</code> collection? That would be the only time you'd want to use a <code class=\"notranslate\">hasMany</code> relationship field - to relate to a locales collection. But typically locales are hardcoded (or shared) in your config and so here I'd just use a <code class=\"notranslate\">select</code> field with <code class=\"notranslate\">hasMany: true</code>, where the <code class=\"notranslate\">options</code> are equal to all of your config's available locales.</p>\n<p dir=\"auto\">You could also prefill / auto-update this field with hooks, too!</p>\n</blockquote>\n<p dir=\"auto\">The select field works! And yep, locales are hard-coded, so I just copy and pasted them. Good idea with the hook, I'll try autofilling them based on the information of the local api and then making them read-only.</p>\n<p dir=\"auto\">Or alternatively, is it possible to directly extend on what the REST API outputs via a plugin? That might be an even more elegant solution which does everything behind my back.</p>",
            "createdAt": "2022-04-25T18:54:08Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">I don't think you wjould need to extend the REST API other than with the field you're describing. Consider setting <code class=\"notranslate\">admin.hidden</code> to <code class=\"notranslate\">true</code> to keep it out of the admin UI.</p>\n<p dir=\"auto\">It could be made in to a plugin once it's all working. It sounds pretty useful.</p>",
            "createdAt": "2022-04-25T19:07:54Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/AlessioGr/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AlessioGr\">@AlessioGr</a> — more good news!</p>\n<p dir=\"auto\">This is currently possible. <g-emoji class=\"g-emoji\" alias=\"sunglasses\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png\">😎</g-emoji></p>\n<p dir=\"auto\">You can use the query parameter <code class=\"notranslate\">locale=*</code> and all locales will be returned for any given doc through the REST API. Note that this is only possible in REST or Local APIs though, due to how GraphQL data is strictly typed.</p>\n<p dir=\"auto\">Give it a shot!</p>",
      "createdAt": "2022-04-25T13:27:12Z",
      "chosenAt": "2022-04-25T19:32:32Z",
      "chosenBy": "AlessioGr",
      "replies": [
        {
          "author": {
            "name": "AlessioGr",
            "avatar": "https://avatars.githubusercontent.com/u/70709113?u=f22c2c8c53c453557cbae38c6ac9962191be62e8&v=4",
            "url": "https://github.com/AlessioGr"
          },
          "body": "<blockquote>\n<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/AlessioGr/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AlessioGr\">@AlessioGr</a> — more good news!</p>\n<p dir=\"auto\">This is currently possible. <g-emoji class=\"g-emoji\" alias=\"sunglasses\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png\">😎</g-emoji></p>\n<p dir=\"auto\">You can use the query parameter <code class=\"notranslate\">locale=*</code> and all locales will be returned for any given doc through the REST API. Note that this is only possible in REST or Local APIs though, due to how GraphQL data is strictly typed.</p>\n<p dir=\"auto\">Give it a shot!</p>\n</blockquote>\n<p dir=\"auto\">Thank you!! I tried it out, and it does display all languages, but it doesn't quite do what I want it to do. The biggest issue is that it changes a lot of my REST API schema, so I would need to parse it completely differently. Example:</p>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&quot;title&quot;:{\n            &quot;en-SG&quot;:&quot;Thrustmaster TMX Review&quot;,\n            &quot;de-DE&quot;:&quot;Thrustmaster TMX Review DE&quot;\n},\"><pre class=\"notranslate\"><span class=\"pl-ent\">\"title\"</span>:{\n            <span class=\"pl-ent\">\"en-SG\"</span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Thrustmaster TMX Review<span class=\"pl-pds\">\"</span></span>,\n            <span class=\"pl-ent\">\"de-DE\"</span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Thrustmaster TMX Review DE<span class=\"pl-pds\">\"</span></span>\n},</pre></div>\n<p dir=\"auto\">versus just</p>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&quot;title&quot;: &quot;Thrustmaster TMX Review&quot;\"><pre class=\"notranslate\"><span class=\"pl-ent\">\"title\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Thrustmaster TMX Review<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">Instead, I want it to JUST display one language and then display all other possible languages as a separate object - without the content. I used to have an object like this (not containing any content):<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/70709113/165123259-995280ee-28fc-4733-8e6b-ec1b2f3972e7.png\"><img src=\"https://user-images.githubusercontent.com/70709113/165123259-995280ee-28fc-4733-8e6b-ec1b2f3972e7.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Is that possible? Otherwise, I would have these huge Rest API responses for just one language page containing the content of all other languages, even though I basically just need the \"links\" to the other languages, not just the content.</p>",
          "createdAt": "2022-04-25T15:37:47Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Ah ok. I see what you're saying.</p>\n<p dir=\"auto\">What we've seen done in similar situations is to maintain an <code class=\"notranslate\">activeLocales</code> field or similar, maybe positioned in the sidebar of the doc, that allows for you to \"enable\" locales for any given document. Then once you have translated a doc, you would simply add that locale to the list of <code class=\"notranslate\">activeLocales</code> and then boom. You're done.</p>\n<p dir=\"auto\">Would a setup like that work?</p>",
          "createdAt": "2022-04-25T16:09:24Z"
        },
        {
          "author": {
            "name": "AlessioGr",
            "avatar": "https://avatars.githubusercontent.com/u/70709113?u=f22c2c8c53c453557cbae38c6ac9962191be62e8&v=4",
            "url": "https://github.com/AlessioGr"
          },
          "body": "<blockquote>\n<p dir=\"auto\">activeLocales</p>\n</blockquote>\n<p dir=\"auto\">Optimally it should be automated and based on if the translation is published or just drafted, but for now, that would work! What kind of field type would work best there? I've tried a hasMany relation, but I cannot select every single locale in it.</p>",
          "createdAt": "2022-04-25T16:57:02Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Well, do you have a <code class=\"notranslate\">locales</code> collection? That would be the only time you'd want to use a <code class=\"notranslate\">hasMany</code> relationship field - to relate to a locales collection. But typically locales are hardcoded (or shared) in your config and so here I'd just use a <code class=\"notranslate\">select</code> field with <code class=\"notranslate\">hasMany: true</code>, where the <code class=\"notranslate\">options</code> are equal to all of your config's available locales.</p>\n<p dir=\"auto\">You could also prefill / auto-update this field with hooks, too!</p>",
          "createdAt": "2022-04-25T17:08:10Z"
        },
        {
          "author": {
            "name": "AlessioGr",
            "avatar": "https://avatars.githubusercontent.com/u/70709113?u=f22c2c8c53c453557cbae38c6ac9962191be62e8&v=4",
            "url": "https://github.com/AlessioGr"
          },
          "body": "<blockquote>\n<p dir=\"auto\">Well, do you have a <code class=\"notranslate\">locales</code> collection? That would be the only time you'd want to use a <code class=\"notranslate\">hasMany</code> relationship field - to relate to a locales collection. But typically locales are hardcoded (or shared) in your config and so here I'd just use a <code class=\"notranslate\">select</code> field with <code class=\"notranslate\">hasMany: true</code>, where the <code class=\"notranslate\">options</code> are equal to all of your config's available locales.</p>\n<p dir=\"auto\">You could also prefill / auto-update this field with hooks, too!</p>\n</blockquote>\n<p dir=\"auto\">The select field works! And yep, locales are hard-coded, so I just copy and pasted them. Good idea with the hook, I'll try autofilling them based on the information of the local api and then making them read-only.</p>\n<p dir=\"auto\">Or alternatively, is it possible to directly extend on what the REST API outputs via a plugin? That might be an even more elegant solution which does everything behind my back.</p>",
          "createdAt": "2022-04-25T18:54:08Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">I don't think you wjould need to extend the REST API other than with the field you're describing. Consider setting <code class=\"notranslate\">admin.hidden</code> to <code class=\"notranslate\">true</code> to keep it out of the admin UI.</p>\n<p dir=\"auto\">It could be made in to a plugin once it's all working. It sounds pretty useful.</p>",
          "createdAt": "2022-04-25T19:07:54Z"
        }
      ]
    }
  },
  {
    "title": "Custom REST endpoints",
    "body": "<p dir=\"auto\">Is it possible to add custom REST endpoints?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/532",
    "id": "532",
    "createdAt": "2022-04-18T21:12:34Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "BrettBedarf",
      "avatar": "https://avatars.githubusercontent.com/u/25183985?u=e93917c6046af3b9bae570da3c5d7762169b14e4&v=4",
      "url": "https://github.com/BrettBedarf"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/BrettBedarf/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/BrettBedarf\">@BrettBedarf</a>, good question. Since Payload simply takes your express app as a parameter, you still have full access to it to add any additional functionality as needed. Here is an example <code class=\"notranslate\">server.ts</code> that is generated running<code class=\"notranslate\">npx create-payload-app</code>. You would simply add your additional functionality after the <code class=\"notranslate\">payload.init</code> call.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import express from 'express';\nimport payload from 'payload';\n\nrequire('dotenv').config();\nconst app = express();\n\n// Initialize Payload\npayload.init({\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGODB_URI,\n  express: app,\n})\n\n// Add your own express routes here\n\napp.listen(3000);\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">express</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'express'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dotenv'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">app</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">express</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// Initialize Payload</span>\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">secret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_SECRET</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MONGODB_URI</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">express</span>: <span class=\"pl-s1\">app</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-c\">// Add your own express routes here</span>\n\n<span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">listen</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">3000</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Hopefully, that answers your question. Let me know if you have any follow up questions <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
        "createdAt": "2022-04-18T22:21:59Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/BrettBedarf/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/BrettBedarf\">@BrettBedarf</a>, good question. Since Payload simply takes your express app as a parameter, you still have full access to it to add any additional functionality as needed. Here is an example <code class=\"notranslate\">server.ts</code> that is generated running<code class=\"notranslate\">npx create-payload-app</code>. You would simply add your additional functionality after the <code class=\"notranslate\">payload.init</code> call.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import express from 'express';\nimport payload from 'payload';\n\nrequire('dotenv').config();\nconst app = express();\n\n// Initialize Payload\npayload.init({\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGODB_URI,\n  express: app,\n})\n\n// Add your own express routes here\n\napp.listen(3000);\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">express</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'express'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dotenv'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">app</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">express</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// Initialize Payload</span>\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">secret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_SECRET</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MONGODB_URI</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">express</span>: <span class=\"pl-s1\">app</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-c\">// Add your own express routes here</span>\n\n<span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">listen</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">3000</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Hopefully, that answers your question. Let me know if you have any follow up questions <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
      "createdAt": "2022-04-18T22:21:59Z",
      "chosenAt": "2022-12-09T16:48:05Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Demo source code",
    "body": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">Is the source code for the demo at <a href=\"https://demo.payloadcms.com\" rel=\"nofollow\">https://demo.payloadcms.com</a> available to browse through?</p>\n<p dir=\"auto\">I'm specifically interested in the SEO field.</p>\n<p dir=\"auto\">Thanks!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/523",
    "id": "523",
    "createdAt": "2022-04-13T13:12:38Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "grndctrl",
      "avatar": "https://avatars.githubusercontent.com/u/60090827?u=e0ed5a0648112a1a2f8a43edd5b6a1389bbd9702&v=4",
      "url": "https://github.com/grndctrl"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">We are planning to make the demo repo public after a little code cleanup.</p>\n<p dir=\"auto\">You can use this SEO plugin <a href=\"https://github.com/payloadcms/payload-plugin-seo\">https://github.com/payloadcms/payload-plugin-seo</a>. I believe the demo SEO fields are based on this.</p>\n<p dir=\"auto\">Let us know if you need anything else.</p>",
        "createdAt": "2022-04-13T13:37:57Z",
        "replies": null
      },
      {
        "author": {
          "name": "grndctrl",
          "avatar": "https://avatars.githubusercontent.com/u/60090827?u=e0ed5a0648112a1a2f8a43edd5b6a1389bbd9702&v=4",
          "url": "https://github.com/grndctrl"
        },
        "body": "<p dir=\"auto\">Awesome! Looking forward to it.</p>",
        "createdAt": "2022-04-13T13:54:54Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">We are planning to make the demo repo public after a little code cleanup.</p>\n<p dir=\"auto\">You can use this SEO plugin <a href=\"https://github.com/payloadcms/payload-plugin-seo\">https://github.com/payloadcms/payload-plugin-seo</a>. I believe the demo SEO fields are based on this.</p>\n<p dir=\"auto\">Let us know if you need anything else.</p>",
      "createdAt": "2022-04-13T13:37:57Z",
      "chosenAt": "2022-04-13T13:54:41Z",
      "chosenBy": "grndctrl",
      "replies": null
    }
  },
  {
    "title": "How to update Payload version",
    "body": "<p dir=\"auto\">This might be a pretty noob question, but what is the best way to update the PayloadCMS version? I'm running a slightly older one and I've just tried to run npm install on my new apple silicon macbook and its failing to install node-sass.</p>\n<p dir=\"auto\">I figure if I update to a newer release it might resolve some of these issues</p>\n<p dir=\"auto\">UPDATE: It's not node-sass that was failing it is sharp. Here is a dump of what it says when trying to install</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"devon@Devons-MacBook-Pro personal-blog % npm install        \nnpm WARN deprecated source-map-url@0.4.1: See https://github.com/lydell/source-map-url#deprecated\nnpm WARN deprecated flatten@1.0.3: flatten is deprecated in favor of utility frameworks such as lodash.\nnpm WARN deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecated\nnpm WARN deprecated har-validator@5.1.5: this library is no longer supported\nnpm WARN deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated\nnpm WARN deprecated source-map-resolve@0.5.3: See https://github.com/lydell/source-map-resolve#deprecated\nnpm WARN deprecated querystring@0.2.1: The querystring API is considered Legacy. new code should use the URLSearchParams API instead.\nnpm WARN deprecated sane@4.1.0: some dependency vulnerabilities fixed, support for node &lt; 10 dropped, and newer ECMAScript syntax/features added\nnpm WARN deprecated uuid@3.4.0: Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.\nnpm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142\nnpm WARN deprecated svgo@1.3.2: This SVGO version is no longer supported. Upgrade to v2.x.x.\nnpm WARN deprecated popper.js@1.16.1: You can find the new Popper v2 at @popperjs/core, this package is dedicated to the legacy v1\nnpm ERR! code 1\nnpm ERR! path /Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/sharp\nnpm ERR! command failed\nnpm ERR! command sh -c (node install/libvips &amp;&amp; node install/dll-copy &amp;&amp; prebuild-install) || (node install/can-compile &amp;&amp; node-gyp rebuild &amp;&amp; node install/dll-copy)\nnpm ERR! sharp: Detected globally-installed libvips v8.12.2\nnpm ERR! sharp: Building from source via node-gyp\nnpm ERR!   CC(target) Release/obj.target/nothing/../node-addon-api/nothing.o\nnpm ERR!   LIBTOOL-STATIC Release/nothing.a\nnpm ERR! gyp info it worked if it ends with ok\nnpm ERR! gyp info using node-gyp@7.1.2\nnpm ERR! gyp info using node@16.14.2 | darwin | arm64\nnpm ERR! gyp info find Python using Python version 3.8.9 found at &quot;/Applications/Xcode.app/Contents/Developer/usr/bin/python3&quot;\nnpm ERR! (node:60026) [DEP0150] DeprecationWarning: Setting process.config is deprecated. In the future the property will be read-only.\nnpm ERR! (Use `node --trace-deprecation ...` to show where the warning was created)\nnpm ERR! gyp info spawn /Applications/Xcode.app/Contents/Developer/usr/bin/python3\nnpm ERR! gyp info spawn args [\nnpm ERR! gyp info spawn args   '/Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/node-gyp/gyp/gyp_main.py',\nnpm ERR! gyp info spawn args   'binding.gyp',\nnpm ERR! gyp info spawn args   '-f',\nnpm ERR! gyp info spawn args   'make',\nnpm ERR! gyp info spawn args   '-I',\nnpm ERR! gyp info spawn args   '/Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/sharp/build/config.gypi',\nnpm ERR! gyp info spawn args   '-I',\nnpm ERR! gyp info spawn args   '/Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/node-gyp/addon.gypi',\nnpm ERR! gyp info spawn args   '-I',\nnpm ERR! gyp info spawn args   '/Users/devon/Library/Caches/node-gyp/16.14.2/include/node/common.gypi',\nnpm ERR! gyp info spawn args   '-Dlibrary=shared_library',\nnpm ERR! gyp info spawn args   '-Dvisibility=default',\nnpm ERR! gyp info spawn args   '-Dnode_root_dir=/Users/devon/Library/Caches/node-gyp/16.14.2',\nnpm ERR! gyp info spawn args   '-Dnode_gyp_dir=/Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/node-gyp',\nnpm ERR! gyp info spawn args   '-Dnode_lib_file=/Users/devon/Library/Caches/node-gyp/16.14.2/&lt;(target_arch)/node.lib',\nnpm ERR! gyp info spawn args   '-Dmodule_root_dir=/Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/sharp',\nnpm ERR! gyp info spawn args   '-Dnode_engine=v8',\nnpm ERR! gyp info spawn args   '--depth=.',\nnpm ERR! gyp info spawn args   '--no-parallel',\nnpm ERR! gyp info spawn args   '--generator-output',\nnpm ERR! gyp info spawn args   'build',\nnpm ERR! gyp info spawn args   '-Goutput_dir=.'\nnpm ERR! gyp info spawn args ]\nnpm ERR! gyp info spawn make\nnpm ERR! gyp info spawn args [ 'BUILDTYPE=Release', '-C', 'build' ]\nnpm ERR! env: python: No such file or directory\nnpm ERR! make: *** [Release/nothing.a] Error 127\nnpm ERR! gyp ERR! build error \nnpm ERR! gyp ERR! stack Error: `make` failed with exit code: 2\nnpm ERR! gyp ERR! stack     at ChildProcess.onExit (/Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/node-gyp/lib/build.js:194:23)\nnpm ERR! gyp ERR! stack     at ChildProcess.emit (node:events:526:28)\nnpm ERR! gyp ERR! stack     at Process.ChildProcess._handle.onexit (node:internal/child_process:291:12)\nnpm ERR! gyp ERR! System Darwin 21.4.0\nnpm ERR! gyp ERR! command &quot;/usr/local/bin/node&quot; &quot;/Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/.bin/node-gyp&quot; &quot;rebuild&quot;\nnpm ERR! gyp ERR! cwd /Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/sharp\nnpm ERR! gyp ERR! node -v v16.14.2\nnpm ERR! gyp ERR! node-gyp -v v7.1.2\nnpm ERR! gyp ERR! not ok\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /Users/devon/.npm/_logs/2022-04-04T05_26_39_754Z-debug-0.log\"><pre class=\"notranslate\"><code class=\"notranslate\">devon@Devons-MacBook-Pro personal-blog % npm install        \nnpm WARN deprecated source-map-url@0.4.1: See https://github.com/lydell/source-map-url#deprecated\nnpm WARN deprecated flatten@1.0.3: flatten is deprecated in favor of utility frameworks such as lodash.\nnpm WARN deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecated\nnpm WARN deprecated har-validator@5.1.5: this library is no longer supported\nnpm WARN deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated\nnpm WARN deprecated source-map-resolve@0.5.3: See https://github.com/lydell/source-map-resolve#deprecated\nnpm WARN deprecated querystring@0.2.1: The querystring API is considered Legacy. new code should use the URLSearchParams API instead.\nnpm WARN deprecated sane@4.1.0: some dependency vulnerabilities fixed, support for node &lt; 10 dropped, and newer ECMAScript syntax/features added\nnpm WARN deprecated uuid@3.4.0: Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.\nnpm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142\nnpm WARN deprecated svgo@1.3.2: This SVGO version is no longer supported. Upgrade to v2.x.x.\nnpm WARN deprecated popper.js@1.16.1: You can find the new Popper v2 at @popperjs/core, this package is dedicated to the legacy v1\nnpm ERR! code 1\nnpm ERR! path /Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/sharp\nnpm ERR! command failed\nnpm ERR! command sh -c (node install/libvips &amp;&amp; node install/dll-copy &amp;&amp; prebuild-install) || (node install/can-compile &amp;&amp; node-gyp rebuild &amp;&amp; node install/dll-copy)\nnpm ERR! sharp: Detected globally-installed libvips v8.12.2\nnpm ERR! sharp: Building from source via node-gyp\nnpm ERR!   CC(target) Release/obj.target/nothing/../node-addon-api/nothing.o\nnpm ERR!   LIBTOOL-STATIC Release/nothing.a\nnpm ERR! gyp info it worked if it ends with ok\nnpm ERR! gyp info using node-gyp@7.1.2\nnpm ERR! gyp info using node@16.14.2 | darwin | arm64\nnpm ERR! gyp info find Python using Python version 3.8.9 found at \"/Applications/Xcode.app/Contents/Developer/usr/bin/python3\"\nnpm ERR! (node:60026) [DEP0150] DeprecationWarning: Setting process.config is deprecated. In the future the property will be read-only.\nnpm ERR! (Use `node --trace-deprecation ...` to show where the warning was created)\nnpm ERR! gyp info spawn /Applications/Xcode.app/Contents/Developer/usr/bin/python3\nnpm ERR! gyp info spawn args [\nnpm ERR! gyp info spawn args   '/Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/node-gyp/gyp/gyp_main.py',\nnpm ERR! gyp info spawn args   'binding.gyp',\nnpm ERR! gyp info spawn args   '-f',\nnpm ERR! gyp info spawn args   'make',\nnpm ERR! gyp info spawn args   '-I',\nnpm ERR! gyp info spawn args   '/Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/sharp/build/config.gypi',\nnpm ERR! gyp info spawn args   '-I',\nnpm ERR! gyp info spawn args   '/Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/node-gyp/addon.gypi',\nnpm ERR! gyp info spawn args   '-I',\nnpm ERR! gyp info spawn args   '/Users/devon/Library/Caches/node-gyp/16.14.2/include/node/common.gypi',\nnpm ERR! gyp info spawn args   '-Dlibrary=shared_library',\nnpm ERR! gyp info spawn args   '-Dvisibility=default',\nnpm ERR! gyp info spawn args   '-Dnode_root_dir=/Users/devon/Library/Caches/node-gyp/16.14.2',\nnpm ERR! gyp info spawn args   '-Dnode_gyp_dir=/Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/node-gyp',\nnpm ERR! gyp info spawn args   '-Dnode_lib_file=/Users/devon/Library/Caches/node-gyp/16.14.2/&lt;(target_arch)/node.lib',\nnpm ERR! gyp info spawn args   '-Dmodule_root_dir=/Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/sharp',\nnpm ERR! gyp info spawn args   '-Dnode_engine=v8',\nnpm ERR! gyp info spawn args   '--depth=.',\nnpm ERR! gyp info spawn args   '--no-parallel',\nnpm ERR! gyp info spawn args   '--generator-output',\nnpm ERR! gyp info spawn args   'build',\nnpm ERR! gyp info spawn args   '-Goutput_dir=.'\nnpm ERR! gyp info spawn args ]\nnpm ERR! gyp info spawn make\nnpm ERR! gyp info spawn args [ 'BUILDTYPE=Release', '-C', 'build' ]\nnpm ERR! env: python: No such file or directory\nnpm ERR! make: *** [Release/nothing.a] Error 127\nnpm ERR! gyp ERR! build error \nnpm ERR! gyp ERR! stack Error: `make` failed with exit code: 2\nnpm ERR! gyp ERR! stack     at ChildProcess.onExit (/Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/node-gyp/lib/build.js:194:23)\nnpm ERR! gyp ERR! stack     at ChildProcess.emit (node:events:526:28)\nnpm ERR! gyp ERR! stack     at Process.ChildProcess._handle.onexit (node:internal/child_process:291:12)\nnpm ERR! gyp ERR! System Darwin 21.4.0\nnpm ERR! gyp ERR! command \"/usr/local/bin/node\" \"/Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/.bin/node-gyp\" \"rebuild\"\nnpm ERR! gyp ERR! cwd /Users/devon/Documents/Development/Development_Backup/personal-blog/node_modules/sharp\nnpm ERR! gyp ERR! node -v v16.14.2\nnpm ERR! gyp ERR! node-gyp -v v7.1.2\nnpm ERR! gyp ERR! not ok\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /Users/devon/.npm/_logs/2022-04-04T05_26_39_754Z-debug-0.log\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/501",
    "id": "501",
    "createdAt": "2022-04-04T05:25:18Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "peniswafflexd",
      "avatar": "https://avatars.githubusercontent.com/u/28529309?v=4",
      "url": "https://github.com/peniswafflexd"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey there - yep, this is actually already fixed as of <code class=\"notranslate\">0.13.3</code>.</p>\n<p dir=\"auto\">We place a lot of emphasis on trying to minimize breaking changes as we build Payload, so upgrading to a newer (or even the newest) version of Payload should be no problem for you.</p>\n<p dir=\"auto\">Here is a link to our changelog, where we identify <code class=\"notranslate\">BREAKING CHANGES</code> as we publish new minor and patch versions:</p>\n<p dir=\"auto\"><a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md\">https://github.com/payloadcms/payload/blob/master/CHANGELOG.md</a></p>\n<p dir=\"auto\">Maybe take a look through the changelog briefly to identify all breaking changes between your version and the version you'd like to update to.</p>",
        "createdAt": "2022-04-04T14:42:29Z",
        "replies": [
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Some packages don't update well on occasion, if you run in to errors sometimes just blowing away <code class=\"notranslate\">node_modules</code> and <code class=\"notranslate\">yarn.lock</code> or <code class=\"notranslate\">package-lock.json</code> will get you up and going again.</p>\n<p dir=\"auto\"><code class=\"notranslate\">rm -rf node_modules yarn.lock</code></p>\n<p dir=\"auto\">Let us know if you're still having trouble.</p>",
            "createdAt": "2022-04-04T17:09:00Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey there - yep, this is actually already fixed as of <code class=\"notranslate\">0.13.3</code>.</p>\n<p dir=\"auto\">We place a lot of emphasis on trying to minimize breaking changes as we build Payload, so upgrading to a newer (or even the newest) version of Payload should be no problem for you.</p>\n<p dir=\"auto\">Here is a link to our changelog, where we identify <code class=\"notranslate\">BREAKING CHANGES</code> as we publish new minor and patch versions:</p>\n<p dir=\"auto\"><a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md\">https://github.com/payloadcms/payload/blob/master/CHANGELOG.md</a></p>\n<p dir=\"auto\">Maybe take a look through the changelog briefly to identify all breaking changes between your version and the version you'd like to update to.</p>",
      "createdAt": "2022-04-04T14:42:29Z",
      "chosenAt": "2022-12-09T16:48:25Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Some packages don't update well on occasion, if you run in to errors sometimes just blowing away <code class=\"notranslate\">node_modules</code> and <code class=\"notranslate\">yarn.lock</code> or <code class=\"notranslate\">package-lock.json</code> will get you up and going again.</p>\n<p dir=\"auto\"><code class=\"notranslate\">rm -rf node_modules yarn.lock</code></p>\n<p dir=\"auto\">Let us know if you're still having trouble.</p>",
          "createdAt": "2022-04-04T17:09:00Z"
        }
      ]
    }
  },
  {
    "title": "Duplicate file from collection to collection",
    "body": "<p dir=\"auto\">I'm trying to grasp around the idea of hooks.</p>\n<h3 dir=\"auto\">PROBLEM</h3>\n<p dir=\"auto\">I need to create a hook that allows <strong>Admin</strong> to duplicate file after it has been reviewed to another collection, and delate the one he has reviewed.<br>\nIs there a tutorial or documentation on how to e.g. execute the CREATE <strong>operation</strong> on another collection with the use of data from currently edited file?</p>\n<h4 dir=\"auto\">IDEA</h4>\n<p dir=\"auto\">And Is there a way to execute PUT, DELATE, FIND and other operations directly on Mongo with FETCH, inside hook?<br>\nWould appiciate some discussion or help.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/487",
    "id": "487",
    "createdAt": "2022-03-19T13:07:59Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "quornik",
      "avatar": "https://avatars.githubusercontent.com/u/6187408?u=d66adadfca3437186e25abaafe51af799025e358&v=4",
      "url": "https://github.com/quornik"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/quornik/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/quornik\">@quornik</a>, this is definitely possible by combining the use of a <a href=\"https://payloadcms.com/docs/hooks/collections#beforechange\" rel=\"nofollow\">beforeChange hook</a> and the  <a href=\"https://payloadcms.com/docs/local-api/overview\" rel=\"nofollow\">local API operations</a>.</p>\n<p dir=\"auto\">Here is an example of how it can be done:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { CollectionBeforeChangeHook, CollectionConfig } from 'payload/types'\n\nconst performOperationIfReviewed: CollectionBeforeChangeHook = async ({\n  data, // incoming data to update or create with\n  req, // full express request\n  operation, // name of the operation ie. 'create', 'update'\n  originalDoc, // original document\n}) =&gt; {\n  if (\n    req?.user?.collection === 'admins' &amp;&amp; // Admins collection only\n    operation === 'update' &amp;&amp; // Only on update operations\n    !originalDoc.reviewed &amp;&amp; data.reviewed // Transitioning from not reviewed to reviewed\n  ) {\n    await req.payload.create({\n      collection: 'collection-after-reviewed',\n      data,\n    })\n  }\n}\n\nexport const Pages: CollectionConfig = {\n  slug: 'pages',\n  hooks: {\n    beforeChange: [performOperationIfReviewed],\n  },\n  fields: [\n    {\n      name: 'reviewFile',\n      type: 'relationship',\n      relationTo: 'media',\n    },\n    {\n      name: 'reviewed',\n      type: 'checkbox',\n    }\n  ],\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">CollectionBeforeChangeHook</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">performOperationIfReviewed</span>: <span class=\"pl-smi\">CollectionBeforeChangeHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  data<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// incoming data to update or create with</span>\n  req<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// full express request</span>\n  operation<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// name of the operation ie. 'create', 'update'</span>\n  originalDoc<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// original document</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span>\n    <span class=\"pl-s1\">req</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">collection</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'admins'</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-c\">// Admins collection only</span>\n    <span class=\"pl-s1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'update'</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-c\">// Only on update operations</span>\n    <span class=\"pl-c1\">!</span><span class=\"pl-s1\">originalDoc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reviewed</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reviewed</span> <span class=\"pl-c\">// Transitioning from not reviewed to reviewed</span>\n  <span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'collection-after-reviewed'</span><span class=\"pl-kos\">,</span>\n      data<span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-smi\">Pages</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s1\">performOperationIfReviewed</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'reviewFile'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'media'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'reviewed'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'checkbox'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Hopefully, that gets you going in the right direction. Let me know if you have any additional questions <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
        "createdAt": "2022-03-21T01:05:28Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/quornik/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/quornik\">@quornik</a>, this is definitely possible by combining the use of a <a href=\"https://payloadcms.com/docs/hooks/collections#beforechange\" rel=\"nofollow\">beforeChange hook</a> and the  <a href=\"https://payloadcms.com/docs/local-api/overview\" rel=\"nofollow\">local API operations</a>.</p>\n<p dir=\"auto\">Here is an example of how it can be done:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { CollectionBeforeChangeHook, CollectionConfig } from 'payload/types'\n\nconst performOperationIfReviewed: CollectionBeforeChangeHook = async ({\n  data, // incoming data to update or create with\n  req, // full express request\n  operation, // name of the operation ie. 'create', 'update'\n  originalDoc, // original document\n}) =&gt; {\n  if (\n    req?.user?.collection === 'admins' &amp;&amp; // Admins collection only\n    operation === 'update' &amp;&amp; // Only on update operations\n    !originalDoc.reviewed &amp;&amp; data.reviewed // Transitioning from not reviewed to reviewed\n  ) {\n    await req.payload.create({\n      collection: 'collection-after-reviewed',\n      data,\n    })\n  }\n}\n\nexport const Pages: CollectionConfig = {\n  slug: 'pages',\n  hooks: {\n    beforeChange: [performOperationIfReviewed],\n  },\n  fields: [\n    {\n      name: 'reviewFile',\n      type: 'relationship',\n      relationTo: 'media',\n    },\n    {\n      name: 'reviewed',\n      type: 'checkbox',\n    }\n  ],\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">CollectionBeforeChangeHook</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">performOperationIfReviewed</span>: <span class=\"pl-smi\">CollectionBeforeChangeHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  data<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// incoming data to update or create with</span>\n  req<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// full express request</span>\n  operation<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// name of the operation ie. 'create', 'update'</span>\n  originalDoc<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// original document</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span>\n    <span class=\"pl-s1\">req</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">collection</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'admins'</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-c\">// Admins collection only</span>\n    <span class=\"pl-s1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'update'</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-c\">// Only on update operations</span>\n    <span class=\"pl-c1\">!</span><span class=\"pl-s1\">originalDoc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reviewed</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">reviewed</span> <span class=\"pl-c\">// Transitioning from not reviewed to reviewed</span>\n  <span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'collection-after-reviewed'</span><span class=\"pl-kos\">,</span>\n      data<span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-smi\">Pages</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s1\">performOperationIfReviewed</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'reviewFile'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'media'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'reviewed'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'checkbox'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Hopefully, that gets you going in the right direction. Let me know if you have any additional questions <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
      "createdAt": "2022-03-21T01:05:28Z",
      "chosenAt": "2022-03-29T18:27:05Z",
      "chosenBy": "denolfe",
      "replies": null
    }
  },
  {
    "title": "\"You are not allowed to access this page.\" - on Admin",
    "body": "<h3 dir=\"auto\">I keep getting \"You are not allowed to access this page.\" just after logging in.</h3>\n<p dir=\"auto\">I've managed to deploy PayloadCMS to heroku (YAY!) and:</p>\n<ul dir=\"auto\">\n<li>the license is checked for the domain (fryzjerzy-fighterzy-ua-cms.herokuapp.com)</li>\n<li>Admin email is exactly the one privided for the license (i did changed it tho, but then changed it back)</li>\n<li>double checked the ENV variables. License key is there.</li>\n<li>license: process.env.PAYLOAD_LICENSE_KEY, is present in the \"init\" section of config.</li>\n<li>Same credentials work on localhost.</li>\n</ul>\n<p dir=\"auto\">What am I missing here?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/477",
    "id": "477",
    "createdAt": "2022-03-11T18:53:12Z",
    "upvotes": 1,
    "commentTotal": 4,
    "author": {
      "name": "quornik",
      "avatar": "https://avatars.githubusercontent.com/u/6187408?u=d66adadfca3437186e25abaafe51af799025e358&v=4",
      "url": "https://github.com/quornik"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/quornik/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/quornik\">@quornik</a>, I can help you out here.</p>\n<p dir=\"auto\">I see your license in our system. It looks like we haven't received any licensing requests for that particular domain or email, which is likely why your admin panel is giving you this response.</p>\n<p dir=\"auto\">Can you verify in your Dev Tools that when you reload your admin panel that a request goes out to <code class=\"notranslate\">licensing.payloadcms.com</code> and is sending your key and email accordingly?</p>\n<p dir=\"auto\">Worth noting that we don't validate licensing when you're running on localhost, so that isn't an indication that licensing is configured correctly or incorrectly.</p>",
        "createdAt": "2022-03-11T22:43:28Z",
        "replies": null
      },
      {
        "author": {
          "name": "quornik",
          "avatar": "https://avatars.githubusercontent.com/u/6187408?u=d66adadfca3437186e25abaafe51af799025e358&v=4",
          "url": "https://github.com/quornik"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/denolfe/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/denolfe\">@denolfe</a> , thanks for Your reply.<br>\nUnfortunely I can confirm that this request does not happen, any idea why?<br>\nThe API routes are working as expected, I just can't log in to the admin panel while hosted on heroku.</p>\n<p dir=\"auto\">I've mentioned the localhost, to avoid questions like \"is Your password correct?\" :D</p>\n<p dir=\"auto\">To actually deploy to heroku, I needed to slightly modify server.js.</p>\n<p dir=\"auto\">instead of:<br>\n<code class=\"notranslate\">app.listen(3000)</code><br>\nI did put:<br>\n<code class=\"notranslate\">app.listen(process.env.PORT || 3000);</code></p>\n<p dir=\"auto\">also in package.json I needed to duplicate \"serve\" script command and change the duplicate to \"start\" so Heroku recognizes the start command. And While at it, I did move all devDependencies besiede <code class=\"notranslate\">nodemon</code> to dependencies.</p>\n<p dir=\"auto\">Have any idea what am I doing wrong? :)</p>",
        "createdAt": "2022-03-12T13:25:42Z",
        "replies": null
      },
      {
        "author": {
          "name": "quornik",
          "avatar": "https://avatars.githubusercontent.com/u/6187408?u=d66adadfca3437186e25abaafe51af799025e358&v=4",
          "url": "https://github.com/quornik"
        },
        "body": "<p dir=\"auto\">OK I FIGURED IT OUT &lt;{facepalm}&gt;<br>\nThe crucial part is: Dear oerthinking developer (that's me ) Please do change \"serverUrl\" to the domain you are actually deploying to.</p>\n<p dir=\"auto\">This was like very disutrbing for me: I assumed that since we have the installation working via nginx, and since we do need to have it hosted both locally and on production, the idea to hardcode this \"<a href=\"http://localhost:3000\" rel=\"nofollow\">http://localhost:3000</a>\" to the config is ok, and the actual switching of the final url is happening on nginx level. Turns out I was very wrong. I was looking on those simple http requests on console, and the first was always to the domain, and the rest - admin api calls - were to the localhost.</p>\n<p dir=\"auto\">It works fine now.<br>\nthanks!</p>",
        "createdAt": "2022-03-12T14:47:17Z",
        "replies": [
          {
            "author": {
              "name": "denolfe",
              "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
              "url": "https://github.com/denolfe"
            },
            "body": "<p dir=\"auto\">Awesome, glad you were able to figure it out! <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
            "createdAt": "2022-03-12T15:39:58Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/quornik/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/quornik\">@quornik</a> thanks for the update details for others to see.<br>\nAn interesting note, currently in beta the <code class=\"notranslate\">serverURL</code> is not required, Payload will start without it and use relative paths for all admin UI API calls. The serverURL will be optional in the next 0.15.x release.</p>\n<p dir=\"auto\">Cheers!</p>",
            "createdAt": "2022-03-12T15:41:38Z"
          }
        ]
      },
      {
        "author": {
          "name": "quornik",
          "avatar": "https://avatars.githubusercontent.com/u/6187408?u=d66adadfca3437186e25abaafe51af799025e358&v=4",
          "url": "https://github.com/quornik"
        },
        "body": "<p dir=\"auto\">Just to make something for the community out of this, I wrote simple guide covering the non standard, Heroku specific approach to deployment: <a aria-label=\"Discussion #473\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3925211\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/473\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/473/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/473\">#473</a></p>\n<p dir=\"auto\">Hope You'll find it helpful.</p>\n<p dir=\"auto\">Cheers also!</p>",
        "createdAt": "2022-03-12T16:54:27Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "quornik",
        "avatar": "https://avatars.githubusercontent.com/u/6187408?u=d66adadfca3437186e25abaafe51af799025e358&v=4",
        "url": "https://github.com/quornik"
      },
      "body": "<p dir=\"auto\">OK I FIGURED IT OUT &lt;{facepalm}&gt;<br>\nThe crucial part is: Dear oerthinking developer (that's me ) Please do change \"serverUrl\" to the domain you are actually deploying to.</p>\n<p dir=\"auto\">This was like very disutrbing for me: I assumed that since we have the installation working via nginx, and since we do need to have it hosted both locally and on production, the idea to hardcode this \"<a href=\"http://localhost:3000\" rel=\"nofollow\">http://localhost:3000</a>\" to the config is ok, and the actual switching of the final url is happening on nginx level. Turns out I was very wrong. I was looking on those simple http requests on console, and the first was always to the domain, and the rest - admin api calls - were to the localhost.</p>\n<p dir=\"auto\">It works fine now.<br>\nthanks!</p>",
      "createdAt": "2022-03-12T14:47:17Z",
      "chosenAt": "2022-03-12T15:40:01Z",
      "chosenBy": "denolfe",
      "replies": [
        {
          "author": {
            "name": "denolfe",
            "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
            "url": "https://github.com/denolfe"
          },
          "body": "<p dir=\"auto\">Awesome, glad you were able to figure it out! <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
          "createdAt": "2022-03-12T15:39:58Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/quornik/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/quornik\">@quornik</a> thanks for the update details for others to see.<br>\nAn interesting note, currently in beta the <code class=\"notranslate\">serverURL</code> is not required, Payload will start without it and use relative paths for all admin UI API calls. The serverURL will be optional in the next 0.15.x release.</p>\n<p dir=\"auto\">Cheers!</p>",
          "createdAt": "2022-03-12T15:41:38Z"
        }
      ]
    }
  },
  {
    "title": "Auto-Populate Fields",
    "body": "<p dir=\"auto\">I am currently building a personal blog using Payload and, honestly, it's been an enjoyable process. The config structure is clean and easily understandable, and the documentation is fantastic.</p>\n<p dir=\"auto\">However, I can't seem to find any documentation on how I should go about creating fields that can be generated through JavaScript. I have created a custom field to serve as the URL slug of a post, currently its used by manually typing out the title of the post in a URL safe format in the custom field. Though ideally it would use JavaScript to analyse the title and convert it to a URL safe string, auto-populating the slug and displaying it in the admin UI in a disabled text field.</p>\n<p dir=\"auto\">So basically my question is how to set the value of a field in JavaScript based on the value of another field?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/471",
    "id": "471",
    "createdAt": "2022-03-08T21:55:29Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "peniswafflexd",
      "avatar": "https://avatars.githubusercontent.com/u/28529309?v=4",
      "url": "https://github.com/peniswafflexd"
    },
    "comments": [
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/peniswafflexd/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/peniswafflexd\">@peniswafflexd</a></p>\n<p dir=\"auto\">Glad to hear of your successes so far. Fortunately, what you describe is a common feature and pretty simple to setup. Since you already have a <a href=\"https://payloadcms.com/docs/admin/components#fields\" rel=\"nofollow\">custom field</a>, you're half way there.</p>\n<p dir=\"auto\">To read the current value of another field in your document, use the <code class=\"notranslate\">getDataByPath</code> method from the <code class=\"notranslate\">useWatchForm</code> hook. Just send it the name of the field your are looking for. In your case, this is probably <code class=\"notranslate\">title</code>. Now you can format the href using this value, and render an anchor tag on the page.</p>\n<p dir=\"auto\">To go the extra mile, you can also import Payload's <code class=\"notranslate\">CopyToClipboard</code> component and enhance the user experience.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import React from 'react';\nimport { useWatchForm } from 'payload/components/forms';\nimport CopyToClipboard from 'payload/dist/admin/components/elements/CopyToClipboard';\nimport { UIField } from 'payload/dist/fields/config/types';\n\nexport const AppUrlField: React.FC&lt;UIField&gt; = () =&gt; {\n  const { getDataByPath } = useWatchForm();\n  const title = getDataByPath('title');\n  const kebabTitle = title; // convert your title to a kebab-case string here, there are many ways to do this\n  const href = `https://yourapp.com/${kebabTitle}`; // swap in your own top-level domain here\n\n  return (\n    &lt;div&gt;\n      &lt;div&gt;\n        &lt;span&gt;\n          APP URL\n        &lt;/span&gt;\n        &lt;CopyToClipboard value={href} /&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;a\n          href={href}\n          target=&quot;_blank&quot;\n          rel=&quot;noopener noreferrer&quot;\n        &gt;\n          {href}\n        &lt;/a&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-v\">React</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">useWatchForm</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/forms'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">CopyToClipboard</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/dist/admin/components/elements/CopyToClipboard'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">UIField</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/dist/fields/config/types'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-v\">AppUrlField</span>: <span class=\"pl-v\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">FC</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-v\">UIField</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> getDataByPath <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useWatchForm</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">title</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">getDataByPath</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'title'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">kebabTitle</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">title</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// convert your title to a kebab-case string here, there are many ways to do this</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">href</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">`https://yourapp.com/<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">kebabTitle</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// swap in your own top-level domain here</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">span</span><span class=\"pl-c1\">&gt;</span>\n          APP URL\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">span</span><span class=\"pl-c1\">&gt;</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">CopyToClipboard</span> <span class=\"pl-c1\">value</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">href</span><span class=\"pl-kos\">}</span> <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">a</span>\n          <span class=\"pl-c1\">href</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">href</span><span class=\"pl-kos\">}</span>\n          <span class=\"pl-c1\">target</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"_blank\"</span>\n          <span class=\"pl-c1\">rel</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"noopener noreferrer\"</span>\n        <span class=\"pl-c1\">&gt;</span>\n          <span class=\"pl-kos\">{</span><span class=\"pl-s1\">href</span><span class=\"pl-kos\">}</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">a</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n  <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>",
        "createdAt": "2022-03-08T23:02:44Z",
        "replies": [
          {
            "author": {
              "name": "peniswafflexd",
              "avatar": "https://avatars.githubusercontent.com/u/28529309?v=4",
              "url": "https://github.com/peniswafflexd"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a> ahh this is very helpful but not particularly what I was looking for, this will display exactly what I want in the admin UI, however, this won't actually change the value of the field in the database will it?</p>\n<p dir=\"auto\">I need the 'kebab-title' to accessible via the API, and this seems to only change it on the front end and not store it? Am I correct or am I misinterpreting how this works?</p>\n<p dir=\"auto\">Thanks for the quick reply!</p>",
            "createdAt": "2022-03-08T23:24:04Z"
          },
          {
            "author": {
              "name": "jacobsfletch",
              "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
              "url": "https://github.com/jacobsfletch"
            },
            "body": "<p dir=\"auto\">Yep that makes perfect sense.</p>\n<p dir=\"auto\">For that you'll want to render a custom <code class=\"notranslate\">text</code> field (as opposed to a <code class=\"notranslate\">ui</code> field illustrated above). To do this, you can leverage the  <code class=\"notranslate\">setValue</code> method from the <code class=\"notranslate\">useField</code> hook to update the value of the field every time the title changes. We'll still use the <code class=\"notranslate\">useWatchForm</code> hook to keep up-to-date with the current document.</p>\n<p dir=\"auto\">Then to go the extra mile again, we can also render Payload's text input with current value, so that the UI stays consistent with other fields in the admin panel.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import React, { useEffect } from 'react';\nimport { Props as TextFieldType } from 'payload/dist/admin/components/forms/field-types/Text/types';\nimport TextInputField from 'payload/dist/admin/components/forms/field-types/Text/Input';\nimport { useField, useWatchForm } from 'payload/components/forms';\nimport { FieldType as FieldType, Options } from 'payload/dist/admin/components/forms/useField/types';\n\nexport const AppURL: React.FC&lt;TextFieldType &amp; {\n  path: string\n}&gt; = (props) =&gt; {\n  const {\n    label,\n    name,\n    path,\n  } = props;\n\n  const field: FieldType&lt;string&gt; = useField({\n    label,\n    name,\n    path\n  } as Options);\n\n  const { fields } = useWatchForm();\n\n  const {\n    value,\n    setValue,\n    showError\n  } = field;\n\n  useEffect(() =&gt; {\n    const { title: { value: title } } = fields;\n    const kebabTitle = title; // convert your title to a kebab-case string here, there are many ways to do this\n    const newHref = `https://yourapp.com/${kebabTitle}`;\n    setValue(newHref);\n  }, [\n    fields,\n    setValue,\n  ]);\n\n  return (\n    &lt;TextInputField\n      path={name}\n      name={name}\n      onChange={setValue}\n      value={value}\n      showError={showError}\n      style={{\n        marginBottom: 0\n      }}\n    /&gt;\n  );\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-v\">React</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">useEffect</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">Props</span> <span class=\"pl-k\">as</span> <span class=\"pl-v\">TextFieldType</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/dist/admin/components/forms/field-types/Text/types'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">TextInputField</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/dist/admin/components/forms/field-types/Text/Input'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">useField</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">useWatchForm</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/forms'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">FieldType</span> <span class=\"pl-k\">as</span> <span class=\"pl-v\">FieldType</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Options</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/dist/admin/components/forms/useField/types'</span><span class=\"pl-kos\">;</span>\n\nexport <span class=\"pl-k\">const</span> <span class=\"pl-v\">AppURL</span>: <span class=\"pl-v\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">FC</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-v\">TextFieldType</span> <span class=\"pl-c1\">&amp;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">path</span>: <span class=\"pl-s1\">string</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">props</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span>\n    label<span class=\"pl-kos\">,</span>\n    name<span class=\"pl-kos\">,</span>\n    path<span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">props</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">field</span>: <span class=\"pl-v\">FieldType</span><span class=\"pl-kos\"></span><span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">string</span><span class=\"pl-c1\">&gt;</span> = useField(<span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">label</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">name</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">path</span>\n  <span class=\"pl-kos\">}</span> as Options);\n\n  const <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">fields</span> <span class=\"pl-kos\">}</span> = useWatchForm();\n\n  const <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">value</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">setValue</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">showError</span>\n  <span class=\"pl-kos\">}</span> = field;\n\n  useEffect(() =<span class=\"pl-c1\">&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">const</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">title</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">value</span>: <span class=\"pl-s1\">title</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">fields</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">kebabTitle</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">title</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// convert your title to a kebab-case string here, there are many ways to do this</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">newHref</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">`https://yourapp.com/<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">kebabTitle</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-en\">setValue</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">newHref</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>, [\n    fields,\n    setValue,\n  ]);\n\n  return (\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">TextInputField</span>\n      <span class=\"pl-c1\">path</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">name</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">name</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">name</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">onChange</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">setValue</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">value</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">showError</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">showError</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">style</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">marginBottom</span>: <span class=\"pl-c1\">0</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span>\n    <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n  );\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>",
            "createdAt": "2022-03-08T23:54:27Z"
          },
          {
            "author": {
              "name": "peniswafflexd",
              "avatar": "https://avatars.githubusercontent.com/u/28529309?v=4",
              "url": "https://github.com/peniswafflexd"
            },
            "body": "<p dir=\"auto\">Thats it! Thanks so much!<br>\nI didn't notice any react hooks in the documentation on the site, is this documentation available somewhere?</p>\n<p dir=\"auto\">Also I don't know how to mark your comment as the answer</p>",
            "createdAt": "2022-03-09T03:30:16Z"
          },
          {
            "author": {
              "name": "jacobsfletch",
              "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
              "url": "https://github.com/jacobsfletch"
            },
            "body": "<p dir=\"auto\">No problem! Documentation is in progress.</p>",
            "createdAt": "2022-03-09T13:57:21Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/peniswafflexd/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/peniswafflexd\">@peniswafflexd</a></p>\n<p dir=\"auto\">Glad to hear of your successes so far. Fortunately, what you describe is a common feature and pretty simple to setup. Since you already have a <a href=\"https://payloadcms.com/docs/admin/components#fields\" rel=\"nofollow\">custom field</a>, you're half way there.</p>\n<p dir=\"auto\">To read the current value of another field in your document, use the <code class=\"notranslate\">getDataByPath</code> method from the <code class=\"notranslate\">useWatchForm</code> hook. Just send it the name of the field your are looking for. In your case, this is probably <code class=\"notranslate\">title</code>. Now you can format the href using this value, and render an anchor tag on the page.</p>\n<p dir=\"auto\">To go the extra mile, you can also import Payload's <code class=\"notranslate\">CopyToClipboard</code> component and enhance the user experience.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import React from 'react';\nimport { useWatchForm } from 'payload/components/forms';\nimport CopyToClipboard from 'payload/dist/admin/components/elements/CopyToClipboard';\nimport { UIField } from 'payload/dist/fields/config/types';\n\nexport const AppUrlField: React.FC&lt;UIField&gt; = () =&gt; {\n  const { getDataByPath } = useWatchForm();\n  const title = getDataByPath('title');\n  const kebabTitle = title; // convert your title to a kebab-case string here, there are many ways to do this\n  const href = `https://yourapp.com/${kebabTitle}`; // swap in your own top-level domain here\n\n  return (\n    &lt;div&gt;\n      &lt;div&gt;\n        &lt;span&gt;\n          APP URL\n        &lt;/span&gt;\n        &lt;CopyToClipboard value={href} /&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;a\n          href={href}\n          target=&quot;_blank&quot;\n          rel=&quot;noopener noreferrer&quot;\n        &gt;\n          {href}\n        &lt;/a&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-v\">React</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">useWatchForm</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/forms'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">CopyToClipboard</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/dist/admin/components/elements/CopyToClipboard'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">UIField</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/dist/fields/config/types'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-v\">AppUrlField</span>: <span class=\"pl-v\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">FC</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-v\">UIField</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> getDataByPath <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useWatchForm</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">title</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">getDataByPath</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'title'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">kebabTitle</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">title</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// convert your title to a kebab-case string here, there are many ways to do this</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">href</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">`https://yourapp.com/<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">kebabTitle</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// swap in your own top-level domain here</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">span</span><span class=\"pl-c1\">&gt;</span>\n          APP URL\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">span</span><span class=\"pl-c1\">&gt;</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">CopyToClipboard</span> <span class=\"pl-c1\">value</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">href</span><span class=\"pl-kos\">}</span> <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">a</span>\n          <span class=\"pl-c1\">href</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">href</span><span class=\"pl-kos\">}</span>\n          <span class=\"pl-c1\">target</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"_blank\"</span>\n          <span class=\"pl-c1\">rel</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"noopener noreferrer\"</span>\n        <span class=\"pl-c1\">&gt;</span>\n          <span class=\"pl-kos\">{</span><span class=\"pl-s1\">href</span><span class=\"pl-kos\">}</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">a</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n  <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>",
      "createdAt": "2022-03-08T23:02:44Z",
      "chosenAt": "2022-03-09T13:57:29Z",
      "chosenBy": "jacobsfletch",
      "replies": [
        {
          "author": {
            "name": "peniswafflexd",
            "avatar": "https://avatars.githubusercontent.com/u/28529309?v=4",
            "url": "https://github.com/peniswafflexd"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a> ahh this is very helpful but not particularly what I was looking for, this will display exactly what I want in the admin UI, however, this won't actually change the value of the field in the database will it?</p>\n<p dir=\"auto\">I need the 'kebab-title' to accessible via the API, and this seems to only change it on the front end and not store it? Am I correct or am I misinterpreting how this works?</p>\n<p dir=\"auto\">Thanks for the quick reply!</p>",
          "createdAt": "2022-03-08T23:24:04Z"
        },
        {
          "author": {
            "name": "jacobsfletch",
            "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
            "url": "https://github.com/jacobsfletch"
          },
          "body": "<p dir=\"auto\">Yep that makes perfect sense.</p>\n<p dir=\"auto\">For that you'll want to render a custom <code class=\"notranslate\">text</code> field (as opposed to a <code class=\"notranslate\">ui</code> field illustrated above). To do this, you can leverage the  <code class=\"notranslate\">setValue</code> method from the <code class=\"notranslate\">useField</code> hook to update the value of the field every time the title changes. We'll still use the <code class=\"notranslate\">useWatchForm</code> hook to keep up-to-date with the current document.</p>\n<p dir=\"auto\">Then to go the extra mile again, we can also render Payload's text input with current value, so that the UI stays consistent with other fields in the admin panel.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import React, { useEffect } from 'react';\nimport { Props as TextFieldType } from 'payload/dist/admin/components/forms/field-types/Text/types';\nimport TextInputField from 'payload/dist/admin/components/forms/field-types/Text/Input';\nimport { useField, useWatchForm } from 'payload/components/forms';\nimport { FieldType as FieldType, Options } from 'payload/dist/admin/components/forms/useField/types';\n\nexport const AppURL: React.FC&lt;TextFieldType &amp; {\n  path: string\n}&gt; = (props) =&gt; {\n  const {\n    label,\n    name,\n    path,\n  } = props;\n\n  const field: FieldType&lt;string&gt; = useField({\n    label,\n    name,\n    path\n  } as Options);\n\n  const { fields } = useWatchForm();\n\n  const {\n    value,\n    setValue,\n    showError\n  } = field;\n\n  useEffect(() =&gt; {\n    const { title: { value: title } } = fields;\n    const kebabTitle = title; // convert your title to a kebab-case string here, there are many ways to do this\n    const newHref = `https://yourapp.com/${kebabTitle}`;\n    setValue(newHref);\n  }, [\n    fields,\n    setValue,\n  ]);\n\n  return (\n    &lt;TextInputField\n      path={name}\n      name={name}\n      onChange={setValue}\n      value={value}\n      showError={showError}\n      style={{\n        marginBottom: 0\n      }}\n    /&gt;\n  );\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-v\">React</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">useEffect</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">Props</span> <span class=\"pl-k\">as</span> <span class=\"pl-v\">TextFieldType</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/dist/admin/components/forms/field-types/Text/types'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">TextInputField</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/dist/admin/components/forms/field-types/Text/Input'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">useField</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">useWatchForm</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/forms'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">FieldType</span> <span class=\"pl-k\">as</span> <span class=\"pl-v\">FieldType</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Options</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/dist/admin/components/forms/useField/types'</span><span class=\"pl-kos\">;</span>\n\nexport <span class=\"pl-k\">const</span> <span class=\"pl-v\">AppURL</span>: <span class=\"pl-v\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">FC</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-v\">TextFieldType</span> <span class=\"pl-c1\">&amp;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">path</span>: <span class=\"pl-s1\">string</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">props</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span>\n    label<span class=\"pl-kos\">,</span>\n    name<span class=\"pl-kos\">,</span>\n    path<span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">props</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">field</span>: <span class=\"pl-v\">FieldType</span><span class=\"pl-kos\"></span><span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">string</span><span class=\"pl-c1\">&gt;</span> = useField(<span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">label</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">name</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">path</span>\n  <span class=\"pl-kos\">}</span> as Options);\n\n  const <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">fields</span> <span class=\"pl-kos\">}</span> = useWatchForm();\n\n  const <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">value</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">setValue</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">showError</span>\n  <span class=\"pl-kos\">}</span> = field;\n\n  useEffect(() =<span class=\"pl-c1\">&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">const</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">title</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">value</span>: <span class=\"pl-s1\">title</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">fields</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">kebabTitle</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">title</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// convert your title to a kebab-case string here, there are many ways to do this</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">newHref</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">`https://yourapp.com/<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">kebabTitle</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-en\">setValue</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">newHref</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>, [\n    fields,\n    setValue,\n  ]);\n\n  return (\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">TextInputField</span>\n      <span class=\"pl-c1\">path</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">name</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">name</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">name</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">onChange</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">setValue</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">value</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">showError</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">showError</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">style</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">marginBottom</span>: <span class=\"pl-c1\">0</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span>\n    <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n  );\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>",
          "createdAt": "2022-03-08T23:54:27Z"
        },
        {
          "author": {
            "name": "peniswafflexd",
            "avatar": "https://avatars.githubusercontent.com/u/28529309?v=4",
            "url": "https://github.com/peniswafflexd"
          },
          "body": "<p dir=\"auto\">Thats it! Thanks so much!<br>\nI didn't notice any react hooks in the documentation on the site, is this documentation available somewhere?</p>\n<p dir=\"auto\">Also I don't know how to mark your comment as the answer</p>",
          "createdAt": "2022-03-09T03:30:16Z"
        },
        {
          "author": {
            "name": "jacobsfletch",
            "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
            "url": "https://github.com/jacobsfletch"
          },
          "body": "<p dir=\"auto\">No problem! Documentation is in progress.</p>",
          "createdAt": "2022-03-09T13:57:21Z"
        }
      ]
    }
  },
  {
    "title": "Access based on originalDoc data",
    "body": "<p dir=\"auto\">I'm in need of access control (per field and per collection) that is based on the <strong>collection item's originalDoc</strong>.<br>\nI have a collection <code class=\"notranslate\">Posts</code> where any logged in user can <code class=\"notranslate\">create</code> a <code class=\"notranslate\">Post</code>. However <code class=\"notranslate\">User</code> should be able to <code class=\"notranslate\">read</code>, <code class=\"notranslate\">update</code> and <code class=\"notranslate\">delete</code> only his own <code class=\"notranslate\">Post</code>.<br>\nThere should be also possible to restrict certain fields that would be editable only by system or admins, not Users.<br>\nI have implemented a relationship field <code class=\"notranslate\">owner</code>, relatedTo Users. I used <code class=\"notranslate\">afterChange (operation===create)</code> on Post to fill the value automatically by the system.</p>\n<p dir=\"auto\">Now I need to write an access functions that will resolve true only if user.id === doc.owner. I stuck here as access functions don't pass doc data.<br>\nI tried to leverage different hooks but it feels hacky and I got inconsistent or weird results.<br>\nWith read op for example filtering out not-owned items in <code class=\"notranslate\">Posts</code> with beforeRead query returns totalDocs of all Posts in the system and lists all posts, just those not-owned are <code class=\"notranslate\">null</code>.</p>\n<p dir=\"auto\">With update op I didn't even find a combination of hooks that would make such access control possible (even if there is any it feels like wrong unmaintainable approach).</p>\n<p dir=\"auto\">I understand that current access implementation is only for controlling access in whole collection based on user and input data. Any suggestions how to go about this? If this is not currently possible, would it make sense to introduce such features?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/470",
    "id": "470",
    "createdAt": "2022-03-07T10:49:34Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "chladog",
      "avatar": "https://avatars.githubusercontent.com/u/15977485?u=800744af7926cc837c5bb8b62e8be01635e035b0&v=4",
      "url": "https://github.com/chladog"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/chladog/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/chladog\">@chladog</a> — question for you.</p>\n<p dir=\"auto\">When you say:</p>\n<blockquote>\n<p dir=\"auto\">Now I need to write an access functions that will resolve true only if user.id === doc.owner. I stuck here as access functions don't pass doc data.</p>\n</blockquote>\n<p dir=\"auto\">Do you want to use <em><strong>field</strong></em> hooks, or collection-level hooks here?</p>\n<p dir=\"auto\">If collection level, this is actually super easy. In access control, you can return a <a href=\"https://payloadcms.com/docs/queries/overview\" rel=\"nofollow\"><code class=\"notranslate\">query constraint</code></a> to restrict which documents that a user can perform actions against.</p>\n<p dir=\"auto\">Here's an example of how we would normally do something like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const adminOwnerAccess = ({ req: { user } }) =&gt; {\n  // If user is admin, return true\n  if (user &amp;&amp; user.roles.includes('admin')) {\n    return true;\n  }\n\n  // If there is a user, return a query constraint\n  // that only allows users to perform actions against\n  // documents where the owner is equal to their user ID\n  if (user) {\n    return {\n      owner: {\n        equals: user.id,\n      },\n    };\n  }\n\n  // If neither of the above conditions are met,\n  // Block access\n  return false;\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">adminOwnerAccess</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">req</span>: <span class=\"pl-kos\">{</span> user <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// If user is admin, return true</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">roles</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">includes</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'admin'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-c\">// If there is a user, return a query constraint</span>\n  <span class=\"pl-c\">// that only allows users to perform actions against</span>\n  <span class=\"pl-c\">// documents where the owner is equal to their user ID</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">owner</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">equals</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-c\">// If neither of the above conditions are met,</span>\n  <span class=\"pl-c\">// Block access</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Is this what you need? Note, we might need to expand on our docs if you didn't see that this is possible via documentation. It's one of the strongest features of our access control!</p>",
        "createdAt": "2022-03-07T14:16:16Z",
        "replies": [
          {
            "author": {
              "name": "chladog",
              "avatar": "https://avatars.githubusercontent.com/u/15977485?u=800744af7926cc837c5bb8b62e8be01635e035b0&v=4",
              "url": "https://github.com/chladog"
            },
            "body": "<p dir=\"auto\">oh, right! I even had it implemented similiary in other collection already <em>facepalm</em>.</p>\n<p dir=\"auto\">Though how to implement same logic with FieldAccess?<br>\nMy collection has following structure:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\nowner: User\neditors: User[],\nsomeData: {\n     ...\n}\"><pre class=\"notranslate\"><span class=\"pl-kos\">{</span>\nowner: <span class=\"pl-v\">User</span>\neditors: <span class=\"pl-v\">User</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\"></span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">someData</span>: <span class=\"pl-kos\">{</span>\n     ...\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\"></span></pre></div>\n<p dir=\"auto\">Required behavior is that User who is an Owner or one of the Editors can update the document (solved already by query constraint).<br>\nBut only Owner can change Owner and Editors field.<br>\nEditor can change everything except Owner and Editors.</p>",
            "createdAt": "2022-03-07T15:22:44Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">OK I just released <code class=\"notranslate\">payload@0.14.30-beta.0</code> which now includes <code class=\"notranslate\">doc</code> in the field access function arguments for both <code class=\"notranslate\">read</code> and <code class=\"notranslate\">update</code> operations.</p>\n<p dir=\"auto\">You can read whatever you want off that original doc. But note that the <code class=\"notranslate\">doc</code> is only available in <code class=\"notranslate\">read</code> and <code class=\"notranslate\">update</code> operations, as there will be no <code class=\"notranslate\">doc</code> in <code class=\"notranslate\">create</code>. There, you'll need to check the incoming <code class=\"notranslate\">data</code> property due to the document just recently having been created.</p>\n<p dir=\"auto\">How's that? Give it a shot!</p>",
            "createdAt": "2022-03-07T15:56:26Z"
          },
          {
            "author": {
              "name": "chladog",
              "avatar": "https://avatars.githubusercontent.com/u/15977485?u=800744af7926cc837c5bb8b62e8be01635e035b0&v=4",
              "url": "https://github.com/chladog"
            },
            "body": "<p dir=\"auto\">Working like a charm. Perfect, thank you!</p>",
            "createdAt": "2022-03-07T16:29:24Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/chladog/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/chladog\">@chladog</a> — question for you.</p>\n<p dir=\"auto\">When you say:</p>\n<blockquote>\n<p dir=\"auto\">Now I need to write an access functions that will resolve true only if user.id === doc.owner. I stuck here as access functions don't pass doc data.</p>\n</blockquote>\n<p dir=\"auto\">Do you want to use <em><strong>field</strong></em> hooks, or collection-level hooks here?</p>\n<p dir=\"auto\">If collection level, this is actually super easy. In access control, you can return a <a href=\"https://payloadcms.com/docs/queries/overview\" rel=\"nofollow\"><code class=\"notranslate\">query constraint</code></a> to restrict which documents that a user can perform actions against.</p>\n<p dir=\"auto\">Here's an example of how we would normally do something like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const adminOwnerAccess = ({ req: { user } }) =&gt; {\n  // If user is admin, return true\n  if (user &amp;&amp; user.roles.includes('admin')) {\n    return true;\n  }\n\n  // If there is a user, return a query constraint\n  // that only allows users to perform actions against\n  // documents where the owner is equal to their user ID\n  if (user) {\n    return {\n      owner: {\n        equals: user.id,\n      },\n    };\n  }\n\n  // If neither of the above conditions are met,\n  // Block access\n  return false;\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">adminOwnerAccess</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">req</span>: <span class=\"pl-kos\">{</span> user <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// If user is admin, return true</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">roles</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">includes</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'admin'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-c\">// If there is a user, return a query constraint</span>\n  <span class=\"pl-c\">// that only allows users to perform actions against</span>\n  <span class=\"pl-c\">// documents where the owner is equal to their user ID</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">owner</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">equals</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-c\">// If neither of the above conditions are met,</span>\n  <span class=\"pl-c\">// Block access</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Is this what you need? Note, we might need to expand on our docs if you didn't see that this is possible via documentation. It's one of the strongest features of our access control!</p>",
      "createdAt": "2022-03-07T14:16:16Z",
      "chosenAt": "2022-03-07T16:29:53Z",
      "chosenBy": "chladog",
      "replies": [
        {
          "author": {
            "name": "chladog",
            "avatar": "https://avatars.githubusercontent.com/u/15977485?u=800744af7926cc837c5bb8b62e8be01635e035b0&v=4",
            "url": "https://github.com/chladog"
          },
          "body": "<p dir=\"auto\">oh, right! I even had it implemented similiary in other collection already <em>facepalm</em>.</p>\n<p dir=\"auto\">Though how to implement same logic with FieldAccess?<br>\nMy collection has following structure:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\nowner: User\neditors: User[],\nsomeData: {\n     ...\n}\"><pre class=\"notranslate\"><span class=\"pl-kos\">{</span>\nowner: <span class=\"pl-v\">User</span>\neditors: <span class=\"pl-v\">User</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\"></span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-s1\">someData</span>: <span class=\"pl-kos\">{</span>\n     ...\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\"></span></pre></div>\n<p dir=\"auto\">Required behavior is that User who is an Owner or one of the Editors can update the document (solved already by query constraint).<br>\nBut only Owner can change Owner and Editors field.<br>\nEditor can change everything except Owner and Editors.</p>",
          "createdAt": "2022-03-07T15:22:44Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">OK I just released <code class=\"notranslate\">payload@0.14.30-beta.0</code> which now includes <code class=\"notranslate\">doc</code> in the field access function arguments for both <code class=\"notranslate\">read</code> and <code class=\"notranslate\">update</code> operations.</p>\n<p dir=\"auto\">You can read whatever you want off that original doc. But note that the <code class=\"notranslate\">doc</code> is only available in <code class=\"notranslate\">read</code> and <code class=\"notranslate\">update</code> operations, as there will be no <code class=\"notranslate\">doc</code> in <code class=\"notranslate\">create</code>. There, you'll need to check the incoming <code class=\"notranslate\">data</code> property due to the document just recently having been created.</p>\n<p dir=\"auto\">How's that? Give it a shot!</p>",
          "createdAt": "2022-03-07T15:56:26Z"
        },
        {
          "author": {
            "name": "chladog",
            "avatar": "https://avatars.githubusercontent.com/u/15977485?u=800744af7926cc837c5bb8b62e8be01635e035b0&v=4",
            "url": "https://github.com/chladog"
          },
          "body": "<p dir=\"auto\">Working like a charm. Perfect, thank you!</p>",
          "createdAt": "2022-03-07T16:29:24Z"
        }
      ]
    }
  },
  {
    "title": "GraphQL access control is denying access to a `relationTo` upload collection",
    "body": "<p dir=\"auto\">Access control is denying a logged-in user to read from an upload collection and I'm not sure why.. I can read from the upload collection just fine when I access it directly:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"query {\n  CloudinaryImages {\n    docs {\n      altText\n    }\n  }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">query {\n  CloudinaryImages {\n    docs {\n      altText\n    }\n  }\n}\n</code></pre></div>\n<p dir=\"auto\">But not when it is being referenced from a nested field:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"query {\n  allWork {\n    docs {\n      thumbnail { # Will be `null` and say &quot;You are not allowed to perform this action.&quot; \n        altText\n      }\n    }\n  }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">query {\n  allWork {\n    docs {\n      thumbnail { # Will be `null` and say \"You are not allowed to perform this action.\" \n        altText\n      }\n    }\n  }\n}\n</code></pre></div>\n<p dir=\"auto\">My CloudinaryImage collection looks like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const CloudinaryImage: CollectionConfig = {\n  slug: 'cloudinary-image',\n  admin: {\n    disableDuplicate: true,\n    useAsTitle: 'altText',\n  },\n  upload: {\n    disableLocalStorage: true,\n    adminThumbnail: ({doc}) =&gt; String(doc.cloudinaryURL),\n  },\n  fields: [\n    {\n      name: 'altText',\n      label: 'Alt Text',\n      type: 'text',\n      required: true,\n    },\n    {\n      name: 'cloudPublicId',\n      type: 'text',\n      admin: {\n        position: 'sidebar',\n        condition: ({cloudPublicId}) =&gt; !isNullOrEmpty(cloudPublicId),\n        readOnly: true,\n      },\n    },\n    {\n      name: 'cloudinaryURL',\n      type: 'text',\n      admin: {\n        position: 'sidebar',\n        readOnly: true,\n        condition: ({cloudinaryURL}) =&gt; !isNullOrEmpty(cloudinaryURL),\n      },\n    },\n  ],\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">const CloudinaryImage: CollectionConfig = {\n  slug: 'cloudinary-image',\n  admin: {\n    disableDuplicate: true,\n    useAsTitle: 'altText',\n  },\n  upload: {\n    disableLocalStorage: true,\n    adminThumbnail: ({doc}) =&gt; String(doc.cloudinaryURL),\n  },\n  fields: [\n    {\n      name: 'altText',\n      label: 'Alt Text',\n      type: 'text',\n      required: true,\n    },\n    {\n      name: 'cloudPublicId',\n      type: 'text',\n      admin: {\n        position: 'sidebar',\n        condition: ({cloudPublicId}) =&gt; !isNullOrEmpty(cloudPublicId),\n        readOnly: true,\n      },\n    },\n    {\n      name: 'cloudinaryURL',\n      type: 'text',\n      admin: {\n        position: 'sidebar',\n        readOnly: true,\n        condition: ({cloudinaryURL}) =&gt; !isNullOrEmpty(cloudinaryURL),\n      },\n    },\n  ],\n}\n</code></pre></div>\n<p dir=\"auto\">and the (partial) Work collection looks like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const Work: CollectionConfig = {\n  slug: 'work',\n  labels: {\n    singular: 'Work',\n    plural: 'Work',\n  },\n  admin: {\n    description: 'Client projects',\n  },\n  fields: [\n    [...]\n    {\n      name: 'thumbnail',\n      label: 'Thumbnail',\n      type: 'upload',\n      relationTo: 'cloudinary-image',\n      required: true,\n    },\n    [...]\n  ],\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">const Work: CollectionConfig = {\n  slug: 'work',\n  labels: {\n    singular: 'Work',\n    plural: 'Work',\n  },\n  admin: {\n    description: 'Client projects',\n  },\n  fields: [\n    [...]\n    {\n      name: 'thumbnail',\n      label: 'Thumbnail',\n      type: 'upload',\n      relationTo: 'cloudinary-image',\n      required: true,\n    },\n    [...]\n  ],\n}\n</code></pre></div>\n<p dir=\"auto\">I did at one point add <code class=\"notranslate\">useAPIKey</code> to the Work collection and created an API key, but then decided I'd prefer to have a separate user for my client to use, and have since removed that flag again.</p>\n<p dir=\"auto\">If I add <code class=\"notranslate\">access: { read: () =&gt; true}</code> to the CloudinaryImage collection, all fields do come through.</p>\n<p dir=\"auto\">I'm usually pretty good at figuring stuff out, but this one has got me stumped <g-emoji class=\"g-emoji\" alias=\"sweat_smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f605.png\">😅</g-emoji></p>",
    "url": "https://github.com/payloadcms/payload/discussions/464",
    "id": "464",
    "createdAt": "2022-02-23T21:10:18Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "flovan",
      "avatar": "https://avatars.githubusercontent.com/u/1419500?u=cb29c6656c50a083e379a09a643756ce8b26e417&v=4",
      "url": "https://github.com/flovan"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/flovan/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/flovan\">@flovan</a> — great find.</p>\n<p dir=\"auto\">This was a bug! No wonder it stumped you! Great detective work though and thanks for the thorough writeup.</p>\n<p dir=\"auto\">Just deployed a beta of Payload including a fix <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"payload@0.14.28-beta.0\"><pre class=\"notranslate\"><code class=\"notranslate\">payload@0.14.28-beta.0\n</code></pre></div>\n<p dir=\"auto\">Give it a shot!</p>",
        "createdAt": "2022-03-02T00:46:08Z",
        "replies": [
          {
            "author": {
              "name": "flovan",
              "avatar": "https://avatars.githubusercontent.com/u/1419500?u=cb29c6656c50a083e379a09a643756ce8b26e417&v=4",
              "url": "https://github.com/flovan"
            },
            "body": "<p dir=\"auto\">This release does indeed fix my issue! Thanks for the <em>very</em> quick fix <g-emoji class=\"g-emoji\" alias=\"star_struck\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f929.png\">🤩</g-emoji></p>",
            "createdAt": "2022-03-02T11:41:26Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/flovan/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/flovan\">@flovan</a> — great find.</p>\n<p dir=\"auto\">This was a bug! No wonder it stumped you! Great detective work though and thanks for the thorough writeup.</p>\n<p dir=\"auto\">Just deployed a beta of Payload including a fix <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"payload@0.14.28-beta.0\"><pre class=\"notranslate\"><code class=\"notranslate\">payload@0.14.28-beta.0\n</code></pre></div>\n<p dir=\"auto\">Give it a shot!</p>",
      "createdAt": "2022-03-02T00:46:08Z",
      "chosenAt": "2022-03-02T11:40:50Z",
      "chosenBy": "flovan",
      "replies": [
        {
          "author": {
            "name": "flovan",
            "avatar": "https://avatars.githubusercontent.com/u/1419500?u=cb29c6656c50a083e379a09a643756ce8b26e417&v=4",
            "url": "https://github.com/flovan"
          },
          "body": "<p dir=\"auto\">This release does indeed fix my issue! Thanks for the <em>very</em> quick fix <g-emoji class=\"g-emoji\" alias=\"star_struck\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f929.png\">🤩</g-emoji></p>",
          "createdAt": "2022-03-02T11:41:26Z"
        }
      ]
    }
  },
  {
    "title": "How to change default logo??",
    "body": "<p dir=\"auto\">How to change default logo in navbar without add any custom navbar???</p>",
    "url": "https://github.com/payloadcms/payload/discussions/277",
    "id": "277",
    "createdAt": "2021-08-10T08:15:28Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "moshiuzzaman",
      "avatar": "https://avatars.githubusercontent.com/u/45089799?u=064fc408399f494533a44b53df77ba484fc7fe35&v=4",
      "url": "https://github.com/moshiuzzaman"
    },
    "comments": [
      {
        "author": {
          "name": "richardvanbergen",
          "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
          "url": "https://github.com/richardvanbergen"
        },
        "body": "<p dir=\"auto\">See <code class=\"notranslate\">graphics.Icon</code> and <code class=\"notranslate\">graphics.Logo</code> here: <a href=\"https://payloadcms.com/docs/admin/component\" rel=\"nofollow\">https://payloadcms.com/docs/admin/component</a>. They have their own key so you don't have to swap out the full nav <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
        "createdAt": "2021-08-10T10:45:16Z",
        "replies": [
          {
            "author": {
              "name": "shaneheyworth",
              "avatar": "https://avatars.githubusercontent.com/u/16281266?v=4",
              "url": "https://github.com/shaneheyworth"
            },
            "body": "<p dir=\"auto\">Hi there, this link is broken; I tried following what you guys did in your example as per the docs (but the example wasn't for logos) and it just loads a blank page. Can this be re-hashed?</p>",
            "createdAt": "2022-02-13T00:50:06Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Here is the correct link: <a href=\"https://payloadcms.com/docs/admin/components\" rel=\"nofollow\">https://payloadcms.com/docs/admin/components</a></p>\n<p dir=\"auto\">Also we have a blog post about this too.<br>\n<a href=\"https://payloadcms.com/blog/white-label-admin-ui\" rel=\"nofollow\">https://payloadcms.com/blog/white-label-admin-ui</a></p>\n<p dir=\"auto\">Let us know if you have trouble or need anything else.</p>",
            "createdAt": "2022-02-13T01:37:26Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "richardvanbergen",
        "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
        "url": "https://github.com/richardvanbergen"
      },
      "body": "<p dir=\"auto\">See <code class=\"notranslate\">graphics.Icon</code> and <code class=\"notranslate\">graphics.Logo</code> here: <a href=\"https://payloadcms.com/docs/admin/component\" rel=\"nofollow\">https://payloadcms.com/docs/admin/component</a>. They have their own key so you don't have to swap out the full nav <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
      "createdAt": "2021-08-10T10:45:16Z",
      "chosenAt": "2022-02-21T18:09:51Z",
      "chosenBy": "DanRibbens",
      "replies": [
        {
          "author": {
            "name": "shaneheyworth",
            "avatar": "https://avatars.githubusercontent.com/u/16281266?v=4",
            "url": "https://github.com/shaneheyworth"
          },
          "body": "<p dir=\"auto\">Hi there, this link is broken; I tried following what you guys did in your example as per the docs (but the example wasn't for logos) and it just loads a blank page. Can this be re-hashed?</p>",
          "createdAt": "2022-02-13T00:50:06Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Here is the correct link: <a href=\"https://payloadcms.com/docs/admin/components\" rel=\"nofollow\">https://payloadcms.com/docs/admin/components</a></p>\n<p dir=\"auto\">Also we have a blog post about this too.<br>\n<a href=\"https://payloadcms.com/blog/white-label-admin-ui\" rel=\"nofollow\">https://payloadcms.com/blog/white-label-admin-ui</a></p>\n<p dir=\"auto\">Let us know if you have trouble or need anything else.</p>",
          "createdAt": "2022-02-13T01:37:26Z"
        }
      ]
    }
  },
  {
    "title": "Lookup value from relation from condition callback",
    "body": "<p dir=\"auto\">For a condition callback of a field I need to get the value of a relation of another field. In code I need to do something like that:</p>\n<p dir=\"auto\"><code class=\"notranslate\">const val = await payload.findById({ collection: 'thecol', id: theId, depth: 1 })</code></p>\n<p dir=\"auto\">The problem is, that payload is not initialized in the callback. req.payload is not available in this callback. Is it possible to get a valid pointer for it? Do I have to get the value by doing a fetch() to localhost?</p>\n<p dir=\"auto\">Thank you very much in advance.<br>\nKind regards,<br>\nJohannes</p>",
    "url": "https://github.com/payloadcms/payload/discussions/446",
    "id": "446",
    "createdAt": "2022-02-12T17:00:36Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "salomo",
      "avatar": "https://avatars.githubusercontent.com/u/1001173?u=2d8ebd3e2415a9f6d669d695839027dfde59cbd2&v=4",
      "url": "https://github.com/salomo"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/salomo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/salomo\">@salomo</a> — I can give you some pointers here!</p>\n<p dir=\"auto\">So, <code class=\"notranslate\">payload.findByID</code> is a <em><strong>local API</strong></em> method, which means it's only available in contexts where you're executing code on your server. As conditions are executed in the browser, those local API methods are not available.</p>\n<p dir=\"auto\">Instead, you should just do a <code class=\"notranslate\">fetch</code>. Which, if you think about it, because you're in the browser—that's really the only way to do something like that.</p>\n<p dir=\"auto\">One note though—field conditions are run quite frequently, because every time a field value changes, you need to run the condition. For a use case like this, I'd probably build a custom component, where you can make that fetch much less frequently. That would be more performant.</p>\n<p dir=\"auto\">What kind of field needs this type of condition? As of <code class=\"notranslate\">payload@0.14.0</code>, you can easily import and re-use some of Payload's built-in field types by importing them like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { TextInput, SelectInput } from 'payload/components/forms'\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">TextInput</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">SelectInput</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/forms'</span></pre></div>\n<p dir=\"auto\">Then you would just \"wrap\" the built-in Payload component with your own logic, showing and hiding the field accordingly.</p>\n<p dir=\"auto\">We will be exposing more and more built-in field types so if you need a field type that's not currently exposed, let us know and we will add it.</p>\n<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
        "createdAt": "2022-02-12T17:25:43Z",
        "replies": [
          {
            "author": {
              "name": "salomo",
              "avatar": "https://avatars.githubusercontent.com/u/1001173?u=2d8ebd3e2415a9f6d669d695839027dfde59cbd2&v=4",
              "url": "https://github.com/salomo"
            },
            "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>,</p>\n<p dir=\"auto\">thanks for your explanation. I already feared about the performance impact of the fetch() solution.</p>\n<p dir=\"auto\">The custom component might be a good idea. I have a select field to choose a category item from a relation to another collections. Depending of the value of the chosen category other fields will be available or not. These other fields need to know the value of the select field, not the id of the referenced collections. The select component needs to get the values when loading the page anyway. Maybe there is a way to get these values from the other condition callbacks.</p>\n<p dir=\"auto\">I’ll give it a try.</p>",
            "createdAt": "2022-02-13T00:07:09Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/salomo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/salomo\">@salomo</a> — I can give you some pointers here!</p>\n<p dir=\"auto\">So, <code class=\"notranslate\">payload.findByID</code> is a <em><strong>local API</strong></em> method, which means it's only available in contexts where you're executing code on your server. As conditions are executed in the browser, those local API methods are not available.</p>\n<p dir=\"auto\">Instead, you should just do a <code class=\"notranslate\">fetch</code>. Which, if you think about it, because you're in the browser—that's really the only way to do something like that.</p>\n<p dir=\"auto\">One note though—field conditions are run quite frequently, because every time a field value changes, you need to run the condition. For a use case like this, I'd probably build a custom component, where you can make that fetch much less frequently. That would be more performant.</p>\n<p dir=\"auto\">What kind of field needs this type of condition? As of <code class=\"notranslate\">payload@0.14.0</code>, you can easily import and re-use some of Payload's built-in field types by importing them like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { TextInput, SelectInput } from 'payload/components/forms'\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">TextInput</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">SelectInput</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/forms'</span></pre></div>\n<p dir=\"auto\">Then you would just \"wrap\" the built-in Payload component with your own logic, showing and hiding the field accordingly.</p>\n<p dir=\"auto\">We will be exposing more and more built-in field types so if you need a field type that's not currently exposed, let us know and we will add it.</p>\n<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
      "createdAt": "2022-02-12T17:25:43Z",
      "chosenAt": "2022-02-13T00:07:12Z",
      "chosenBy": "salomo",
      "replies": [
        {
          "author": {
            "name": "salomo",
            "avatar": "https://avatars.githubusercontent.com/u/1001173?u=2d8ebd3e2415a9f6d669d695839027dfde59cbd2&v=4",
            "url": "https://github.com/salomo"
          },
          "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>,</p>\n<p dir=\"auto\">thanks for your explanation. I already feared about the performance impact of the fetch() solution.</p>\n<p dir=\"auto\">The custom component might be a good idea. I have a select field to choose a category item from a relation to another collections. Depending of the value of the chosen category other fields will be available or not. These other fields need to know the value of the select field, not the id of the referenced collections. The select component needs to get the values when loading the page anyway. Maybe there is a way to get these values from the other condition callbacks.</p>\n<p dir=\"auto\">I’ll give it a try.</p>",
          "createdAt": "2022-02-13T00:07:09Z"
        }
      ]
    }
  },
  {
    "title": "Uploaded file processing",
    "body": "<p dir=\"auto\">Is there any way to specify the process that should run after file being uploaded?</p>\n<p dir=\"auto\">For instance I want to force jpg/png to webp format for all uploaded images with \"sharp\" lib, either before or during image sizes generation.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/432",
    "id": "432",
    "createdAt": "2022-02-08T09:20:34Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "chladog",
      "avatar": "https://avatars.githubusercontent.com/u/15977485?u=800744af7926cc837c5bb8b62e8be01635e035b0&v=4",
      "url": "https://github.com/chladog"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/chladog/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/chladog\">@chladog</a> — good question!</p>\n<p dir=\"auto\">What I'd do is probably <em><strong>leave</strong></em> the existing jpg / png in place, but <em><strong>add</strong></em> some new fields for your <code class=\"notranslate\">webp</code> URLs to your upload-enabled collection. This way you still have the originals and can use them if your users' browsers are not webp-compatible.</p>\n<p dir=\"auto\">Here's how I'd do it:</p>\n<ul dir=\"auto\">\n<li>Use an <code class=\"notranslate\">afterChange</code> collection hook</li>\n<li>In the hook, take the <code class=\"notranslate\">file</code> from the <code class=\"notranslate\">req</code>, and the <code class=\"notranslate\">req.payloadUploadSizes</code>, and then convert both the main file and each of your resized versions to <code class=\"notranslate\">webp</code></li>\n<li>Save the <code class=\"notranslate\">webp</code> versions to disk or wherever</li>\n<li>Grab their filenames and then add their filenames to the new fields in your document</li>\n</ul>\n<p dir=\"auto\">This could be a great plugin actually. I bet other people would have use for this as well.</p>\n<p dir=\"auto\">Does this help? I'd be happy to continue to shine some light here for you!</p>",
        "createdAt": "2022-02-08T14:30:52Z",
        "replies": [
          {
            "author": {
              "name": "chladog",
              "avatar": "https://avatars.githubusercontent.com/u/15977485?u=800744af7926cc837c5bb8b62e8be01635e035b0&v=4",
              "url": "https://github.com/chladog"
            },
            "body": "<p dir=\"auto\">Thank you for great suggestions. Based on them I made a new plugin:<br>\nnpm <a href=\"https://www.npmjs.com/package/payload-webp\" rel=\"nofollow\">payload-webp</a><br>\n<a href=\"https://github.com/chladog/payload-webp#readme\">github here</a></p>\n<p dir=\"auto\">I hope it can be useful to anyone!<br>\nI also extended your concept with afterDelete hook to delete webp files on media delete as well.</p>\n<p dir=\"auto\">I found out that some methods from payload src would be useful, though are not part of the package so I had to make similar ones. Especially <a href=\"https://github.com/payloadcms/payload/blob/master/src/uploads/getBaseFields.ts\">https://github.com/payloadcms/payload/blob/master/src/uploads/getBaseFields.ts</a> would be useful. I also had to deep import these types: FileData, IncomingUploadType, AfterChangeHook, AfterDeleteHook - maybe make them accessible from payload/types? :-)</p>",
            "createdAt": "2022-02-09T12:37:56Z"
          },
          {
            "author": {
              "name": "denolfe",
              "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
              "url": "https://github.com/denolfe"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/chladog/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/chladog\">@chladog</a> This is awesome! We can look into exporting those upload field types. For the hook types, those are exported with a \"Collection\" prefix, so in this case you'd use <code class=\"notranslate\">CollectionAfterChangeHook</code> and <code class=\"notranslate\">CollectionAfterDeleteHook</code>.</p>",
            "createdAt": "2022-02-09T14:18:30Z"
          }
        ]
      },
      {
        "author": {
          "name": "chladog",
          "avatar": "https://avatars.githubusercontent.com/u/15977485?u=800744af7926cc837c5bb8b62e8be01635e035b0&v=4",
          "url": "https://github.com/chladog"
        },
        "body": "<p dir=\"auto\">While working on this another topic arised regarding image sizes config which currently allows to set just dimensions and crop position. However it would make more sense to be able to pass full sharp.resize options.<br>\nCurrently only hard crop is possible however I need to generate sizes with fit/contain property as my use case is that I want different image resolutions keeping their aspect ratios to be able to load correct image size per device with srcset.<br>\nAdditionally should be possible to provide only width or height, not mandatorily both, as that would be valid as well.</p>",
        "createdAt": "2022-02-10T12:27:35Z",
        "replies": [
          {
            "author": {
              "name": "quornik",
              "avatar": "https://avatars.githubusercontent.com/u/6187408?u=d66adadfca3437186e25abaafe51af799025e358&v=4",
              "url": "https://github.com/quornik"
            },
            "body": "<p dir=\"auto\">You need to provide two dimmensions, but one of them might be NULL, and in that case it is not processed.</p>",
            "createdAt": "2022-02-12T10:32:39Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/chladog/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/chladog\">@chladog</a> — yes, as <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/quornik/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/quornik\">@quornik</a> is saying, you can currently pass <code class=\"notranslate\">null</code> as a width or height which will allow images to keep their aspect ratio(s).</p>\n<p dir=\"auto\">But, we could also pretty easily add support for <em><strong>all</strong></em> other Sharp options, too. I have opened up a new <a href=\"https://github.com/payloadcms/payload/discussions/443\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/443/hovercard\">Feature Request</a> for that. Would be pretty easy.</p>",
            "createdAt": "2022-02-12T13:59:05Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/chladog/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/chladog\">@chladog</a> — good question!</p>\n<p dir=\"auto\">What I'd do is probably <em><strong>leave</strong></em> the existing jpg / png in place, but <em><strong>add</strong></em> some new fields for your <code class=\"notranslate\">webp</code> URLs to your upload-enabled collection. This way you still have the originals and can use them if your users' browsers are not webp-compatible.</p>\n<p dir=\"auto\">Here's how I'd do it:</p>\n<ul dir=\"auto\">\n<li>Use an <code class=\"notranslate\">afterChange</code> collection hook</li>\n<li>In the hook, take the <code class=\"notranslate\">file</code> from the <code class=\"notranslate\">req</code>, and the <code class=\"notranslate\">req.payloadUploadSizes</code>, and then convert both the main file and each of your resized versions to <code class=\"notranslate\">webp</code></li>\n<li>Save the <code class=\"notranslate\">webp</code> versions to disk or wherever</li>\n<li>Grab their filenames and then add their filenames to the new fields in your document</li>\n</ul>\n<p dir=\"auto\">This could be a great plugin actually. I bet other people would have use for this as well.</p>\n<p dir=\"auto\">Does this help? I'd be happy to continue to shine some light here for you!</p>",
      "createdAt": "2022-02-08T14:30:52Z",
      "chosenAt": "2022-02-09T12:32:33Z",
      "chosenBy": "chladog",
      "replies": [
        {
          "author": {
            "name": "chladog",
            "avatar": "https://avatars.githubusercontent.com/u/15977485?u=800744af7926cc837c5bb8b62e8be01635e035b0&v=4",
            "url": "https://github.com/chladog"
          },
          "body": "<p dir=\"auto\">Thank you for great suggestions. Based on them I made a new plugin:<br>\nnpm <a href=\"https://www.npmjs.com/package/payload-webp\" rel=\"nofollow\">payload-webp</a><br>\n<a href=\"https://github.com/chladog/payload-webp#readme\">github here</a></p>\n<p dir=\"auto\">I hope it can be useful to anyone!<br>\nI also extended your concept with afterDelete hook to delete webp files on media delete as well.</p>\n<p dir=\"auto\">I found out that some methods from payload src would be useful, though are not part of the package so I had to make similar ones. Especially <a href=\"https://github.com/payloadcms/payload/blob/master/src/uploads/getBaseFields.ts\">https://github.com/payloadcms/payload/blob/master/src/uploads/getBaseFields.ts</a> would be useful. I also had to deep import these types: FileData, IncomingUploadType, AfterChangeHook, AfterDeleteHook - maybe make them accessible from payload/types? :-)</p>",
          "createdAt": "2022-02-09T12:37:56Z"
        },
        {
          "author": {
            "name": "denolfe",
            "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
            "url": "https://github.com/denolfe"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/chladog/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/chladog\">@chladog</a> This is awesome! We can look into exporting those upload field types. For the hook types, those are exported with a \"Collection\" prefix, so in this case you'd use <code class=\"notranslate\">CollectionAfterChangeHook</code> and <code class=\"notranslate\">CollectionAfterDeleteHook</code>.</p>",
          "createdAt": "2022-02-09T14:18:30Z"
        }
      ]
    }
  },
  {
    "title": "How to get entire user object?",
    "body": "<p dir=\"auto\">I have a collection of admin users with email, name and role properties modeled after the example in the payload-demo.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\tfields: [\n\t\t// Email added by default\n\t\t{\n\t\t\tname: 'name',\n\t\t\ttype: 'text',\n\t\t},\n\t\t{\n\t\t\tname: 'roles',\n\t\t\tlabel: 'Role(s)',\n\t\t\ttype: 'select',\n\t\t\toptions: roles,\n\t\t\trequired: true,\n\t\t\tsaveToJWT: true,\n\t\t\thasMany: true,\n\t\t}\n\t],\"><pre class=\"notranslate\">\t<span class=\"pl-s1\">fields</span>: <span class=\"pl-kos\">[</span>\n\t\t<span class=\"pl-c\">// Email added by default</span>\n\t\t<span class=\"pl-kos\">{</span>\n\t\t\t<span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'name'</span><span class=\"pl-kos\">,</span>\n\t\t\t<span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n\t\t<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n\t\t<span class=\"pl-kos\">{</span>\n\t\t\t<span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'roles'</span><span class=\"pl-kos\">,</span>\n\t\t\t<span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Role(s)'</span><span class=\"pl-kos\">,</span>\n\t\t\t<span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'select'</span><span class=\"pl-kos\">,</span>\n\t\t\t<span class=\"pl-c1\">options</span>: <span class=\"pl-s1\">roles</span><span class=\"pl-kos\">,</span>\n\t\t\t<span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n\t\t\t<span class=\"pl-c1\">saveToJWT</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n\t\t\t<span class=\"pl-c1\">hasMany</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n\t\t<span class=\"pl-kos\">}</span>\n\t<span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">The problem is, that I can not access the role property in the req.user object that is passed to the access properties. It only contains name and collection. What do I have to do to pass the entire user object to the req object?<br>\nMany thanks in advance.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/420",
    "id": "420",
    "createdAt": "2022-01-19T12:50:04Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "salomo",
      "avatar": "https://avatars.githubusercontent.com/u/1001173?u=2d8ebd3e2415a9f6d669d695839027dfde59cbd2&v=4",
      "url": "https://github.com/salomo"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Interesting, you shouldn't have to do anything extra to pass the full user object in an access function. I would try:</p>\n<ol dir=\"auto\">\n<li>Check your database user document to make sure the role is persisted on the user</li>\n<li>Logout and log back in</li>\n<li>Can you share your access function here? maybe we've overlooking something in how the access function is being called.</li>\n</ol>\n<p dir=\"auto\">If you want to share a repo with me I'll try it out too.</p>\n<p dir=\"auto\">You probably saw in the demo where we have our access function example. <a href=\"https://github.com/payloadcms/payload/blob/master/demo/collections/Admin.ts#L5\">https://github.com/payloadcms/payload/blob/master/demo/collections/Admin.ts#L5</a></p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const access = ({ req: { user } }) =&gt; {\n  return checkRole(['admin'], user);\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">access</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">req</span>: <span class=\"pl-kos\">{</span> user <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-en\">checkRole</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'admin'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">With that we call checkRole: <a href=\"https://github.com/payloadcms/payload/blob/master/demo/access/checkRole.ts\">https://github.com/payloadcms/payload/blob/master/demo/access/checkRole.ts</a></p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const checkRole = (allRoles, user) =&gt; {\n  if (user) {\n    if (allRoles.some((role) =&gt; user.roles &amp;&amp; user.roles.some((individualRole) =&gt; individualRole === role))) {\n      return true;\n    }\n  }\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">checkRole</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">allRoles</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">allRoles</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">some</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">role</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">roles</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">roles</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">some</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">individualRole</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">individualRole</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">role</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\"></span></pre></div>\n<p dir=\"auto\">We're able to use the <code class=\"notranslate\">user.role</code> in the access functions on fields and collections. We also use that same function in the allFields collection to demonstrate access control on a non-auth collection field.</p>\n<p dir=\"auto\">Is that helpful? If not we'll get you on track.</p>",
        "createdAt": "2022-01-19T13:53:40Z",
        "replies": [
          {
            "author": {
              "name": "salomo",
              "avatar": "https://avatars.githubusercontent.com/u/1001173?u=2d8ebd3e2415a9f6d669d695839027dfde59cbd2&v=4",
              "url": "https://github.com/salomo"
            },
            "body": "<p dir=\"auto\">I found the error. This hook was copied from the blog example while testing different things.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"hooks: {\n\tbeforeRead: [onlyNameIfPublic]\n},\"><pre class=\"notranslate\"><span class=\"pl-s1\">hooks</span>: <span class=\"pl-kos\">{</span>\n\t<span class=\"pl-c1\">beforeRead</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s1\">onlyNameIfPublic</span><span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">It works now. Thank you for your help.</p>",
            "createdAt": "2022-01-19T14:10:22Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Interesting, you shouldn't have to do anything extra to pass the full user object in an access function. I would try:</p>\n<ol dir=\"auto\">\n<li>Check your database user document to make sure the role is persisted on the user</li>\n<li>Logout and log back in</li>\n<li>Can you share your access function here? maybe we've overlooking something in how the access function is being called.</li>\n</ol>\n<p dir=\"auto\">If you want to share a repo with me I'll try it out too.</p>\n<p dir=\"auto\">You probably saw in the demo where we have our access function example. <a href=\"https://github.com/payloadcms/payload/blob/master/demo/collections/Admin.ts#L5\">https://github.com/payloadcms/payload/blob/master/demo/collections/Admin.ts#L5</a></p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const access = ({ req: { user } }) =&gt; {\n  return checkRole(['admin'], user);\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">access</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">req</span>: <span class=\"pl-kos\">{</span> user <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-en\">checkRole</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'admin'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">With that we call checkRole: <a href=\"https://github.com/payloadcms/payload/blob/master/demo/access/checkRole.ts\">https://github.com/payloadcms/payload/blob/master/demo/access/checkRole.ts</a></p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const checkRole = (allRoles, user) =&gt; {\n  if (user) {\n    if (allRoles.some((role) =&gt; user.roles &amp;&amp; user.roles.some((individualRole) =&gt; individualRole === role))) {\n      return true;\n    }\n  }\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">checkRole</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">allRoles</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">allRoles</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">some</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">role</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">roles</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">roles</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">some</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">individualRole</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">individualRole</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">role</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\"></span></pre></div>\n<p dir=\"auto\">We're able to use the <code class=\"notranslate\">user.role</code> in the access functions on fields and collections. We also use that same function in the allFields collection to demonstrate access control on a non-auth collection field.</p>\n<p dir=\"auto\">Is that helpful? If not we'll get you on track.</p>",
      "createdAt": "2022-01-19T13:53:40Z",
      "chosenAt": "2022-01-20T23:02:05Z",
      "chosenBy": "denolfe",
      "replies": [
        {
          "author": {
            "name": "salomo",
            "avatar": "https://avatars.githubusercontent.com/u/1001173?u=2d8ebd3e2415a9f6d669d695839027dfde59cbd2&v=4",
            "url": "https://github.com/salomo"
          },
          "body": "<p dir=\"auto\">I found the error. This hook was copied from the blog example while testing different things.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"hooks: {\n\tbeforeRead: [onlyNameIfPublic]\n},\"><pre class=\"notranslate\"><span class=\"pl-s1\">hooks</span>: <span class=\"pl-kos\">{</span>\n\t<span class=\"pl-c1\">beforeRead</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s1\">onlyNameIfPublic</span><span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">It works now. Thank you for your help.</p>",
          "createdAt": "2022-01-19T14:10:22Z"
        }
      ]
    }
  },
  {
    "title": "Custom component only for non-admin users?",
    "body": "<p dir=\"auto\">I would like to show the default components for Dashboard and Navigation if the user is an admin user and a custom component where I show only operations available to the user when a non-full admin user is logged in to the panel.</p>\n<p dir=\"auto\">I can handle the custom components for the non-admin users, I am unsure of how to render the default component for full admin users. (I have roles set up for user = admin / organization admin / etc). Sorry if this exists elsewhere in documentation, but I'm having trouble finding if this is possible.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/404",
    "id": "404",
    "createdAt": "2021-12-27T15:15:09Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "ryanlanciaux",
      "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
      "url": "https://github.com/ryanlanciaux"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ryanlanciaux/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ryanlanciaux\">@ryanlanciaux</a> —</p>\n<p dir=\"auto\">You can definitely do this. You could import the default <code class=\"notranslate\">Dashboard</code> and <code class=\"notranslate\">Nav</code> components from the <code class=\"notranslate\">payload/dist</code> folder, but I just published a beta version (<code class=\"notranslate\">payload@0.13.11-beta.0</code>) that provides you with a more permanent way of importing those components.</p>\n<p dir=\"auto\">You can now import them via the following:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { Dashboard } from 'payload/components/views/Dashboard'\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">Dashboard</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/views/Dashboard'</span></pre></div>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { Nav } from 'payload/components/elements'\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">Nav</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/elements'</span></pre></div>\n<p dir=\"auto\">So what you'd do is provide your Payload config with custom components for the Dashboard and Nav views, perform your logic for which components to display to your logged in user, and then either render the default component or the custom component.</p>\n<p dir=\"auto\">How's that?</p>",
        "createdAt": "2021-12-28T16:28:31Z",
        "replies": [
          {
            "author": {
              "name": "ryanlanciaux",
              "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
              "url": "https://github.com/ryanlanciaux"
            },
            "body": "<p dir=\"auto\">Great - thanks a ton!</p>",
            "createdAt": "2022-01-01T10:52:39Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ryanlanciaux/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ryanlanciaux\">@ryanlanciaux</a> —</p>\n<p dir=\"auto\">You can definitely do this. You could import the default <code class=\"notranslate\">Dashboard</code> and <code class=\"notranslate\">Nav</code> components from the <code class=\"notranslate\">payload/dist</code> folder, but I just published a beta version (<code class=\"notranslate\">payload@0.13.11-beta.0</code>) that provides you with a more permanent way of importing those components.</p>\n<p dir=\"auto\">You can now import them via the following:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { Dashboard } from 'payload/components/views/Dashboard'\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">Dashboard</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/views/Dashboard'</span></pre></div>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { Nav } from 'payload/components/elements'\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">Nav</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/elements'</span></pre></div>\n<p dir=\"auto\">So what you'd do is provide your Payload config with custom components for the Dashboard and Nav views, perform your logic for which components to display to your logged in user, and then either render the default component or the custom component.</p>\n<p dir=\"auto\">How's that?</p>",
      "createdAt": "2021-12-28T16:28:31Z",
      "chosenAt": "2022-01-01T10:52:31Z",
      "chosenBy": "ryanlanciaux",
      "replies": [
        {
          "author": {
            "name": "ryanlanciaux",
            "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
            "url": "https://github.com/ryanlanciaux"
          },
          "body": "<p dir=\"auto\">Great - thanks a ton!</p>",
          "createdAt": "2022-01-01T10:52:39Z"
        }
      ]
    }
  },
  {
    "title": "yarn build on wsl-2",
    "body": "<p dir=\"auto\">I am trying to build the repo on wsl-2 (ubuntu 20.04) is yarn 3 required for builds if I run with yarn 3.1.1 then the tests pass, however when I run \"yarn build\" I do get the error below, also if I run \"yarn lint\" I do get a bunch of errors. Are these expected? If I try to run with yarn 1.23.0 I get a bunch of errors is this expected?</p>\n<p dir=\"auto\">src/globals/buildModel.ts:16:5 - error TS2741: Property 'paginate' is missing in type 'Model&lt;unknown, {}, {}, {}&gt;' but required in type 'PaginateModel&lt;any, {}, {}, {}&gt;'.</p>\n<p dir=\"auto\">16     return Globals;<br>\n~~~~~~~~~~~~~~~</p>\n<p dir=\"auto\">node_modules/@types/mongoose-paginate-v2/index.d.ts:78:9<br>\n78         paginate(<br>\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>\n79             query?: FilterQuery,<br>\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>\n...<br>\n81             callback?: (err: any, result: PaginateResult&lt;PaginateDocument&lt;T, TMethods, TVirtuals, O&gt;&gt;) =&gt; void,<br>\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>\n82         ): Promise&lt;PaginateResult&lt;PaginateDocument&lt;T, TMethods, TVirtuals, O&gt;&gt;&gt;;<br>\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>\n'paginate' is declared here.</p>\n<p dir=\"auto\">Found 1 error.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/399",
    "id": "399",
    "createdAt": "2021-12-19T12:16:29Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "mwoodpatrick",
      "avatar": "https://avatars.githubusercontent.com/u/2222402?v=4",
      "url": "https://github.com/mwoodpatrick"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Thanks for the report <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mwoodpatrick/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mwoodpatrick\">@mwoodpatrick</a>. I was able to recreate this on my machine. It's interesting that we're not seeing this in our CI process, which runs <code class=\"notranslate\">yarn build</code> - we're looking into this.</p>\n<p dir=\"auto\">Regarding the <code class=\"notranslate\">lint</code> script, we added that script for our own knowledge. It is not currently run as part of our CI or build process, so the results are not expected to be error-free. Though, we plan on re-evaluating this in the future.</p>",
        "createdAt": "2021-12-20T23:38:59Z",
        "replies": null
      },
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mwoodpatrick/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mwoodpatrick\">@mwoodpatrick</a> The fix for this has just been merged with <a aria-label=\"Pull request #402\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1088958606\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/402\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/402/hovercard\" href=\"https://github.com/payloadcms/payload/pull/402\">#402</a> . Let us know if you run into any other issues.</p>",
        "createdAt": "2021-12-27T04:53:03Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mwoodpatrick/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mwoodpatrick\">@mwoodpatrick</a> The fix for this has just been merged with <a aria-label=\"Pull request #402\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1088958606\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/402\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/402/hovercard\" href=\"https://github.com/payloadcms/payload/pull/402\">#402</a> . Let us know if you run into any other issues.</p>",
      "createdAt": "2021-12-27T04:53:03Z",
      "chosenAt": "2021-12-27T04:53:14Z",
      "chosenBy": "denolfe",
      "replies": null
    }
  },
  {
    "title": "Linking field values",
    "body": "<p dir=\"auto\">Is it possible to link fields in a way where the input event on one can trigger the value to change in another field? It looks likes it's possible using Collection hooks, but it wouldn't be reactive and the target field would only update on save.</p>\n<p dir=\"auto\">My use case is I want to populate a <code class=\"notranslate\">slug</code> field with a slugified version of what is entered into the <code class=\"notranslate\">title</code> field for a <code class=\"notranslate\">Page</code>, where the <code class=\"notranslate\">slug</code> field updates as the user enters the value in the <code class=\"notranslate\">title</code> field. Would this be something that is achieved with custom components?</p>\n<p dir=\"auto\"><em>As an aside, is it possible to set attributes on a field's <code class=\"notranslate\">&lt;input&gt;</code> element (e.g. set the <code class=\"notranslate\">disabled</code> attribute)? I've seen that there's an <code class=\"notranslate\">admin.disabled</code> property that can be passed to fields, but this removes the field entirely from the admin interface.</em></p>\n<p dir=\"auto\">Thanks!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/397",
    "id": "397",
    "createdAt": "2021-12-18T07:40:25Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "slavanossar",
      "avatar": "https://avatars.githubusercontent.com/u/7077600?u=e71956d97c94770dc57ace7b2555a962bfcebe2d&v=4",
      "url": "https://github.com/slavanossar"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/slavanossar/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/slavanossar\">@slavanossar</a> — this is absolutely possible. You're right in that you can use collection hooks to modify field values on the server-side, on save, but for your case, you're likely to benefit more from client-side component-based implementation.</p>\n<p dir=\"auto\">Yep - custom components are the way to go. Something like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import React, { useEffect } from 'react';\n// You can import the text input on its own if you have payload@0.13.8-beta.0\nimport { TextInput, useWatchForm, useField } from 'payload/components/forms';\n\nconst CustomTextInput = ({ name, path, label }) =&gt; {\n\n  // This will be documented more fully once we have the API solidified\n  // But for now, you can take a look at Payload's source code or use TS to see what\n  // is available here.\n  // `useWatchForm` is going to update every time **any** field changes so you'll always\n  // have an up-to-date copy of your title field's data\n  const { getDataByPath } = useWatchForm();\n\n  const {\n    showError,\n    value,\n    setValue,\n  } = useField({\n    path,\n    enableDebouncedValue: true,\n  });\n\n  // Grab your title's field value\n  const titleValue = getDataByPath('title');\n\n  // When your title field changes, set the value of your field\n  useEffect(() =&gt; {\n    setValue(titleValue);\n  }, [setValue, titleValue]);\n\n  return (\n    &lt;TextInput\n      path={path}\n      name={name}\n      value={value as string || ''}\n      label={label}\n      showError={showError}\n    /&gt;\n  );\n};\n\nexport default CustomTextInput;\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-v\">React</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">useEffect</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// You can import the text input on its own if you have payload@0.13.8-beta.0</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">TextInput</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">useWatchForm</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">useField</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/forms'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">CustomTextInput</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> name<span class=\"pl-kos\">,</span> path<span class=\"pl-kos\">,</span> label <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n  <span class=\"pl-c\">// This will be documented more fully once we have the API solidified</span>\n  <span class=\"pl-c\">// But for now, you can take a look at Payload's source code or use TS to see what</span>\n  <span class=\"pl-c\">// is available here.</span>\n  <span class=\"pl-c\">// `useWatchForm` is going to update every time **any** field changes so you'll always</span>\n  <span class=\"pl-c\">// have an up-to-date copy of your title field's data</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> getDataByPath <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useWatchForm</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span>\n    showError<span class=\"pl-kos\">,</span>\n    value<span class=\"pl-kos\">,</span>\n    setValue<span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useField</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    path<span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">enableDebouncedValue</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-c\">// Grab your title's field value</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">titleValue</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">getDataByPath</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'title'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-c\">// When your title field changes, set the value of your field</span>\n  <span class=\"pl-en\">useEffect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">setValue</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">titleValue</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">setValue</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">titleValue</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">TextInput</span>\n      <span class=\"pl-c1\">path</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">path</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">name</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">name</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">value</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">value</span> <span class=\"pl-s1\">as</span> <span class=\"pl-s1\">string</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s\">''</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">label</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">label</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">showError</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">showError</span><span class=\"pl-kos\">}</span>\n    <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n  <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-v\">CustomTextInput</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">How's that?</p>\n<p dir=\"auto\">Note, Payload's built-in <code class=\"notranslate\">TextInput</code> is only released as beta for now. We will be improving and solidifying the API as to how to re-use built-in components like this but if you are comfortable with doing so, go for it. Otherwise, you can use a regular old <code class=\"notranslate\">&lt;input /&gt;</code> if you want.</p>",
        "createdAt": "2021-12-20T15:56:24Z",
        "replies": [
          {
            "author": {
              "name": "slavanossar",
              "avatar": "https://avatars.githubusercontent.com/u/7077600?u=e71956d97c94770dc57ace7b2555a962bfcebe2d&v=4",
              "url": "https://github.com/slavanossar"
            },
            "body": "<p dir=\"auto\">Thanks for that, looks great!</p>\n<p dir=\"auto\">Only thing is I'm having an issue with <code class=\"notranslate\">getDataByPath('title')</code> returning <code class=\"notranslate\">undefined</code>. I naturally tried out some nested fields too (e.g. <code class=\"notranslate\">programFields.pageHeader.heading</code>), and it doesn't return values for them either. Logging the <code class=\"notranslate\">fields</code> within <code class=\"notranslate\">getDataByPath</code> shows the fields are there.</p>\n<p dir=\"auto\">I took a peek at the source and it seems like the condition on line 10 would never match any field (top-level or nested), since it's appending a <code class=\"notranslate\">.</code> to the original <code class=\"notranslate\">path</code> that is passed to the function:</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/payloadcms/payload/blob/35bf092813bad28ab71a5db38d2de598be2a9406/src/admin/components/forms/Form/getDataByPath.ts#L6-L18\">payload/src/admin/components/forms/Form/getDataByPath.ts</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 6 to 18\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/payloadcms/payload/commit/35bf092813bad28ab71a5db38d2de598be2a9406\">35bf092</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L6\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"6\"></td>\n          <td id=\"LC6\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">pathPrefixToRemove</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">substring</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">lastIndexOf</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'.'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L7\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"7\"></td>\n          <td id=\"LC7\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">name</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">split</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'.'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pop</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L8\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"8\"></td>\n          <td id=\"LC8\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L9\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"9\"></td>\n          <td id=\"LC9\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">data</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">keys</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">fields</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reduce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">matchedData</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">key</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L10\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"10\"></td>\n          <td id=\"LC10\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">key</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">indexOf</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">path</span><span class=\"pl-kos\">}</span></span>.`</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">===</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L11\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"11\"></td>\n          <td id=\"LC11\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L12\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"12\"></td>\n          <td id=\"LC12\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       ...<span class=\"pl-s1\">matchedData</span><span class=\"pl-kos\">,</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L13\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"13\"></td>\n          <td id=\"LC13\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-kos\">[</span><span class=\"pl-s1\">key</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">replace</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">pathPrefixToRemove</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">]</span>: <span class=\"pl-s1\">fields</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">key</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L14\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"14\"></td>\n          <td id=\"LC14\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L15\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"15\"></td>\n          <td id=\"LC15\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-kos\">}</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L16\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"16\"></td>\n          <td id=\"LC16\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L17\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"17\"></td>\n          <td id=\"LC17\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> <span class=\"pl-s1\">matchedData</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L18\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"18\"></td>\n          <td id=\"LC18\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Unless I'm missing something, I think it should just be:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"if (key === path) {\"><pre class=\"notranslate\"><span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">key</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\"></span></pre></div>\n<p dir=\"auto\">Also thanks for providing the code snippet, I'm coming from Vue/Nuxt and still trying to wrap my head around React syntax and conventions, so it's super helpful to have <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
            "createdAt": "2021-12-22T09:37:56Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Very good catch!</p>\n<p dir=\"auto\">We use this function internally to get all <em>descendant</em> field values by path, so for example, if you have an Array and want to get all of the array's child field values so it ends up as an array of objects.</p>\n<p dir=\"auto\">So we need to keep the existing <code class=\"notranslate\">if</code>, but we can add <code class=\"notranslate\">key === path</code> like you mentioned. Everything works with both cases present.</p>\n<p dir=\"auto\">I just deployed a beta version <code class=\"notranslate\">payload@0.13.11-beta.0</code> with this fix. Give it a shot!</p>",
            "createdAt": "2021-12-22T19:20:30Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/slavanossar/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/slavanossar\">@slavanossar</a> — this is absolutely possible. You're right in that you can use collection hooks to modify field values on the server-side, on save, but for your case, you're likely to benefit more from client-side component-based implementation.</p>\n<p dir=\"auto\">Yep - custom components are the way to go. Something like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import React, { useEffect } from 'react';\n// You can import the text input on its own if you have payload@0.13.8-beta.0\nimport { TextInput, useWatchForm, useField } from 'payload/components/forms';\n\nconst CustomTextInput = ({ name, path, label }) =&gt; {\n\n  // This will be documented more fully once we have the API solidified\n  // But for now, you can take a look at Payload's source code or use TS to see what\n  // is available here.\n  // `useWatchForm` is going to update every time **any** field changes so you'll always\n  // have an up-to-date copy of your title field's data\n  const { getDataByPath } = useWatchForm();\n\n  const {\n    showError,\n    value,\n    setValue,\n  } = useField({\n    path,\n    enableDebouncedValue: true,\n  });\n\n  // Grab your title's field value\n  const titleValue = getDataByPath('title');\n\n  // When your title field changes, set the value of your field\n  useEffect(() =&gt; {\n    setValue(titleValue);\n  }, [setValue, titleValue]);\n\n  return (\n    &lt;TextInput\n      path={path}\n      name={name}\n      value={value as string || ''}\n      label={label}\n      showError={showError}\n    /&gt;\n  );\n};\n\nexport default CustomTextInput;\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-v\">React</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">useEffect</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// You can import the text input on its own if you have payload@0.13.8-beta.0</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">TextInput</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">useWatchForm</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">useField</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/forms'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">CustomTextInput</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> name<span class=\"pl-kos\">,</span> path<span class=\"pl-kos\">,</span> label <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n  <span class=\"pl-c\">// This will be documented more fully once we have the API solidified</span>\n  <span class=\"pl-c\">// But for now, you can take a look at Payload's source code or use TS to see what</span>\n  <span class=\"pl-c\">// is available here.</span>\n  <span class=\"pl-c\">// `useWatchForm` is going to update every time **any** field changes so you'll always</span>\n  <span class=\"pl-c\">// have an up-to-date copy of your title field's data</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> getDataByPath <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useWatchForm</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span>\n    showError<span class=\"pl-kos\">,</span>\n    value<span class=\"pl-kos\">,</span>\n    setValue<span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useField</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    path<span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">enableDebouncedValue</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-c\">// Grab your title's field value</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">titleValue</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">getDataByPath</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'title'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-c\">// When your title field changes, set the value of your field</span>\n  <span class=\"pl-en\">useEffect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">setValue</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">titleValue</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">setValue</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">titleValue</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">TextInput</span>\n      <span class=\"pl-c1\">path</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">path</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">name</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">name</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">value</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">value</span> <span class=\"pl-s1\">as</span> <span class=\"pl-s1\">string</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s\">''</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">label</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">label</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">showError</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">showError</span><span class=\"pl-kos\">}</span>\n    <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n  <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-v\">CustomTextInput</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">How's that?</p>\n<p dir=\"auto\">Note, Payload's built-in <code class=\"notranslate\">TextInput</code> is only released as beta for now. We will be improving and solidifying the API as to how to re-use built-in components like this but if you are comfortable with doing so, go for it. Otherwise, you can use a regular old <code class=\"notranslate\">&lt;input /&gt;</code> if you want.</p>",
      "createdAt": "2021-12-20T15:56:24Z",
      "chosenAt": "2021-12-22T09:39:47Z",
      "chosenBy": "slavanossar",
      "replies": [
        {
          "author": {
            "name": "slavanossar",
            "avatar": "https://avatars.githubusercontent.com/u/7077600?u=e71956d97c94770dc57ace7b2555a962bfcebe2d&v=4",
            "url": "https://github.com/slavanossar"
          },
          "body": "<p dir=\"auto\">Thanks for that, looks great!</p>\n<p dir=\"auto\">Only thing is I'm having an issue with <code class=\"notranslate\">getDataByPath('title')</code> returning <code class=\"notranslate\">undefined</code>. I naturally tried out some nested fields too (e.g. <code class=\"notranslate\">programFields.pageHeader.heading</code>), and it doesn't return values for them either. Logging the <code class=\"notranslate\">fields</code> within <code class=\"notranslate\">getDataByPath</code> shows the fields are there.</p>\n<p dir=\"auto\">I took a peek at the source and it seems like the condition on line 10 would never match any field (top-level or nested), since it's appending a <code class=\"notranslate\">.</code> to the original <code class=\"notranslate\">path</code> that is passed to the function:</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/payloadcms/payload/blob/35bf092813bad28ab71a5db38d2de598be2a9406/src/admin/components/forms/Form/getDataByPath.ts#L6-L18\">payload/src/admin/components/forms/Form/getDataByPath.ts</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 6 to 18\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/payloadcms/payload/commit/35bf092813bad28ab71a5db38d2de598be2a9406\">35bf092</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L6\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"6\"></td>\n          <td id=\"LC6\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">pathPrefixToRemove</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">substring</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">lastIndexOf</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'.'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L7\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"7\"></td>\n          <td id=\"LC7\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">name</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">split</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'.'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pop</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L8\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"8\"></td>\n          <td id=\"LC8\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L9\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"9\"></td>\n          <td id=\"LC9\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">data</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">keys</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">fields</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reduce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">matchedData</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">key</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L10\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"10\"></td>\n          <td id=\"LC10\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">key</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">indexOf</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">path</span><span class=\"pl-kos\">}</span></span>.`</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">===</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L11\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"11\"></td>\n          <td id=\"LC11\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L12\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"12\"></td>\n          <td id=\"LC12\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       ...<span class=\"pl-s1\">matchedData</span><span class=\"pl-kos\">,</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L13\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"13\"></td>\n          <td id=\"LC13\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-kos\">[</span><span class=\"pl-s1\">key</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">replace</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">pathPrefixToRemove</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">]</span>: <span class=\"pl-s1\">fields</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">key</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L14\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"14\"></td>\n          <td id=\"LC14\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L15\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"15\"></td>\n          <td id=\"LC15\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-kos\">}</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L16\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"16\"></td>\n          <td id=\"LC16\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L17\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"17\"></td>\n          <td id=\"LC17\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> <span class=\"pl-s1\">matchedData</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L18\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"18\"></td>\n          <td id=\"LC18\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Unless I'm missing something, I think it should just be:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"if (key === path) {\"><pre class=\"notranslate\"><span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">key</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\"></span></pre></div>\n<p dir=\"auto\">Also thanks for providing the code snippet, I'm coming from Vue/Nuxt and still trying to wrap my head around React syntax and conventions, so it's super helpful to have <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
          "createdAt": "2021-12-22T09:37:56Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Very good catch!</p>\n<p dir=\"auto\">We use this function internally to get all <em>descendant</em> field values by path, so for example, if you have an Array and want to get all of the array's child field values so it ends up as an array of objects.</p>\n<p dir=\"auto\">So we need to keep the existing <code class=\"notranslate\">if</code>, but we can add <code class=\"notranslate\">key === path</code> like you mentioned. Everything works with both cases present.</p>\n<p dir=\"auto\">I just deployed a beta version <code class=\"notranslate\">payload@0.13.11-beta.0</code> with this fix. Give it a shot!</p>",
          "createdAt": "2021-12-22T19:20:30Z"
        }
      ]
    }
  },
  {
    "title": "Using Payload Form Field Components in your custom components",
    "body": "<p dir=\"auto\">I'm trying to build out some custom form components, but I want them to be styled like the default payload components. I am able to import the components, but they don't come with an \"onChange\" handler, meaning I can't get the data out of them... has anyone successfully done this? I didn't see anything in the docs about it.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/360",
    "id": "360",
    "createdAt": "2021-11-09T21:38:01Z",
    "upvotes": 1,
    "commentTotal": 4,
    "author": {
      "name": "ninahorne",
      "avatar": "https://avatars.githubusercontent.com/u/10962388?u=d909f38c39b15dd46da4c49fb12a8a438fd6e6fd&v=4",
      "url": "https://github.com/ninahorne"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Have you seen the blog post on custom field components? <a href=\"https://payloadcms.com/blog/building-a-custom-field\" rel=\"nofollow\">https://payloadcms.com/blog/building-a-custom-field</a> This goes a lot more in depth than what we put in the <a href=\"https://payloadcms.com/docs/admin/components#fields\" rel=\"nofollow\">docs</a>.</p>\n<p dir=\"auto\">If you are importing fields directly from Payload, you might not have access to everything you need. Instead you can import the styles and use the <code class=\"notranslate\">setValue</code> from <code class=\"notranslate\">useFieldType</code>.</p>\n<p dir=\"auto\">Does this help?</p>",
        "createdAt": "2021-11-09T22:32:40Z",
        "replies": [
          {
            "author": {
              "name": "ninahorne",
              "avatar": "https://avatars.githubusercontent.com/u/10962388?u=d909f38c39b15dd46da4c49fb12a8a438fd6e6fd&v=4",
              "url": "https://github.com/ninahorne"
            },
            "body": "<p dir=\"auto\">Yea, I've read the article, but I'm still struggling to replicate the Select field. Do you have any recommendations for this specific field type?</p>",
            "createdAt": "2021-11-10T00:22:47Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Can I ask what you custom functionality are you making with your select component? If it is something generally useful, it could be a candidate for a feature request.</p>\n<p dir=\"auto\">You could recreate it by copying from the original and change what you need. This might not be the best way though.</p>\n<p dir=\"auto\">Here is the component: <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Select/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Select/index.tsx</a></p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> might have better ideas.</p>",
            "createdAt": "2021-11-10T02:16:42Z"
          },
          {
            "author": {
              "name": "ninahorne",
              "avatar": "https://avatars.githubusercontent.com/u/10962388?u=d909f38c39b15dd46da4c49fb12a8a438fd6e6fd&v=4",
              "url": "https://github.com/ninahorne"
            },
            "body": "<p dir=\"auto\">Basically, I have a component that has a list of careers and when a user selects a career it calls an API to get data for that career to populate a few more fields.</p>\n<p dir=\"auto\">At first, I thought I could do this with a hook that waited for the value of the select to change, but I need this to happen instantaneously, not after the form is saved. So I guess my extension of the Select field is to add a custom onChange event to trigger an API call and then actually use the value from that call to update the form field.</p>\n<p dir=\"auto\">Maybe my approach is incorrect. Is there a better way to trigger events when a field updates?</p>",
            "createdAt": "2021-11-10T02:35:51Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">I've done some experimenting on this and I may have found an actual bug, or that I'm using the useFieldType in a way that it wasn't intended.</p>\n<p dir=\"auto\">I thought it would be possible to have an additional <code class=\"notranslate\">useFieldType</code> with a path to another field within the same form to access setValue of additional fields.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  const { setValue: setListNameValue } = useFieldType({\n    path: 'listName',\n  });\n\n  useEffect(() =&gt; {\n    setListNameValue(`${value} List`, true);\n  }, [value]);\"><pre class=\"notranslate\">  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">setValue</span>: <span class=\"pl-s1\">setListNameValue</span> <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useFieldType</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'listName'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-en\">useEffect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">setListNameValue</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">}</span></span> List`</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">In my code, setListNameValue is being called, but the value isn't being set properly. Debugging seems to indicate a race condition whereby the value change is dispatched as intended, but then another dispatch hits and immediately sets the listName value back.</p>\n<p dir=\"auto\">I like what you're trying to achieve with the component, we should be able to make this work. I've pushed the concept I was playing with here: <a href=\"https://github.com/payloadcms/custom-field-guide/pull/new/adjacent-field-setvalue\">https://github.com/payloadcms/custom-field-guide/pull/new/adjacent-field-setvalue</a></p>\n<p dir=\"auto\">I'll wait and see if others have any insight on this one.</p>",
            "createdAt": "2021-11-10T04:53:25Z"
          }
        ]
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ninahorne/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ninahorne\">@ninahorne</a> — I see what you're looking to do. I have been thinking about this myself actually in another project.</p>\n<p dir=\"auto\">We could extend built-in field components like <code class=\"notranslate\">Select</code> and <code class=\"notranslate\">Text</code> so that they accept an <code class=\"notranslate\">onChange</code> and <code class=\"notranslate\">value</code> handler.</p>\n<p dir=\"auto\">If either <code class=\"notranslate\">onChange</code> or <code class=\"notranslate\">value</code> was passed to a field component, we would disable its own internal <code class=\"notranslate\">useFieldType</code> hook, and it would be up to you to send form values to and from the Payload form manually.</p>\n<p dir=\"auto\">Then you could benefit from the <strong><em>exact same</em></strong> components that Payload UI uses.</p>\n<p dir=\"auto\">Alternatively, right now, Payload SCSS is already exported and able to be re-used in custom components. There is a <code class=\"notranslate\">formInput</code> mixin that styles inputs easily but you'd still have to recreate your form's label and surrounding structure.</p>\n<p dir=\"auto\">This approach would be easy enough and probably more performant for simple components like text inputs, but for <code class=\"notranslate\">Select</code> fields it could get more complicated due to having to replicate Payload's internal use of <code class=\"notranslate\">react-select</code>.</p>\n<p dir=\"auto\">For <code class=\"notranslate\">Select</code> fields, another option there would be that Payload could export its internal <code class=\"notranslate\">ReactSelect</code> implementation which <em><strong>does</strong></em> take an <code class=\"notranslate\">onChange</code> and <code class=\"notranslate\">value</code> prop already. That component is shared between the <code class=\"notranslate\">relationship</code> and <code class=\"notranslate\">select</code> field types as well as a few other places in the UI.</p>\n<p dir=\"auto\">Is there a route that you would prefer? We could work something up pretty quickly I'd expect!</p>",
        "createdAt": "2021-11-10T13:55:48Z",
        "replies": [
          {
            "author": {
              "name": "ninahorne",
              "avatar": "https://avatars.githubusercontent.com/u/10962388?u=d909f38c39b15dd46da4c49fb12a8a438fd6e6fd&v=4",
              "url": "https://github.com/ninahorne"
            },
            "body": "<p dir=\"auto\">I love the idea of adding an <code class=\"notranslate\">onChange</code> or <code class=\"notranslate\">value</code> handler! I could see many uses for that in my project, and I think it would be easier to keep my codebase more organized this way.</p>\n<p dir=\"auto\">That's so awesome! Thank you so much</p>",
            "createdAt": "2021-11-10T14:59:39Z"
          },
          {
            "author": {
              "name": "jacobsfletch",
              "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
              "url": "https://github.com/jacobsfletch"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ninahorne/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ninahorne\">@ninahorne</a> in the meantime could subscribe to your field's value using the <code class=\"notranslate\">useWatchForm</code> hook. An added benefit here is that form state is debounced. You would just need to be sure that your component doesn't re-render on every field change of the entire document, since this would happen very often.</p>",
            "createdAt": "2021-11-10T15:22:23Z"
          },
          {
            "author": {
              "name": "ninahorne",
              "avatar": "https://avatars.githubusercontent.com/u/10962388?u=d909f38c39b15dd46da4c49fb12a8a438fd6e6fd&v=4",
              "url": "https://github.com/ninahorne"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a>  that's really interesting! can you show me the docs for that?</p>",
            "createdAt": "2021-11-11T18:43:44Z"
          },
          {
            "author": {
              "name": "jacobsfletch",
              "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
              "url": "https://github.com/jacobsfletch"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ninahorne/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ninahorne\">@ninahorne</a> there are no docs for this (yet) but here's a little snippet to help get you started:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import { useWatchForm } from 'payload/components/forms';\nimport { Props as TextFieldType } from 'payload/dist/admin/components/forms/field-types/Text/types';\n\nexport const CustomComponent: React.FC&lt;TextFieldType&gt; = (props) =&gt; {\n  const { path } = props;\n\n  const { fields } = useWatchForm();\n\n  const { value } = fields[path];\n\n  return (\n    &lt;div&gt;\n      {value}\n    &lt;/div&gt;\n  )\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">import { useWatchForm } from 'payload/components/forms';\nimport { Props as TextFieldType } from 'payload/dist/admin/components/forms/field-types/Text/types';\n\nexport const CustomComponent: React.FC&lt;TextFieldType&gt; = (props) =&gt; {\n  const { path } = props;\n\n  const { fields } = useWatchForm();\n\n  const { value } = fields[path];\n\n  return (\n    &lt;div&gt;\n      {value}\n    &lt;/div&gt;\n  )\n}\n</code></pre></div>\n<p dir=\"auto\">I hope this is helpful!</p>",
            "createdAt": "2021-11-18T18:04:06Z"
          },
          {
            "author": {
              "name": "jacobsfletch",
              "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
              "url": "https://github.com/jacobsfletch"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ninahorne/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ninahorne\">@ninahorne</a> we are actively working through the solution that <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> described. You can follow the action <a href=\"https://github.com/payloadcms/payload/pull/367\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/367/hovercard\">in this pull request</a>.</p>",
            "createdAt": "2021-11-24T20:51:43Z"
          },
          {
            "author": {
              "name": "ninahorne",
              "avatar": "https://avatars.githubusercontent.com/u/10962388?u=d909f38c39b15dd46da4c49fb12a8a438fd6e6fd&v=4",
              "url": "https://github.com/ninahorne"
            },
            "body": "<p dir=\"auto\">Wow this looks great! looks like this is merged in? Can i update and check it out?</p>",
            "createdAt": "2021-11-28T23:12:30Z"
          },
          {
            "author": {
              "name": "jacobsfletch",
              "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
              "url": "https://github.com/jacobsfletch"
            },
            "body": "<p dir=\"auto\">We're almost there. One more merge <a href=\"#376\">(#376)</a> should do it. I'll post the version number and demo code once it's been deployed.</p>",
            "createdAt": "2021-11-29T23:39:05Z"
          }
        ]
      },
      {
        "author": {
          "name": "jacobsfletch",
          "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
          "url": "https://github.com/jacobsfletch"
        },
        "body": "<p dir=\"auto\">Okay <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ninahorne/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ninahorne\">@ninahorne</a> version <code class=\"notranslate\">0.13.6</code> deploys these new features into the <code class=\"notranslate\">Text</code>, <code class=\"notranslate\">Textarea</code>, <code class=\"notranslate\">Upload</code>, and <code class=\"notranslate\">Select</code> components.</p>\n<p dir=\"auto\">Your original request was for <code class=\"notranslate\">Select</code>, so here's an example what a <a href=\"https://github.com/payloadcms/payload/blob/master/demo/collections/CustomComponents/components/fields/Select/Field/index.tsx\">custom select component</a> might look like (and here's <a href=\"https://github.com/payloadcms/payload/blob/master/demo/collections/CustomComponents/index.ts#L69\">the config for that field</a>).</p>\n<p dir=\"auto\">It works exactly as you might expect by exposing the <code class=\"notranslate\">onChange</code> and <code class=\"notranslate\">value</code> for you to manage freely. If you want this value to continue saving to the document (as the example illustrates), you can still sync it with context via the <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/useField/index.tsx\"><code class=\"notranslate\">useField</code></a> hook.</p>\n<p dir=\"auto\">Let us know if you have any troubles wiring this in!</p>",
        "createdAt": "2021-11-30T16:29:18Z",
        "replies": [
          {
            "author": {
              "name": "ninahorne",
              "avatar": "https://avatars.githubusercontent.com/u/10962388?u=d909f38c39b15dd46da4c49fb12a8a438fd6e6fd&v=4",
              "url": "https://github.com/ninahorne"
            },
            "body": "<p dir=\"auto\">Thank you so much!! I will let you know if I have an issues getting this up and running.</p>",
            "createdAt": "2021-12-03T15:51:26Z"
          },
          {
            "author": {
              "name": "ninahorne",
              "avatar": "https://avatars.githubusercontent.com/u/10962388?u=d909f38c39b15dd46da4c49fb12a8a438fd6e6fd&v=4",
              "url": "https://github.com/ninahorne"
            },
            "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a> I am in version 0.13.6 but I am unable to reference the <code class=\"notranslate\">SelectInput </code> or <code class=\"notranslate\">SelectInputType</code> in the example. The <code class=\"notranslate\">Select</code> field also appears to be the same as before, with no <code class=\"notranslate\">onChange </code> handler. Am I missing something? Here's my package.json:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n{\n  &quot;name&quot;: &quot;payload-starter-typescript&quot;,\n  &quot;description&quot;: &quot;Blank template - no collections&quot;,\n  &quot;version&quot;: &quot;1.0.0&quot;,\n  &quot;main&quot;: &quot;dist/server.js&quot;,\n  &quot;license&quot;: &quot;MIT&quot;,\n  &quot;scripts&quot;: {\n    &quot;dev&quot;: &quot;cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts nodemon&quot;,\n    &quot;build:payload&quot;: &quot;cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts payload build&quot;,\n    &quot;build:server&quot;: &quot;tsc&quot;,\n    &quot;build&quot;: &quot;yarn build:payload &amp;&amp; yarn build:server&quot;,\n    &quot;serve&quot;: &quot;cross-env PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=production node dist/server.js&quot;\n  },\n  &quot;dependencies&quot;: {\n    &quot;axios&quot;: &quot;^0.23.0&quot;,\n    &quot;coa&quot;: &quot;^3.0.1&quot;,\n    &quot;dotenv&quot;: &quot;^8.2.0&quot;,\n    &quot;express&quot;: &quot;^4.17.1&quot;,\n    &quot;payload&quot;: &quot;^0.13.6&quot;,\n    &quot;styled-components&quot;: &quot;^5.3.1&quot;,\n    &quot;svgo&quot;: &quot;^2.8.0&quot;,\n    &quot;twilio&quot;: &quot;^3.71.1&quot;,\n    &quot;webpack&quot;: &quot;^5.58.2&quot;\n  },\n  &quot;devDependencies&quot;: {\n    &quot;@types/express&quot;: &quot;^4.17.9&quot;,\n    &quot;@types/styled-components&quot;: &quot;^5.1.15&quot;,\n    &quot;cross-env&quot;: &quot;^7.0.3&quot;,\n    &quot;nodemon&quot;: &quot;^2.0.14&quot;,\n    &quot;ts-node&quot;: &quot;^9.1.1&quot;,\n    &quot;typescript&quot;: &quot;^4.1.3&quot;\n  }\n}\n\"><pre class=\"notranslate\"><code class=\"notranslate\">\n{\n  \"name\": \"payload-starter-typescript\",\n  \"description\": \"Blank template - no collections\",\n  \"version\": \"1.0.0\",\n  \"main\": \"dist/server.js\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"dev\": \"cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts nodemon\",\n    \"build:payload\": \"cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts payload build\",\n    \"build:server\": \"tsc\",\n    \"build\": \"yarn build:payload &amp;&amp; yarn build:server\",\n    \"serve\": \"cross-env PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=production node dist/server.js\"\n  },\n  \"dependencies\": {\n    \"axios\": \"^0.23.0\",\n    \"coa\": \"^3.0.1\",\n    \"dotenv\": \"^8.2.0\",\n    \"express\": \"^4.17.1\",\n    \"payload\": \"^0.13.6\",\n    \"styled-components\": \"^5.3.1\",\n    \"svgo\": \"^2.8.0\",\n    \"twilio\": \"^3.71.1\",\n    \"webpack\": \"^5.58.2\"\n  },\n  \"devDependencies\": {\n    \"@types/express\": \"^4.17.9\",\n    \"@types/styled-components\": \"^5.1.15\",\n    \"cross-env\": \"^7.0.3\",\n    \"nodemon\": \"^2.0.14\",\n    \"ts-node\": \"^9.1.1\",\n    \"typescript\": \"^4.1.3\"\n  }\n}\n\n</code></pre></div>",
            "createdAt": "2021-12-07T18:58:28Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ninahorne/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ninahorne\">@ninahorne</a> — we just published a beta version where you can now import <em><strong>solely</strong></em> the inputs of the built-in <code class=\"notranslate\">Text</code> and <code class=\"notranslate\">Select</code> components. We'll be exposing more over time but for now these two should get you started!</p>\n<p dir=\"auto\">If you <code class=\"notranslate\">yarn add payload@0.13.8-beta.0</code> - you'll then be able to import the inputs themselves like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { TextInput, SelectInput } from 'payload/components/forms';\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">TextInput</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">SelectInput</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/forms'</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">This should be what you need!</p>\n<p dir=\"auto\">We'll document this information fully as soon as we publish a patch version inclusive of these changes. <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
            "createdAt": "2021-12-20T15:43:49Z"
          }
        ]
      },
      {
        "author": {
          "name": "ninahorne",
          "avatar": "https://avatars.githubusercontent.com/u/10962388?u=d909f38c39b15dd46da4c49fb12a8a438fd6e6fd&v=4",
          "url": "https://github.com/ninahorne"
        },
        "body": "<div class=\"email-fragment\">Thank you!</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">…</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Mon, Dec 20, 2021 at 10:44 AM James Mikrut ***@***.***&gt; wrote:\n Hey <a class=\"user-mention\" href=\"https://github.com/ninahorne\">@ninahorne</a> &lt;<a href=\"https://github.com/ninahorne\">https://github.com/ninahorne</a>&gt; — we just published a beta\n version where you can now import *solely* the inputs of the built-in Text\n and Select components. We'll be exposing more over time but for now these\n two should get you started!\n\n If you yarn add ***@***.*** - you'll then be able to import the\n inputs themselves like this:\n\n import { TextInput, SelectInput } from 'payload/components/forms';\n\n This should be what you need!\n\n —\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3676086\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/360\" href=\"https://github.com/payloadcms/payload/discussions/360#discussioncomment-1847965\">#360 (reply in thread)</a>&gt;,\n or unsubscribe\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/ACTULVCBO3F5CCI4SWHAM4LUR5FMBANCNFSM5HWKURSA\">https://github.com/notifications/unsubscribe-auth/ACTULVCBO3F5CCI4SWHAM4LUR5FMBANCNFSM5HWKURSA</a>&gt;\n .\n Triage notifications on the go with GitHub Mobile for iOS\n &lt;<a href=\"https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&amp;mt=8&amp;pt=524675\">https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&amp;mt=8&amp;pt=524675</a>&gt;\n or Android\n &lt;<a href=\"https://play.google.com/store/apps/details?id=com.github.android&amp;referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub\">https://play.google.com/store/apps/details?id=com.github.android&amp;referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub</a>&gt;.\n\n You are receiving this because you were mentioned.Message ID:\n ***@***.***&gt;\n</div>\n<div class=\"email-fragment\"></div>\n</div>",
        "createdAt": "2021-12-20T17:33:06Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jacobsfletch",
        "avatar": "https://avatars.githubusercontent.com/u/15735305?u=66f38c58ddbb2f01cee44ef09a602cd8ffe4cd5d&v=4",
        "url": "https://github.com/jacobsfletch"
      },
      "body": "<p dir=\"auto\">Okay <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ninahorne/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ninahorne\">@ninahorne</a> version <code class=\"notranslate\">0.13.6</code> deploys these new features into the <code class=\"notranslate\">Text</code>, <code class=\"notranslate\">Textarea</code>, <code class=\"notranslate\">Upload</code>, and <code class=\"notranslate\">Select</code> components.</p>\n<p dir=\"auto\">Your original request was for <code class=\"notranslate\">Select</code>, so here's an example what a <a href=\"https://github.com/payloadcms/payload/blob/master/demo/collections/CustomComponents/components/fields/Select/Field/index.tsx\">custom select component</a> might look like (and here's <a href=\"https://github.com/payloadcms/payload/blob/master/demo/collections/CustomComponents/index.ts#L69\">the config for that field</a>).</p>\n<p dir=\"auto\">It works exactly as you might expect by exposing the <code class=\"notranslate\">onChange</code> and <code class=\"notranslate\">value</code> for you to manage freely. If you want this value to continue saving to the document (as the example illustrates), you can still sync it with context via the <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/useField/index.tsx\"><code class=\"notranslate\">useField</code></a> hook.</p>\n<p dir=\"auto\">Let us know if you have any troubles wiring this in!</p>",
      "createdAt": "2021-11-30T16:29:18Z",
      "chosenAt": "2021-11-30T16:29:22Z",
      "chosenBy": "jacobsfletch",
      "replies": [
        {
          "author": {
            "name": "ninahorne",
            "avatar": "https://avatars.githubusercontent.com/u/10962388?u=d909f38c39b15dd46da4c49fb12a8a438fd6e6fd&v=4",
            "url": "https://github.com/ninahorne"
          },
          "body": "<p dir=\"auto\">Thank you so much!! I will let you know if I have an issues getting this up and running.</p>",
          "createdAt": "2021-12-03T15:51:26Z"
        },
        {
          "author": {
            "name": "ninahorne",
            "avatar": "https://avatars.githubusercontent.com/u/10962388?u=d909f38c39b15dd46da4c49fb12a8a438fd6e6fd&v=4",
            "url": "https://github.com/ninahorne"
          },
          "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jacobsfletch/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacobsfletch\">@jacobsfletch</a> I am in version 0.13.6 but I am unable to reference the <code class=\"notranslate\">SelectInput </code> or <code class=\"notranslate\">SelectInputType</code> in the example. The <code class=\"notranslate\">Select</code> field also appears to be the same as before, with no <code class=\"notranslate\">onChange </code> handler. Am I missing something? Here's my package.json:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n{\n  &quot;name&quot;: &quot;payload-starter-typescript&quot;,\n  &quot;description&quot;: &quot;Blank template - no collections&quot;,\n  &quot;version&quot;: &quot;1.0.0&quot;,\n  &quot;main&quot;: &quot;dist/server.js&quot;,\n  &quot;license&quot;: &quot;MIT&quot;,\n  &quot;scripts&quot;: {\n    &quot;dev&quot;: &quot;cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts nodemon&quot;,\n    &quot;build:payload&quot;: &quot;cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts payload build&quot;,\n    &quot;build:server&quot;: &quot;tsc&quot;,\n    &quot;build&quot;: &quot;yarn build:payload &amp;&amp; yarn build:server&quot;,\n    &quot;serve&quot;: &quot;cross-env PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=production node dist/server.js&quot;\n  },\n  &quot;dependencies&quot;: {\n    &quot;axios&quot;: &quot;^0.23.0&quot;,\n    &quot;coa&quot;: &quot;^3.0.1&quot;,\n    &quot;dotenv&quot;: &quot;^8.2.0&quot;,\n    &quot;express&quot;: &quot;^4.17.1&quot;,\n    &quot;payload&quot;: &quot;^0.13.6&quot;,\n    &quot;styled-components&quot;: &quot;^5.3.1&quot;,\n    &quot;svgo&quot;: &quot;^2.8.0&quot;,\n    &quot;twilio&quot;: &quot;^3.71.1&quot;,\n    &quot;webpack&quot;: &quot;^5.58.2&quot;\n  },\n  &quot;devDependencies&quot;: {\n    &quot;@types/express&quot;: &quot;^4.17.9&quot;,\n    &quot;@types/styled-components&quot;: &quot;^5.1.15&quot;,\n    &quot;cross-env&quot;: &quot;^7.0.3&quot;,\n    &quot;nodemon&quot;: &quot;^2.0.14&quot;,\n    &quot;ts-node&quot;: &quot;^9.1.1&quot;,\n    &quot;typescript&quot;: &quot;^4.1.3&quot;\n  }\n}\n\"><pre class=\"notranslate\"><code class=\"notranslate\">\n{\n  \"name\": \"payload-starter-typescript\",\n  \"description\": \"Blank template - no collections\",\n  \"version\": \"1.0.0\",\n  \"main\": \"dist/server.js\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"dev\": \"cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts nodemon\",\n    \"build:payload\": \"cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts payload build\",\n    \"build:server\": \"tsc\",\n    \"build\": \"yarn build:payload &amp;&amp; yarn build:server\",\n    \"serve\": \"cross-env PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=production node dist/server.js\"\n  },\n  \"dependencies\": {\n    \"axios\": \"^0.23.0\",\n    \"coa\": \"^3.0.1\",\n    \"dotenv\": \"^8.2.0\",\n    \"express\": \"^4.17.1\",\n    \"payload\": \"^0.13.6\",\n    \"styled-components\": \"^5.3.1\",\n    \"svgo\": \"^2.8.0\",\n    \"twilio\": \"^3.71.1\",\n    \"webpack\": \"^5.58.2\"\n  },\n  \"devDependencies\": {\n    \"@types/express\": \"^4.17.9\",\n    \"@types/styled-components\": \"^5.1.15\",\n    \"cross-env\": \"^7.0.3\",\n    \"nodemon\": \"^2.0.14\",\n    \"ts-node\": \"^9.1.1\",\n    \"typescript\": \"^4.1.3\"\n  }\n}\n\n</code></pre></div>",
          "createdAt": "2021-12-07T18:58:28Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ninahorne/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ninahorne\">@ninahorne</a> — we just published a beta version where you can now import <em><strong>solely</strong></em> the inputs of the built-in <code class=\"notranslate\">Text</code> and <code class=\"notranslate\">Select</code> components. We'll be exposing more over time but for now these two should get you started!</p>\n<p dir=\"auto\">If you <code class=\"notranslate\">yarn add payload@0.13.8-beta.0</code> - you'll then be able to import the inputs themselves like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { TextInput, SelectInput } from 'payload/components/forms';\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">TextInput</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">SelectInput</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/components/forms'</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">This should be what you need!</p>\n<p dir=\"auto\">We'll document this information fully as soon as we publish a patch version inclusive of these changes. <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
          "createdAt": "2021-12-20T15:43:49Z"
        }
      ]
    }
  },
  {
    "title": "Access Control RBAC - get record ID / get collection",
    "body": "<p dir=\"auto\">I'm trying to follow along with the docs and receive an ID with my access control functions.</p>\n<p dir=\"auto\">I'm expecting the <code class=\"notranslate\">req</code> and <code class=\"notranslate\">id</code> parameter, but am only seeing <code class=\"notranslate\">req</code>. It looks like the URL is <code class=\"notranslate\">/access</code> and not the collection I'm checking (This is when loading the update page).</p>\n<p dir=\"auto\">Additionally, is there any way to figure out what collection I'm in on an access control method? I can see the user, but I'd also like to do more advanced checks depending on which collection I'm on.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/389",
    "id": "389",
    "createdAt": "2021-12-10T14:36:59Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "ryanlanciaux",
      "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
      "url": "https://github.com/ryanlanciaux"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ryanlanciaux/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ryanlanciaux\">@ryanlanciaux</a> — I can give some insight here.</p>\n<p dir=\"auto\">The <code class=\"notranslate\">id</code> parameter is optional and only going to be present in some access control methods, in certain cases. For example, there is no <code class=\"notranslate\">id</code> yet in <code class=\"notranslate\">create</code> access control.</p>\n<p dir=\"auto\">Also—you're seeing your access control function being called from the <code class=\"notranslate\">access</code> operation, which goes through and calls <em><strong>all access control</strong></em> through all your collections and globals. But, while your access control functions are being called by the <code class=\"notranslate\">access</code> operation, there will be no ID present there either.</p>\n<p dir=\"auto\">The <code class=\"notranslate\">access</code> operation is responsible for telling the admin UI what you can and can't do. You can hit it in your browser by going to <code class=\"notranslate\">/api/access</code> to see what it looks like.</p>\n<p dir=\"auto\">Also, in regards to knowing what collection you're in, I would recommend abstracting your access control functions in a way that allows you to pass them the collection that you're on so you have full control. Like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export const accessControl = ({ req }) =&gt; {\n  // how do we know what collection we're in?\n  return true; // simple example\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">accessControl</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// how do we know what collection we're in?</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// simple example</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { accessControl } from './access';\n\nconst pages = {\n  slug: 'pages',\n  access: {\n    read: accessControl,\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">accessControl</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./access'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">pages</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">read</span>: <span class=\"pl-s1\">accessControl</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">You're probably sharing a function like this through many collections, and within that function there is no way to know what collection you're on.</p>\n<p dir=\"auto\">Instead, you could do this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export const getAccessControl = (collectionSlug) =&gt; ({ req }) =&gt; {\n  // Now we know that our collection is `collectionSlug`\n  return true; // simple example\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">getAccessControl</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">collectionSlug</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// Now we know that our collection is `collectionSlug`</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// simple example</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { getAccessControl } from './access';\n\nconst pages = {\n  slug: 'pages',\n  access: {\n    read: getAccessControl('pages'),\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">getAccessControl</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./access'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">pages</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">read</span>: <span class=\"pl-en\">getAccessControl</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Does that make sense? There are many other patterns of abstraction that can work here but this is the one we'd generally use.</p>\n<p dir=\"auto\">Also - can I ask what you need the ID of the document for? Are you familiar with the nature of how returning <code class=\"notranslate\">query constraints</code> can help you write super clean access control functions? In about 99% of cases you can do what you need with returning a query constraint instead of dealing directly with a document ID.</p>\n<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
        "createdAt": "2021-12-10T14:58:27Z",
        "replies": [
          {
            "author": {
              "name": "ryanlanciaux",
              "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
              "url": "https://github.com/ryanlanciaux"
            },
            "body": "<p dir=\"auto\">Thanks, I think it makes sense. In regard to the ID, I may need to describe the configuration I'm currently trying to have admins, and organization admins.</p>\n<h3 dir=\"auto\">Collections</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// kind of pseudocode - not entirely valid\nconst Users =  {\n  role: 'Admin' | 'OrganizationAdmin',\n  // conditional based on admin or organizationAdmin\n  organizations: { type: 'relationship', hasMany: true, name: 'organizations', relationTo: ['organizations']  }\n}\n\nconst Organizations = {\n   ... fields for organizations, there are some blocks here too (most of my confusion is here)\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">// kind of pseudocode - not entirely valid\nconst Users =  {\n  role: 'Admin' | 'OrganizationAdmin',\n  // conditional based on admin or organizationAdmin\n  organizations: { type: 'relationship', hasMany: true, name: 'organizations', relationTo: ['organizations']  }\n}\n\nconst Organizations = {\n   ... fields for organizations, there are some blocks here too (most of my confusion is here)\n}\n</code></pre></div>\n<h2 dir=\"auto\">Attempting to use query</h2>\n<p dir=\"auto\">Against organizations, when I write a query, it always is showing up. Initially I attempted to handle this with a query somewhat similar to the following (accepting user off of <code class=\"notranslate\">req</code>)</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  return {\n      id: {\n        in: userOrganizationIds // array\n      },\n  }\n\"><pre class=\"notranslate\"><code class=\"notranslate\">  return {\n      id: {\n        in: userOrganizationIds // array\n      },\n  }\n\n</code></pre></div>\n<p dir=\"auto\">This <em>always</em> provides access to update the fields when I'm expecting it should be like returning <code class=\"notranslate\">false</code> from the method.</p>\n<h2 dir=\"auto\">Manually attempting to query</h2>\n<p dir=\"auto\">This is where I'm trying to obtain the ID and the collection I'm in. It feels like an unideal way to achieve the result I'm looking for, but the thinking is I could manually perform the query with the <code class=\"notranslate\">payload.find</code> and return true / false depending on the results.</p>",
            "createdAt": "2021-12-10T16:31:34Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">OK I'm following what you're doing.</p>\n<p dir=\"auto\">I think it would be good to see your whole access control function code. This may just be a case of making sure that you are reducing down your <code class=\"notranslate\">req.user.organizations</code> to their IDs only.</p>\n<p dir=\"auto\">Take a look at the following documentation regarding how relationship data is saved:</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/fields/relationship#how-the-data-is-saved\" rel=\"nofollow\">https://payloadcms.com/docs/fields/relationship#how-the-data-is-saved</a></p>\n<p dir=\"auto\">You'll see that because you have your <code class=\"notranslate\">relationTo</code> property set to an array of values, your data will be saved as the <code class=\"notranslate\">Has Many - Polymorphic</code> section from the docs. Like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const user = {\n  // the rest of the user here\n  organizations: [\n    {\n      relationTo: 'organizations',\n      value: '34jl34ij53l4ijrl34ijr43', // some ID\n    },\n    {\n      relationTo: 'organizations',\n      value: '34jl34ij53l4ijrl34ijr43', // some ID\n    },    \n  ]\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">user</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// the rest of the user here</span>\n  <span class=\"pl-c1\">organizations</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'organizations'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">value</span>: <span class=\"pl-s\">'34jl34ij53l4ijrl34ijr43'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// some ID</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'organizations'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">value</span>: <span class=\"pl-s\">'34jl34ij53l4ijrl34ijr43'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// some ID</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>    \n  <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Which means that your access control should be formatted like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export const restrictByOrganization = ({ req }) =&gt; {\n  if (req.user &amp;&amp; Array.isArray(req.user.organizations)) {\n    // As you are saving your user orgs as `hasMany: true` and `relationTo` as an array,\n    // we need to reduce down the user organizations to only their values\n    const orgIDs = req.user.organizations.reduce((ids, org) =&gt; {\n      return [\n        ...ids,\n        org.value,\n      ]\n    }, []);\n\n    // Now we'll end up with an array of IDs appropriately\n    // and can use the IDs to build a query constraint\n\n    return {\n      id: {\n        in: orgIDs\n      }\n    }\n  }\n\n  return false;\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">restrictByOrganization</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-v\">Array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">isArray</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">organizations</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// As you are saving your user orgs as `hasMany: true` and `relationTo` as an array,</span>\n    <span class=\"pl-c\">// we need to reduce down the user organizations to only their values</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">orgIDs</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">organizations</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reduce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">ids</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">org</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-kos\">[</span>\n        ...<span class=\"pl-s1\">ids</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-s1\">org</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">]</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-c\">// Now we'll end up with an array of IDs appropriately</span>\n    <span class=\"pl-c\">// and can use the IDs to build a query constraint</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">id</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">in</span>: <span class=\"pl-s1\">orgIDs</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Is this where your problem lies? Are you sure you're returning an array of IDs only?</p>",
            "createdAt": "2021-12-13T15:18:09Z"
          },
          {
            "author": {
              "name": "ryanlanciaux",
              "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
              "url": "https://github.com/ryanlanciaux"
            },
            "body": "<p dir=\"auto\">Thanks a ton - This works. I think reducing the values made a difference as opposed to trying to query the items directly.</p>",
            "createdAt": "2021-12-15T17:01:45Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ryanlanciaux/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ryanlanciaux\">@ryanlanciaux</a> — I can give some insight here.</p>\n<p dir=\"auto\">The <code class=\"notranslate\">id</code> parameter is optional and only going to be present in some access control methods, in certain cases. For example, there is no <code class=\"notranslate\">id</code> yet in <code class=\"notranslate\">create</code> access control.</p>\n<p dir=\"auto\">Also—you're seeing your access control function being called from the <code class=\"notranslate\">access</code> operation, which goes through and calls <em><strong>all access control</strong></em> through all your collections and globals. But, while your access control functions are being called by the <code class=\"notranslate\">access</code> operation, there will be no ID present there either.</p>\n<p dir=\"auto\">The <code class=\"notranslate\">access</code> operation is responsible for telling the admin UI what you can and can't do. You can hit it in your browser by going to <code class=\"notranslate\">/api/access</code> to see what it looks like.</p>\n<p dir=\"auto\">Also, in regards to knowing what collection you're in, I would recommend abstracting your access control functions in a way that allows you to pass them the collection that you're on so you have full control. Like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export const accessControl = ({ req }) =&gt; {\n  // how do we know what collection we're in?\n  return true; // simple example\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">accessControl</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// how do we know what collection we're in?</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// simple example</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { accessControl } from './access';\n\nconst pages = {\n  slug: 'pages',\n  access: {\n    read: accessControl,\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">accessControl</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./access'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">pages</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">read</span>: <span class=\"pl-s1\">accessControl</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">You're probably sharing a function like this through many collections, and within that function there is no way to know what collection you're on.</p>\n<p dir=\"auto\">Instead, you could do this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export const getAccessControl = (collectionSlug) =&gt; ({ req }) =&gt; {\n  // Now we know that our collection is `collectionSlug`\n  return true; // simple example\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">getAccessControl</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">collectionSlug</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// Now we know that our collection is `collectionSlug`</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// simple example</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { getAccessControl } from './access';\n\nconst pages = {\n  slug: 'pages',\n  access: {\n    read: getAccessControl('pages'),\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">getAccessControl</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./access'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">pages</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">read</span>: <span class=\"pl-en\">getAccessControl</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'pages'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Does that make sense? There are many other patterns of abstraction that can work here but this is the one we'd generally use.</p>\n<p dir=\"auto\">Also - can I ask what you need the ID of the document for? Are you familiar with the nature of how returning <code class=\"notranslate\">query constraints</code> can help you write super clean access control functions? In about 99% of cases you can do what you need with returning a query constraint instead of dealing directly with a document ID.</p>\n<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
      "createdAt": "2021-12-10T14:58:27Z",
      "chosenAt": "2021-12-15T17:02:21Z",
      "chosenBy": "ryanlanciaux",
      "replies": [
        {
          "author": {
            "name": "ryanlanciaux",
            "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
            "url": "https://github.com/ryanlanciaux"
          },
          "body": "<p dir=\"auto\">Thanks, I think it makes sense. In regard to the ID, I may need to describe the configuration I'm currently trying to have admins, and organization admins.</p>\n<h3 dir=\"auto\">Collections</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// kind of pseudocode - not entirely valid\nconst Users =  {\n  role: 'Admin' | 'OrganizationAdmin',\n  // conditional based on admin or organizationAdmin\n  organizations: { type: 'relationship', hasMany: true, name: 'organizations', relationTo: ['organizations']  }\n}\n\nconst Organizations = {\n   ... fields for organizations, there are some blocks here too (most of my confusion is here)\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">// kind of pseudocode - not entirely valid\nconst Users =  {\n  role: 'Admin' | 'OrganizationAdmin',\n  // conditional based on admin or organizationAdmin\n  organizations: { type: 'relationship', hasMany: true, name: 'organizations', relationTo: ['organizations']  }\n}\n\nconst Organizations = {\n   ... fields for organizations, there are some blocks here too (most of my confusion is here)\n}\n</code></pre></div>\n<h2 dir=\"auto\">Attempting to use query</h2>\n<p dir=\"auto\">Against organizations, when I write a query, it always is showing up. Initially I attempted to handle this with a query somewhat similar to the following (accepting user off of <code class=\"notranslate\">req</code>)</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  return {\n      id: {\n        in: userOrganizationIds // array\n      },\n  }\n\"><pre class=\"notranslate\"><code class=\"notranslate\">  return {\n      id: {\n        in: userOrganizationIds // array\n      },\n  }\n\n</code></pre></div>\n<p dir=\"auto\">This <em>always</em> provides access to update the fields when I'm expecting it should be like returning <code class=\"notranslate\">false</code> from the method.</p>\n<h2 dir=\"auto\">Manually attempting to query</h2>\n<p dir=\"auto\">This is where I'm trying to obtain the ID and the collection I'm in. It feels like an unideal way to achieve the result I'm looking for, but the thinking is I could manually perform the query with the <code class=\"notranslate\">payload.find</code> and return true / false depending on the results.</p>",
          "createdAt": "2021-12-10T16:31:34Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">OK I'm following what you're doing.</p>\n<p dir=\"auto\">I think it would be good to see your whole access control function code. This may just be a case of making sure that you are reducing down your <code class=\"notranslate\">req.user.organizations</code> to their IDs only.</p>\n<p dir=\"auto\">Take a look at the following documentation regarding how relationship data is saved:</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/fields/relationship#how-the-data-is-saved\" rel=\"nofollow\">https://payloadcms.com/docs/fields/relationship#how-the-data-is-saved</a></p>\n<p dir=\"auto\">You'll see that because you have your <code class=\"notranslate\">relationTo</code> property set to an array of values, your data will be saved as the <code class=\"notranslate\">Has Many - Polymorphic</code> section from the docs. Like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const user = {\n  // the rest of the user here\n  organizations: [\n    {\n      relationTo: 'organizations',\n      value: '34jl34ij53l4ijrl34ijr43', // some ID\n    },\n    {\n      relationTo: 'organizations',\n      value: '34jl34ij53l4ijrl34ijr43', // some ID\n    },    \n  ]\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">user</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// the rest of the user here</span>\n  <span class=\"pl-c1\">organizations</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'organizations'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">value</span>: <span class=\"pl-s\">'34jl34ij53l4ijrl34ijr43'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// some ID</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'organizations'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">value</span>: <span class=\"pl-s\">'34jl34ij53l4ijrl34ijr43'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// some ID</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>    \n  <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Which means that your access control should be formatted like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export const restrictByOrganization = ({ req }) =&gt; {\n  if (req.user &amp;&amp; Array.isArray(req.user.organizations)) {\n    // As you are saving your user orgs as `hasMany: true` and `relationTo` as an array,\n    // we need to reduce down the user organizations to only their values\n    const orgIDs = req.user.organizations.reduce((ids, org) =&gt; {\n      return [\n        ...ids,\n        org.value,\n      ]\n    }, []);\n\n    // Now we'll end up with an array of IDs appropriately\n    // and can use the IDs to build a query constraint\n\n    return {\n      id: {\n        in: orgIDs\n      }\n    }\n  }\n\n  return false;\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">restrictByOrganization</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> req <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-v\">Array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">isArray</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">organizations</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// As you are saving your user orgs as `hasMany: true` and `relationTo` as an array,</span>\n    <span class=\"pl-c\">// we need to reduce down the user organizations to only their values</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">orgIDs</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">organizations</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reduce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">ids</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">org</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-kos\">[</span>\n        ...<span class=\"pl-s1\">ids</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-s1\">org</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">]</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-c\">// Now we'll end up with an array of IDs appropriately</span>\n    <span class=\"pl-c\">// and can use the IDs to build a query constraint</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">id</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">in</span>: <span class=\"pl-s1\">orgIDs</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Is this where your problem lies? Are you sure you're returning an array of IDs only?</p>",
          "createdAt": "2021-12-13T15:18:09Z"
        },
        {
          "author": {
            "name": "ryanlanciaux",
            "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
            "url": "https://github.com/ryanlanciaux"
          },
          "body": "<p dir=\"auto\">Thanks a ton - This works. I think reducing the values made a difference as opposed to trying to query the items directly.</p>",
          "createdAt": "2021-12-15T17:01:45Z"
        }
      ]
    }
  },
  {
    "title": "Running the demo",
    "body": "<p dir=\"auto\">Hello again,<br>\nas I'm digging deeper into payload, I was wondering on how to setup custom components for</p>\n<ol dir=\"auto\">\n<li>The Dashboard / UI and</li>\n<li>Custom fieldtypes</li>\n</ol>\n<p dir=\"auto\">The documentation is a bit scarce on that imo, so I wanted to run the demo project but whenever I clone the repo and run <code class=\"notranslate\">npm run build</code> or <code class=\"notranslate\">npm run demo</code> I get errors.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n&gt; payload@0.4.4 build\n&gt; yarn copyfiles &amp;&amp; yarn build:tsc &amp;&amp; yarn build:components\n\nyarn run v1.22.4\n$ copyfiles -u 1 src/**/*.{html,css,scss,ttf,woff,woff2,eot,svg,jpg,png} dist/\n✨  Done in 0.58s.\nyarn run v1.22.4\n$ tsc --p tsconfig.admin.json &amp;&amp; tsc --p tsconfig.server.json\nsrc/admin/hooks/useUnmountEffect.tsx:4:78 - error TS2345: Argument of type '() =&gt; React.EffectCallback' is not assignable to parameter of type 'EffectCallback'.\n  Type 'EffectCallback' is not assignable to type 'void | Destructor'.\n    Type 'EffectCallback' is not assignable to type 'Destructor'.\n      Type 'void | Destructor' is not assignable to type 'void | { [UNDEFINED_VOID_ONLY]: never; }'.\n        Type 'Destructor' is not assignable to type 'void | { [UNDEFINED_VOID_ONLY]: never; }'.\n          Property '[UNDEFINED_VOID_ONLY]' is missing in type 'Destructor' but required in type '{ [UNDEFINED_VOID_ONLY]: never; }'.\n\n4 const useUnmountEffect = (callback: React.EffectCallback): void =&gt; useEffect(() =&gt; callback, []);\n                                                                               ~~~~~~~~~~~~~~\n\n  node_modules/@types/react/index.d.ts:58:34\n    58 type Destructor = () =&gt; void | { [UNDEFINED_VOID_ONLY]: never };\n                                        ~~~~~~~~~~~~~~~~~~~~~\n    '[UNDEFINED_VOID_ONLY]' is declared here.\n  src/admin/hooks/useUnmountEffect.tsx:4:78\n    4 const useUnmountEffect = (callback: React.EffectCallback): void =&gt; useEffect(() =&gt; callback, []);\n                                                                                   ~~~~~~~~~~~~~~\n    Did you mean to call this expression?\n\nsrc/admin/index.tsx:21:27 - error TS2741: Property 'xl' is missing in type '{ xs: number; s: number; m: number; l: number; }' but required in type 'Breakpoints'.\n\n21       &lt;WindowInfoProvider breakpoints={{\n                             ~~~~~~~~~~~\n\n  node_modules/@faceless-ui/window-info/dist/WindowInfoProvider/types.d.ts:6:5\n    6     xl: number;\n          ~~\n    'xl' is declared here.\n  node_modules/@faceless-ui/window-info/dist/WindowInfoProvider/types.d.ts:9:5\n    9     breakpoints: Breakpoints;\n          ~~~~~~~~~~~\n    The expected type comes from property 'breakpoints' which is declared here on type 'IntrinsicAttributes &amp; IntrinsicClassAttributes&lt;WindowInfoProvider&gt; &amp; Readonly&lt;Props&gt; &amp; Readonly&lt;...&gt;'\n\nsrc/uploads/getFileByPath.ts:9:27 - error TS2339: Property 'getType' does not exist on type 'typeof import(&quot;/Users/dominik/Development/payload/node_modules/@types/mime/index&quot;)'.\n\n9     const mimetype = mime.getType(filePath);\n                            ~~~~~~~\n\n\nFound 3 errors.\n\nerror Command failed with exit code 2.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\nnpm ERR! code 2\nnpm ERR! path /Users/dominik/Development/payload\nnpm ERR! command failed\nnpm ERR! command sh -c yarn copyfiles &amp;&amp; yarn build:tsc &amp;&amp; yarn build:components\n\nnpm ERR! A complete log of this run can be found in:\"><pre class=\"notranslate\"><code class=\"notranslate\">\n&gt; payload@0.4.4 build\n&gt; yarn copyfiles &amp;&amp; yarn build:tsc &amp;&amp; yarn build:components\n\nyarn run v1.22.4\n$ copyfiles -u 1 src/**/*.{html,css,scss,ttf,woff,woff2,eot,svg,jpg,png} dist/\n✨  Done in 0.58s.\nyarn run v1.22.4\n$ tsc --p tsconfig.admin.json &amp;&amp; tsc --p tsconfig.server.json\nsrc/admin/hooks/useUnmountEffect.tsx:4:78 - error TS2345: Argument of type '() =&gt; React.EffectCallback' is not assignable to parameter of type 'EffectCallback'.\n  Type 'EffectCallback' is not assignable to type 'void | Destructor'.\n    Type 'EffectCallback' is not assignable to type 'Destructor'.\n      Type 'void | Destructor' is not assignable to type 'void | { [UNDEFINED_VOID_ONLY]: never; }'.\n        Type 'Destructor' is not assignable to type 'void | { [UNDEFINED_VOID_ONLY]: never; }'.\n          Property '[UNDEFINED_VOID_ONLY]' is missing in type 'Destructor' but required in type '{ [UNDEFINED_VOID_ONLY]: never; }'.\n\n4 const useUnmountEffect = (callback: React.EffectCallback): void =&gt; useEffect(() =&gt; callback, []);\n                                                                               ~~~~~~~~~~~~~~\n\n  node_modules/@types/react/index.d.ts:58:34\n    58 type Destructor = () =&gt; void | { [UNDEFINED_VOID_ONLY]: never };\n                                        ~~~~~~~~~~~~~~~~~~~~~\n    '[UNDEFINED_VOID_ONLY]' is declared here.\n  src/admin/hooks/useUnmountEffect.tsx:4:78\n    4 const useUnmountEffect = (callback: React.EffectCallback): void =&gt; useEffect(() =&gt; callback, []);\n                                                                                   ~~~~~~~~~~~~~~\n    Did you mean to call this expression?\n\nsrc/admin/index.tsx:21:27 - error TS2741: Property 'xl' is missing in type '{ xs: number; s: number; m: number; l: number; }' but required in type 'Breakpoints'.\n\n21       &lt;WindowInfoProvider breakpoints={{\n                             ~~~~~~~~~~~\n\n  node_modules/@faceless-ui/window-info/dist/WindowInfoProvider/types.d.ts:6:5\n    6     xl: number;\n          ~~\n    'xl' is declared here.\n  node_modules/@faceless-ui/window-info/dist/WindowInfoProvider/types.d.ts:9:5\n    9     breakpoints: Breakpoints;\n          ~~~~~~~~~~~\n    The expected type comes from property 'breakpoints' which is declared here on type 'IntrinsicAttributes &amp; IntrinsicClassAttributes&lt;WindowInfoProvider&gt; &amp; Readonly&lt;Props&gt; &amp; Readonly&lt;...&gt;'\n\nsrc/uploads/getFileByPath.ts:9:27 - error TS2339: Property 'getType' does not exist on type 'typeof import(\"/Users/dominik/Development/payload/node_modules/@types/mime/index\")'.\n\n9     const mimetype = mime.getType(filePath);\n                            ~~~~~~~\n\n\nFound 3 errors.\n\nerror Command failed with exit code 2.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\nnpm ERR! code 2\nnpm ERR! path /Users/dominik/Development/payload\nnpm ERR! command failed\nnpm ERR! command sh -c yarn copyfiles &amp;&amp; yarn build:tsc &amp;&amp; yarn build:components\n\nnpm ERR! A complete log of this run can be found in:\n</code></pre></div>\n<p dir=\"auto\">So my question is: How are you supposed to run the demo? Does someone have a writeup?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/93",
    "id": "93",
    "createdAt": "2021-03-10T12:04:08Z",
    "upvotes": 1,
    "commentTotal": 5,
    "author": {
      "name": "SuddenDev",
      "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
      "url": "https://github.com/SuddenDev"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/SuddenDev/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SuddenDev\">@SuddenDev</a>,<br>\nWe use the <code class=\"notranslate\">demo</code> in the repo as our develepment playground when building new features or troubleshooting. It could be useful for reference, but it might not provide a ton of value for building your own projects with Payload as your dependency. You're welcome to play with it though! You can use <code class=\"notranslate\">npm run dev</code> for live reload or <code class=\"notranslate\">demo:build</code> will create a dist of the demo in <code class=\"notranslate\">/dist/bin/</code>.</p>\n<p dir=\"auto\">I'm not certain about the errors you shared, we use <code class=\"notranslate\">yarn build</code> when its time to release each new version of Payload. I am not sure how useful that would be for you.</p>\n<p dir=\"auto\">Have you read the docs part about customizing components? <a href=\"https://payloadcms.com/docs/admin/components#fields\" rel=\"nofollow\">https://payloadcms.com/docs/admin/components#fields</a></p>\n<p dir=\"auto\">Certainly there is more we can provide when it comes to custom fields, what is it you're looking to do? I'm happy to help!</p>",
        "createdAt": "2021-03-10T13:59:09Z",
        "replies": [
          {
            "author": {
              "name": "SuddenDev",
              "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
              "url": "https://github.com/SuddenDev"
            },
            "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a>,<br>\nAh, that's good to know! I thought the demo was also build-able by users, since it's referenced in the docs.</p>\n<p dir=\"auto\">I did read through the documentation, but have a bit of a trouble to wrap my head around it. Maybe it's just me, but an written example guide would be a great addition to the (already good) docs.</p>\n<ul dir=\"auto\">\n<li>So let's just assume that I need a color picker field. How would you start with that? Can you register the the field globally or do you have to reference it in every collection / global, that you need it in?</li>\n<li>And as far as I understood it, <code class=\"notranslate\">Filter</code> and <code class=\"notranslate\">Cell</code> are just for the Listview in the panel and don't really need logic in my colorpicker example, since it would just render some stuff (e.g. the hex code), right?</li>\n</ul>\n<p dir=\"auto\">I'd highly appreacate it, if you could give like even just a short tutorial or write up!</p>",
            "createdAt": "2021-03-10T22:35:11Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">We will have more tutorials up in the future. I'm going to add this to our list topics to cover in more depth. For now I'll do my best to answer your questions.</p>\n<p dir=\"auto\">What I would recommend is if you have a field that you want to reuse throughout your collections or globals, export it from a single place in your app.</p>\n<p dir=\"auto\">filename: colorField.js</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// assuming these are actual components in your app somewhere\nimport ColorPicker from '../components/ColorPicker';\nimport ColorChip from '../components/ColorChip';\n\n// let's validate colors just in case\nfunction isHexColor(val) {\n  return val.match(/^#(?:[0-9a-fA-F]{3}){1,2}$/) || `${val} is not a valid hex color`;\n}\n\nconst colorField = {\n      name: 'color',\n      label: 'Color',\n      type: 'text',\n      validate: (val) =&gt; isHexColor(val),\n      admin: {\n        components: {\n          Field: ColorPicker,\n          Cell: ColorChip,\n        },\n      },\n    };\nexport default colorField;\"><pre class=\"notranslate\"><span class=\"pl-c\">// assuming these are actual components in your app somewhere</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">ColorPicker</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../components/ColorPicker'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">ColorChip</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../components/ColorChip'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// let's validate colors just in case</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">isHexColor</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">val</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-s1\">val</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">match</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span>#<span class=\"pl-kos\">(?:</span><span class=\"pl-kos\">[</span>0-9a-fA-F<span class=\"pl-kos\">]</span><span class=\"pl-kos\">{</span>3<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>1,2<span class=\"pl-kos\">}</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">val</span><span class=\"pl-kos\">}</span></span> is not a valid hex color`</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">colorField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'color'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Color'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-en\">validate</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">val</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">isHexColor</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">val</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">components</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">Field</span>: <span class=\"pl-v\">ColorPicker</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">Cell</span>: <span class=\"pl-v\">ColorChip</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-s1\">colorField</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Then in your collection that uses the color:<br>\nfilename: Users.js</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import colorField from '../fields/colorField';\n\n// optionally you use colorField in your fields array unmodified, this is an example of re-use with collection specific changes\nconst favoriteColor =  { \n  name: 'favoriteColor',\n  label: 'Favorite Color',\n  ...colorField\n  };\n\nconst Users = {\n  slug: 'users',\n  auth: true,\n  admin: {\n    useAsTitle: 'email',\n  },\n  fields: [\n    {\n      name: &quot;email&quot;,\n      label: &quot;Email&quot;,\n      type: &quot;email&quot;,\n    },\n    favoriteColor,\n  ]\n};\n\nexport default Users;\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">colorField</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../fields/colorField'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// optionally you use colorField in your fields array unmodified, this is an example of re-use with collection specific changes</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">favoriteColor</span> <span class=\"pl-c1\">=</span>  <span class=\"pl-kos\">{</span> \n  <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'favoriteColor'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Favorite Color'</span><span class=\"pl-kos\">,</span>\n  ...<span class=\"pl-s1\">colorField</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Users</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'users'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">auth</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'email'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">\"email\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">\"Email\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"email\"</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">favoriteColor</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-v\">Users</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Nothing fancy going on here, pretty much just writing javascript. The Payload backend needs to understand the <code class=\"notranslate\">type</code> but other than that you can do what you want. My example hopefully gives some ideas about structuring your app and keeping it DRY if you plan to reuse a field.</p>\n<p dir=\"auto\">You're right about <code class=\"notranslate\">Filter</code> and <code class=\"notranslate\">Cell</code> components these are presentational in the admin UI and nothing more.</p>",
            "createdAt": "2021-03-11T04:22:03Z"
          },
          {
            "author": {
              "name": "SuddenDev",
              "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
              "url": "https://github.com/SuddenDev"
            },
            "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a>,<br>\nthank you so much for the writeup! That makes it a lot more clear now. I somehow thought it would be more difficult, but that actually very straight forward!<br>\nCan't wait to start digging in, when I actually need a custom field component.</p>",
            "createdAt": "2021-03-11T09:30:28Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">I mentioned <code class=\"notranslate\">Cell</code> is presentational only, but there are use cases where you would do something dynamic or add functionality right in the table with an action button or dropdown menu that fires an API call to modify that item.<br>\nYou could have a <code class=\"notranslate\">Cell</code> for a <code class=\"notranslate\">status</code> field that shows as a dropdown that calls the API to update it on change as an example.</p>",
            "createdAt": "2021-03-11T12:35:53Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">We published a blog post that covers how to implement custom fields. Posting here for visibility:<br>\n<a href=\"https://payloadcms.com/blog/building-a-custom-field\" rel=\"nofollow\">https://payloadcms.com/blog/building-a-custom-field</a></p>",
            "createdAt": "2021-07-02T14:05:55Z"
          }
        ]
      },
      {
        "author": {
          "name": "SuddenDev",
          "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
          "url": "https://github.com/SuddenDev"
        },
        "body": "<p dir=\"auto\">So I just tried a couple of things with the config. Replacing the Nav was easy, but I got an error when trying to replace views.dashboard. The error code says \"not allowed\".</p>\n<p dir=\"auto\">My code:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import path from &quot;path&quot;;\nimport React from &quot;react&quot;;\n\nimport { buildConfig } from &quot;payload/config&quot;;\nimport Pages from &quot;./collections/Pages&quot;;\nimport Portfolio from &quot;./collections/Portfolio&quot;;\nimport Users from &quot;./collections/Users&quot;;\nimport Upload from &quot;./collections/Upload&quot;;\n\nexport default buildConfig({\n  serverURL: &quot;http://localhost:3000&quot;,\n  admin: {\n    user: Users.slug,\n    indexHTML: path.resolve(__dirname, &quot;./client/index.html&quot;),\n    components: {\n      views: {\n        Dashboard: () =&gt; &lt;div&gt;Hello&lt;/div&gt;,\n      },\n    },\n  },\n  collections: [Pages, Portfolio, Users, Upload],\n  localization: {\n    locales: [&quot;en&quot;, &quot;de&quot;],\n    defaultLocale: &quot;en&quot;,\n    fallback: true,\n  },\n});\"><pre class=\"notranslate\"><code class=\"notranslate\">import path from \"path\";\nimport React from \"react\";\n\nimport { buildConfig } from \"payload/config\";\nimport Pages from \"./collections/Pages\";\nimport Portfolio from \"./collections/Portfolio\";\nimport Users from \"./collections/Users\";\nimport Upload from \"./collections/Upload\";\n\nexport default buildConfig({\n  serverURL: \"http://localhost:3000\",\n  admin: {\n    user: Users.slug,\n    indexHTML: path.resolve(__dirname, \"./client/index.html\"),\n    components: {\n      views: {\n        Dashboard: () =&gt; &lt;div&gt;Hello&lt;/div&gt;,\n      },\n    },\n  },\n  collections: [Pages, Portfolio, Users, Upload],\n  localization: {\n    locales: [\"en\", \"de\"],\n    defaultLocale: \"en\",\n    fallback: true,\n  },\n});\n</code></pre></div>\n<p dir=\"auto\">My console:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[nodemon] restarting due to changes...\n[nodemon] starting `node server.js`\n[23:33:32] INFO (payload): Starting Payload...\n[23:33:33] ERROR (payload): There were 1 errors validating your Payload config\n[23:33:33] ERROR (payload): 1: &quot;admin.components.views&quot; is not allowed\n[nodemon] app crashed - waiting for file changes before starting...\"><pre class=\"notranslate\"><code class=\"notranslate\">[nodemon] restarting due to changes...\n[nodemon] starting `node server.js`\n[23:33:32] INFO (payload): Starting Payload...\n[23:33:33] ERROR (payload): There were 1 errors validating your Payload config\n[23:33:33] ERROR (payload): 1: \"admin.components.views\" is not allowed\n[nodemon] app crashed - waiting for file changes before starting...\n</code></pre></div>\n<p dir=\"auto\">Any Ideas? Did I miss something?</p>",
        "createdAt": "2021-03-10T23:38:26Z",
        "replies": [
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Hi again,</p>\n<p dir=\"auto\">That looks to be a bug with our validation. I'll open an issue so we can get it patched.</p>\n<p dir=\"auto\"><em>edit</em><br>\nThis is now closed. <a aria-label=\"Issue #94\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"828643864\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/94\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/94/hovercard\" href=\"https://github.com/payloadcms/payload/issues/94\">#94</a> and I've published the change in Payload v0.4.5.</p>",
            "createdAt": "2021-03-11T00:37:58Z"
          },
          {
            "author": {
              "name": "SuddenDev",
              "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
              "url": "https://github.com/SuddenDev"
            },
            "body": "<p dir=\"auto\">Wow, you guys are really quick. Thanks for the quick bugfix!<br>\nCheers!</p>",
            "createdAt": "2021-03-11T09:31:17Z"
          }
        ]
      },
      {
        "author": {
          "name": "ssyberg",
          "avatar": "https://avatars.githubusercontent.com/u/1661046?v=4",
          "url": "https://github.com/ssyberg"
        },
        "body": "<p dir=\"auto\">Hi there, I'm also interested in playing with the demo / sandbox but haven't had any luck starting it up - any ideas?</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&gt; payload@0.13.6 dev\n&gt; cross-env PAYLOAD_CONFIG_PATH=demo/payload.config.ts nodemon\n\n[nodemon] 2.0.15\n[nodemon] to restart at any time, enter `rs`\n[nodemon] watching path(s): src/**/*.ts demo/**/*\n[nodemon] watching extensions: ts,js,json\n[nodemon] starting `node ./demo/index.js`\n[17:20:24] INFO (payload): Starting Payload...\nnode:internal/modules/cjs/loader:944\n  throw err;\n  ^\n\nError: Cannot find module '../dist/admin/components/forms/Form/context'\nRequire stack:\n- /Users/seth/dev/payload/payload/components/forms.ts\n- /Users/seth/dev/payload/payload/demo/collections/CustomComponents/components/fields/Group/Field/index.tsx\n- /Users/seth/dev/payload/payload/demo/collections/CustomComponents/index.ts\n- /Users/seth/dev/payload/payload/demo/payload.config.ts\n- /Users/seth/dev/payload/payload/src/config/load.ts\n- /Users/seth/dev/payload/payload/src/index.ts\n- /Users/seth/dev/payload/payload/demo/server.ts\n- /Users/seth/dev/payload/payload/demo/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:941:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:774:27)\n    at Module.require (node:internal/modules/cjs/loader:1013:19)\n    at require (node:internal/modules/cjs/helpers:93:18)\n    at Object.&lt;anonymous&gt; (/Users/seth/dev/payload/payload/components/forms.ts:1:2008)\n    at Module._compile (node:internal/modules/cjs/loader:1109:14)\n    at Module._compile (/Users/seth/dev/payload/payload/node_modules/pirates/lib/index.js:99:24)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1138:10)\n    at Object.newLoader [as .ts] (/Users/seth/dev/payload/payload/node_modules/pirates/lib/index.js:104:7)\n    at Module.load (node:internal/modules/cjs/loader:989:32) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [\n    '/Users/seth/dev/payload/payload/components/forms.ts',\n    '/Users/seth/dev/payload/payload/demo/collections/CustomComponents/components/fields/Group/Field/index.tsx',\n    '/Users/seth/dev/payload/payload/demo/collections/CustomComponents/index.ts',\n    '/Users/seth/dev/payload/payload/demo/payload.config.ts',\n    '/Users/seth/dev/payload/payload/src/config/load.ts',\n    '/Users/seth/dev/payload/payload/src/index.ts',\n    '/Users/seth/dev/payload/payload/demo/server.ts',\n    '/Users/seth/dev/payload/payload/demo/index.js'\n  ]\n}\n[nodemon] app crashed - waiting for file changes before starting...\n\"><pre class=\"notranslate\"><code class=\"notranslate\">&gt; payload@0.13.6 dev\n&gt; cross-env PAYLOAD_CONFIG_PATH=demo/payload.config.ts nodemon\n\n[nodemon] 2.0.15\n[nodemon] to restart at any time, enter `rs`\n[nodemon] watching path(s): src/**/*.ts demo/**/*\n[nodemon] watching extensions: ts,js,json\n[nodemon] starting `node ./demo/index.js`\n[17:20:24] INFO (payload): Starting Payload...\nnode:internal/modules/cjs/loader:944\n  throw err;\n  ^\n\nError: Cannot find module '../dist/admin/components/forms/Form/context'\nRequire stack:\n- /Users/seth/dev/payload/payload/components/forms.ts\n- /Users/seth/dev/payload/payload/demo/collections/CustomComponents/components/fields/Group/Field/index.tsx\n- /Users/seth/dev/payload/payload/demo/collections/CustomComponents/index.ts\n- /Users/seth/dev/payload/payload/demo/payload.config.ts\n- /Users/seth/dev/payload/payload/src/config/load.ts\n- /Users/seth/dev/payload/payload/src/index.ts\n- /Users/seth/dev/payload/payload/demo/server.ts\n- /Users/seth/dev/payload/payload/demo/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:941:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:774:27)\n    at Module.require (node:internal/modules/cjs/loader:1013:19)\n    at require (node:internal/modules/cjs/helpers:93:18)\n    at Object.&lt;anonymous&gt; (/Users/seth/dev/payload/payload/components/forms.ts:1:2008)\n    at Module._compile (node:internal/modules/cjs/loader:1109:14)\n    at Module._compile (/Users/seth/dev/payload/payload/node_modules/pirates/lib/index.js:99:24)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1138:10)\n    at Object.newLoader [as .ts] (/Users/seth/dev/payload/payload/node_modules/pirates/lib/index.js:104:7)\n    at Module.load (node:internal/modules/cjs/loader:989:32) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [\n    '/Users/seth/dev/payload/payload/components/forms.ts',\n    '/Users/seth/dev/payload/payload/demo/collections/CustomComponents/components/fields/Group/Field/index.tsx',\n    '/Users/seth/dev/payload/payload/demo/collections/CustomComponents/index.ts',\n    '/Users/seth/dev/payload/payload/demo/payload.config.ts',\n    '/Users/seth/dev/payload/payload/src/config/load.ts',\n    '/Users/seth/dev/payload/payload/src/index.ts',\n    '/Users/seth/dev/payload/payload/demo/server.ts',\n    '/Users/seth/dev/payload/payload/demo/index.js'\n  ]\n}\n[nodemon] app crashed - waiting for file changes before starting...\n\n</code></pre></div>",
        "createdAt": "2021-12-07T17:22:53Z",
        "replies": null
      },
      {
        "author": {
          "name": "ssyberg",
          "avatar": "https://avatars.githubusercontent.com/u/1661046?v=4",
          "url": "https://github.com/ssyberg"
        },
        "body": "<p dir=\"auto\">☝🏼 seems like there's dependency on a build for <code class=\"notranslate\">yarn dev</code> so I tried <code class=\"notranslate\">demo:build</code> first:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"yarn demo:build         \nyarn run v1.22.17\n$ cross-env PAYLOAD_CONFIG_PATH=demo/payload.config.ts node dist/bin/build\nnode:internal/modules/cjs/loader:944\n  throw err;\n  ^\n\nError: Cannot find module '/Users/seth/dev/payload/payload/dist/bin/build'\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:941:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:774:27)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:76:12)\n    at node:internal/main/run_main_module:17:47 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\nerror Command failed with exit code 1.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\"><pre class=\"notranslate\"><code class=\"notranslate\">yarn demo:build         \nyarn run v1.22.17\n$ cross-env PAYLOAD_CONFIG_PATH=demo/payload.config.ts node dist/bin/build\nnode:internal/modules/cjs/loader:944\n  throw err;\n  ^\n\nError: Cannot find module '/Users/seth/dev/payload/payload/dist/bin/build'\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:941:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:774:27)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:76:12)\n    at node:internal/main/run_main_module:17:47 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\nerror Command failed with exit code 1.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\n</code></pre></div>",
        "createdAt": "2021-12-07T17:24:58Z",
        "replies": null
      },
      {
        "author": {
          "name": "ssyberg",
          "avatar": "https://avatars.githubusercontent.com/u/1661046?v=4",
          "url": "https://github.com/ssyberg"
        },
        "body": "<p dir=\"auto\">NM I'm up and running, needed to just <code class=\"notranslate\">yarn build</code> first.</p>",
        "createdAt": "2021-12-07T17:27:41Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ssyberg/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ssyberg\">@ssyberg</a> — yep. Good catch! We're actually re-wiring some things so that soon, you <em><strong>won't</strong></em> need to <code class=\"notranslate\">yarn build</code> before running demo, but for now, that's how it works.</p>\n<p dir=\"auto\">Will be improved shortly. Let us know if you have any questions as you poke around!</p>",
            "createdAt": "2021-12-07T17:39:27Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/SuddenDev/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SuddenDev\">@SuddenDev</a>,<br>\nWe use the <code class=\"notranslate\">demo</code> in the repo as our develepment playground when building new features or troubleshooting. It could be useful for reference, but it might not provide a ton of value for building your own projects with Payload as your dependency. You're welcome to play with it though! You can use <code class=\"notranslate\">npm run dev</code> for live reload or <code class=\"notranslate\">demo:build</code> will create a dist of the demo in <code class=\"notranslate\">/dist/bin/</code>.</p>\n<p dir=\"auto\">I'm not certain about the errors you shared, we use <code class=\"notranslate\">yarn build</code> when its time to release each new version of Payload. I am not sure how useful that would be for you.</p>\n<p dir=\"auto\">Have you read the docs part about customizing components? <a href=\"https://payloadcms.com/docs/admin/components#fields\" rel=\"nofollow\">https://payloadcms.com/docs/admin/components#fields</a></p>\n<p dir=\"auto\">Certainly there is more we can provide when it comes to custom fields, what is it you're looking to do? I'm happy to help!</p>",
      "createdAt": "2021-03-10T13:59:09Z",
      "chosenAt": "2021-03-11T09:33:22Z",
      "chosenBy": "SuddenDev",
      "replies": [
        {
          "author": {
            "name": "SuddenDev",
            "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
            "url": "https://github.com/SuddenDev"
          },
          "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a>,<br>\nAh, that's good to know! I thought the demo was also build-able by users, since it's referenced in the docs.</p>\n<p dir=\"auto\">I did read through the documentation, but have a bit of a trouble to wrap my head around it. Maybe it's just me, but an written example guide would be a great addition to the (already good) docs.</p>\n<ul dir=\"auto\">\n<li>So let's just assume that I need a color picker field. How would you start with that? Can you register the the field globally or do you have to reference it in every collection / global, that you need it in?</li>\n<li>And as far as I understood it, <code class=\"notranslate\">Filter</code> and <code class=\"notranslate\">Cell</code> are just for the Listview in the panel and don't really need logic in my colorpicker example, since it would just render some stuff (e.g. the hex code), right?</li>\n</ul>\n<p dir=\"auto\">I'd highly appreacate it, if you could give like even just a short tutorial or write up!</p>",
          "createdAt": "2021-03-10T22:35:11Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">We will have more tutorials up in the future. I'm going to add this to our list topics to cover in more depth. For now I'll do my best to answer your questions.</p>\n<p dir=\"auto\">What I would recommend is if you have a field that you want to reuse throughout your collections or globals, export it from a single place in your app.</p>\n<p dir=\"auto\">filename: colorField.js</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// assuming these are actual components in your app somewhere\nimport ColorPicker from '../components/ColorPicker';\nimport ColorChip from '../components/ColorChip';\n\n// let's validate colors just in case\nfunction isHexColor(val) {\n  return val.match(/^#(?:[0-9a-fA-F]{3}){1,2}$/) || `${val} is not a valid hex color`;\n}\n\nconst colorField = {\n      name: 'color',\n      label: 'Color',\n      type: 'text',\n      validate: (val) =&gt; isHexColor(val),\n      admin: {\n        components: {\n          Field: ColorPicker,\n          Cell: ColorChip,\n        },\n      },\n    };\nexport default colorField;\"><pre class=\"notranslate\"><span class=\"pl-c\">// assuming these are actual components in your app somewhere</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">ColorPicker</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../components/ColorPicker'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">ColorChip</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../components/ColorChip'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// let's validate colors just in case</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">isHexColor</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">val</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-s1\">val</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">match</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span>#<span class=\"pl-kos\">(?:</span><span class=\"pl-kos\">[</span>0-9a-fA-F<span class=\"pl-kos\">]</span><span class=\"pl-kos\">{</span>3<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>1,2<span class=\"pl-kos\">}</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">val</span><span class=\"pl-kos\">}</span></span> is not a valid hex color`</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">colorField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'color'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Color'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-en\">validate</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">val</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">isHexColor</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">val</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">components</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">Field</span>: <span class=\"pl-v\">ColorPicker</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">Cell</span>: <span class=\"pl-v\">ColorChip</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-s1\">colorField</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Then in your collection that uses the color:<br>\nfilename: Users.js</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import colorField from '../fields/colorField';\n\n// optionally you use colorField in your fields array unmodified, this is an example of re-use with collection specific changes\nconst favoriteColor =  { \n  name: 'favoriteColor',\n  label: 'Favorite Color',\n  ...colorField\n  };\n\nconst Users = {\n  slug: 'users',\n  auth: true,\n  admin: {\n    useAsTitle: 'email',\n  },\n  fields: [\n    {\n      name: &quot;email&quot;,\n      label: &quot;Email&quot;,\n      type: &quot;email&quot;,\n    },\n    favoriteColor,\n  ]\n};\n\nexport default Users;\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">colorField</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../fields/colorField'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// optionally you use colorField in your fields array unmodified, this is an example of re-use with collection specific changes</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">favoriteColor</span> <span class=\"pl-c1\">=</span>  <span class=\"pl-kos\">{</span> \n  <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'favoriteColor'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Favorite Color'</span><span class=\"pl-kos\">,</span>\n  ...<span class=\"pl-s1\">colorField</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Users</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'users'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">auth</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'email'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">\"email\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">\"Email\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"email\"</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">favoriteColor</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-v\">Users</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Nothing fancy going on here, pretty much just writing javascript. The Payload backend needs to understand the <code class=\"notranslate\">type</code> but other than that you can do what you want. My example hopefully gives some ideas about structuring your app and keeping it DRY if you plan to reuse a field.</p>\n<p dir=\"auto\">You're right about <code class=\"notranslate\">Filter</code> and <code class=\"notranslate\">Cell</code> components these are presentational in the admin UI and nothing more.</p>",
          "createdAt": "2021-03-11T04:22:03Z"
        },
        {
          "author": {
            "name": "SuddenDev",
            "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
            "url": "https://github.com/SuddenDev"
          },
          "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a>,<br>\nthank you so much for the writeup! That makes it a lot more clear now. I somehow thought it would be more difficult, but that actually very straight forward!<br>\nCan't wait to start digging in, when I actually need a custom field component.</p>",
          "createdAt": "2021-03-11T09:30:28Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">I mentioned <code class=\"notranslate\">Cell</code> is presentational only, but there are use cases where you would do something dynamic or add functionality right in the table with an action button or dropdown menu that fires an API call to modify that item.<br>\nYou could have a <code class=\"notranslate\">Cell</code> for a <code class=\"notranslate\">status</code> field that shows as a dropdown that calls the API to update it on change as an example.</p>",
          "createdAt": "2021-03-11T12:35:53Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">We published a blog post that covers how to implement custom fields. Posting here for visibility:<br>\n<a href=\"https://payloadcms.com/blog/building-a-custom-field\" rel=\"nofollow\">https://payloadcms.com/blog/building-a-custom-field</a></p>",
          "createdAt": "2021-07-02T14:05:55Z"
        }
      ]
    }
  },
  {
    "title": "Rest / Local API [where][in]",
    "body": "<p dir=\"auto\">Hello everyone,</p>\n<p dir=\"auto\">Could someone please post an example of how to use 'where' 'in' query for Local and REST API?</p>\n<p dir=\"auto\">Say I want to get 2 categories with specific IDs from the 'categories' collection. With local API this is what I am trying to do:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const result = await payload.find({\n    collection: 'categories',\n    where: {\n        id: {\n            in: ['619bea3fcc9ad5dd9692139f', '619bea2ccc9ad5dd96921377']\n        },\n    }\n})\"><pre class=\"notranslate\"><code class=\"notranslate\">const result = await payload.find({\n    collection: 'categories',\n    where: {\n        id: {\n            in: ['619bea3fcc9ad5dd9692139f', '619bea2ccc9ad5dd96921377']\n        },\n    }\n})\n</code></pre></div>\n<p dir=\"auto\">Result: it gives me all the categories from the collection.</p>\n<p dir=\"auto\">What am I doing wrong?</p>\n<p dir=\"auto\">Thank you!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/365",
    "id": "365",
    "createdAt": "2021-11-22T19:35:14Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "vstarush",
      "avatar": "https://avatars.githubusercontent.com/u/10617969?v=4",
      "url": "https://github.com/vstarush"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/vstarush/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vstarush\">@vstarush</a> — I can help here.</p>\n<p dir=\"auto\">Your syntax is right. Running a similarly formatted query against the new beta version of Payload returns 2 documents as expected.</p>\n<p dir=\"auto\">What version of Payload are you on? Can you try updating Payload to the most recent beta to re-try your test? The current beta, due to be released shortly, has fixed a few bugs due to querying by ID that arose from a new feature that we released a few versions back which allows users to define their own IDs for documents.</p>\n<p dir=\"auto\">Let me know if the new beta fixes it!</p>",
        "createdAt": "2021-11-22T20:59:57Z",
        "replies": null
      },
      {
        "author": {
          "name": "vstarush",
          "avatar": "https://avatars.githubusercontent.com/u/10617969?v=4",
          "url": "https://github.com/vstarush"
        },
        "body": "<p dir=\"auto\">Hi jmikrut! Yes, thank you, the version had solved the issue.</p>\n<p dir=\"auto\">I was on <strong>0.12.3</strong> and it didn't work, but the <strong>0.12.10-beta.0</strong> works for Local API. Thank you! :)</p>\n<p dir=\"auto\">Do REST queries support 'in'/'not_in'? I tried this, but it didn't work:<br>\n/api/categories?where[id][in]=619a95b4f16bea80ff8705f0,619a95a1f16bea80ff8705d7</p>",
        "createdAt": "2021-11-23T13:39:34Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Boom. You are on it! There was a leftover bug with our new implementation related to comma-delineated IDs.</p>\n<p dir=\"auto\">Install <code class=\"notranslate\">0.12.11-beta.0</code> to get a fix! And thank you for bringing this up!</p>",
            "createdAt": "2021-11-23T15:21:19Z"
          }
        ]
      },
      {
        "author": {
          "name": "vstarush",
          "avatar": "https://avatars.githubusercontent.com/u/10617969?v=4",
          "url": "https://github.com/vstarush"
        },
        "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a></p>\n<p dir=\"auto\">Yep, I was away and missed the .11, but installed the .13 now. All works! :) Thanks so much for your help with this!!</p>",
        "createdAt": "2021-11-25T23:13:59Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/vstarush/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vstarush\">@vstarush</a> — I can help here.</p>\n<p dir=\"auto\">Your syntax is right. Running a similarly formatted query against the new beta version of Payload returns 2 documents as expected.</p>\n<p dir=\"auto\">What version of Payload are you on? Can you try updating Payload to the most recent beta to re-try your test? The current beta, due to be released shortly, has fixed a few bugs due to querying by ID that arose from a new feature that we released a few versions back which allows users to define their own IDs for documents.</p>\n<p dir=\"auto\">Let me know if the new beta fixes it!</p>",
      "createdAt": "2021-11-22T20:59:57Z",
      "chosenAt": "2021-11-23T13:40:45Z",
      "chosenBy": "vstarush",
      "replies": null
    }
  },
  {
    "title": "REST Queries for localised fields (NextJS staticPaths & staticProps)",
    "body": "<h3 dir=\"auto\"><strong>tldr:</strong></h3>\n<p dir=\"auto\">REST Queries such as <code class=\"notranslate\">?where[slug][equals]=home</code> works for the defaultLocale, but not for other locales. Resulting in issues when using <code class=\"notranslate\">getStaticProps(context) =&gt; {context.params.slug}</code> to fetch data from payload REST API.</p>\n<h3 dir=\"auto\"><strong>Description:</strong></h3>\n<p dir=\"auto\">I'm trying to make dynamic localised slugs work for a static web with Payload and Next.js</p>\n<p dir=\"auto\">For example<br>\n<code class=\"notranslate\">https://mysite/en/home</code> &lt;-- english version<br>\n<code class=\"notranslate\">https://mysite/sv/hem</code> &lt;-- swedish version</p>\n<p dir=\"auto\">Since I want localised dynamic slugs, I'm using <code class=\"notranslate\">[slug].js</code> with <code class=\"notranslate\">getStaticPaths</code> in Next.js that returns the following:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"paths: [\n  { params: { slug: 'home' }, locale: 'en' },\n  { params: { slug: 'hem' }, locale: 'sv' },\n]\"><pre class=\"notranslate\"><code class=\"notranslate\">paths: [\n  { params: { slug: 'home' }, locale: 'en' },\n  { params: { slug: 'hem' }, locale: 'sv' },\n]\n</code></pre></div>\n<p dir=\"auto\">In Payload I got this field</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n  name: &quot;slug&quot;,\n  type: &quot;text&quot;,\n  localized: true,\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n  name: \"slug\",\n  type: \"text\",\n  localized: true,\n}\n</code></pre></div>\n<p dir=\"auto\">The Payload REST Queries only works for the defaultLocale</p>\n<p dir=\"auto\"><code class=\"notranslate\">http://localhost:3001/api/pages?where[slug][equals]=home</code> &lt;-- works<br>\n<code class=\"notranslate\">http://localhost:3001/api/pages?where[slug][equals]=hem</code> &lt;-- doesn't work</p>\n<p dir=\"auto\">This gives me no possibility to get the data I need in Next.js since <code class=\"notranslate\">getStaticProps(context) {context.params.slug}</code> in <code class=\"notranslate\">[slug].js</code> gives me the local slug, for example <code class=\"notranslate\">hem</code> (from the example above, which doesn't work in Payload REST Queries). I can't find a good workaround either.</p>\n<p dir=\"auto\">I hope I have explained this well enough.<br>\nThanks in advance! <g-emoji class=\"g-emoji\" alias=\"pray\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png\">🙏</g-emoji></p>",
    "url": "https://github.com/payloadcms/payload/discussions/362",
    "id": "362",
    "createdAt": "2021-11-15T20:41:07Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "fredrikgunnarsson",
      "avatar": "https://avatars.githubusercontent.com/u/19576037?v=4",
      "url": "https://github.com/fredrikgunnarsson"
    },
    "comments": [
      {
        "author": {
          "name": "fredrikgunnarsson",
          "avatar": "https://avatars.githubusercontent.com/u/19576037?v=4",
          "url": "https://github.com/fredrikgunnarsson"
        },
        "body": "<p dir=\"auto\">I believe I have solved it myself. See below.<br>\nWas pretty sure I double checked this like 10 times before submitting this, guess not <g-emoji class=\"g-emoji\" alias=\"weary\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f629.png\">😩</g-emoji></p>\n<p dir=\"auto\"><code class=\"notranslate\">http://localhost:3001/api/pages?where[slug][equals]=home</code> &lt;-- works<br>\n<code class=\"notranslate\">http://localhost:3001/api/pages?where[slug][equals]=hem</code> &lt;-- doesn't work<br>\n<code class=\"notranslate\">http://localhost:3001/api/pages?where[slug][equals]=hem&amp;locale=sv</code> &lt;-- works</p>",
        "createdAt": "2021-11-15T21:07:53Z",
        "replies": [
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Ah, it happens <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/fredrikgunnarsson/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fredrikgunnarsson\">@fredrikgunnarsson</a>. I'm glad you got it sorted out!</p>\n<p dir=\"auto\">We should add your solution to the docs, expanding one of these sections:<br>\n<a href=\"https://payloadcms.com/docs/queries/overview#rest-queries\" rel=\"nofollow\">https://payloadcms.com/docs/queries/overview#rest-queries</a><br>\n<a href=\"https://payloadcms.com/docs/configuration/localization#retrieving-localized-docs\" rel=\"nofollow\">https://payloadcms.com/docs/configuration/localization#retrieving-localized-docs</a></p>\n<p dir=\"auto\">You had to intuitively piece both pieces together.</p>\n<p dir=\"auto\">Any thoughts?</p>",
            "createdAt": "2021-11-15T21:19:37Z"
          },
          {
            "author": {
              "name": "fredrikgunnarsson",
              "avatar": "https://avatars.githubusercontent.com/u/19576037?v=4",
              "url": "https://github.com/fredrikgunnarsson"
            },
            "body": "<p dir=\"auto\">Agree, I think the example in <a href=\"https://payloadcms.com/docs/queries/overview#rest-queries\" rel=\"nofollow\">https://payloadcms.com/docs/queries/overview#rest-queries</a> would benefit from also including <code class=\"notranslate\">locale</code> to make it clearer.</p>\n<p dir=\"auto\">-- <code class=\"notranslate\">https://localhost:3000/api/posts?where[color][equals]=mint</code><br>\n++ <code class=\"notranslate\">https://localhost:3000/api/posts?where[color][equals]=mint&amp;locale=en</code></p>\n<p dir=\"auto\">Documentation in <a href=\"https://payloadcms.com/docs/configuration/localization#retrieving-localized-docs\" rel=\"nofollow\">https://payloadcms.com/docs/configuration/localization#retrieving-localized-docs</a> is fine I think.</p>",
            "createdAt": "2021-11-16T07:33:20Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "fredrikgunnarsson",
        "avatar": "https://avatars.githubusercontent.com/u/19576037?v=4",
        "url": "https://github.com/fredrikgunnarsson"
      },
      "body": "<p dir=\"auto\">I believe I have solved it myself. See below.<br>\nWas pretty sure I double checked this like 10 times before submitting this, guess not <g-emoji class=\"g-emoji\" alias=\"weary\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f629.png\">😩</g-emoji></p>\n<p dir=\"auto\"><code class=\"notranslate\">http://localhost:3001/api/pages?where[slug][equals]=home</code> &lt;-- works<br>\n<code class=\"notranslate\">http://localhost:3001/api/pages?where[slug][equals]=hem</code> &lt;-- doesn't work<br>\n<code class=\"notranslate\">http://localhost:3001/api/pages?where[slug][equals]=hem&amp;locale=sv</code> &lt;-- works</p>",
      "createdAt": "2021-11-15T21:07:53Z",
      "chosenAt": "2021-11-15T21:08:04Z",
      "chosenBy": "fredrikgunnarsson",
      "replies": [
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Ah, it happens <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/fredrikgunnarsson/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fredrikgunnarsson\">@fredrikgunnarsson</a>. I'm glad you got it sorted out!</p>\n<p dir=\"auto\">We should add your solution to the docs, expanding one of these sections:<br>\n<a href=\"https://payloadcms.com/docs/queries/overview#rest-queries\" rel=\"nofollow\">https://payloadcms.com/docs/queries/overview#rest-queries</a><br>\n<a href=\"https://payloadcms.com/docs/configuration/localization#retrieving-localized-docs\" rel=\"nofollow\">https://payloadcms.com/docs/configuration/localization#retrieving-localized-docs</a></p>\n<p dir=\"auto\">You had to intuitively piece both pieces together.</p>\n<p dir=\"auto\">Any thoughts?</p>",
          "createdAt": "2021-11-15T21:19:37Z"
        },
        {
          "author": {
            "name": "fredrikgunnarsson",
            "avatar": "https://avatars.githubusercontent.com/u/19576037?v=4",
            "url": "https://github.com/fredrikgunnarsson"
          },
          "body": "<p dir=\"auto\">Agree, I think the example in <a href=\"https://payloadcms.com/docs/queries/overview#rest-queries\" rel=\"nofollow\">https://payloadcms.com/docs/queries/overview#rest-queries</a> would benefit from also including <code class=\"notranslate\">locale</code> to make it clearer.</p>\n<p dir=\"auto\">-- <code class=\"notranslate\">https://localhost:3000/api/posts?where[color][equals]=mint</code><br>\n++ <code class=\"notranslate\">https://localhost:3000/api/posts?where[color][equals]=mint&amp;locale=en</code></p>\n<p dir=\"auto\">Documentation in <a href=\"https://payloadcms.com/docs/configuration/localization#retrieving-localized-docs\" rel=\"nofollow\">https://payloadcms.com/docs/configuration/localization#retrieving-localized-docs</a> is fine I think.</p>",
          "createdAt": "2021-11-16T07:33:20Z"
        }
      ]
    }
  },
  {
    "title": "License verification keeps going wrong",
    "body": "<p dir=\"auto\">After creating a droplet on digital ocean and setting up my first user through <code class=\"notranslate\">/admin/</code> I keep running into the license is invalid error. I initially made a license for the wrong domain as I didn't include the subdomain. But now everything should be in order.<br>\nI double checked my <code class=\"notranslate\">.env</code> variables.<br>\nthe domain is <code class=\"notranslate\">http://payload.grndctrl.io</code>, if that helps.</p>\n<p dir=\"auto\">What do?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/304",
    "id": "304",
    "createdAt": "2021-08-18T21:06:43Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "ignism",
      "avatar": "https://avatars.githubusercontent.com/u/2485645?u=cf1f228fa0fcc0aa15c6f1e53cc3ba8d27f37f0b&v=4",
      "url": "https://github.com/ignism"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ignism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ignism\">@ignism</a>, it looks like you had some canceled licenses with the same domain that were likely interfering. I've cleared out all of those, give it another shot when you can <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
        "createdAt": "2021-08-19T00:46:43Z",
        "replies": [
          {
            "author": {
              "name": "ignism",
              "avatar": "https://avatars.githubusercontent.com/u/2485645?u=cf1f228fa0fcc0aa15c6f1e53cc3ba8d27f37f0b&v=4",
              "url": "https://github.com/ignism"
            },
            "body": "<p dir=\"auto\">Thanks, it works now! I was afraid I messed up there. Would be nice if we had a chance in the future to clean that up ourselves.<br>\nCan't wait to give this puppy a spin.</p>",
            "createdAt": "2021-08-19T07:00:22Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ignism/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ignism\">@ignism</a>, it looks like you had some canceled licenses with the same domain that were likely interfering. I've cleared out all of those, give it another shot when you can <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
      "createdAt": "2021-08-19T00:46:43Z",
      "chosenAt": "2021-10-29T13:19:46Z",
      "chosenBy": "ignism",
      "replies": [
        {
          "author": {
            "name": "ignism",
            "avatar": "https://avatars.githubusercontent.com/u/2485645?u=cf1f228fa0fcc0aa15c6f1e53cc3ba8d27f37f0b&v=4",
            "url": "https://github.com/ignism"
          },
          "body": "<p dir=\"auto\">Thanks, it works now! I was afraid I messed up there. Would be nice if we had a chance in the future to clean that up ourselves.<br>\nCan't wait to give this puppy a spin.</p>",
          "createdAt": "2021-08-19T07:00:22Z"
        }
      ]
    }
  },
  {
    "title": "JWT Token Secret",
    "body": "<p dir=\"auto\">Hello <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>, <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> and fellow devs, I wanted to know what secret key is being used to sign the JWT token during the login operation? I tried to debug the value which is being used here <a href=\"https://github.com/payloadcms/payload/blob/master/src/auth/operations/login.ts#L132\">https://github.com/payloadcms/payload/blob/master/src/auth/operations/login.ts#L132</a> and it resulted in this value <code class=\"notranslate\">73ef2a4edd7a7fbf07fd5f6faf99674d</code></p>\n<p dir=\"auto\">I have passed the secret as <code class=\"notranslate\">SECRET_KEY</code> in the <code class=\"notranslate\">payload.config.ts</code> and so I'm guessing that some hash function is running on the secret passed in payload config before signing the JWT.</p>\n<p dir=\"auto\">Can someone provide me more insight on what secret is being used to sign the JWT?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/347",
    "id": "347",
    "createdAt": "2021-10-21T16:37:43Z",
    "upvotes": 0,
    "commentTotal": 1,
    "author": {
      "name": "rishi-afk",
      "avatar": "https://avatars.githubusercontent.com/u/22999318?u=3a5b560d9b75cbe97ca669af0ff6dcc160e1a4a9&v=4",
      "url": "https://github.com/rishi-afk"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rishi-afk/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rishi-afk\">@rishi-afk</a> — yep, you got it. Our secret keys need to be 32 characters exactly, so Payload takes in the secret key from the <code class=\"notranslate\">init</code> options, creates a hash from the incoming random string, and then saves the first 32 characters.</p>\n<p dir=\"auto\">You can take a look at the <a href=\"https://github.com/payloadcms/payload/blob/master/src/index.ts#L103\"><code class=\"notranslate\">init</code> method</a> to see exactly what happens.</p>\n<p dir=\"auto\">Does this answer your question?</p>",
        "createdAt": "2021-10-26T14:07:15Z",
        "replies": [
          {
            "author": {
              "name": "rishi-afk",
              "avatar": "https://avatars.githubusercontent.com/u/22999318?u=3a5b560d9b75cbe97ca669af0ff6dcc160e1a4a9&v=4",
              "url": "https://github.com/rishi-afk"
            },
            "body": "<p dir=\"auto\">That's great thank you! I had one more question regarding the name of the cookie, which by default is set as 'payload-token'. I'd like to use different cookie names for different payload apps. Is there a way to do this?</p>",
            "createdAt": "2021-10-26T16:20:49Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rishi-afk/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rishi-afk\">@rishi-afk</a>,<br>\nTake a look at <code class=\"notranslate\">cookiePrefix</code> in <a href=\"https://payloadcms.com/docs/configuration/overview#options\" rel=\"nofollow\">https://payloadcms.com/docs/configuration/overview#options</a>.</p>\n<p dir=\"auto\">Is that what you're looking for?</p>",
            "createdAt": "2021-10-26T16:36:24Z"
          },
          {
            "author": {
              "name": "rishi-afk",
              "avatar": "https://avatars.githubusercontent.com/u/22999318?u=3a5b560d9b75cbe97ca669af0ff6dcc160e1a4a9&v=4",
              "url": "https://github.com/rishi-afk"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> That's perfect. I don't know how I missed that in the docs. Thank you for the quick reply :)</p>",
            "createdAt": "2021-10-26T16:51:16Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rishi-afk/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rishi-afk\">@rishi-afk</a> — yep, you got it. Our secret keys need to be 32 characters exactly, so Payload takes in the secret key from the <code class=\"notranslate\">init</code> options, creates a hash from the incoming random string, and then saves the first 32 characters.</p>\n<p dir=\"auto\">You can take a look at the <a href=\"https://github.com/payloadcms/payload/blob/master/src/index.ts#L103\"><code class=\"notranslate\">init</code> method</a> to see exactly what happens.</p>\n<p dir=\"auto\">Does this answer your question?</p>",
      "createdAt": "2021-10-26T14:07:15Z",
      "chosenAt": "2021-10-26T16:18:41Z",
      "chosenBy": "rishi-afk",
      "replies": [
        {
          "author": {
            "name": "rishi-afk",
            "avatar": "https://avatars.githubusercontent.com/u/22999318?u=3a5b560d9b75cbe97ca669af0ff6dcc160e1a4a9&v=4",
            "url": "https://github.com/rishi-afk"
          },
          "body": "<p dir=\"auto\">That's great thank you! I had one more question regarding the name of the cookie, which by default is set as 'payload-token'. I'd like to use different cookie names for different payload apps. Is there a way to do this?</p>",
          "createdAt": "2021-10-26T16:20:49Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rishi-afk/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rishi-afk\">@rishi-afk</a>,<br>\nTake a look at <code class=\"notranslate\">cookiePrefix</code> in <a href=\"https://payloadcms.com/docs/configuration/overview#options\" rel=\"nofollow\">https://payloadcms.com/docs/configuration/overview#options</a>.</p>\n<p dir=\"auto\">Is that what you're looking for?</p>",
          "createdAt": "2021-10-26T16:36:24Z"
        },
        {
          "author": {
            "name": "rishi-afk",
            "avatar": "https://avatars.githubusercontent.com/u/22999318?u=3a5b560d9b75cbe97ca669af0ff6dcc160e1a4a9&v=4",
            "url": "https://github.com/rishi-afk"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> That's perfect. I don't know how I missed that in the docs. Thank you for the quick reply :)</p>",
          "createdAt": "2021-10-26T16:51:16Z"
        }
      ]
    }
  },
  {
    "title": "Conditional custom field",
    "body": "<p dir=\"auto\">Hi, I was wondering if it's possible to add conditional display to a custom field. When you create a field with a condition, it's possible to acces that condition within the field. However that field doesn't have access to <code class=\"notranslate\">data</code> or <code class=\"notranslate\">siblingData</code>. Is there a where to apply the condition to a custom field?</p>\n<p dir=\"auto\">Blog reference: <a href=\"https://payloadcms.com/blog/building-a-custom-field\" rel=\"nofollow\">https://payloadcms.com/blog/building-a-custom-field</a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/346",
    "id": "346",
    "createdAt": "2021-10-21T13:02:33Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "edblocker",
      "avatar": "https://avatars.githubusercontent.com/u/56311234?u=4669d8566c4ab4eae57aab6b3ac678a50a802b19&v=4",
      "url": "https://github.com/edblocker"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/edblocker/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/edblocker\">@edblocker</a> it sure is!</p>\n<p dir=\"auto\">We've just released a beta (<code class=\"notranslate\">0.11.2-beta.0</code>) that now exports Payload's internal <code class=\"notranslate\">withCondition</code>. We've also updated the <a href=\"https://github.com/payloadcms/payload/blob/master/docs/fields/overview.mdx#conditional-logic\">field docs</a> to call out to how this all works, but that will not be published on our site until we deploy a new minor version. So for now you can read about it right on GitHub.</p>\n<p dir=\"auto\">Give it a shot - I'd like to hear what you think!</p>",
        "createdAt": "2021-10-21T13:23:22Z",
        "replies": [
          {
            "author": {
              "name": "edblocker",
              "avatar": "https://avatars.githubusercontent.com/u/56311234?u=4669d8566c4ab4eae57aab6b3ac678a50a802b19&v=4",
              "url": "https://github.com/edblocker"
            },
            "body": "<p dir=\"auto\">That is exactly what I'm looking for. I'll wait for the next release to integrate this in my project, thank you.</p>",
            "createdAt": "2021-10-21T13:27:38Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/edblocker/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/edblocker\">@edblocker</a> it sure is!</p>\n<p dir=\"auto\">We've just released a beta (<code class=\"notranslate\">0.11.2-beta.0</code>) that now exports Payload's internal <code class=\"notranslate\">withCondition</code>. We've also updated the <a href=\"https://github.com/payloadcms/payload/blob/master/docs/fields/overview.mdx#conditional-logic\">field docs</a> to call out to how this all works, but that will not be published on our site until we deploy a new minor version. So for now you can read about it right on GitHub.</p>\n<p dir=\"auto\">Give it a shot - I'd like to hear what you think!</p>",
      "createdAt": "2021-10-21T13:23:22Z",
      "chosenAt": "2021-10-21T13:27:05Z",
      "chosenBy": "edblocker",
      "replies": [
        {
          "author": {
            "name": "edblocker",
            "avatar": "https://avatars.githubusercontent.com/u/56311234?u=4669d8566c4ab4eae57aab6b3ac678a50a802b19&v=4",
            "url": "https://github.com/edblocker"
          },
          "body": "<p dir=\"auto\">That is exactly what I'm looking for. I'll wait for the next release to integrate this in my project, thank you.</p>",
          "createdAt": "2021-10-21T13:27:38Z"
        }
      ]
    }
  },
  {
    "title": "How can we access and change field values programmatically?",
    "body": "<p dir=\"auto\">I have a field group that I want to toggle on and off with a checkbox.  Coming from an Angular background I'm making all my fields as their own individual files to import and orchestrate together where needed so none of their instances of use are hardcoded.  How can I listen to the value of the checkbox and dig down into the imported field group and change the 'hidden' property's value accordingly?  Is this something we can currently do?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/322",
    "id": "322",
    "createdAt": "2021-09-24T01:33:31Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "Optiq01",
      "avatar": "https://avatars.githubusercontent.com/u/16946311?v=4",
      "url": "https://github.com/Optiq01"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Optiq01/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Optiq01\">@Optiq01</a> — great question!</p>\n<p dir=\"auto\">There are a <em><strong>lot</strong></em> of ways that this could be accomplished. Firstly, have you seen the <a href=\"https://payloadcms.com/docs/fields/overview#conditional-logic\" rel=\"nofollow\">Conditional Logic</a> feature yet? Your use case of having a checkbox to toggle a field set on and off is exactly why we built it.</p>\n<p dir=\"auto\">See this screen capture for a similar implementation:</p>\n<video src=\"https://user-images.githubusercontent.com/6651896/134675469-fc4d0794-ebfe-4c21-9641-42e36d9cf38c.mp4\" data-canonical-src=\"https://user-images.githubusercontent.com/6651896/134675469-fc4d0794-ebfe-4c21-9641-42e36d9cf38c.mp4\" controls=\"controls\" muted=\"muted\" class=\"d-block rounded-bottom-2 border-top width-fit\" style=\"max-height:640px; min-height: 200px\">\n\n  </video>\n<p dir=\"auto\">Now, this feature only shows and hides field groups. Alternatively, if you need to <em><strong>change the values</strong></em> of existing fields when some other field is modified, then you can use either a field hook, which allows you to set a field's value dynamically based on other field values, or you can create a custom field component and utilize our forms' hooks, which gives you access to both send and receive values of any field in your form, wherever you want.</p>\n<p dir=\"auto\">Here is another discussion that references this:</p>\n<p dir=\"auto\"><a aria-label=\"Discussion #236\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3469085\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/236\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/236/hovercard?comment_id=1038883\" href=\"https://github.com/payloadcms/payload/discussions/236#discussioncomment-1038883\">#236 (reply in thread)</a></p>",
        "createdAt": "2021-09-24T12:41:26Z",
        "replies": [
          {
            "author": {
              "name": "Optiq01",
              "avatar": "https://avatars.githubusercontent.com/u/16946311?v=4",
              "url": "https://github.com/Optiq01"
            },
            "body": "<p dir=\"auto\">Ahhh splendid, and yes I did see that part of the docs however I was confused about how to access a sibling's data and going back and forth between that and the hooks in terms of figuring out how it could be done.  I've also been studying the repository and come to dead ends where everything points at your dist folder which isn't publicly available.  The docs are excellent but I'm not smart enough for things to be as self explanatory as they might be for others lol.  I tinkered around and got it to work but you mentioned there's lots of ways this can be done.  What are the others?</p>",
            "createdAt": "2021-09-24T19:26:04Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Optiq01/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Optiq01\">@Optiq01</a> — great question!</p>\n<p dir=\"auto\">There are a <em><strong>lot</strong></em> of ways that this could be accomplished. Firstly, have you seen the <a href=\"https://payloadcms.com/docs/fields/overview#conditional-logic\" rel=\"nofollow\">Conditional Logic</a> feature yet? Your use case of having a checkbox to toggle a field set on and off is exactly why we built it.</p>\n<p dir=\"auto\">See this screen capture for a similar implementation:</p>\n<video src=\"https://user-images.githubusercontent.com/6651896/134675469-fc4d0794-ebfe-4c21-9641-42e36d9cf38c.mp4\" data-canonical-src=\"https://user-images.githubusercontent.com/6651896/134675469-fc4d0794-ebfe-4c21-9641-42e36d9cf38c.mp4\" controls=\"controls\" muted=\"muted\" class=\"d-block rounded-bottom-2 border-top width-fit\" style=\"max-height:640px; min-height: 200px\">\n\n  </video>\n<p dir=\"auto\">Now, this feature only shows and hides field groups. Alternatively, if you need to <em><strong>change the values</strong></em> of existing fields when some other field is modified, then you can use either a field hook, which allows you to set a field's value dynamically based on other field values, or you can create a custom field component and utilize our forms' hooks, which gives you access to both send and receive values of any field in your form, wherever you want.</p>\n<p dir=\"auto\">Here is another discussion that references this:</p>\n<p dir=\"auto\"><a aria-label=\"Discussion #236\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3469085\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/236\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/236/hovercard?comment_id=1038883\" href=\"https://github.com/payloadcms/payload/discussions/236#discussioncomment-1038883\">#236 (reply in thread)</a></p>",
      "createdAt": "2021-09-24T12:41:26Z",
      "chosenAt": "2021-09-24T19:26:06Z",
      "chosenBy": "Optiq01",
      "replies": [
        {
          "author": {
            "name": "Optiq01",
            "avatar": "https://avatars.githubusercontent.com/u/16946311?v=4",
            "url": "https://github.com/Optiq01"
          },
          "body": "<p dir=\"auto\">Ahhh splendid, and yes I did see that part of the docs however I was confused about how to access a sibling's data and going back and forth between that and the hooks in terms of figuring out how it could be done.  I've also been studying the repository and come to dead ends where everything points at your dist folder which isn't publicly available.  The docs are excellent but I'm not smart enough for things to be as self explanatory as they might be for others lol.  I tinkered around and got it to work but you mentioned there's lots of ways this can be done.  What are the others?</p>",
          "createdAt": "2021-09-24T19:26:04Z"
        }
      ]
    }
  },
  {
    "title": "refresh API 404 not found",
    "body": "<p dir=\"auto\">Hello, the <a href=\"https://payloadcms.com/docs/authentication/operations#refresh\" rel=\"nofollow\">refresh</a> <code class=\"notranslate\">/refresh</code> gives me HTTP 404 Not Found with body:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Cannot POST /api/[slug]/refresh\"><pre class=\"notranslate\"><code class=\"notranslate\">Cannot POST /api/[slug]/refresh\n</code></pre></div>\n<p dir=\"auto\">The request already contains header Authorization: JWT [token here]</p>\n<p dir=\"auto\">Login and logout endpoints are working fine.</p>\n<p dir=\"auto\">Currently using Payload 0.9.4</p>\n<p dir=\"auto\">Thanks</p>",
    "url": "https://github.com/payloadcms/payload/discussions/319",
    "id": "319",
    "createdAt": "2021-09-15T15:40:27Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "jbalatero",
      "avatar": "https://avatars.githubusercontent.com/u/3615746?u=0944ccb5ff7e79b9ebb4536da236715844b47bdc&v=4",
      "url": "https://github.com/jbalatero"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Wow! Our docs are wrong. The REST endpoint is:</p>\n<p dir=\"auto\"><code class=\"notranslate\">POST</code> <code class=\"notranslate\">/api/[:collectionSlug]/refresh-token</code></p>\n<p dir=\"auto\">We are going to fix this immediately. Thanks for catching this!</p>",
        "createdAt": "2021-09-15T16:05:04Z",
        "replies": [
          {
            "author": {
              "name": "jbalatero",
              "avatar": "https://avatars.githubusercontent.com/u/3615746?u=0944ccb5ff7e79b9ebb4536da236715844b47bdc&v=4",
              "url": "https://github.com/jbalatero"
            },
            "body": "<p dir=\"auto\">Thanks</p>",
            "createdAt": "2021-09-16T04:01:37Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Wow! Our docs are wrong. The REST endpoint is:</p>\n<p dir=\"auto\"><code class=\"notranslate\">POST</code> <code class=\"notranslate\">/api/[:collectionSlug]/refresh-token</code></p>\n<p dir=\"auto\">We are going to fix this immediately. Thanks for catching this!</p>",
      "createdAt": "2021-09-15T16:05:04Z",
      "chosenAt": "2021-09-16T04:01:27Z",
      "chosenBy": "jbalatero",
      "replies": [
        {
          "author": {
            "name": "jbalatero",
            "avatar": "https://avatars.githubusercontent.com/u/3615746?u=0944ccb5ff7e79b9ebb4536da236715844b47bdc&v=4",
            "url": "https://github.com/jbalatero"
          },
          "body": "<p dir=\"auto\">Thanks</p>",
          "createdAt": "2021-09-16T04:01:37Z"
        }
      ]
    }
  },
  {
    "title": "Is it possible to display only selected relationship parameters?",
    "body": "<p dir=\"auto\">We would like to give editors only specific relationship options of a category, is it currently possible to filter relationship data?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/314",
    "id": "314",
    "createdAt": "2021-09-12T18:49:39Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "AkashReddy-playy",
      "avatar": "https://avatars.githubusercontent.com/u/67790455?u=25b5608410332542ad2631305144a183d0b29351&v=4",
      "url": "https://github.com/AkashReddy-playy"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/AkashReddy-playy/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AkashReddy-playy\">@AkashReddy-playy</a> — this is a very good question and potentially a great feature request!</p>\n<p dir=\"auto\">Right now, there is nothing that would allow this but we could extend the Relationship field config to accept a <code class=\"notranslate\">where</code> query constraint that would be used in both the field's <code class=\"notranslate\">validate</code> function as well as its Admin UI component to automatically narrow down relationship field options.</p>\n<p dir=\"auto\">Outside of building this directly into Payload, you could accomplish this by building your own UI component for use within the React dashboard. We will keep this in mind. It could be a very nice feature to have.</p>",
        "createdAt": "2021-09-13T16:02:02Z",
        "replies": [
          {
            "author": {
              "name": "AkashReddy-playy",
              "avatar": "https://avatars.githubusercontent.com/u/67790455?u=25b5608410332542ad2631305144a183d0b29351&v=4",
              "url": "https://github.com/AkashReddy-playy"
            },
            "body": "<p dir=\"auto\">Thanks, <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> ,<br>\nIt could be a valuable feature, much appreciate the response. we will build a react component for now.</p>",
            "createdAt": "2021-09-13T17:03:43Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Awesome! Would love to see what you build when you build it.</p>\n<p dir=\"auto\">You could start by recycling some of the code from our built-in Relationship field here:</p>\n<p dir=\"auto\"><a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/index.tsx</a></p>\n<p dir=\"auto\">All you'd need to do to restrict options would be to inject a <code class=\"notranslate\">where</code> query into the <code class=\"notranslate\">fetch</code> that happens in the <code class=\"notranslate\">getResults</code> callback.</p>\n<p dir=\"auto\">You might also be able to simplify a lot of the code though, say, if your component only supports one <code class=\"notranslate\">relationTo</code> rather than array of options. That is where most of the complexity of this component comes from.</p>\n<p dir=\"auto\">Looking forward to seeing what you do!</p>",
            "createdAt": "2021-09-13T17:52:54Z"
          },
          {
            "author": {
              "name": "AkashReddy-playy",
              "avatar": "https://avatars.githubusercontent.com/u/67790455?u=25b5608410332542ad2631305144a183d0b29351&v=4",
              "url": "https://github.com/AkashReddy-playy"
            },
            "body": "<p dir=\"auto\">Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> , this is a great starting point , we will share any progress.</p>",
            "createdAt": "2021-09-15T17:58:07Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/AkashReddy-playy/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AkashReddy-playy\">@AkashReddy-playy</a> — this is a very good question and potentially a great feature request!</p>\n<p dir=\"auto\">Right now, there is nothing that would allow this but we could extend the Relationship field config to accept a <code class=\"notranslate\">where</code> query constraint that would be used in both the field's <code class=\"notranslate\">validate</code> function as well as its Admin UI component to automatically narrow down relationship field options.</p>\n<p dir=\"auto\">Outside of building this directly into Payload, you could accomplish this by building your own UI component for use within the React dashboard. We will keep this in mind. It could be a very nice feature to have.</p>",
      "createdAt": "2021-09-13T16:02:02Z",
      "chosenAt": "2022-12-09T16:46:50Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "AkashReddy-playy",
            "avatar": "https://avatars.githubusercontent.com/u/67790455?u=25b5608410332542ad2631305144a183d0b29351&v=4",
            "url": "https://github.com/AkashReddy-playy"
          },
          "body": "<p dir=\"auto\">Thanks, <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> ,<br>\nIt could be a valuable feature, much appreciate the response. we will build a react component for now.</p>",
          "createdAt": "2021-09-13T17:03:43Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Awesome! Would love to see what you build when you build it.</p>\n<p dir=\"auto\">You could start by recycling some of the code from our built-in Relationship field here:</p>\n<p dir=\"auto\"><a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/index.tsx</a></p>\n<p dir=\"auto\">All you'd need to do to restrict options would be to inject a <code class=\"notranslate\">where</code> query into the <code class=\"notranslate\">fetch</code> that happens in the <code class=\"notranslate\">getResults</code> callback.</p>\n<p dir=\"auto\">You might also be able to simplify a lot of the code though, say, if your component only supports one <code class=\"notranslate\">relationTo</code> rather than array of options. That is where most of the complexity of this component comes from.</p>\n<p dir=\"auto\">Looking forward to seeing what you do!</p>",
          "createdAt": "2021-09-13T17:52:54Z"
        },
        {
          "author": {
            "name": "AkashReddy-playy",
            "avatar": "https://avatars.githubusercontent.com/u/67790455?u=25b5608410332542ad2631305144a183d0b29351&v=4",
            "url": "https://github.com/AkashReddy-playy"
          },
          "body": "<p dir=\"auto\">Thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> , this is a great starting point , we will share any progress.</p>",
          "createdAt": "2021-09-15T17:58:07Z"
        }
      ]
    }
  },
  {
    "title": "using Local API with React SSR from frontend",
    "body": "<p dir=\"auto\">As I see there are some benefits when using the Local-API over REST.</p>\n<p dir=\"auto\">My current setup is a pretty default React SSR-Setup with express &amp; payload as the backend and React rendered on<br>\n/ route by express using ReactDOMServer.</p>\n<p dir=\"auto\">now I wanted to use the Local API inside the React application, but as it needs to be hydrated by the client I see no way in providing the react application with the payload instance to use functions like .find()...</p>\n<p dir=\"auto\">is there currently any solution to this problem or can you suggest which frontend library works best with SSR backends for this use case?</p>\n<p dir=\"auto\">Thanks in advance for any suggestion, clarification, or help.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/312",
    "id": "312",
    "createdAt": "2021-09-03T06:57:53Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {},
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey @Aruinerk — this is a great question!</p>\n<p dir=\"auto\">One of the tough parts about loading Payload in an SSR app that you roll by yourself is that you need to ensure that no server-side code makes its way into your client-side bundle. For example, Payload itself loads many Node packages, like Express, Mongoose, GraphQL, and other dependencies. You don't want your client-side bundle bloated with this code. Not to mention—some Node packages will simply break your code while running in the browser due to needing filesystem access, etc.</p>\n<p dir=\"auto\">However, some SSR frameworks like NextJS come with solutions to this packaged in. Next, for example, will automatically eliminate any dependencies that are only used in <code class=\"notranslate\">getServerSideProps</code> and similar data-fetching methods. This is AWESOME and very hard to do well.</p>\n<p dir=\"auto\">Take a look here:<br>\n<a href=\"https://next-code-elimination.vercel.app/\" rel=\"nofollow\">https://next-code-elimination.vercel.app/</a></p>\n<p dir=\"auto\">This tool shows you how Next eliminates code from your client-side bundles. It's basically magic.</p>\n<p dir=\"auto\">Also, here is a boilerplate that shows how to use NextJS and Payload's Local API in a single Express server:<br>\n<a href=\"https://github.com/payloadcms/nextjs-custom-server\">https://github.com/payloadcms/nextjs-custom-server</a></p>\n<p dir=\"auto\">Take a look specifically at the <a href=\"https://github.com/payloadcms/nextjs-custom-server/blob/master/pages/%5B...slug%5D.tsx#L62\"><code class=\"notranslate\">getServerSideProps</code></a> method within the <code class=\"notranslate\">[...slug].tsx</code> page.</p>\n<p dir=\"auto\">That said, you <em><strong>can</strong></em> use local Payload methods inside of NextJS' <code class=\"notranslate\">getServerSideProps</code> and similar. Again though, if you roll your own React SSR pattern, you'll have to eliminate that code manually from your client bundles using Webpack or whatever bundler you use.</p>\n<p dir=\"auto\">Last note—if you're working with static rendering in general, using Gatsby or similar, the Payload Local API really only offers marginal benefits to you because at build time, to fetch say, a page, the Local API will only shave off HTTP transfer time, ~30-100ms, from your requests.... and then maybe some latency to and from your database wherever it's hosted. Meaning, the REST / GraphQL APIs will take a bit longer to fetch, but hey, you're only fetching at build time and it won't impact your users.</p>\n<p dir=\"auto\">TL;DR I LOVE NextJS. And it pairs very well with Payload. If you need Local API and SSR, Next is the way to go. Otherwise, I'd just use the good old REST / GraphQL APIs.</p>",
        "createdAt": "2021-09-09T23:24:08Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey @Aruinerk — this is a great question!</p>\n<p dir=\"auto\">One of the tough parts about loading Payload in an SSR app that you roll by yourself is that you need to ensure that no server-side code makes its way into your client-side bundle. For example, Payload itself loads many Node packages, like Express, Mongoose, GraphQL, and other dependencies. You don't want your client-side bundle bloated with this code. Not to mention—some Node packages will simply break your code while running in the browser due to needing filesystem access, etc.</p>\n<p dir=\"auto\">However, some SSR frameworks like NextJS come with solutions to this packaged in. Next, for example, will automatically eliminate any dependencies that are only used in <code class=\"notranslate\">getServerSideProps</code> and similar data-fetching methods. This is AWESOME and very hard to do well.</p>\n<p dir=\"auto\">Take a look here:<br>\n<a href=\"https://next-code-elimination.vercel.app/\" rel=\"nofollow\">https://next-code-elimination.vercel.app/</a></p>\n<p dir=\"auto\">This tool shows you how Next eliminates code from your client-side bundles. It's basically magic.</p>\n<p dir=\"auto\">Also, here is a boilerplate that shows how to use NextJS and Payload's Local API in a single Express server:<br>\n<a href=\"https://github.com/payloadcms/nextjs-custom-server\">https://github.com/payloadcms/nextjs-custom-server</a></p>\n<p dir=\"auto\">Take a look specifically at the <a href=\"https://github.com/payloadcms/nextjs-custom-server/blob/master/pages/%5B...slug%5D.tsx#L62\"><code class=\"notranslate\">getServerSideProps</code></a> method within the <code class=\"notranslate\">[...slug].tsx</code> page.</p>\n<p dir=\"auto\">That said, you <em><strong>can</strong></em> use local Payload methods inside of NextJS' <code class=\"notranslate\">getServerSideProps</code> and similar. Again though, if you roll your own React SSR pattern, you'll have to eliminate that code manually from your client bundles using Webpack or whatever bundler you use.</p>\n<p dir=\"auto\">Last note—if you're working with static rendering in general, using Gatsby or similar, the Payload Local API really only offers marginal benefits to you because at build time, to fetch say, a page, the Local API will only shave off HTTP transfer time, ~30-100ms, from your requests.... and then maybe some latency to and from your database wherever it's hosted. Meaning, the REST / GraphQL APIs will take a bit longer to fetch, but hey, you're only fetching at build time and it won't impact your users.</p>\n<p dir=\"auto\">TL;DR I LOVE NextJS. And it pairs very well with Payload. If you need Local API and SSR, Next is the way to go. Otherwise, I'd just use the good old REST / GraphQL APIs.</p>",
      "createdAt": "2021-09-09T23:24:08Z",
      "chosenAt": "2021-09-11T01:19:51Z",
      "replies": null
    }
  },
  {
    "title": "Questions regarding creating/updating a collection using payload local API.",
    "body": "<p dir=\"auto\">Hey!</p>\n<p dir=\"auto\">So I am back trying to build this e-commerce project which I am trying for decades(sarcasm), there are problems I am facing with the payload local API methods.</p>\n<p dir=\"auto\">I have few situations where I have a relationship field with and without hasMany set to true, now when I want to use payload API to create/update the collection, I pass the id from the data I got, but it throws an error regarding ObjectId. I understand that it is asking for objectId when I am passing the id string (maybe) that I got from data.id (which is supposed to be objectId right?).</p>\n<p dir=\"auto\">I wanted to know if there is any way of updating the collection where we have a relationship field (single or as an array) with payload.create/update?<br>\nThe last way for now I see is installing mongoose and use its way to convert the string into objectID if there is no way provided by the payload (still don't know if that will work but it will add mongoose dependency just for this).</p>\n<p dir=\"auto\">If that's not possible then what am I suppose to do in a custom mutation of Checkout I was trying to make where I wanted to clone cartItems to orderItems using payload.create? (cart items fields have couple of relational fields)</p>\n<p dir=\"auto\">Oh, and I wanted to somehow delete all items in the cart after mutation is executed but I saw there is only a delete method, not really sure if I can pass an array of ids to id?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/309",
    "id": "309",
    "createdAt": "2021-08-30T13:58:14Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "fabcodingzest",
      "avatar": "https://avatars.githubusercontent.com/u/48706652?u=97fdeba99d5819fa09f9c68d5adf891a64d1d8f5&v=4",
      "url": "https://github.com/fabcodingzest"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<blockquote>\n<p dir=\"auto\">I have few situations where I have a relationship field with and without hasMany set to true, now when I want to use payload API to create/update the collection, I pass the id from the data I got, but it throws an error regarding ObjectId. I understand that it is asking for objectId when I am passing the id string (maybe) that I got from data.id (which is supposed to be objectId right?).</p>\n</blockquote>\n<p dir=\"auto\">Formatting the relationship object can be a little confusing, we added to the documentation to help <a href=\"https://payloadcms.com/docs/fields/relationship#how-the-data-is-saved\" rel=\"nofollow\">https://payloadcms.com/docs/fields/relationship#how-the-data-is-saved</a>. Have you seen that yet?</p>\n<blockquote>\n<p dir=\"auto\">I wanted to know if there is any way of updating the collection where we have a relationship field (single or as an array) with payload.create/update?</p>\n</blockquote>\n<p dir=\"auto\">Hooks is what you're looking for, either at the field or collection level. You should not have to use mongoose separately from the rest of your Payload app, in fact this could lead to issues for example Payload hooks or validation that you configure inside of Payload will not run when using mongoose directly. In this discussion <a aria-label=\"Discussion #204\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3423042\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/204\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/204/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/204\">#204</a> RobertAlbus is doing relationship updates using hooks in his project: <a href=\"https://github.com/RobertAlbus/kto-cms/blob/payload-poc/payload-kto/src/collections/hierarchical/HierarchicalHooks.ts\">https://github.com/RobertAlbus/kto-cms/blob/payload-poc/payload-kto/src/collections/hierarchical/HierarchicalHooks.ts</a></p>\n<p dir=\"auto\">Regarding how you model your cart/orders, it is totally up to you, but I have had success modeling an ecommerce system where I set a paymenyID from my processor to an order record and if an order didn't have a that field populated, the system treated it as the cart. I didn't have to worry about deleting the items for a user's cart and adding them to an order, because the data was the same. By sharing one collection for carts and orders you can simplify the workflow for checkout, just an idea.<br>\nIf you do want to have separate collections for carts vs orders, then you will have to make hooks that create and update the data through the checkout workflow. Alternatively, you can add your own endpoints to express and use Payload local APIs (or mongoose) to do what you need.</p>\n<p dir=\"auto\">Does that help? LMK if you have other questions.</p>",
        "createdAt": "2021-08-30T14:48:16Z",
        "replies": [
          {
            "author": {
              "name": "fabcodingzest",
              "avatar": "https://avatars.githubusercontent.com/u/48706652?u=97fdeba99d5819fa09f9c68d5adf891a64d1d8f5&v=4",
              "url": "https://github.com/fabcodingzest"
            },
            "body": "<p dir=\"auto\">Hey Dan,</p>\n<blockquote>\n<p dir=\"auto\">Hooks is what you're looking for, either at the field or collection level</p>\n</blockquote>\n<p dir=\"auto\">Thanks this made a lot of things clear and I managed to do things with hooks.</p>\n<p dir=\"auto\">As for having cart and orderItem as one, I decided to separate them as products will be updated over time along with the price so that would create a problem in the order Items data so choosing two different collections, but your idea was nice too thanks, I am gonna use that trick in future XD. ( This is just a practice project but I am trying to make it realistic xD).</p>\n<p dir=\"auto\">Again thanks for the help.</p>",
            "createdAt": "2021-09-02T16:47:18Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<blockquote>\n<p dir=\"auto\">I have few situations where I have a relationship field with and without hasMany set to true, now when I want to use payload API to create/update the collection, I pass the id from the data I got, but it throws an error regarding ObjectId. I understand that it is asking for objectId when I am passing the id string (maybe) that I got from data.id (which is supposed to be objectId right?).</p>\n</blockquote>\n<p dir=\"auto\">Formatting the relationship object can be a little confusing, we added to the documentation to help <a href=\"https://payloadcms.com/docs/fields/relationship#how-the-data-is-saved\" rel=\"nofollow\">https://payloadcms.com/docs/fields/relationship#how-the-data-is-saved</a>. Have you seen that yet?</p>\n<blockquote>\n<p dir=\"auto\">I wanted to know if there is any way of updating the collection where we have a relationship field (single or as an array) with payload.create/update?</p>\n</blockquote>\n<p dir=\"auto\">Hooks is what you're looking for, either at the field or collection level. You should not have to use mongoose separately from the rest of your Payload app, in fact this could lead to issues for example Payload hooks or validation that you configure inside of Payload will not run when using mongoose directly. In this discussion <a aria-label=\"Discussion #204\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3423042\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/204\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/204/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/204\">#204</a> RobertAlbus is doing relationship updates using hooks in his project: <a href=\"https://github.com/RobertAlbus/kto-cms/blob/payload-poc/payload-kto/src/collections/hierarchical/HierarchicalHooks.ts\">https://github.com/RobertAlbus/kto-cms/blob/payload-poc/payload-kto/src/collections/hierarchical/HierarchicalHooks.ts</a></p>\n<p dir=\"auto\">Regarding how you model your cart/orders, it is totally up to you, but I have had success modeling an ecommerce system where I set a paymenyID from my processor to an order record and if an order didn't have a that field populated, the system treated it as the cart. I didn't have to worry about deleting the items for a user's cart and adding them to an order, because the data was the same. By sharing one collection for carts and orders you can simplify the workflow for checkout, just an idea.<br>\nIf you do want to have separate collections for carts vs orders, then you will have to make hooks that create and update the data through the checkout workflow. Alternatively, you can add your own endpoints to express and use Payload local APIs (or mongoose) to do what you need.</p>\n<p dir=\"auto\">Does that help? LMK if you have other questions.</p>",
      "createdAt": "2021-08-30T14:48:16Z",
      "chosenAt": "2021-09-02T16:47:19Z",
      "chosenBy": "fabcodingzest",
      "replies": [
        {
          "author": {
            "name": "fabcodingzest",
            "avatar": "https://avatars.githubusercontent.com/u/48706652?u=97fdeba99d5819fa09f9c68d5adf891a64d1d8f5&v=4",
            "url": "https://github.com/fabcodingzest"
          },
          "body": "<p dir=\"auto\">Hey Dan,</p>\n<blockquote>\n<p dir=\"auto\">Hooks is what you're looking for, either at the field or collection level</p>\n</blockquote>\n<p dir=\"auto\">Thanks this made a lot of things clear and I managed to do things with hooks.</p>\n<p dir=\"auto\">As for having cart and orderItem as one, I decided to separate them as products will be updated over time along with the price so that would create a problem in the order Items data so choosing two different collections, but your idea was nice too thanks, I am gonna use that trick in future XD. ( This is just a practice project but I am trying to make it realistic xD).</p>\n<p dir=\"auto\">Again thanks for the help.</p>",
          "createdAt": "2021-09-02T16:47:18Z"
        }
      ]
    }
  },
  {
    "title": "Admin collection level validation",
    "body": "<p dir=\"auto\">Is it possible to do validation on Collection level in the admin? We have two fields:</p>\n<ul dir=\"auto\">\n<li>Link: relationship</li>\n<li>Title: text</li>\n</ul>\n<p dir=\"auto\">We want to validate that either the Link or Title field is filled in. Title is optional once you provide a Link (as the linked collection has a title field) but is required if you do not provide a link relationship.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/307",
    "id": "307",
    "createdAt": "2021-08-20T12:13:54Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "wezzle",
      "avatar": "https://avatars.githubusercontent.com/u/1905309?u=081c6ef68f3adde1e0ebdcf67b6b1c24534b18d1&v=4",
      "url": "https://github.com/wezzle"
    },
    "comments": [
      {
        "author": {
          "name": "rpfaeffle",
          "avatar": "https://avatars.githubusercontent.com/u/67913738?v=4",
          "url": "https://github.com/rpfaeffle"
        },
        "body": "<p dir=\"auto\">As far as I know, there is no possibility to validate a collection directly, based on the properties you hand over to fields. But you could use a <code class=\"notranslate\">BeforeValidateHook</code> to check whether a link has been provided or not. The only problem with this is that you have to make both of the fields optional and cannot directly show the user that the field is required (except you're using a custom component). But you could throw and error message using payloads <code class=\"notranslate\">ApiError</code> to provide the user with context why it failed to save.</p>\n<p dir=\"auto\">I've created a simple example using a <code class=\"notranslate\">checkbox</code> and a <code class=\"notranslate\">textfield</code>:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const Collection = {\n  slug: 'my-collection',\n  fields: [\n    {\n      name: &quot;checkbox&quot;,\n      type: &quot;checkbox&quot;,\n    },\n    {\n      type: &quot;text&quot;,\n      name: &quot;text&quot;,\n      required: false, // Important, else you won't be able to save\n    },\n  ],\n  hooks: {\n    beforeValidate: [\n      ({ data }) =&gt; {\n        if (data?.checkbox &amp;&amp; data.checkbox === true) {\n          // Make sure text has value\n          if (!data.text || data?.text.trim() === &quot;&quot;) {\n            throw new APIError(&quot;Text is required&quot;);\n          }\n        }\n      },\n    ],\n  },\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-v\">Collection</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'my-collection'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">\"checkbox\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"checkbox\"</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"text\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">\"text\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">false</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// Important, else you won't be able to save</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">beforeValidate</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> data <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">checkbox</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">checkbox</span> <span class=\"pl-c1\">===</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c\">// Make sure text has value</span>\n          <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">text</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">text</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">trim</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">\"\"</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">APIError</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"Text is required\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span></pre></div>",
        "createdAt": "2021-08-20T15:13:55Z",
        "replies": [
          {
            "author": {
              "name": "wezzle",
              "avatar": "https://avatars.githubusercontent.com/u/1905309?u=081c6ef68f3adde1e0ebdcf67b6b1c24534b18d1&v=4",
              "url": "https://github.com/wezzle"
            },
            "body": "<p dir=\"auto\">Thank you for the APIError example. I'll use this for now!</p>",
            "createdAt": "2021-08-20T16:07:23Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "rpfaeffle",
        "avatar": "https://avatars.githubusercontent.com/u/67913738?v=4",
        "url": "https://github.com/rpfaeffle"
      },
      "body": "<p dir=\"auto\">As far as I know, there is no possibility to validate a collection directly, based on the properties you hand over to fields. But you could use a <code class=\"notranslate\">BeforeValidateHook</code> to check whether a link has been provided or not. The only problem with this is that you have to make both of the fields optional and cannot directly show the user that the field is required (except you're using a custom component). But you could throw and error message using payloads <code class=\"notranslate\">ApiError</code> to provide the user with context why it failed to save.</p>\n<p dir=\"auto\">I've created a simple example using a <code class=\"notranslate\">checkbox</code> and a <code class=\"notranslate\">textfield</code>:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const Collection = {\n  slug: 'my-collection',\n  fields: [\n    {\n      name: &quot;checkbox&quot;,\n      type: &quot;checkbox&quot;,\n    },\n    {\n      type: &quot;text&quot;,\n      name: &quot;text&quot;,\n      required: false, // Important, else you won't be able to save\n    },\n  ],\n  hooks: {\n    beforeValidate: [\n      ({ data }) =&gt; {\n        if (data?.checkbox &amp;&amp; data.checkbox === true) {\n          // Make sure text has value\n          if (!data.text || data?.text.trim() === &quot;&quot;) {\n            throw new APIError(&quot;Text is required&quot;);\n          }\n        }\n      },\n    ],\n  },\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-v\">Collection</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'my-collection'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">\"checkbox\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"checkbox\"</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">\"text\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">\"text\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">false</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// Important, else you won't be able to save</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">beforeValidate</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> data <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">checkbox</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">checkbox</span> <span class=\"pl-c1\">===</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c\">// Make sure text has value</span>\n          <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">text</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">text</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">trim</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">\"\"</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">APIError</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"Text is required\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span></pre></div>",
      "createdAt": "2021-08-20T15:13:55Z",
      "chosenAt": "2022-12-09T16:46:38Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "wezzle",
            "avatar": "https://avatars.githubusercontent.com/u/1905309?u=081c6ef68f3adde1e0ebdcf67b6b1c24534b18d1&v=4",
            "url": "https://github.com/wezzle"
          },
          "body": "<p dir=\"auto\">Thank you for the APIError example. I'll use this for now!</p>",
          "createdAt": "2021-08-20T16:07:23Z"
        }
      ]
    }
  },
  {
    "title": "Fetching prev/next posts",
    "body": "<h2 dir=\"auto\">Question</h2>\n<p dir=\"auto\">Has anyone needed to fetch neighboring documents of a specific document? How have you implemented this? I think my problem is when I am querying the first / last post. If I'm on the last post, the next post should be the first post.</p>\n<h2 dir=\"auto\">My attempt</h2>\n<p dir=\"auto\">I found a <a href=\"https://stackoverflow.com/a/9153447\" rel=\"nofollow\">few people online</a> who were using the following mongoose queries to solve this<br>\nPrev: <code class=\"notranslate\">db.posts.find({_id: {$gt: curId}}).sort({_id: 1 }).limit(1)</code><br>\nNext: <code class=\"notranslate\">db.posts.find({_id: {$lt: curId}}).sort({_id: 1 }).limit(1)</code></p>\n<p dir=\"auto\">And I attempted to wire it up with payload, but am not sure if I am missing something?</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import payload from 'payload';\nimport { BeforeReadHook } from 'payload/dist/collections/config/types';\n\nexport const appendPrevNextDoc: BeforeReadHook = async ({ doc, req, query }) =&gt; {\n  if (req.query &amp;&amp; req.query.appendPrevNextDoc) {\n    try {\n      const prev = await payload.find({\n        collection: 'session',\n        sort: '-_id',\n        where: {\n          id: {\n            less_than: doc.id\n          }\n        }\n      });\n      const next = await payload.find({\n        collection: 'session',\n        sort: '_id',\n        where: {\n          id: {\n            greater_than: doc.id\n          }\n        }\n      })\n      console.log({ prev, next });\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  return doc;\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">BeforeReadHook</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/dist/collections/config/types'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">appendPrevNextDoc</span>: <span class=\"pl-v\">BeforeReadHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> doc<span class=\"pl-kos\">,</span> req<span class=\"pl-kos\">,</span> query <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">query</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">query</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">appendPrevNextDoc</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">const</span> <span class=\"pl-s1\">prev</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'session'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">sort</span>: <span class=\"pl-s\">'-_id'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">where</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">id</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">less_than</span>: <span class=\"pl-s1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span>\n          <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-k\">const</span> <span class=\"pl-s1\">next</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'session'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">sort</span>: <span class=\"pl-s\">'_id'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">where</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">id</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">greater_than</span>: <span class=\"pl-s1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span>\n          <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n      <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> prev<span class=\"pl-kos\">,</span> next <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-s1\">doc</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<h2 dir=\"auto\">Other thoughts</h2>\n<p dir=\"auto\">Is it possible to access the collection <code class=\"notranslate\">slug</code> that is calling the hook? That would allow this hook to be reusable across collection types if I could just use a variable for <code class=\"notranslate\">collection: 'session'</code> in the find query.</p>\n<p dir=\"auto\">Thanks!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/306",
    "id": "306",
    "createdAt": "2021-08-19T12:52:34Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "JarrodMFlesch",
      "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
      "url": "https://github.com/JarrodMFlesch"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">It seems to me like your code should actually work to do what you want. Does it work, for the most part? Outside of where you're saying:</p>\n<blockquote>\n<p dir=\"auto\">I think my problem is when I am querying the first / last post. If I'm on the last post, the next post should be the first post.</p>\n</blockquote>\n<p dir=\"auto\">If it works up to that point, and say you are on the last post with no first post, you'd just need to fetch the first post and use that manually. If this does not work at all, it might be a lower level issue. I've never personally tried to sort on IDs but I will do some digging if this <em><strong>should</strong></em> work and does not.</p>\n<blockquote>\n<p dir=\"auto\">Is it possible to access the collection slug that is calling the hook? That would allow this hook to be reusable across collection types if I could just use a variable for collection: 'session' in the find query.</p>\n</blockquote>\n<p dir=\"auto\">You should extract your hook to be reusable by wrapping your hook in another function that accepts <code class=\"notranslate\">args</code>. That function would then return your hook, with the collection name. Like:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const pages = {\n // ...\n  hooks: {\n    afterRead: [\n      thisHookIsReusable({ collection: 'pages' }),\n    ]\n  } \n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">pages</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n <span class=\"pl-c\">// ...</span>\n  <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">afterRead</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-en\">thisHookIsReusable</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'pages'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">}</span> \n<span class=\"pl-kos\">}</span></pre></div>",
        "createdAt": "2021-08-19T19:08:03Z",
        "replies": [
          {
            "author": {
              "name": "JarrodMFlesch",
              "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
              "url": "https://github.com/JarrodMFlesch"
            },
            "body": "<p dir=\"auto\">Yeah for the most part it does work, <em>I think</em> it's returning data, in what order that I am not entirely sure yet, gotta add more entries. I could sort on a different field in my collection too. But anyways, manually querying the edge cases prev/next sounds like the right solution.</p>\n<blockquote>\n<p dir=\"auto\">You should extract your hook to be reusable by wrapping your hook in another function that accepts args.<br>\nYep that makes sense, I just wanted to make sure there was not a way to do that already without manually passing the collection string like you are suggesting.</p>\n</blockquote>\n<p dir=\"auto\">Thanks!</p>",
            "createdAt": "2021-08-19T19:28:01Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">It seems to me like your code should actually work to do what you want. Does it work, for the most part? Outside of where you're saying:</p>\n<blockquote>\n<p dir=\"auto\">I think my problem is when I am querying the first / last post. If I'm on the last post, the next post should be the first post.</p>\n</blockquote>\n<p dir=\"auto\">If it works up to that point, and say you are on the last post with no first post, you'd just need to fetch the first post and use that manually. If this does not work at all, it might be a lower level issue. I've never personally tried to sort on IDs but I will do some digging if this <em><strong>should</strong></em> work and does not.</p>\n<blockquote>\n<p dir=\"auto\">Is it possible to access the collection slug that is calling the hook? That would allow this hook to be reusable across collection types if I could just use a variable for collection: 'session' in the find query.</p>\n</blockquote>\n<p dir=\"auto\">You should extract your hook to be reusable by wrapping your hook in another function that accepts <code class=\"notranslate\">args</code>. That function would then return your hook, with the collection name. Like:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const pages = {\n // ...\n  hooks: {\n    afterRead: [\n      thisHookIsReusable({ collection: 'pages' }),\n    ]\n  } \n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">pages</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n <span class=\"pl-c\">// ...</span>\n  <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">afterRead</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-en\">thisHookIsReusable</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'pages'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">}</span> \n<span class=\"pl-kos\">}</span></pre></div>",
      "createdAt": "2021-08-19T19:08:03Z",
      "chosenAt": "2021-08-19T19:28:02Z",
      "chosenBy": "JarrodMFlesch",
      "replies": [
        {
          "author": {
            "name": "JarrodMFlesch",
            "avatar": "https://avatars.githubusercontent.com/u/30633324?u=13d4ca1d1d86b5ce4a1ff5eef12b3016b20b2283&v=4",
            "url": "https://github.com/JarrodMFlesch"
          },
          "body": "<p dir=\"auto\">Yeah for the most part it does work, <em>I think</em> it's returning data, in what order that I am not entirely sure yet, gotta add more entries. I could sort on a different field in my collection too. But anyways, manually querying the edge cases prev/next sounds like the right solution.</p>\n<blockquote>\n<p dir=\"auto\">You should extract your hook to be reusable by wrapping your hook in another function that accepts args.<br>\nYep that makes sense, I just wanted to make sure there was not a way to do that already without manually passing the collection string like you are suggesting.</p>\n</blockquote>\n<p dir=\"auto\">Thanks!</p>",
          "createdAt": "2021-08-19T19:28:01Z"
        }
      ]
    }
  },
  {
    "title": "Need help! on production deployment",
    "body": "<p dir=\"auto\">I trying to deploy my first Payload app. Many things are being fixed, but I've no idea about it.</p>\n<p dir=\"auto\">Oh yes! I using Heroku.<br>\nTLDR: Think that we just need export type { Props } to make it work.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/29366271/129308311-77663062-25db-4a16-9aca-22c6b5671a91.png\"><img width=\"1028\" alt=\"Screen Shot 2564-08-13 at 12 12 24 PM\" src=\"https://user-images.githubusercontent.com/29366271/129308311-77663062-25db-4a16-9aca-22c6b5671a91.png\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/298",
    "id": "298",
    "createdAt": "2021-08-13T05:20:05Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "Duckinm",
      "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
      "url": "https://github.com/Duckinm"
    },
    "comments": [
      {
        "author": {
          "name": "Duckinm",
          "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
          "url": "https://github.com/Duckinm"
        },
        "body": "<p dir=\"auto\">Updated, I solved it by convert built-in type { Props } from Payload of Cell.tsx (ColorPicker one)</p>\n<p dir=\"auto\">I thought that this should be fixed by Payload in common instead.</p>",
        "createdAt": "2021-08-13T16:18:12Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "Duckinm",
        "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
        "url": "https://github.com/Duckinm"
      },
      "body": "<p dir=\"auto\">Updated, I solved it by convert built-in type { Props } from Payload of Cell.tsx (ColorPicker one)</p>\n<p dir=\"auto\">I thought that this should be fixed by Payload in common instead.</p>",
      "createdAt": "2021-08-13T16:18:12Z",
      "chosenAt": "2021-08-14T03:16:21Z",
      "chosenBy": "Duckinm",
      "replies": null
    }
  },
  {
    "title": "Issues by Color picker",
    "body": "<p dir=\"auto\">I try to implement the colour picker the way the blog does and use it as a field of the block.</p>\n<p dir=\"auto\">Everything work on the admin panel, but on my front side it's doom. As I thought the issues may occur while I adding the colour or something... It's about Button Component that imports from payload/components using as a part of custom InputField of colour picker</p>\n<p dir=\"auto\">Using:<br>\nNext JS Framework</p>\n<p dir=\"auto\">My error log:<br>\n<code class=\"notranslate\">Global CSS cannot be imported from within node_modules.</code></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/29366271/128616554-2ac40781-933d-4bdc-b72c-e31c77e96fef.png\"><img src=\"https://user-images.githubusercontent.com/29366271/128616554-2ac40781-933d-4bdc-b72c-e31c77e96fef.png\" alt=\"Screen Shot 2564-08-08 at 6 49 22 AM\" style=\"max-width: 100%;\"></a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/29366271/128616556-cd48f800-4bc1-4570-99aa-a9b19f6214bf.png\"><img src=\"https://user-images.githubusercontent.com/29366271/128616556-cd48f800-4bc1-4570-99aa-a9b19f6214bf.png\" alt=\"Screen Shot 2564-08-08 at 6 50 02 AM\" style=\"max-width: 100%;\"></a></p>",
    "url": "https://github.com/payloadcms/payload/discussions/274",
    "id": "274",
    "createdAt": "2021-08-07T23:58:34Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "Duckinm",
      "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
      "url": "https://github.com/Duckinm"
    },
    "comments": [
      {
        "author": {
          "name": "richardvanbergen",
          "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
          "url": "https://github.com/richardvanbergen"
        },
        "body": "<p dir=\"auto\">Can we see the code where you're importing the CSS?</p>\n<p dir=\"auto\">It looks to be a common issue with next.js</p>\n<p dir=\"auto\"><a aria-label=\"Issue #19936\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"758781682\" data-permission-text=\"Title is private\" data-url=\"https://github.com/vercel/next.js/issues/19936\" data-hovercard-type=\"issue\" data-hovercard-url=\"/vercel/next.js/issues/19936/hovercard?comment_id=740509781&amp;comment_type=issue_comment\" href=\"https://github.com/vercel/next.js/issues/19936#issuecomment-740509781\">vercel/next.js#19936 (comment)</a></p>",
        "createdAt": "2021-08-08T00:07:19Z",
        "replies": [
          {
            "author": {
              "name": "Duckinm",
              "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
              "url": "https://github.com/Duckinm"
            },
            "body": "<p dir=\"auto\">I read that thread already. Actually a lot of threads. It's really happening whether no css file there.</p>\n<p dir=\"auto\">Here my _app.scss</p>\n<p dir=\"auto\">`<br>\nimport type { NextComponentType } from 'next'<br>\nimport App, { AppContext, AppInitialProps, AppLayoutProps } from 'next/app'<br>\nimport { ReactNode } from 'react'<br>\nimport '../styles/app.scss'</p>\n<p dir=\"auto\">const MyApp: NextComponentType&lt;AppContext, AppInitialProps, AppLayoutProps&gt; = ({<br>\nComponent,<br>\npageProps,<br>\n}: AppLayoutProps) =&gt; {<br>\nconst getLayout = Component.getLayout || ((page: ReactNode) =&gt; page)<br>\nreturn getLayout(&lt;Component {...pageProps} /&gt;)<br>\n}</p>\n<p dir=\"auto\">MyApp.getInitialProps = async (appContext) =&gt; {<br>\nconst appProps = await App.getInitialProps(appContext)</p>\n<p dir=\"auto\">// Analytics Global Fetch<br>\nconst settings = await fetch(<br>\n<code class=\"notranslate\">${process.env.NEXT_PUBLIC_SERVER_URL}/api/globals/settings</code><br>\n).then((res) =&gt; res.json())</p>\n<p dir=\"auto\">return {<br>\n...appProps,<br>\nsettings,<br>\n}<br>\n}</p>\n<p dir=\"auto\">export default MyApp<br>\n`</p>",
            "createdAt": "2021-08-08T00:23:53Z"
          }
        ]
      },
      {
        "author": {
          "name": "Duckinm",
          "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
          "url": "https://github.com/Duckinm"
        },
        "body": "<p dir=\"auto\">Right now, I didn't even know how to remove this bug!</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/29366271/128617001-4e9354df-3e35-4b7b-846a-0d05c711889d.png\"><img src=\"https://user-images.githubusercontent.com/29366271/128617001-4e9354df-3e35-4b7b-846a-0d05c711889d.png\" alt=\"Screen Shot 2564-08-08 at 7 30 44 AM\" style=\"max-width: 100%;\"></a></p>",
        "createdAt": "2021-08-08T00:31:24Z",
        "replies": null
      },
      {
        "author": {
          "name": "Duckinm",
          "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
          "url": "https://github.com/Duckinm"
        },
        "body": "<p dir=\"auto\">Updated! The error didn't come from the Color Picker but coming from index.ts in Block Folder which include all components of Blocks error occurring while RenderBlocks Component are read (Boilerplate from Custom website series).</p>\n<p dir=\"auto\">I've to fix the index.ts which I also still do not know how it bugs? I do follow all the templates T_T</p>",
        "createdAt": "2021-08-08T22:13:14Z",
        "replies": [
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Hi there, sorry you're having some difficulty. I'm not as familiar with the video series code.<br>\nIs it a problem with the config used within the blocks? I would try removing or commenting out parts of the config to isolate the problem. We can help more easily of you share your config and also any errors you are getting.</p>",
            "createdAt": "2021-08-09T00:49:39Z"
          },
          {
            "author": {
              "name": "Duckinm",
              "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
              "url": "https://github.com/Duckinm"
            },
            "body": "<p dir=\"auto\">Thank you for replying, As my isolation is being fractured...</p>\n<p dir=\"auto\">These issues coming from The colour picker as I firstly interpret, Everything in the Blocks Components is fine. without implementing a colour picker!!! (Color picker is the one from the blog does, I just copy &amp; paste.)</p>\n<p dir=\"auto\">Here, One of my Block that using ColorField:</p>\n<p dir=\"auto\">`import { Block } from 'payload/types'<br>\nimport React from 'react'<br>\nimport colorField from 'src/components/ColorPicker/config'</p>\n<p dir=\"auto\">export type Type = {<br>\nblockType: 'content'<br>\nblockName?: string<br>\ncolorField: string</p>\n<p dir=\"auto\">}</p>\n<p dir=\"auto\">export const Content: Block = {<br>\nslug: 'content',<br>\nlabels: {<br>\nsingular: 'Content',<br>\nplural: 'Content Blocks',<br>\n},<br>\nfields: [<br>\ncolorField,<br>\n],<br>\n}</p>\n<p dir=\"auto\">export const Component: React.FC = () =&gt; return </p><div dir=\"auto\"></div><br>\nexport default Content<br>\n`<p dir=\"auto\"></p>\n<p dir=\"auto\">And here the error again:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/29366271/128657308-56bbcdb8-5908-4921-9ef8-237b073d6d60.png\"><img src=\"https://user-images.githubusercontent.com/29366271/128657308-56bbcdb8-5908-4921-9ef8-237b073d6d60.png\" alt=\"128617001-4e9354df-3e35-4b7b-846a-0d05c711889d\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Hope we could find a way to secure this. Because I really want to use this colour picker as a block component so much.</p>\n<p dir=\"auto\">Oh! Forgot to mention; It's 100% work on a collection</p>",
            "createdAt": "2021-08-09T03:25:51Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Duckinm/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Duckinm\">@Duckinm</a> — I can provide a bit of context here for you!</p>\n<p dir=\"auto\">I have also run into this exact problem. It's indeed due to exactly the <a href=\"https://github.com/vercel/next.js/issues/19936#issuecomment-740509781\" data-hovercard-type=\"issue\" data-hovercard-url=\"/vercel/next.js/issues/19936/hovercard\">NextJS issue</a> that <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> mentioned.</p>\n<p dir=\"auto\">You are attempting to combine your frontend block code in the same file as your Payload config, which contains the color picker... exactly how we are doing in our NextJS boilerplate <a href=\"https://github.com/payloadcms/nextjs-custom-server/blob/master/blocks/Content/index.tsx\">here</a>. Notice how the React component that we render on the frontend is in the same file as the Payload block config itself.</p>\n<p dir=\"auto\">This is super nice and tidy, but it only works if you do not import any CSS / SCSS files directly from node modules....unfortunately.</p>\n<p dir=\"auto\">The way around it is to completely separate your NextJS frontend component from your Payload component. Then, you'd import your frontend component from a totally separate file. So, when NextJS imports your frontend component, it won't import any Payload backend code (including your color picker custom field).</p>\n<p dir=\"auto\">This is actually probably a better pattern in your case anyway, as having NextJS import a file containing both your Payload code and your frontend code will create a larger bundle filesize for your frontend app.</p>\n<p dir=\"auto\">Just split out your frontend component into a separate file, and import it from there. That should fix it!</p>",
            "createdAt": "2021-08-09T14:57:34Z"
          },
          {
            "author": {
              "name": "Duckinm",
              "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
              "url": "https://github.com/Duckinm"
            },
            "body": "<p dir=\"auto\">Bloody Hell! I quickly separate components from the block file and then it's work now!</p>",
            "createdAt": "2021-08-09T17:10:39Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Duckinm/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Duckinm\">@Duckinm</a> I love it when things work!</p>\n<p dir=\"auto\">Keep it up!</p>",
            "createdAt": "2021-08-09T17:12:59Z"
          },
          {
            "author": {
              "name": "Duckinm",
              "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
              "url": "https://github.com/Duckinm"
            },
            "body": "<p dir=\"auto\">I got a bit hurry to forgot to say, Thank you!</p>",
            "createdAt": "2021-08-09T17:14:49Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "Duckinm",
        "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
        "url": "https://github.com/Duckinm"
      },
      "body": "<p dir=\"auto\">Updated! The error didn't come from the Color Picker but coming from index.ts in Block Folder which include all components of Blocks error occurring while RenderBlocks Component are read (Boilerplate from Custom website series).</p>\n<p dir=\"auto\">I've to fix the index.ts which I also still do not know how it bugs? I do follow all the templates T_T</p>",
      "createdAt": "2021-08-08T22:13:14Z",
      "chosenAt": "2021-08-17T13:51:15Z",
      "chosenBy": "DanRibbens",
      "replies": [
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Hi there, sorry you're having some difficulty. I'm not as familiar with the video series code.<br>\nIs it a problem with the config used within the blocks? I would try removing or commenting out parts of the config to isolate the problem. We can help more easily of you share your config and also any errors you are getting.</p>",
          "createdAt": "2021-08-09T00:49:39Z"
        },
        {
          "author": {
            "name": "Duckinm",
            "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
            "url": "https://github.com/Duckinm"
          },
          "body": "<p dir=\"auto\">Thank you for replying, As my isolation is being fractured...</p>\n<p dir=\"auto\">These issues coming from The colour picker as I firstly interpret, Everything in the Blocks Components is fine. without implementing a colour picker!!! (Color picker is the one from the blog does, I just copy &amp; paste.)</p>\n<p dir=\"auto\">Here, One of my Block that using ColorField:</p>\n<p dir=\"auto\">`import { Block } from 'payload/types'<br>\nimport React from 'react'<br>\nimport colorField from 'src/components/ColorPicker/config'</p>\n<p dir=\"auto\">export type Type = {<br>\nblockType: 'content'<br>\nblockName?: string<br>\ncolorField: string</p>\n<p dir=\"auto\">}</p>\n<p dir=\"auto\">export const Content: Block = {<br>\nslug: 'content',<br>\nlabels: {<br>\nsingular: 'Content',<br>\nplural: 'Content Blocks',<br>\n},<br>\nfields: [<br>\ncolorField,<br>\n],<br>\n}</p>\n<p dir=\"auto\">export const Component: React.FC = () =&gt; return </p><div dir=\"auto\"></div><br>\nexport default Content<br>\n`<p dir=\"auto\"></p>\n<p dir=\"auto\">And here the error again:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/29366271/128657308-56bbcdb8-5908-4921-9ef8-237b073d6d60.png\"><img src=\"https://user-images.githubusercontent.com/29366271/128657308-56bbcdb8-5908-4921-9ef8-237b073d6d60.png\" alt=\"128617001-4e9354df-3e35-4b7b-846a-0d05c711889d\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Hope we could find a way to secure this. Because I really want to use this colour picker as a block component so much.</p>\n<p dir=\"auto\">Oh! Forgot to mention; It's 100% work on a collection</p>",
          "createdAt": "2021-08-09T03:25:51Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Duckinm/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Duckinm\">@Duckinm</a> — I can provide a bit of context here for you!</p>\n<p dir=\"auto\">I have also run into this exact problem. It's indeed due to exactly the <a href=\"https://github.com/vercel/next.js/issues/19936#issuecomment-740509781\" data-hovercard-type=\"issue\" data-hovercard-url=\"/vercel/next.js/issues/19936/hovercard\">NextJS issue</a> that <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> mentioned.</p>\n<p dir=\"auto\">You are attempting to combine your frontend block code in the same file as your Payload config, which contains the color picker... exactly how we are doing in our NextJS boilerplate <a href=\"https://github.com/payloadcms/nextjs-custom-server/blob/master/blocks/Content/index.tsx\">here</a>. Notice how the React component that we render on the frontend is in the same file as the Payload block config itself.</p>\n<p dir=\"auto\">This is super nice and tidy, but it only works if you do not import any CSS / SCSS files directly from node modules....unfortunately.</p>\n<p dir=\"auto\">The way around it is to completely separate your NextJS frontend component from your Payload component. Then, you'd import your frontend component from a totally separate file. So, when NextJS imports your frontend component, it won't import any Payload backend code (including your color picker custom field).</p>\n<p dir=\"auto\">This is actually probably a better pattern in your case anyway, as having NextJS import a file containing both your Payload code and your frontend code will create a larger bundle filesize for your frontend app.</p>\n<p dir=\"auto\">Just split out your frontend component into a separate file, and import it from there. That should fix it!</p>",
          "createdAt": "2021-08-09T14:57:34Z"
        },
        {
          "author": {
            "name": "Duckinm",
            "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
            "url": "https://github.com/Duckinm"
          },
          "body": "<p dir=\"auto\">Bloody Hell! I quickly separate components from the block file and then it's work now!</p>",
          "createdAt": "2021-08-09T17:10:39Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Duckinm/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Duckinm\">@Duckinm</a> I love it when things work!</p>\n<p dir=\"auto\">Keep it up!</p>",
          "createdAt": "2021-08-09T17:12:59Z"
        },
        {
          "author": {
            "name": "Duckinm",
            "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
            "url": "https://github.com/Duckinm"
          },
          "body": "<p dir=\"auto\">I got a bit hurry to forgot to say, Thank you!</p>",
          "createdAt": "2021-08-09T17:14:49Z"
        }
      ]
    }
  },
  {
    "title": "Disable storing static uploads locally",
    "body": "<p dir=\"auto\">Is there any way I can disable storing static files locally and use S3 only?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/247",
    "id": "247",
    "createdAt": "2021-07-28T06:11:53Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "realmacaw",
      "avatar": "https://avatars.githubusercontent.com/u/59328122?v=4",
      "url": "https://github.com/realmacaw"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/realmacaw/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/realmacaw\">@realmacaw</a> — totally!</p>\n<p dir=\"auto\">You can do this completely through hooks. <a href=\"https://github.com/payloadcms/payload/discussions/220\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/220/hovercard\">Here is a relevant Discussion</a> that addresses this topic (Cloudinary, but same principles apply).</p>\n<p dir=\"auto\">Also, <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> is working on building out an S3 plugin, which would automate all of this for you. We're pumped about that (and not to mention, happy to support how we can).</p>\n<p dir=\"auto\">Plugin progress is briefly mentioned here:</p>\n<p dir=\"auto\"><a aria-label=\"Issue #245\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"953837242\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/245\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/245/hovercard\" href=\"https://github.com/payloadcms/payload/issues/245\">#245</a></p>\n<p dir=\"auto\">I'm sure more will be coming from that shortly!</p>",
        "createdAt": "2021-07-28T14:26:19Z",
        "replies": [
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Yes there is more coming, I expect that I'll have something decent put together by next week sometime. I've just opened a thread here if you'd like to follow: <a aria-label=\"Discussion #249\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3487453\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/249\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/249/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/249\">#249</a></p>\n<p dir=\"auto\">Technically I'm supposed to be on holiday but that just means more time for fun projects <g-emoji class=\"g-emoji\" alias=\"wink\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f609.png\">😉</g-emoji></p>\n<p dir=\"auto\">I am curious though, is there a reason you would want to actively suppress the local storage? I can add that to the plugin if it'd be useful.</p>",
            "createdAt": "2021-07-28T14:39:36Z"
          },
          {
            "author": {
              "name": "realmacaw",
              "avatar": "https://avatars.githubusercontent.com/u/59328122?v=4",
              "url": "https://github.com/realmacaw"
            },
            "body": "<p dir=\"auto\">That's great. Following <a aria-label=\"Discussion #249\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3487453\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/249\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/249/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/249\">#249</a>. I was just wondering if the uploads to local storage might cause problems if I deploy the app on AWS ECS on a docker image. I guess having the option to disable local storage when we're opting for cloud storage would be really good right?</p>",
            "createdAt": "2021-07-29T10:54:08Z"
          },
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<blockquote>\n<p dir=\"auto\">if the uploads to local storage might cause problems if I deploy the app on AWS ECS on a docker image</p>\n</blockquote>\n<p dir=\"auto\">I'm not sure, digital ocean app platform doesn't seem to state any limit on ephemeral storage. I haven't used EC2 in a long while but I guess the way you would deal with that would be by setting up alerts for your attached storage? I can't remember how it's supposed to work.</p>\n<p dir=\"auto\">I might have one problem with preventing storage on the local FS though. If you use <code class=\"notranslate\">upload.sizes</code> to generate thumbnails then those get generated on the file system and passed through to my plugin. The issue is that before I was grabbing the image from the request and just straight-up uploading them, ignoring the version that is stored on the FS. That's not going to work for the generated thumbnails unless I do my own image processing before uploading.</p>\n<p dir=\"auto\">What do you think <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> and <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/realmacaw/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/realmacaw\">@realmacaw</a>? Should I pull the generated thumbnails from the file system or regenerate them and upload them straight from the <code class=\"notranslate\">PayloadRequest</code> object while preventing storing them locally?</p>",
            "createdAt": "2021-07-31T02:20:08Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> I think that we could easily append the file sizes to the <code class=\"notranslate\">req</code>, which would then make them usable in memory via hooks as well as writing them to disk. Then, we could delete local uploads no problem.</p>\n<p dir=\"auto\">I think this is a great feature. We will slate it into our workload. Should not take too much work!</p>",
            "createdAt": "2021-08-02T19:48:20Z"
          },
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> Agreed. That would be the best solution, I'd rather not have to maintain a separate-but-similar implementation of a resize process that's already happened once in the request.</p>",
            "createdAt": "2021-08-02T22:42:04Z"
          },
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/realmacaw/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/realmacaw\">@realmacaw</a> just thought you might like to know my plugin is now stable and it has support for disabling the uploads. Please check it out and let me know what you think.</p>\n<p dir=\"auto\"><a aria-label=\"Discussion #275\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3509019\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/275\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/275/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/275\">#275</a></p>",
            "createdAt": "2021-08-09T07:55:36Z"
          }
        ]
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/realmacaw/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/realmacaw\">@realmacaw</a> quick update for you:</p>\n<p dir=\"auto\">We just released <code class=\"notranslate\">0.9.2</code> which now has a super simple way to totally disable writing to the file system!</p>\n<p dir=\"auto\"><a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#092-2021-08-06\">https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#092-2021-08-06</a></p>",
        "createdAt": "2021-08-06T16:26:49Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/realmacaw/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/realmacaw\">@realmacaw</a> quick update for you:</p>\n<p dir=\"auto\">We just released <code class=\"notranslate\">0.9.2</code> which now has a super simple way to totally disable writing to the file system!</p>\n<p dir=\"auto\"><a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#092-2021-08-06\">https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#092-2021-08-06</a></p>",
      "createdAt": "2021-08-06T16:26:49Z",
      "chosenAt": "2022-12-09T16:46:18Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Why are the parameters for collection hooks typed as being possibly undefined?",
    "body": "<p dir=\"auto\">As you've probably seen, I've done a bad thing and enabled strict mode in my tsconfig.json</p>\n<p dir=\"auto\">It's saying that <code class=\"notranslate\">args</code> passed into hooks can be undefined so I have to wrap my mutations in an <code class=\"notranslate\">if</code> block. My concern is that if I'm not returning <code class=\"notranslate\">data</code> from say a <code class=\"notranslate\">beforeChange</code> hook, would that result in wiping out some data?</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export const uploadHook: CollectionBeforeChangeHook = async (args) =&gt; {\n  if (args) {\n    const { req, data } = args\n    if (req?.files?.file) {\n      let uploadedFile: UploadedFile\n      if (Array.isArray(req.files.file)) {\n        uploadedFile = req.files.file[0]\n      } else {\n        uploadedFile = req.files.file\n      }\n\n      const adapter = getAdapter()\n      await adapter.upload(data.filename, uploadedFile)\n    }\n\n    return data\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">const</span> <span class=\"pl-en\">uploadHook</span>: <span class=\"pl-smi\">CollectionBeforeChangeHook</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> req<span class=\"pl-kos\">,</span> data <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">args</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">files</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">let</span> <span class=\"pl-s1\">uploadedFile</span>: <span class=\"pl-smi\">UploadedFile</span>\n      <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-smi\">Array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">isArray</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">uploadedFile</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span>\n      <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">uploadedFile</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">files</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">file</span>\n      <span class=\"pl-kos\">}</span>\n\n      <span class=\"pl-k\">const</span> <span class=\"pl-s1\">adapter</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">getAdapter</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n      <span class=\"pl-k\">await</span> <span class=\"pl-s1\">adapter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">upload</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">filename</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">uploadedFile</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">data</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Is there any situation where a hooks <code class=\"notranslate\">args</code> should be undefined? What happens to the resulting data if I return undefined from a hook?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/252",
    "id": "252",
    "createdAt": "2021-07-29T01:45:03Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "richardvanbergen",
      "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
      "url": "https://github.com/richardvanbergen"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">A lot of good questions in here. First up, I have no idea why <code class=\"notranslate\">args</code> was set to being optional. We just deployed <code class=\"notranslate\">0.9.3</code>, which makes <code class=\"notranslate\">args</code> required. That will simplify some of your logic.</p>\n<p dir=\"auto\">Also, you don't <em><strong>need</strong></em> to return <code class=\"notranslate\">data</code> from collection hooks, global hooks, or field hooks. If you don't return data, Payload will fall back on the default incoming data.</p>\n<p dir=\"auto\">Does this answer your questions?</p>",
        "createdAt": "2021-08-06T16:47:58Z",
        "replies": [
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Yes it does! I was just being paranoid because I didn't want to accidentally delete peoples media with the cloud storage plugin. <g-emoji class=\"g-emoji\" alias=\"sweat_smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f605.png\">😅</g-emoji></p>",
            "createdAt": "2021-08-07T08:45:41Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">A lot of good questions in here. First up, I have no idea why <code class=\"notranslate\">args</code> was set to being optional. We just deployed <code class=\"notranslate\">0.9.3</code>, which makes <code class=\"notranslate\">args</code> required. That will simplify some of your logic.</p>\n<p dir=\"auto\">Also, you don't <em><strong>need</strong></em> to return <code class=\"notranslate\">data</code> from collection hooks, global hooks, or field hooks. If you don't return data, Payload will fall back on the default incoming data.</p>\n<p dir=\"auto\">Does this answer your questions?</p>",
      "createdAt": "2021-08-06T16:47:58Z",
      "chosenAt": "2021-08-07T08:44:28Z",
      "chosenBy": "richardvanbergen",
      "replies": [
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<p dir=\"auto\">Yes it does! I was just being paranoid because I didn't want to accidentally delete peoples media with the cloud storage plugin. <g-emoji class=\"g-emoji\" alias=\"sweat_smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f605.png\">😅</g-emoji></p>",
          "createdAt": "2021-08-07T08:45:41Z"
        }
      ]
    }
  },
  {
    "title": "Questions on plugin update",
    "body": "<p dir=\"auto\">If I understand correctly we have since the last update the sanitising of the (POJO) config first, then the plugin functions pipe through the sanitised config, finally that result is sanitised again. Did I get this part right?</p>\n<p dir=\"auto\">If so;</p>\n<ol dir=\"auto\">\n<li>Could I remove collections in any of the step to keep them available for Payload, but hidden in the admin? (f.e. after the first sanitisation)</li>\n<li>What will happen with defaultValues if I change them in the plugin phase?</li>\n<li>Changing the name or type of fields, will hell break loose?</li>\n</ol>",
    "url": "https://github.com/payloadcms/payload/discussions/254",
    "id": "254",
    "createdAt": "2021-07-29T15:13:24Z",
    "upvotes": 2,
    "commentTotal": 2,
    "author": {
      "name": "Ontopic",
      "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
      "url": "https://github.com/Ontopic"
    },
    "comments": [
      {
        "author": {
          "name": "Ontopic",
          "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
          "url": "https://github.com/Ontopic"
        },
        "body": "<p dir=\"auto\">The magnitude of this change is understated in my opinion, btw. The ability (together with the Typescript types tuning) allows for a lot of flexibility in trying out a weird new feature without touching your \"clean\" code or make last-minute changes before a presentation <g-emoji class=\"g-emoji\" alias=\"innocent\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f607.png\">😇</g-emoji>. Although a bit hacky, that can always be cleaned up later.</p>",
        "createdAt": "2021-07-29T15:20:27Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Absolutely. There is a ton of power here. Really pumped to see how people are already using it.</p>",
            "createdAt": "2021-08-06T16:32:43Z"
          }
        ]
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Ontopic/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Ontopic\">@Ontopic</a> — we've actually updated this a bit since you opened this discussion.</p>\n<p dir=\"auto\">The order of operations is now:</p>\n<ol dir=\"auto\">\n<li>Config is fully validated</li>\n<li>Plugins are initialized</li>\n<li>Default values are loaded into config and the config is fully sanitized</li>\n</ol>\n<p dir=\"auto\">Here are some answers to your questions directly:</p>\n<ol dir=\"auto\">\n<li>You can certainly remove collections, but <em><strong>hiding them</strong></em> from the admin panel is actually a feature that we would need to build yet. There would be a few things to consider, such as relationship fields that might point to a hidden admin collection, but this could theoretically be a new feature. In any case, you can certainly remove / add collections with plugins. Now... hiding them from the admin UI, that's a new feature.</li>\n<li>You can change field <code class=\"notranslate\">defaultValue</code>s as much as you want in the plugin phase! The resulting config will feature all <code class=\"notranslate\">defaultValue</code>s as they have been set in plugins. Nothing is actually executed until after all plugins are initiated.</li>\n<li>As with the last answer, you can also change the name of fields. You might not want to go and hijack a user's config unless they explicitly understand the ramifications, but technically, you can do whatever you want to their config, totally including changing field names.</li>\n</ol>",
        "createdAt": "2021-08-06T16:32:25Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Ontopic/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Ontopic\">@Ontopic</a> — we've actually updated this a bit since you opened this discussion.</p>\n<p dir=\"auto\">The order of operations is now:</p>\n<ol dir=\"auto\">\n<li>Config is fully validated</li>\n<li>Plugins are initialized</li>\n<li>Default values are loaded into config and the config is fully sanitized</li>\n</ol>\n<p dir=\"auto\">Here are some answers to your questions directly:</p>\n<ol dir=\"auto\">\n<li>You can certainly remove collections, but <em><strong>hiding them</strong></em> from the admin panel is actually a feature that we would need to build yet. There would be a few things to consider, such as relationship fields that might point to a hidden admin collection, but this could theoretically be a new feature. In any case, you can certainly remove / add collections with plugins. Now... hiding them from the admin UI, that's a new feature.</li>\n<li>You can change field <code class=\"notranslate\">defaultValue</code>s as much as you want in the plugin phase! The resulting config will feature all <code class=\"notranslate\">defaultValue</code>s as they have been set in plugins. Nothing is actually executed until after all plugins are initiated.</li>\n<li>As with the last answer, you can also change the name of fields. You might not want to go and hijack a user's config unless they explicitly understand the ramifications, but technically, you can do whatever you want to their config, totally including changing field names.</li>\n</ol>",
      "createdAt": "2021-08-06T16:32:25Z",
      "chosenAt": "2022-12-09T16:46:03Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Form Submission need help!",
    "body": "<p dir=\"auto\">Anyone help me! How to complete the submission form from the NextJS + PayloadCMS series?</p>\n<p dir=\"auto\">I think there is only a collection that is being set up.<br>\nGuide me on how to send a response from the form to the collection or something related??</p>\n<p dir=\"auto\">Thank you in advance!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/234",
    "id": "234",
    "createdAt": "2021-07-20T00:19:47Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "Duckinm",
      "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
      "url": "https://github.com/Duckinm"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Duckinm/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Duckinm\">@Duckinm</a> — this is going to be covered in an upcoming video! You'll get access to the full source code, too. Next vid is coming out soon. Keep an eye out.</p>",
        "createdAt": "2021-07-20T18:35:56Z",
        "replies": [
          {
            "author": {
              "name": "Duckinm",
              "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
              "url": "https://github.com/Duckinm"
            },
            "body": "<p dir=\"auto\">Sound good! Looking for it.</p>",
            "createdAt": "2021-07-21T07:27:14Z"
          },
          {
            "author": {
              "name": "Duckinm",
              "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
              "url": "https://github.com/Duckinm"
            },
            "body": "<p dir=\"auto\">looking for updates...</p>\n<p dir=\"auto\">My project is almost done but only have to achieve this.</p>",
            "createdAt": "2021-07-31T22:11:37Z"
          },
          {
            "author": {
              "name": "Ontopic",
              "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
              "url": "https://github.com/Ontopic"
            },
            "body": "<p dir=\"auto\">We are all waiting on the next episode ;)</p>\n<p dir=\"auto\">Let's see if I can help a little till then; did you simply try sending a fetch post with FormData to the Payload endpoint? What makes you think there's only one collection?</p>",
            "createdAt": "2021-08-02T13:34:44Z"
          }
        ]
      },
      {
        "author": {
          "name": "Duckinm",
          "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
          "url": "https://github.com/Duckinm"
        },
        "body": "<div class=\"email-fragment\">Okay, Let me do that first! if I stucked. Could you please give me some advice?</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">…</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On 2 Aug 2564 BE 8:34 PM +0700, Ontopic ***@***.***&gt;, wrote:\n We are all waiting on the next episode ;)\n Did you simply try sending a fetch post with FormData to the Payload endpoint?\n —\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub, or unsubscribe.</div>\n<div class=\"email-fragment\"></div>\n</div>",
        "createdAt": "2021-08-02T14:36:09Z",
        "replies": [
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">So you don't have to wait on the next video, I'll share a very basic example. Let's assume you have a <code class=\"notranslate\">form-submissions</code> collection like this: <a href=\"https://github.com/payloadcms/custom-website-series/blob/master/collections/FormSubmission.ts\">https://github.com/payloadcms/custom-website-series/blob/master/collections/FormSubmission.ts</a></p>\n<div class=\"highlight highlight-source-tsx notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import React, { useState } from 'react';\n\nconst ContactForm = () =&gt; {\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleSubmit = async (e) =&gt; {\n    e.preventDefault();\n    const { from, message } = e.target.elements;\n    const details = {\n      from: from.value,\n      message: message.value,\n      source: 'Contact',\n    };\n    const response = await fetch('/api/form-submissions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(details),\n    });\n    setSubmitted(true);\n    const result = await response.json();\n    if (result.status&gt;= 400) {\n      setSubmitted(false);\n      // handle error\n    } else {\n      // handle success\n    }\n  };\n\n  return (\n    &lt;form onSubmit={handleSubmit}&gt;\n      &lt;div&gt;\n        &lt;label htmlFor=&quot;name&quot;&gt;\n          Name\n          &lt;input\n            type=&quot;text&quot;\n            id=&quot;name&quot;\n            required\n          /&gt;\n        &lt;/label&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;label htmlFor=&quot;from&quot;&gt;\n          Email\n          &lt;input\n            type=&quot;email&quot;\n            id=&quot;from&quot;\n            required\n          /&gt;\n        &lt;/label&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;label htmlFor=&quot;message&quot;&gt;\n          Message\n          &lt;textarea\n            id=&quot;message&quot;\n            required\n          /&gt;\n        &lt;/label&gt;\n      &lt;/div&gt;\n      &lt;button\n        type=&quot;submit&quot;\n        disabled={submitted}\n      &gt;\n        Submit\n      &lt;/button&gt;\n    &lt;/form&gt;\n  );\n};\n\nexport default ContactForm;\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">React</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">useState</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">ContactForm</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">submitted</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">setSubmitted</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useState</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">false</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">const</span> <span class=\"pl-en\">handleSubmit</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">e</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">preventDefault</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> from<span class=\"pl-kos\">,</span> message <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">e</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">target</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">elements</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">details</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">from</span>: <span class=\"pl-s1\">from</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">message</span>: <span class=\"pl-s1\">message</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">value</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">source</span>: <span class=\"pl-s\">'Contact'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">response</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/api/form-submissions'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'POST'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">headers</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s\">'Content-Type'</span>: <span class=\"pl-s\">'application/json'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">body</span>: <span class=\"pl-smi\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">details</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-en\">setSubmitted</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">response</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">json</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">result</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">status</span><span class=\"pl-c1\">&gt;=</span> <span class=\"pl-c1\">400</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-en\">setSubmitted</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">false</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-c\">// handle error</span>\n    <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c\">// handle success</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">form</span> <span class=\"pl-c1\">onSubmit</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">handleSubmit</span><span class=\"pl-kos\">}</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">label</span> <span class=\"pl-c1\">htmlFor</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"name\"</span><span class=\"pl-c1\">&gt;</span>\n          Name\n          <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">input</span>\n            <span class=\"pl-c1\">type</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"text\"</span>\n            <span class=\"pl-c1\">id</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"name\"</span>\n            <span class=\"pl-c1\">required</span>\n          <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">label</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">label</span> <span class=\"pl-c1\">htmlFor</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"from\"</span><span class=\"pl-c1\">&gt;</span>\n          Email\n          <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">input</span>\n            <span class=\"pl-c1\">type</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"email\"</span>\n            <span class=\"pl-c1\">id</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"from\"</span>\n            <span class=\"pl-c1\">required</span>\n          <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">label</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">label</span> <span class=\"pl-c1\">htmlFor</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"message\"</span><span class=\"pl-c1\">&gt;</span>\n          Message\n          <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">textarea</span>\n            <span class=\"pl-c1\">id</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"message\"</span>\n            <span class=\"pl-c1\">required</span>\n          <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span>\n        <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">label</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">div</span><span class=\"pl-c1\">&gt;</span>\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">button</span>\n        <span class=\"pl-c1\">type</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"submit\"</span>\n        <span class=\"pl-c1\">disabled</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">submitted</span><span class=\"pl-kos\">}</span>\n      <span class=\"pl-c1\">&gt;</span>\n        Submit\n      <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">button</span><span class=\"pl-c1\">&gt;</span>\n    <span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">form</span><span class=\"pl-c1\">&gt;</span>\n  <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">ContactForm</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">There is a lot to improve upon in this example, but it should help you get an idea for a basic form. James will have good conventions to use for user feedback on submit, validation and reusability using form components, but this at least shows how to submit to the endpoint.</p>",
            "createdAt": "2021-08-02T15:31:40Z"
          }
        ]
      },
      {
        "author": {
          "name": "Duckinm",
          "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
          "url": "https://github.com/Duckinm"
        },
        "body": "<div class=\"email-fragment\">Oh! Thank a lot for your help!\n\nDidn’t thought about the code example before.\nActually OnTopic gave me an idea and I’m trying to use it with react hook form.\n\nBtw this example would make me do it faster. Thank again!</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">…</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On 2 Aug 2564 BE 10:31 PM +0700, Dan Ribbens ***@***.***&gt;, wrote:\n So you don't have to wait on the next video, I'll share a very basic example. Let's assume you have a form-submissions collection like this: <a href=\"https://github.com/payloadcms/custom-website-series/blob/master/collections/FormSubmission.ts\">https://github.com/payloadcms/custom-website-series/blob/master/collections/FormSubmission.ts</a>\n import React, { useState } from 'react';\n\n const ContactForm = () =&gt; {\n const [submitted, setSubmitted] = useState(false);\n\n const handleSubmit = async (e) =&gt; {\n    e.preventDefault();\n    const { from, message } = e.target.elements;\n    const details = {\n      from: from.value,\n      message: message.value,\n      source: 'Contact',\n    };\n    const response = await fetch('/api/form-submissions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(details),\n    });\n    setSubmitted(true);\n    const result = await response.json();\n    if (result.status&gt;= 400) {\n      setSubmitted(false);\n      // handle error\n    } else {\n      // handle success\n    }\n };\n\n return (\n    &lt;form onSubmit={handleSubmit}&gt;\n      &lt;div&gt;\n        &lt;label htmlFor=\"name\"&gt;\n          Name\n          &lt;input\n            type=\"text\"\n            id=\"name\"\n            required\n          /&gt;\n        &lt;/label&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;label htmlFor=\"from\"&gt;\n          Email\n          &lt;input\n            type=\"email\"\n            id=\"from\"\n            required\n          /&gt;\n        &lt;/label&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;label htmlFor=\"message\"&gt;\n          Message\n          &lt;textarea\n            id=\"message\"\n            required\n          /&gt;\n        &lt;/label&gt;\n      &lt;/div&gt;\n      &lt;button\n        type=\"submit\"\n        disabled={submitted}\n      &gt;\n        Submit\n      &lt;/button&gt;\n    &lt;/form&gt;\n );\n };\n\n export default ContactForm;\n There is a lot to improve upon in this example, but it should help you get an idea for a basic form. James will have good conventions to use for user feedback on submit, validation and reusability using form components, but this at least shows how to submit to the endpoint.\n —\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub, or unsubscribe.</div>\n<div class=\"email-fragment\"></div>\n</div>",
        "createdAt": "2021-08-02T22:46:41Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "Duckinm",
        "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
        "url": "https://github.com/Duckinm"
      },
      "body": "<div class=\"email-fragment\">Oh! Thank a lot for your help!\n\nDidn’t thought about the code example before.\nActually OnTopic gave me an idea and I’m trying to use it with react hook form.\n\nBtw this example would make me do it faster. Thank again!</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">…</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On 2 Aug 2564 BE 10:31 PM +0700, Dan Ribbens ***@***.***&gt;, wrote:\n So you don't have to wait on the next video, I'll share a very basic example. Let's assume you have a form-submissions collection like this: <a href=\"https://github.com/payloadcms/custom-website-series/blob/master/collections/FormSubmission.ts\">https://github.com/payloadcms/custom-website-series/blob/master/collections/FormSubmission.ts</a>\n import React, { useState } from 'react';\n\n const ContactForm = () =&gt; {\n const [submitted, setSubmitted] = useState(false);\n\n const handleSubmit = async (e) =&gt; {\n    e.preventDefault();\n    const { from, message } = e.target.elements;\n    const details = {\n      from: from.value,\n      message: message.value,\n      source: 'Contact',\n    };\n    const response = await fetch('/api/form-submissions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(details),\n    });\n    setSubmitted(true);\n    const result = await response.json();\n    if (result.status&gt;= 400) {\n      setSubmitted(false);\n      // handle error\n    } else {\n      // handle success\n    }\n };\n\n return (\n    &lt;form onSubmit={handleSubmit}&gt;\n      &lt;div&gt;\n        &lt;label htmlFor=\"name\"&gt;\n          Name\n          &lt;input\n            type=\"text\"\n            id=\"name\"\n            required\n          /&gt;\n        &lt;/label&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;label htmlFor=\"from\"&gt;\n          Email\n          &lt;input\n            type=\"email\"\n            id=\"from\"\n            required\n          /&gt;\n        &lt;/label&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;label htmlFor=\"message\"&gt;\n          Message\n          &lt;textarea\n            id=\"message\"\n            required\n          /&gt;\n        &lt;/label&gt;\n      &lt;/div&gt;\n      &lt;button\n        type=\"submit\"\n        disabled={submitted}\n      &gt;\n        Submit\n      &lt;/button&gt;\n    &lt;/form&gt;\n );\n };\n\n export default ContactForm;\n There is a lot to improve upon in this example, but it should help you get an idea for a basic form. James will have good conventions to use for user feedback on submit, validation and reusability using form components, but this at least shows how to submit to the endpoint.\n —\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub, or unsubscribe.</div>\n<div class=\"email-fragment\"></div>\n</div>",
      "createdAt": "2021-08-02T22:46:41Z",
      "chosenAt": "2022-12-09T16:45:39Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Can we set height of textarea?",
    "body": "<p dir=\"auto\">As the Topic said.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/261",
    "id": "261",
    "createdAt": "2021-08-01T20:09:13Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "Duckinm",
      "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
      "url": "https://github.com/Duckinm"
    },
    "comments": [
      {
        "author": {
          "name": "Duckinm",
          "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
          "url": "https://github.com/Duckinm"
        },
        "body": "<p dir=\"auto\">One more, Did \"textarea\" are being broke right now? After mouse drag is ended, I can't drag it again.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/29366271/127784851-2429af0a-9aef-498a-b4e0-239f7373e3c2.png\"><img src=\"https://user-images.githubusercontent.com/29366271/127784851-2429af0a-9aef-498a-b4e0-239f7373e3c2.png\" alt=\"Screen Shot 2564-08-02 at 3 45 17 AM\" style=\"max-width: 100%;\"></a></p>",
        "createdAt": "2021-08-01T20:44:54Z",
        "replies": null
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Duckinm/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Duckinm\">@Duckinm</a> —</p>\n<p dir=\"auto\">You can set the height of a <code class=\"notranslate\">textarea</code> like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const textareaField = {\n  name: 'yourFieldHere',\n  type: 'textarea',\n  admin: {\n    rows: 10, // set however many rows you want the textarea to appear with\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">textareaField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'yourFieldHere'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'textarea'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">rows</span>: <span class=\"pl-c1\">10</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// set however many rows you want the textarea to appear with</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Also, from your screenshot, it looks like when you resized your textarea, you dragged it <em><strong>behind</strong></em> the field to the right, which is no longer clickable / resizable because that field is sitting on top of your actual clickable textarea handle. Maybe a good future option would be for us to add a field property to textareas that disables resizing.</p>\n<p dir=\"auto\">What do you think?</p>",
        "createdAt": "2021-08-02T14:21:34Z",
        "replies": null
      },
      {
        "author": {
          "name": "Duckinm",
          "avatar": "https://avatars.githubusercontent.com/u/29366271?u=741755644681258c6c78fa0203771098987c590d&v=4",
          "url": "https://github.com/Duckinm"
        },
        "body": "<div class=\"email-fragment\">Great! The answer really helpful and the resize:none would be also nice. Keep it up good works!</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">…</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On 2 Aug 2564 BE 9:21 PM +0700, James Mikrut ***@***.***&gt;, wrote:\n Hey <a class=\"user-mention\" href=\"https://github.com/Duckinm\">@Duckinm</a> —\n You can set the height of a textarea like this:\n const textareaField = {\n\n name: 'yourFieldHere',\n\n type: 'textarea',\n\n admin: {\n\n    rows: 10, // set however many rows you want the textarea to appear with\n\n }\n\n }\n Also, from your screenshot, it looks like when you resized your textarea, you dragged it behind the field to the right, which is no longer clickable / resizable because that field is sitting on top of your actual clickable textarea handle. Maybe a good future option would be for us to add a field property to textareas that disables resizing.\n What do you think?\n —\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub, or unsubscribe.</div>\n<div class=\"email-fragment\"></div>\n</div>",
        "createdAt": "2021-08-02T14:38:16Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Duckinm/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Duckinm\">@Duckinm</a> —</p>\n<p dir=\"auto\">You can set the height of a <code class=\"notranslate\">textarea</code> like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const textareaField = {\n  name: 'yourFieldHere',\n  type: 'textarea',\n  admin: {\n    rows: 10, // set however many rows you want the textarea to appear with\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">textareaField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'yourFieldHere'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'textarea'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">rows</span>: <span class=\"pl-c1\">10</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// set however many rows you want the textarea to appear with</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Also, from your screenshot, it looks like when you resized your textarea, you dragged it <em><strong>behind</strong></em> the field to the right, which is no longer clickable / resizable because that field is sitting on top of your actual clickable textarea handle. Maybe a good future option would be for us to add a field property to textareas that disables resizing.</p>\n<p dir=\"auto\">What do you think?</p>",
      "createdAt": "2021-08-02T14:21:34Z",
      "chosenAt": "2021-08-03T10:53:36Z",
      "chosenBy": "denolfe",
      "replies": null
    }
  },
  {
    "title": "Is it possible to create array of images using GraphQL API?",
    "body": "<p dir=\"auto\">Hey,</p>\n<p dir=\"auto\">In my project, I have created a Products collection that has an array of product variants and each product variant have a field of an array which have a relation to image collection. Everything works fine for payload Admin UI but I am not sure how can I create those images when creating a Product through GraphQL API. I found out about <a href=\"https://www.apollographql.com/docs/react/api/link/apollo-link-rest/\" rel=\"nofollow\">apollo-link-rest</a> but couldn't figure out how to use it inside createProduct Mutation for images field(that's an array since multiple file upload isn't supported for upload yet).</p>\n<p dir=\"auto\">Is what I am trying to achieve possible with payload GraphQL API?</p>\n<p dir=\"auto\">Are there any plans for third party upload plugins that can support multiple uploads, with GraphQL API if possible?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/248",
    "id": "248",
    "createdAt": "2021-07-28T09:33:04Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "fabcodingzest",
      "avatar": "https://avatars.githubusercontent.com/u/48706652?u=97fdeba99d5819fa09f9c68d5adf891a64d1d8f5&v=4",
      "url": "https://github.com/fabcodingzest"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/fabcodingzest/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fabcodingzest\">@fabcodingzest</a> you are awesome! You are doing some serious learning and skill development. I'm blown away.</p>\n<p dir=\"auto\">Sooo, the long and short of file uploading in GraphQL is that it's hard, and <a href=\"https://leapgraph.com/graphql-file-uploads/\" rel=\"nofollow\">fairly nonsensical</a> to do given the nature of GraphQL.</p>\n<p dir=\"auto\">For that reason, Payload does not support uploading files through GraphQL at this time.</p>\n<p dir=\"auto\">So, being that file uploads are actually just documents in a collection, to upload multiple files you'd need to do something like the following:</p>\n<ol dir=\"auto\">\n<li>For each file you need to upload, make a REST call to your collection's <code class=\"notranslate\">create</code> endpoint, uploading files and creating documents accordingly</li>\n<li>Store the IDs that come back from each one of the successfully created documents in your collection</li>\n<li>Update your Product (you could use REST, GraphQL, or local API at this point) with the IDs that you've retrieved from the successfully created uploads</li>\n</ol>\n<p dir=\"auto\">Does that make sense? / Answer your question?</p>",
        "createdAt": "2021-07-28T14:31:24Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Oh, another thought I just came across is that if this is a common application feature of yours, you could open up a custom REST endpoint in your Express server that is specifically set up to do all of this work on the backend.</p>\n<p dir=\"auto\">Maybe making an Express route like this:</p>\n<p dir=\"auto\"><code class=\"notranslate\">/create-product-with-images</code></p>\n<p dir=\"auto\">Then that route could accept multiple images, product data, etc. and then do it all in one fell swoop using Payload's Local API.</p>\n<p dir=\"auto\">Thoughts?</p>",
            "createdAt": "2021-07-28T14:33:49Z"
          },
          {
            "author": {
              "name": "fabcodingzest",
              "avatar": "https://avatars.githubusercontent.com/u/48706652?u=97fdeba99d5819fa09f9c68d5adf891a64d1d8f5&v=4",
              "url": "https://github.com/fabcodingzest"
            },
            "body": "<p dir=\"auto\">Hey,</p>\n<p dir=\"auto\">So I will try to implement what you suggested first with the express route as it will be easier and then try if I can do that upload image for each variant from the front end (which might be easier to update those too) and use results to send data for <code class=\"notranslate\">createProduct</code> Mutation.</p>",
            "createdAt": "2021-07-29T22:05:57Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/fabcodingzest/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fabcodingzest\">@fabcodingzest</a> you are awesome! You are doing some serious learning and skill development. I'm blown away.</p>\n<p dir=\"auto\">Sooo, the long and short of file uploading in GraphQL is that it's hard, and <a href=\"https://leapgraph.com/graphql-file-uploads/\" rel=\"nofollow\">fairly nonsensical</a> to do given the nature of GraphQL.</p>\n<p dir=\"auto\">For that reason, Payload does not support uploading files through GraphQL at this time.</p>\n<p dir=\"auto\">So, being that file uploads are actually just documents in a collection, to upload multiple files you'd need to do something like the following:</p>\n<ol dir=\"auto\">\n<li>For each file you need to upload, make a REST call to your collection's <code class=\"notranslate\">create</code> endpoint, uploading files and creating documents accordingly</li>\n<li>Store the IDs that come back from each one of the successfully created documents in your collection</li>\n<li>Update your Product (you could use REST, GraphQL, or local API at this point) with the IDs that you've retrieved from the successfully created uploads</li>\n</ol>\n<p dir=\"auto\">Does that make sense? / Answer your question?</p>",
      "createdAt": "2021-07-28T14:31:24Z",
      "chosenAt": "2022-12-09T16:45:03Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Oh, another thought I just came across is that if this is a common application feature of yours, you could open up a custom REST endpoint in your Express server that is specifically set up to do all of this work on the backend.</p>\n<p dir=\"auto\">Maybe making an Express route like this:</p>\n<p dir=\"auto\"><code class=\"notranslate\">/create-product-with-images</code></p>\n<p dir=\"auto\">Then that route could accept multiple images, product data, etc. and then do it all in one fell swoop using Payload's Local API.</p>\n<p dir=\"auto\">Thoughts?</p>",
          "createdAt": "2021-07-28T14:33:49Z"
        },
        {
          "author": {
            "name": "fabcodingzest",
            "avatar": "https://avatars.githubusercontent.com/u/48706652?u=97fdeba99d5819fa09f9c68d5adf891a64d1d8f5&v=4",
            "url": "https://github.com/fabcodingzest"
          },
          "body": "<p dir=\"auto\">Hey,</p>\n<p dir=\"auto\">So I will try to implement what you suggested first with the express route as it will be easier and then try if I can do that upload image for each variant from the front end (which might be easier to update those too) and use results to send data for <code class=\"notranslate\">createProduct</code> Mutation.</p>",
          "createdAt": "2021-07-29T22:05:57Z"
        }
      ]
    }
  },
  {
    "title": "Long lasting user sessions",
    "body": "<p dir=\"auto\">How do you recommend implementing long-lasting user sessions? So that they are not logged out. Typically, in the JWT implementations I've encountered, there are two tokens: a short-lived (minutes) access token that contains encoded user data, and a long-lived (days) opaque refresh token.  I understand from the documentation that Payload only has the former. In that case, do you recommend simply setting a high value for <code class=\"notranslate\">tokenExpiration</code> (e.g. a week)?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/243",
    "id": "243",
    "createdAt": "2021-07-26T21:08:26Z",
    "upvotes": 4,
    "commentTotal": 1,
    "author": {
      "name": "sixers",
      "avatar": "https://avatars.githubusercontent.com/u/1457102?u=3a1a4607cedb94ac939eeb8022461a80e28ce25d&v=4",
      "url": "https://github.com/sixers"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/sixers/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sixers\">@sixers</a> this is a great question! Thanks for opening up this discussion here because I bet this will be of value to a lot of people - and we're going to get a bit theoretical.</p>\n<p dir=\"auto\">You're right that the typical \"access / refresh\" token is pretty standard. But it never made a whole lot of sense to us -  because in web apps, if you store both as an <code class=\"notranslate\">httpOnly</code> cookie, then theoretically if you hijack one, you hijack the other. Meaning... it's not much more secure than a long lasting access token on its own. Even if the access token is expired, an attacker can simply use the refresh token and boom. Get a new access token. Thus, in order for the refresh token to be secure, you need to take even <em><strong>more</strong></em> steps to keep them secure like \"refresh token rotation\". Complexity. We like things simple and secure.</p>\n<p dir=\"auto\">Instead of following this pattern, what Payload has built out is a somewhat simpler refresh pattern. I am very interested in hearing thoughts about it.</p>\n<p dir=\"auto\">Basically, we have the traditional <code class=\"notranslate\">login</code> operation that returns an access token, which can be set to expire however long you need. The default expiration time is 20 minutes. It's not advisable to make this super long.... but we have a solution for this.</p>\n<p dir=\"auto\"><strong>We have our own <a href=\"https://payloadcms.com/docs/authentication/operations#refresh\" rel=\"nofollow\"><code class=\"notranslate\">refresh</code></a> operation.</strong></p>\n<p dir=\"auto\">This operation is simply an easy way to take a still valid token (no username or password required), and extend its lifetime. It can be very easily used by your applications, too. What we commonly do in our own apps is something like the following:</p>\n<ul dir=\"auto\">\n<li>We keep our token lifetime short</li>\n<li>If a user is active in an app of ours, every X minutes or so we go out and hit the <code class=\"notranslate\">refresh</code> operation, giving the user a new token</li>\n<li>This could be triggered by frontend route changes, significantly throttled form interaction changes, etc.</li>\n<li>If a user becomes inactive, a few mins before the token expires, we display a modal that says \"You are about to be logged out due to inactivity...\"</li>\n<li>If they take no action, they are logged out, and sent to a logged out screen.</li>\n</ul>\n<p dir=\"auto\">This pattern is simple, secure, expected, and straightforward. It also allows people to be logged in for however long they need, as long as they're active. And we feel like it's a more straightforward path vs. having to rotate refresh tokens.</p>\n<p dir=\"auto\">What do you think?</p>",
        "createdAt": "2021-07-27T14:38:49Z",
        "replies": [
          {
            "author": {
              "name": "sixers",
              "avatar": "https://avatars.githubusercontent.com/u/1457102?u=3a1a4607cedb94ac939eeb8022461a80e28ce25d&v=4",
              "url": "https://github.com/sixers"
            },
            "body": "<p dir=\"auto\">I would like to allow users to be inactive for a few days, and still be logged in when they return after a few days. I run a wholesale ecommerce site, and usage is regular but sporadic (users visit the site at least once every 1-3 days). I'm worried that it might be annoying for them if they have to log in every time. Based on what you've written, I'm leaning towards setting the expiration time to 3 days, and refreshing it regularly when the user visits the site, so if they visit at least once every 3 days, they will still be logged in, and I will only \"log them out\" after 3 days of inactivity. But as you write - this is quite a long lifespan for JWT tokens, so I have doubts if this is a good choice and wonder if there are any alternatives.</p>",
            "createdAt": "2021-07-27T14:58:38Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">I think the moral of my story is that all ways to keep a user logged in for that long are equally risky, at least in a web app environment.  However, the risk of a long lasting token is quite small anyway with Payload's <a href=\"https://payloadcms.com/docs/authentication/overview#csrf-protection\" rel=\"nofollow\">built-in CSRF protection</a> and <a href=\"https://payloadcms.com/docs/authentication/overview#http-only-cookies\" rel=\"nofollow\"><code class=\"notranslate\">httpOnly</code> cookies</a>.</p>\n<p dir=\"auto\">I think you would be fine for setting your lifetime to longer, as in your use case, it directly impacts your users' experience. In most of our own cases, we are OK with having a user log back in if they take off for a few hours. I say go for it!</p>",
            "createdAt": "2021-07-27T15:09:46Z"
          },
          {
            "author": {
              "name": "sixers",
              "avatar": "https://avatars.githubusercontent.com/u/1457102?u=3a1a4607cedb94ac939eeb8022461a80e28ce25d&v=4",
              "url": "https://github.com/sixers"
            },
            "body": "<p dir=\"auto\">Great, thanks!</p>",
            "createdAt": "2021-07-28T08:30:23Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/sixers/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sixers\">@sixers</a> this is a great question! Thanks for opening up this discussion here because I bet this will be of value to a lot of people - and we're going to get a bit theoretical.</p>\n<p dir=\"auto\">You're right that the typical \"access / refresh\" token is pretty standard. But it never made a whole lot of sense to us -  because in web apps, if you store both as an <code class=\"notranslate\">httpOnly</code> cookie, then theoretically if you hijack one, you hijack the other. Meaning... it's not much more secure than a long lasting access token on its own. Even if the access token is expired, an attacker can simply use the refresh token and boom. Get a new access token. Thus, in order for the refresh token to be secure, you need to take even <em><strong>more</strong></em> steps to keep them secure like \"refresh token rotation\". Complexity. We like things simple and secure.</p>\n<p dir=\"auto\">Instead of following this pattern, what Payload has built out is a somewhat simpler refresh pattern. I am very interested in hearing thoughts about it.</p>\n<p dir=\"auto\">Basically, we have the traditional <code class=\"notranslate\">login</code> operation that returns an access token, which can be set to expire however long you need. The default expiration time is 20 minutes. It's not advisable to make this super long.... but we have a solution for this.</p>\n<p dir=\"auto\"><strong>We have our own <a href=\"https://payloadcms.com/docs/authentication/operations#refresh\" rel=\"nofollow\"><code class=\"notranslate\">refresh</code></a> operation.</strong></p>\n<p dir=\"auto\">This operation is simply an easy way to take a still valid token (no username or password required), and extend its lifetime. It can be very easily used by your applications, too. What we commonly do in our own apps is something like the following:</p>\n<ul dir=\"auto\">\n<li>We keep our token lifetime short</li>\n<li>If a user is active in an app of ours, every X minutes or so we go out and hit the <code class=\"notranslate\">refresh</code> operation, giving the user a new token</li>\n<li>This could be triggered by frontend route changes, significantly throttled form interaction changes, etc.</li>\n<li>If a user becomes inactive, a few mins before the token expires, we display a modal that says \"You are about to be logged out due to inactivity...\"</li>\n<li>If they take no action, they are logged out, and sent to a logged out screen.</li>\n</ul>\n<p dir=\"auto\">This pattern is simple, secure, expected, and straightforward. It also allows people to be logged in for however long they need, as long as they're active. And we feel like it's a more straightforward path vs. having to rotate refresh tokens.</p>\n<p dir=\"auto\">What do you think?</p>",
      "createdAt": "2021-07-27T14:38:49Z",
      "chosenAt": "2021-07-28T14:02:59Z",
      "chosenBy": "denolfe",
      "replies": [
        {
          "author": {
            "name": "sixers",
            "avatar": "https://avatars.githubusercontent.com/u/1457102?u=3a1a4607cedb94ac939eeb8022461a80e28ce25d&v=4",
            "url": "https://github.com/sixers"
          },
          "body": "<p dir=\"auto\">I would like to allow users to be inactive for a few days, and still be logged in when they return after a few days. I run a wholesale ecommerce site, and usage is regular but sporadic (users visit the site at least once every 1-3 days). I'm worried that it might be annoying for them if they have to log in every time. Based on what you've written, I'm leaning towards setting the expiration time to 3 days, and refreshing it regularly when the user visits the site, so if they visit at least once every 3 days, they will still be logged in, and I will only \"log them out\" after 3 days of inactivity. But as you write - this is quite a long lifespan for JWT tokens, so I have doubts if this is a good choice and wonder if there are any alternatives.</p>",
          "createdAt": "2021-07-27T14:58:38Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">I think the moral of my story is that all ways to keep a user logged in for that long are equally risky, at least in a web app environment.  However, the risk of a long lasting token is quite small anyway with Payload's <a href=\"https://payloadcms.com/docs/authentication/overview#csrf-protection\" rel=\"nofollow\">built-in CSRF protection</a> and <a href=\"https://payloadcms.com/docs/authentication/overview#http-only-cookies\" rel=\"nofollow\"><code class=\"notranslate\">httpOnly</code> cookies</a>.</p>\n<p dir=\"auto\">I think you would be fine for setting your lifetime to longer, as in your use case, it directly impacts your users' experience. In most of our own cases, we are OK with having a user log back in if they take off for a few hours. I say go for it!</p>",
          "createdAt": "2021-07-27T15:09:46Z"
        },
        {
          "author": {
            "name": "sixers",
            "avatar": "https://avatars.githubusercontent.com/u/1457102?u=3a1a4607cedb94ac939eeb8022461a80e28ce25d&v=4",
            "url": "https://github.com/sixers"
          },
          "body": "<p dir=\"auto\">Great, thanks!</p>",
          "createdAt": "2021-07-28T08:30:23Z"
        }
      ]
    }
  },
  {
    "title": "Best way to debug validation error encountered in admin?",
    "body": "<p dir=\"auto\">I'm receiving a validation error for a non-existent field on a collection in the admin. My error states <code class=\"notranslate\">The following field is invalid: email</code>. I don't have an email field on the collection. Updates work without issue / creating other collections seemingly works as well. Any advice on how to best go about debugging this?</p>\n<h2 dir=\"auto\">Collection</h2>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const Locations: CollectionConfig = {\n  slug: &quot;locations&quot;,\n  admin: {\n    useAsTitle: &quot;locationName&quot;,\n  },\n  fields: [\n    {\n      name: &quot;locationName&quot;,\n      type: &quot;text&quot;,\n    },\n    {\n      name: &quot;address&quot;,\n      type: &quot;text&quot;,\n    },\n    {\n      name: &quot;address2&quot;,\n      type: &quot;text&quot;,\n    },\n    {\n      name: &quot;city&quot;,\n      type: &quot;text&quot;,\n    },\n    {\n      name: &quot;state&quot;,\n      type: &quot;text&quot;,\n    },\n    {\n      name: &quot;postalCode&quot;,\n      label: &quot;Zip code&quot;,\n      type: &quot;text&quot;,\n    },\n  ],\n};\"><pre class=\"notranslate\"><code class=\"notranslate\">const Locations: CollectionConfig = {\n  slug: \"locations\",\n  admin: {\n    useAsTitle: \"locationName\",\n  },\n  fields: [\n    {\n      name: \"locationName\",\n      type: \"text\",\n    },\n    {\n      name: \"address\",\n      type: \"text\",\n    },\n    {\n      name: \"address2\",\n      type: \"text\",\n    },\n    {\n      name: \"city\",\n      type: \"text\",\n    },\n    {\n      name: \"state\",\n      type: \"text\",\n    },\n    {\n      name: \"postalCode\",\n      label: \"Zip code\",\n      type: \"text\",\n    },\n  ],\n};\n</code></pre></div>\n<h2 dir=\"auto\">Stack Trace</h2>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[0] [17:25:36] ERROR (payload): ValidationError: The following field is invalid: email\n[0]     at new ExtendableError (.../node_modules/payload/src/errors/APIError.ts:26:11)\n[0]     at new APIError (.../node_modules/payload/src/errors/APIError.ts:43:5)\n[0]     at new ValidationError (.../node_modules/payload/src/errors/ValidationError.ts:6:5)\n[0]     at Payload.create (.../node_modules/payload/src/collections/operations/create.ts:209:11)\n[0]     at processTicksAndRejections (node:internal/process/task_queues:96:5)\n[0]     at Payload.create (.../node_modules/payload/src/collections/requestHandlers/create.ts:14:17)\"><pre class=\"notranslate\"><code class=\"notranslate\">[0] [17:25:36] ERROR (payload): ValidationError: The following field is invalid: email\n[0]     at new ExtendableError (.../node_modules/payload/src/errors/APIError.ts:26:11)\n[0]     at new APIError (.../node_modules/payload/src/errors/APIError.ts:43:5)\n[0]     at new ValidationError (.../node_modules/payload/src/errors/ValidationError.ts:6:5)\n[0]     at Payload.create (.../node_modules/payload/src/collections/operations/create.ts:209:11)\n[0]     at processTicksAndRejections (node:internal/process/task_queues:96:5)\n[0]     at Payload.create (.../node_modules/payload/src/collections/requestHandlers/create.ts:14:17)\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/188",
    "id": "188",
    "createdAt": "2021-05-28T17:32:31Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "ryanlanciaux",
      "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
      "url": "https://github.com/ryanlanciaux"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ryanlanciaux/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ryanlanciaux\">@ryanlanciaux</a> I can't see anything wrong in what you've shared. Is it possible you had an email field previously and have not saved changes or restarted the server? Using <code class=\"notranslate\">yarn dev</code> should pick up on changes as it uses <code class=\"notranslate\">nodemon</code>, though I have seen instances where file changes are missed for some reason, stop it and restart if you haven't already.</p>\n<p dir=\"auto\">Here are some other thoughts:</p>\n<ol dir=\"auto\">\n<li>Do you have a mixup on your imports and the Locations you've shared is not what is being used?</li>\n<li>Is the POST request you're making to the <code class=\"notranslate\">api/locations</code> route and not something else like <code class=\"notranslate\">api/users</code>?</li>\n<li>What does the GraphQL type look like if you try going to <a href=\"http://localhost:3000/api/graphql-playground\" rel=\"nofollow\">http://localhost:3000/api/graphql-playground</a>, expand the schema sidebar on the right and find locations. Does it really have an email field?</li>\n<li>You could inspect or console.log the app.config.collections from payload.init.onInit to see the schema. Does it have email?</li>\n</ol>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"payload.init( {\n// [...]\nonInit: (app) =&gt; {\n    console.log(app.collections.locations.Model.schema.tree);\n    payload.logger.info(`Payload Admin URL: ${payload.getAdminURL()}`);\n  },\n});\"><pre class=\"notranslate\"><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span> <span class=\"pl-kos\">{</span>\n<span class=\"pl-c\">// [...]</span>\n<span class=\"pl-en\">onInit</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">app</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">collections</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">locations</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Model</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">schema</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">tree</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">info</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Payload Admin URL: <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getAdminURL</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">If the schema does not have it and yet the validation still expects email, I have no answer and will have to do some more digging.</p>",
        "createdAt": "2021-05-28T19:02:34Z",
        "replies": [
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ryanlanciaux/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ryanlanciaux\">@ryanlanciaux</a> have you have had success with this or not? I would be happy to take a look at anything for your benefit if you are stuck in any way.</p>\n<p dir=\"auto\">LMK, cheers!</p>",
            "createdAt": "2021-06-21T19:08:19Z"
          },
          {
            "author": {
              "name": "Ontopic",
              "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
              "url": "https://github.com/Ontopic"
            },
            "body": "<p dir=\"auto\">I have no problems with email, but the original question is more I feel where to best access more detailed errors during validation. Now I personally write extra checks in decentralised places I have access to, but if something would be wrong with the email setting I wouldn't know where to start...</p>\n<p dir=\"auto\">SO, maybe I'm missing a doc (I see you guys secretly tweaking it), but a clear way to get more than <code class=\"notranslate\">error in collections[3][5]</code> would be nice</p>",
            "createdAt": "2021-07-20T19:45:56Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Ahhhh <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ryanlanciaux/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ryanlanciaux\">@ryanlanciaux</a> I bet you are having the same exact issue as was discussed here:</p>\n<p dir=\"auto\"><a aria-label=\"Issue #219\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"937946629\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/219\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/219/hovercard\" href=\"https://github.com/payloadcms/payload/issues/219\">#219</a></p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Ontopic/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Ontopic\">@Ontopic</a> — you're actually talking about startup config validation (I think) which is totally something that we need to improve. We are using <code class=\"notranslate\">Joi</code> and there is definitely a way to make this better. That's on our radar to improve for sure.</p>",
            "createdAt": "2021-07-20T19:59:18Z"
          },
          {
            "author": {
              "name": "ryanlanciaux",
              "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
              "url": "https://github.com/ryanlanciaux"
            },
            "body": "<p dir=\"auto\">Sorry I've been away from this for a bit and thanks so much for following-up. I'll confirm that this is what I'm bumping into and report back. <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
            "createdAt": "2021-07-20T20:10:01Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Okay! <a aria-label=\"Pull request #237\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"950075919\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/237\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/237/hovercard\" href=\"https://github.com/payloadcms/payload/pull/237\">#237</a> adds the collection, global slugs and field names to the config validation errors.</p>",
            "createdAt": "2021-07-21T20:27:02Z"
          },
          {
            "author": {
              "name": "ryanlanciaux",
              "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
              "url": "https://github.com/ryanlanciaux"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> Following up on this a bit late BUT <a aria-label=\"Issue #219\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"937946629\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/219\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/219/hovercard\" href=\"https://github.com/payloadcms/payload/issues/219\">#219</a> was exactly what I was encountering. Thanks a ton</p>",
            "createdAt": "2021-07-26T13:24:19Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ryanlanciaux/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ryanlanciaux\">@ryanlanciaux</a> I can't see anything wrong in what you've shared. Is it possible you had an email field previously and have not saved changes or restarted the server? Using <code class=\"notranslate\">yarn dev</code> should pick up on changes as it uses <code class=\"notranslate\">nodemon</code>, though I have seen instances where file changes are missed for some reason, stop it and restart if you haven't already.</p>\n<p dir=\"auto\">Here are some other thoughts:</p>\n<ol dir=\"auto\">\n<li>Do you have a mixup on your imports and the Locations you've shared is not what is being used?</li>\n<li>Is the POST request you're making to the <code class=\"notranslate\">api/locations</code> route and not something else like <code class=\"notranslate\">api/users</code>?</li>\n<li>What does the GraphQL type look like if you try going to <a href=\"http://localhost:3000/api/graphql-playground\" rel=\"nofollow\">http://localhost:3000/api/graphql-playground</a>, expand the schema sidebar on the right and find locations. Does it really have an email field?</li>\n<li>You could inspect or console.log the app.config.collections from payload.init.onInit to see the schema. Does it have email?</li>\n</ol>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"payload.init( {\n// [...]\nonInit: (app) =&gt; {\n    console.log(app.collections.locations.Model.schema.tree);\n    payload.logger.info(`Payload Admin URL: ${payload.getAdminURL()}`);\n  },\n});\"><pre class=\"notranslate\"><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span> <span class=\"pl-kos\">{</span>\n<span class=\"pl-c\">// [...]</span>\n<span class=\"pl-en\">onInit</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">app</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">collections</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">locations</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Model</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">schema</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">tree</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">info</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Payload Admin URL: <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getAdminURL</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">If the schema does not have it and yet the validation still expects email, I have no answer and will have to do some more digging.</p>",
      "createdAt": "2021-05-28T19:02:34Z",
      "chosenAt": "2022-12-09T16:44:43Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ryanlanciaux/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ryanlanciaux\">@ryanlanciaux</a> have you have had success with this or not? I would be happy to take a look at anything for your benefit if you are stuck in any way.</p>\n<p dir=\"auto\">LMK, cheers!</p>",
          "createdAt": "2021-06-21T19:08:19Z"
        },
        {
          "author": {
            "name": "Ontopic",
            "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
            "url": "https://github.com/Ontopic"
          },
          "body": "<p dir=\"auto\">I have no problems with email, but the original question is more I feel where to best access more detailed errors during validation. Now I personally write extra checks in decentralised places I have access to, but if something would be wrong with the email setting I wouldn't know where to start...</p>\n<p dir=\"auto\">SO, maybe I'm missing a doc (I see you guys secretly tweaking it), but a clear way to get more than <code class=\"notranslate\">error in collections[3][5]</code> would be nice</p>",
          "createdAt": "2021-07-20T19:45:56Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Ahhhh <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ryanlanciaux/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ryanlanciaux\">@ryanlanciaux</a> I bet you are having the same exact issue as was discussed here:</p>\n<p dir=\"auto\"><a aria-label=\"Issue #219\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"937946629\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/219\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/219/hovercard\" href=\"https://github.com/payloadcms/payload/issues/219\">#219</a></p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Ontopic/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Ontopic\">@Ontopic</a> — you're actually talking about startup config validation (I think) which is totally something that we need to improve. We are using <code class=\"notranslate\">Joi</code> and there is definitely a way to make this better. That's on our radar to improve for sure.</p>",
          "createdAt": "2021-07-20T19:59:18Z"
        },
        {
          "author": {
            "name": "ryanlanciaux",
            "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
            "url": "https://github.com/ryanlanciaux"
          },
          "body": "<p dir=\"auto\">Sorry I've been away from this for a bit and thanks so much for following-up. I'll confirm that this is what I'm bumping into and report back. <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
          "createdAt": "2021-07-20T20:10:01Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Okay! <a aria-label=\"Pull request #237\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"950075919\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/237\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/237/hovercard\" href=\"https://github.com/payloadcms/payload/pull/237\">#237</a> adds the collection, global slugs and field names to the config validation errors.</p>",
          "createdAt": "2021-07-21T20:27:02Z"
        },
        {
          "author": {
            "name": "ryanlanciaux",
            "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
            "url": "https://github.com/ryanlanciaux"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> Following up on this a bit late BUT <a aria-label=\"Issue #219\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"937946629\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/219\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/219/hovercard\" href=\"https://github.com/payloadcms/payload/issues/219\">#219</a> was exactly what I was encountering. Thanks a ton</p>",
          "createdAt": "2021-07-26T13:24:19Z"
        }
      ]
    }
  },
  {
    "title": "Webpack warnings of export was not found.",
    "body": "<p dir=\"auto\">Hey,</p>\n<p dir=\"auto\">I was working with Payload and next.js boilerplate to build an e-commerce site(a practice project). I tried to customize the upload to use cloudinary using <a href=\"https://github.com/payloadcms/payload/discussions/220#discussioncomment-976890\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/220/hovercard?comment_id=976890\">this</a> approach, but I am getting the following warnings from Webpack.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/48706652/126694972-331f6e9d-8305-4b3f-86a8-67e41adf25eb.png\"><img src=\"https://user-images.githubusercontent.com/48706652/126694972-331f6e9d-8305-4b3f-86a8-67e41adf25eb.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">This was working perfectly fine when I experimented with an app created with <code class=\"notranslate\">create-payload-app</code>, is it something with the next.js custom server? I have used an alias for files having server-side only packages in webpack config as directed by docs, not sure what is the reason but I couldn't find any solution.</p>\n<p dir=\"auto\">Here is the <a href=\"https://github.com/fabcodingzest/Fab-store\">link</a> to my repo I am working with.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/239",
    "id": "239",
    "createdAt": "2021-07-22T19:21:55Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "fabcodingzest",
      "avatar": "https://avatars.githubusercontent.com/u/48706652?u=97fdeba99d5819fa09f9c68d5adf891a64d1d8f5&v=4",
      "url": "https://github.com/fabcodingzest"
    },
    "comments": [
      {
        "author": {
          "name": "fabcodingzest",
          "avatar": "https://avatars.githubusercontent.com/u/48706652?u=97fdeba99d5819fa09f9c68d5adf891a64d1d8f5&v=4",
          "url": "https://github.com/fabcodingzest"
        },
        "body": "<p dir=\"auto\">Um Alright, I figured it out. I had to use <code class=\"notranslate\">export default {}</code>  in emptyObject.ts and export all hooks as <code class=\"notranslate\">default</code> from <code class=\"notranslate\">CloudinaryMediaHooks</code>. That solved the problem for me.</p>",
        "createdAt": "2021-07-23T09:08:41Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "fabcodingzest",
        "avatar": "https://avatars.githubusercontent.com/u/48706652?u=97fdeba99d5819fa09f9c68d5adf891a64d1d8f5&v=4",
        "url": "https://github.com/fabcodingzest"
      },
      "body": "<p dir=\"auto\">Um Alright, I figured it out. I had to use <code class=\"notranslate\">export default {}</code>  in emptyObject.ts and export all hooks as <code class=\"notranslate\">default</code> from <code class=\"notranslate\">CloudinaryMediaHooks</code>. That solved the problem for me.</p>",
      "createdAt": "2021-07-23T09:08:41Z",
      "chosenAt": "2022-12-09T16:42:13Z",
      "chosenBy": "zubricks",
      "replies": null
    }
  },
  {
    "title": "Executing hooks on existing collections.",
    "body": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">I have some hooks that I would like all images to execute going forward.</p>\n<p dir=\"auto\">Only issues is, if I want to execute those hooks on the existing documents in the collection then I have to go to the admin panel, save, go back, next, save go back, next, save go back....</p>\n<p dir=\"auto\">Is there any way I can script this out?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/229",
    "id": "229",
    "createdAt": "2021-07-13T11:13:42Z",
    "upvotes": 2,
    "commentTotal": 1,
    "author": {
      "name": "richardvanbergen",
      "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
      "url": "https://github.com/richardvanbergen"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> — I have the perfect solution for you!</p>\n<p dir=\"auto\">You can boot Payload in <code class=\"notranslate\">local</code> mode, which is perfect for running seed scripts, migrations, and more. There is an example of how to do this here:</p>\n<p dir=\"auto\"><a href=\"https://github.com/payloadcms/nextjs-custom-server/blob/master/seed/index.js\">https://github.com/payloadcms/nextjs-custom-server/blob/master/seed/index.js</a></p>\n<p dir=\"auto\">Locally booted Payload completely dodges all HTTP activity like opening the REST and GraphQL APIs, and you can use the Local API to do whatever you want (including resaving all of your images so their hooks run.)</p>\n<p dir=\"auto\">Would this help?</p>",
        "createdAt": "2021-07-14T13:16:38Z",
        "replies": [
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> thanks for the tip. I did a very quite script just to see and I have a couple of issues.</p>\n<p dir=\"auto\">The first is that it doesn't seem to want to read my .env into <code class=\"notranslate\">process.env</code> so I had to hardcode the variables. This is fine for now because this is just a throwaway script but I was just wondering if you've seen this behavior before.</p>\n<p dir=\"auto\">The second and much bigger issue is that the local API doesn't seem to be executing any of the hooks.</p>\n<p dir=\"auto\">Bellow is my script. The hooks on that collection doesn't seem to be called at all but I know it works in the admin panel.</p>\n<p dir=\"auto\">I'm also using the server-side hook webpack hack described <a href=\"https://github.com/payloadcms/payload/discussions/205\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/205/hovercard\">here</a> as it involves image manipulation with <code class=\"notranslate\">sharp</code>.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import payload from 'payload'\nimport dotenv from 'dotenv'\nimport { MediaImageField } from '../fields/media'\n\nconst result = dotenv.config({\n  path: '../../.env',\n})\n\nconsole.log(result)\n\npayload.init({\n  secret: '...',\n  mongoURL: '...',\n  local: true,\n})\n\nconst resaveImageCollection = async () =&gt; {\n  const mediaImages = await payload.find({\n    collection: 'media-image',\n  })\n\n  mediaImages.docs.forEach(async (image: MediaImageField) =&gt; {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { id, ...imageData } = image\n    await payload.update({\n      id: image.id,\n      collection: 'media-image',\n      data: {\n        ...imageData,\n      },\n    })\n  })\n\n  console.log('Seed completed!')\n  process.exit(0)\n}\n\nresaveImageCollection()\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">dotenv</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'dotenv'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">MediaImageField</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../fields/media'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">dotenv</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'../../.env'</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">result</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">secret</span>: <span class=\"pl-s\">'...'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s\">'...'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">local</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">resaveImageCollection</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">mediaImages</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'media-image'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-s1\">mediaImages</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">docs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">forEach</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">image</span>: <span class=\"pl-smi\">MediaImageField</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// eslint-disable-next-line @typescript-eslint/no-unused-vars</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> id<span class=\"pl-kos\">,</span> ...<span class=\"pl-s1\">imageData</span> <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">image</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">update</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">image</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'media-image'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n        ...<span class=\"pl-s1\">imageData</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Seed completed!'</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exit</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-en\">resaveImageCollection</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span></pre></div>",
            "createdAt": "2021-07-17T05:44:00Z"
          },
          {
            "author": {
              "name": "Ontopic",
              "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
              "url": "https://github.com/Ontopic"
            },
            "body": "<p dir=\"auto\">Is the relative .env file location also correct from the folder you build to?</p>\n<p dir=\"auto\">And it looks like you do an update, sure the hook is supposed to be called when updating instead of creating?</p>\n<p dir=\"auto\">Just my shots in the dark. Local API worked amazingly well for me and never had any issues with hooks. Good luck!</p>",
            "createdAt": "2021-07-17T09:59:02Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> — when I pass a path directly to <code class=\"notranslate\">dotenv</code> I have always used a full, absolute path:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"dotenv({\n  path: path.resolve(__dirname, '../../.env'),\n});\"><pre class=\"notranslate\"><span class=\"pl-en\">dotenv</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">path</span>: <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'../../.env'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Try that for your <code class=\"notranslate\">env</code> issues.</p>\n<p dir=\"auto\">As for hooks, this is strange. Running Payload locally does not have any impact on hook usage. They should work normally as you'd expect. Also, aliasing your server-only code in the Webpack config should have absolutely no effect outside of the browser environment itself. Did you maybe blacklist some dependencies via some other method, which would affect Node as well as Webpack? Seems doubtful but I think your hooks not firing is related to something else.</p>\n<p dir=\"auto\">If you can hook me up with your <code class=\"notranslate\">media-image</code> collection, I would be happy to troubleshoot!</p>",
            "createdAt": "2021-07-18T16:45:03Z"
          },
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>.</p>\n<p dir=\"auto\">The env thing worked! I wish it would have thrown an error for relative paths instead of just failing silently but hey that's how it goes sometimes.</p>\n<p dir=\"auto\">To my knowledge tsconfig doesn't have anything that should effect but it executes successfully.</p>\n<p dir=\"auto\">I've just had time to do a bit of debugging myself and it seems to be an issue with the <code class=\"notranslate\">beforeChange</code> and <code class=\"notranslate\">beforeOperation</code>. Now I'm not 100% sure if these hooks should be called in this context but intuitively it feels like they should. I've stripped down my <code class=\"notranslate\">media-image</code> collection and removed all the fancy hooks I was adding and just added some simple <code class=\"notranslate\">console.log</code> hooks. Below is my collection and my script as it stands.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { CollectionConfig } from 'payload/types'\n\nconst MediaImage: CollectionConfig = {\n  slug: 'media-image',\n  labels: {\n    singular: 'Image',\n    plural: 'Images',\n  },\n  access: {\n    read: () =&gt; true,\n  },\n  hooks: {\n    beforeRead: [\n      (data) =&gt; {\n        console.log('before read!')\n        console.log(data.doc.id)\n        return data.doc\n      },\n    ],\n    beforeChange: [\n      ({ data }) =&gt; {\n        console.log('before change!')\n        console.log(data.id)\n        return data.doc\n      },\n    ],\n    beforeOperation: [\n      ({ args, operation }) =&gt; {\n        console.log('before operation!')\n        if (operation === 'update') {\n          console.log('before operation update!')\n          console.log(args)\n        }\n        return args\n      },\n    ],\n  },\n  admin: {\n    useAsTitle: 'internalName',\n    enableRichTextRelationship: true,\n  },\n  fields: [\n    {\n      name: 'internalName',\n      label: 'Internal Name',\n      type: 'text',\n      required: true,\n    },\n    {\n      name: 'alt',\n      label: 'Alternative Text',\n      type: 'text',\n    },\n  ],\n  upload: {\n    staticDir: 'media/images',\n    staticURL: '/media/images',\n    mimeTypes: ['image/*'],\n    imageSizes: [\n      {\n        name: 'desktop',\n        width: 2000,\n        height: 2000,\n      },\n      {\n        name: 'mobile',\n        width: 1000,\n        height: 1000,\n      },\n    ],\n  },\n}\n\nexport default MediaImage\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">MediaImage</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'media-image'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">labels</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">singular</span>: <span class=\"pl-s\">'Image'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">plural</span>: <span class=\"pl-s\">'Images'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">beforeRead</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'before read!'</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> data <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'before change!'</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">beforeOperation</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> args<span class=\"pl-kos\">,</span> operation <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'before operation!'</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'update'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'before operation update!'</span><span class=\"pl-kos\">)</span>\n          <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-kos\">}</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">args</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'internalName'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">enableRichTextRelationship</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'internalName'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Internal Name'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'alt'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Alternative Text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">upload</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">staticDir</span>: <span class=\"pl-s\">'media/images'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">staticURL</span>: <span class=\"pl-s\">'/media/images'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">mimeTypes</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'image/*'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">imageSizes</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'desktop'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">width</span>: <span class=\"pl-c1\">2000</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">height</span>: <span class=\"pl-c1\">2000</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'mobile'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">width</span>: <span class=\"pl-c1\">1000</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">height</span>: <span class=\"pl-c1\">1000</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">MediaImage</span></pre></div>\n<p dir=\"auto\">The script:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import payload from 'payload'\nimport path from 'path'\nimport dotenv from 'dotenv'\nimport { MediaImageField } from '../fields/media'\n\nconst result = dotenv.config({\n  path: path.resolve(__dirname, '../../.env'),\n})\n\nconsole.log(result)\n\npayload.init({\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGODB_URI,\n  local: true,\n})\n\nconst resaveImageCollection = async () =&gt; {\n  const mediaImages = await payload.find({\n    collection: 'media-image',\n  })\n\n  mediaImages.docs.forEach(async (image: MediaImageField) =&gt; {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { id, ...imageData } = image\n    await payload.update({\n      id: image.id,\n      collection: 'media-image',\n      data: {\n        ...imageData,\n      },\n    })\n  })\n\n  console.log('Seed completed!')\n  process.exit(0)\n}\n\nresaveImageCollection()\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">path</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'path'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">dotenv</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'dotenv'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">MediaImageField</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../fields/media'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">dotenv</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">path</span>: <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'../../.env'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">result</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">secret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_SECRET</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MONGODB_URI</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">local</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">resaveImageCollection</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">mediaImages</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'media-image'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-s1\">mediaImages</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">docs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">forEach</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">image</span>: <span class=\"pl-smi\">MediaImageField</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// eslint-disable-next-line @typescript-eslint/no-unused-vars</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> id<span class=\"pl-kos\">,</span> ...<span class=\"pl-s1\">imageData</span> <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">image</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">update</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">image</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'media-image'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n        ...<span class=\"pl-s1\">imageData</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Seed completed!'</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exit</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-en\">resaveImageCollection</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">The output:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/3854592/126122624-dd890698-ca9b-4a3f-8759-83548fbef1de.png\"><img src=\"https://user-images.githubusercontent.com/3854592/126122624-dd890698-ca9b-4a3f-8759-83548fbef1de.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>",
            "createdAt": "2021-07-19T07:49:06Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Ah <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> I totally know what the issue is.</p>\n<p dir=\"auto\">Your script is async but there is nothing awaiting your <code class=\"notranslate\">forEach</code> loop responsible for updating. As <code class=\"notranslate\">payload.update</code> itself is async, your script is exiting before your updates are even fired.</p>\n<p dir=\"auto\">Change your <code class=\"notranslate\">forEach</code> to this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  await Promise.all(mediaImages.docs.map(async (image: MediaImageField) =&gt; {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { id, ...imageData } = image\n    await payload.update({\n      id: image.id,\n      collection: 'media-image',\n      data: {\n        ...imageData,\n      },\n    })\n  }))\"><pre class=\"notranslate\">  <span class=\"pl-k\">await</span> <span class=\"pl-smi\">Promise</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">all</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">mediaImages</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">docs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">image</span>: <span class=\"pl-smi\">MediaImageField</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// eslint-disable-next-line @typescript-eslint/no-unused-vars</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> id<span class=\"pl-kos\">,</span> ...<span class=\"pl-s1\">imageData</span> <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">image</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">update</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">image</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'media-image'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n        ...<span class=\"pl-s1\">imageData</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">Then I bet you'll see some more console logs!</p>",
            "createdAt": "2021-07-19T12:31:47Z"
          },
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Yes you're correct! It's working for me now. <g-emoji class=\"g-emoji\" alias=\"smiley\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f603.png\">😃</g-emoji></p>",
            "createdAt": "2021-07-20T05:32:30Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> — I have the perfect solution for you!</p>\n<p dir=\"auto\">You can boot Payload in <code class=\"notranslate\">local</code> mode, which is perfect for running seed scripts, migrations, and more. There is an example of how to do this here:</p>\n<p dir=\"auto\"><a href=\"https://github.com/payloadcms/nextjs-custom-server/blob/master/seed/index.js\">https://github.com/payloadcms/nextjs-custom-server/blob/master/seed/index.js</a></p>\n<p dir=\"auto\">Locally booted Payload completely dodges all HTTP activity like opening the REST and GraphQL APIs, and you can use the Local API to do whatever you want (including resaving all of your images so their hooks run.)</p>\n<p dir=\"auto\">Would this help?</p>",
      "createdAt": "2021-07-14T13:16:38Z",
      "chosenAt": "2021-07-20T05:32:47Z",
      "chosenBy": "richardvanbergen",
      "replies": [
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> thanks for the tip. I did a very quite script just to see and I have a couple of issues.</p>\n<p dir=\"auto\">The first is that it doesn't seem to want to read my .env into <code class=\"notranslate\">process.env</code> so I had to hardcode the variables. This is fine for now because this is just a throwaway script but I was just wondering if you've seen this behavior before.</p>\n<p dir=\"auto\">The second and much bigger issue is that the local API doesn't seem to be executing any of the hooks.</p>\n<p dir=\"auto\">Bellow is my script. The hooks on that collection doesn't seem to be called at all but I know it works in the admin panel.</p>\n<p dir=\"auto\">I'm also using the server-side hook webpack hack described <a href=\"https://github.com/payloadcms/payload/discussions/205\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/205/hovercard\">here</a> as it involves image manipulation with <code class=\"notranslate\">sharp</code>.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import payload from 'payload'\nimport dotenv from 'dotenv'\nimport { MediaImageField } from '../fields/media'\n\nconst result = dotenv.config({\n  path: '../../.env',\n})\n\nconsole.log(result)\n\npayload.init({\n  secret: '...',\n  mongoURL: '...',\n  local: true,\n})\n\nconst resaveImageCollection = async () =&gt; {\n  const mediaImages = await payload.find({\n    collection: 'media-image',\n  })\n\n  mediaImages.docs.forEach(async (image: MediaImageField) =&gt; {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { id, ...imageData } = image\n    await payload.update({\n      id: image.id,\n      collection: 'media-image',\n      data: {\n        ...imageData,\n      },\n    })\n  })\n\n  console.log('Seed completed!')\n  process.exit(0)\n}\n\nresaveImageCollection()\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">dotenv</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'dotenv'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">MediaImageField</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../fields/media'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">dotenv</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'../../.env'</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">result</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">secret</span>: <span class=\"pl-s\">'...'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s\">'...'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">local</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">resaveImageCollection</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">mediaImages</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'media-image'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-s1\">mediaImages</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">docs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">forEach</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">image</span>: <span class=\"pl-smi\">MediaImageField</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// eslint-disable-next-line @typescript-eslint/no-unused-vars</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> id<span class=\"pl-kos\">,</span> ...<span class=\"pl-s1\">imageData</span> <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">image</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">update</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">image</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'media-image'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n        ...<span class=\"pl-s1\">imageData</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Seed completed!'</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exit</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-en\">resaveImageCollection</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span></pre></div>",
          "createdAt": "2021-07-17T05:44:00Z"
        },
        {
          "author": {
            "name": "Ontopic",
            "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
            "url": "https://github.com/Ontopic"
          },
          "body": "<p dir=\"auto\">Is the relative .env file location also correct from the folder you build to?</p>\n<p dir=\"auto\">And it looks like you do an update, sure the hook is supposed to be called when updating instead of creating?</p>\n<p dir=\"auto\">Just my shots in the dark. Local API worked amazingly well for me and never had any issues with hooks. Good luck!</p>",
          "createdAt": "2021-07-17T09:59:02Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> — when I pass a path directly to <code class=\"notranslate\">dotenv</code> I have always used a full, absolute path:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"dotenv({\n  path: path.resolve(__dirname, '../../.env'),\n});\"><pre class=\"notranslate\"><span class=\"pl-en\">dotenv</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">path</span>: <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'../../.env'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Try that for your <code class=\"notranslate\">env</code> issues.</p>\n<p dir=\"auto\">As for hooks, this is strange. Running Payload locally does not have any impact on hook usage. They should work normally as you'd expect. Also, aliasing your server-only code in the Webpack config should have absolutely no effect outside of the browser environment itself. Did you maybe blacklist some dependencies via some other method, which would affect Node as well as Webpack? Seems doubtful but I think your hooks not firing is related to something else.</p>\n<p dir=\"auto\">If you can hook me up with your <code class=\"notranslate\">media-image</code> collection, I would be happy to troubleshoot!</p>",
          "createdAt": "2021-07-18T16:45:03Z"
        },
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>.</p>\n<p dir=\"auto\">The env thing worked! I wish it would have thrown an error for relative paths instead of just failing silently but hey that's how it goes sometimes.</p>\n<p dir=\"auto\">To my knowledge tsconfig doesn't have anything that should effect but it executes successfully.</p>\n<p dir=\"auto\">I've just had time to do a bit of debugging myself and it seems to be an issue with the <code class=\"notranslate\">beforeChange</code> and <code class=\"notranslate\">beforeOperation</code>. Now I'm not 100% sure if these hooks should be called in this context but intuitively it feels like they should. I've stripped down my <code class=\"notranslate\">media-image</code> collection and removed all the fancy hooks I was adding and just added some simple <code class=\"notranslate\">console.log</code> hooks. Below is my collection and my script as it stands.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { CollectionConfig } from 'payload/types'\n\nconst MediaImage: CollectionConfig = {\n  slug: 'media-image',\n  labels: {\n    singular: 'Image',\n    plural: 'Images',\n  },\n  access: {\n    read: () =&gt; true,\n  },\n  hooks: {\n    beforeRead: [\n      (data) =&gt; {\n        console.log('before read!')\n        console.log(data.doc.id)\n        return data.doc\n      },\n    ],\n    beforeChange: [\n      ({ data }) =&gt; {\n        console.log('before change!')\n        console.log(data.id)\n        return data.doc\n      },\n    ],\n    beforeOperation: [\n      ({ args, operation }) =&gt; {\n        console.log('before operation!')\n        if (operation === 'update') {\n          console.log('before operation update!')\n          console.log(args)\n        }\n        return args\n      },\n    ],\n  },\n  admin: {\n    useAsTitle: 'internalName',\n    enableRichTextRelationship: true,\n  },\n  fields: [\n    {\n      name: 'internalName',\n      label: 'Internal Name',\n      type: 'text',\n      required: true,\n    },\n    {\n      name: 'alt',\n      label: 'Alternative Text',\n      type: 'text',\n    },\n  ],\n  upload: {\n    staticDir: 'media/images',\n    staticURL: '/media/images',\n    mimeTypes: ['image/*'],\n    imageSizes: [\n      {\n        name: 'desktop',\n        width: 2000,\n        height: 2000,\n      },\n      {\n        name: 'mobile',\n        width: 1000,\n        height: 1000,\n      },\n    ],\n  },\n}\n\nexport default MediaImage\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-smi\">MediaImage</span>: <span class=\"pl-smi\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'media-image'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">labels</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">singular</span>: <span class=\"pl-s\">'Image'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">plural</span>: <span class=\"pl-s\">'Images'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">beforeRead</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'before read!'</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> data <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'before change!'</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">doc</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">beforeOperation</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> args<span class=\"pl-kos\">,</span> operation <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'before operation!'</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">operation</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'update'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'before operation update!'</span><span class=\"pl-kos\">)</span>\n          <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">args</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-kos\">}</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">args</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">useAsTitle</span>: <span class=\"pl-s\">'internalName'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">enableRichTextRelationship</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'internalName'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Internal Name'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'alt'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Alternative Text'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">upload</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">staticDir</span>: <span class=\"pl-s\">'media/images'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">staticURL</span>: <span class=\"pl-s\">'/media/images'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">mimeTypes</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'image/*'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">imageSizes</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'desktop'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">width</span>: <span class=\"pl-c1\">2000</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">height</span>: <span class=\"pl-c1\">2000</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'mobile'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">width</span>: <span class=\"pl-c1\">1000</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">height</span>: <span class=\"pl-c1\">1000</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-smi\">MediaImage</span></pre></div>\n<p dir=\"auto\">The script:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import payload from 'payload'\nimport path from 'path'\nimport dotenv from 'dotenv'\nimport { MediaImageField } from '../fields/media'\n\nconst result = dotenv.config({\n  path: path.resolve(__dirname, '../../.env'),\n})\n\nconsole.log(result)\n\npayload.init({\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGODB_URI,\n  local: true,\n})\n\nconst resaveImageCollection = async () =&gt; {\n  const mediaImages = await payload.find({\n    collection: 'media-image',\n  })\n\n  mediaImages.docs.forEach(async (image: MediaImageField) =&gt; {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { id, ...imageData } = image\n    await payload.update({\n      id: image.id,\n      collection: 'media-image',\n      data: {\n        ...imageData,\n      },\n    })\n  })\n\n  console.log('Seed completed!')\n  process.exit(0)\n}\n\nresaveImageCollection()\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">path</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'path'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">dotenv</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'dotenv'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">MediaImageField</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../fields/media'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">dotenv</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">path</span>: <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'../../.env'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">result</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">init</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">secret</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_SECRET</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">mongoURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">MONGODB_URI</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">local</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">resaveImageCollection</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">mediaImages</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'media-image'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-s1\">mediaImages</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">docs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">forEach</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">image</span>: <span class=\"pl-smi\">MediaImageField</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// eslint-disable-next-line @typescript-eslint/no-unused-vars</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> id<span class=\"pl-kos\">,</span> ...<span class=\"pl-s1\">imageData</span> <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">image</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">update</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">image</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'media-image'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n        ...<span class=\"pl-s1\">imageData</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Seed completed!'</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exit</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-en\">resaveImageCollection</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">The output:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/3854592/126122624-dd890698-ca9b-4a3f-8759-83548fbef1de.png\"><img src=\"https://user-images.githubusercontent.com/3854592/126122624-dd890698-ca9b-4a3f-8759-83548fbef1de.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>",
          "createdAt": "2021-07-19T07:49:06Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Ah <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> I totally know what the issue is.</p>\n<p dir=\"auto\">Your script is async but there is nothing awaiting your <code class=\"notranslate\">forEach</code> loop responsible for updating. As <code class=\"notranslate\">payload.update</code> itself is async, your script is exiting before your updates are even fired.</p>\n<p dir=\"auto\">Change your <code class=\"notranslate\">forEach</code> to this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  await Promise.all(mediaImages.docs.map(async (image: MediaImageField) =&gt; {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { id, ...imageData } = image\n    await payload.update({\n      id: image.id,\n      collection: 'media-image',\n      data: {\n        ...imageData,\n      },\n    })\n  }))\"><pre class=\"notranslate\">  <span class=\"pl-k\">await</span> <span class=\"pl-smi\">Promise</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">all</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">mediaImages</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">docs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">image</span>: <span class=\"pl-smi\">MediaImageField</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// eslint-disable-next-line @typescript-eslint/no-unused-vars</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> id<span class=\"pl-kos\">,</span> ...<span class=\"pl-s1\">imageData</span> <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">image</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">update</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">image</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">collection</span>: <span class=\"pl-s\">'media-image'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">data</span>: <span class=\"pl-kos\">{</span>\n        ...<span class=\"pl-s1\">imageData</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">Then I bet you'll see some more console logs!</p>",
          "createdAt": "2021-07-19T12:31:47Z"
        },
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<p dir=\"auto\">Yes you're correct! It's working for me now. <g-emoji class=\"g-emoji\" alias=\"smiley\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f603.png\">😃</g-emoji></p>",
          "createdAt": "2021-07-20T05:32:30Z"
        }
      ]
    }
  },
  {
    "title": "Login as multiple auth-enabled collections",
    "body": "<p dir=\"auto\">Is it possible to login as multiple auth-enabled collections simultaneously?</p>\n<p dir=\"auto\">Let's say I have <code class=\"notranslate\">Users</code> collection and <code class=\"notranslate\">Admins</code> collection, and I want to be be logged in as both <code class=\"notranslate\">User</code> (in the frontend part) and <code class=\"notranslate\">Admin</code> (in the admin panel) at the same time. Is it doable?</p>\n<p dir=\"auto\">Right now, both Auth collections overwrite each other's <code class=\"notranslate\">payload-token</code> cookie. Would it be enough to simply use different cookie names? Is it configurable?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/226",
    "id": "226",
    "createdAt": "2021-07-10T13:04:33Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "sixers",
      "avatar": "https://avatars.githubusercontent.com/u/1457102?u=3a1a4607cedb94ac939eeb8022461a80e28ce25d&v=4",
      "url": "https://github.com/sixers"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/sixers/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sixers\">@sixers</a>!</p>\n<p dir=\"auto\">Unfortunately there are many complexities below the surface of doing something like this.</p>\n<p dir=\"auto\">For example, if you were logged in as 2 different users, how would Payload know which user you were intending to be using for any given request? Payload <code class=\"notranslate\">operation</code>s access the currently authenticated user from <code class=\"notranslate\">req.user</code> - and while it would be easy enough to change this pattern to use <code class=\"notranslate\">req.users</code> or similar instead, we would still need to know which user to rely on.</p>\n<p dir=\"auto\">Making auth cookie names dynamic would certainly be one piece of the puzzle, but there are many more complex issues and use cases that would need to be thought through fully here.</p>\n<p dir=\"auto\">We can keep it on the radar for sure though. What do you think?</p>",
        "createdAt": "2021-07-12T12:33:36Z",
        "replies": [
          {
            "author": {
              "name": "sixers",
              "avatar": "https://avatars.githubusercontent.com/u/1457102?u=3a1a4607cedb94ac939eeb8022461a80e28ce25d&v=4",
              "url": "https://github.com/sixers"
            },
            "body": "<p dir=\"auto\">Thanks! Ok, that makes sense. In that case, I'll combine the two collections. I wanted to keep them separate, because they have completely different fields, but it's not a big deal.</p>",
            "createdAt": "2021-07-13T16:50:19Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/sixers/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sixers\">@sixers</a>!</p>\n<p dir=\"auto\">Unfortunately there are many complexities below the surface of doing something like this.</p>\n<p dir=\"auto\">For example, if you were logged in as 2 different users, how would Payload know which user you were intending to be using for any given request? Payload <code class=\"notranslate\">operation</code>s access the currently authenticated user from <code class=\"notranslate\">req.user</code> - and while it would be easy enough to change this pattern to use <code class=\"notranslate\">req.users</code> or similar instead, we would still need to know which user to rely on.</p>\n<p dir=\"auto\">Making auth cookie names dynamic would certainly be one piece of the puzzle, but there are many more complex issues and use cases that would need to be thought through fully here.</p>\n<p dir=\"auto\">We can keep it on the radar for sure though. What do you think?</p>",
      "createdAt": "2021-07-12T12:33:36Z",
      "chosenAt": "2022-12-09T16:42:22Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "sixers",
            "avatar": "https://avatars.githubusercontent.com/u/1457102?u=3a1a4607cedb94ac939eeb8022461a80e28ce25d&v=4",
            "url": "https://github.com/sixers"
          },
          "body": "<p dir=\"auto\">Thanks! Ok, that makes sense. In that case, I'll combine the two collections. I wanted to keep them separate, because they have completely different fields, but it's not a big deal.</p>",
          "createdAt": "2021-07-13T16:50:19Z"
        }
      ]
    }
  },
  {
    "title": "Error handling in collection hooks.",
    "body": "<p dir=\"auto\">I'm trying to upload to a DigitalOcean spaces instance and I'm implementing the recommended hooks as specified in the documentation.</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/production/deployment\" rel=\"nofollow\">https://payloadcms.com/docs/production/deployment</a></p>\n<p dir=\"auto\">I've implemented an upload hook (see attached) but I've got two comments.</p>\n<ol dir=\"auto\">\n<li>Is there any way to inform the use if something goes wrong?</li>\n<li>There <em>may</em> be a bug in regards to duplicate filenames, or possibly just a bad implementation on my part. The beforeChange hook doesn't pass the filename that it's going to be saved as. For instance if I upload <code class=\"notranslate\">image.jpg</code> and that filename already exists <strong>twice</strong> then Payload will save it down as <code class=\"notranslate\">image-2.jpg</code> but only <em>after</em> the beforeChange hook has executed, and <code class=\"notranslate\">data.filename</code> will be <code class=\"notranslate\">image-1.jpg</code>. So it gets saved down in the storage with that name as the key.</li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const uploadHook: BeforeChangeHook = async ({ data, req }) =&gt; {\n  try {\n    const s3 = new AWS.S3({\n      endpoint: (new AWS.Endpoint(process.env.SPACES_REGION)),\n      accessKeyId: process.env.SPACES_KEY,\n      secretAccessKey: process.env.SPACES_SECRET\n    })\n\n    const response = await s3.putObject({\n      Bucket: process.env.SPACES_NAME,\n      Key: String(data.filename),\n      Body: req.file,\n      ACL: &quot;private&quot;\n    }).promise()\n\n    console.log(response)\n\n    return data\n  } catch (e) {\n    console.error(e)\n\n    return {}\n  }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">const uploadHook: BeforeChangeHook = async ({ data, req }) =&gt; {\n  try {\n    const s3 = new AWS.S3({\n      endpoint: (new AWS.Endpoint(process.env.SPACES_REGION)),\n      accessKeyId: process.env.SPACES_KEY,\n      secretAccessKey: process.env.SPACES_SECRET\n    })\n\n    const response = await s3.putObject({\n      Bucket: process.env.SPACES_NAME,\n      Key: String(data.filename),\n      Body: req.file,\n      ACL: \"private\"\n    }).promise()\n\n    console.log(response)\n\n    return data\n  } catch (e) {\n    console.error(e)\n\n    return {}\n  }\n}\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/98",
    "id": "98",
    "createdAt": "2021-03-11T06:18:56Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "richardvanbergen",
      "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
      "url": "https://github.com/richardvanbergen"
    },
    "comments": [
      {
        "author": {
          "name": "richardvanbergen",
          "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
          "url": "https://github.com/richardvanbergen"
        },
        "body": "<p dir=\"auto\">Also, could we re-export the collection hooks from <code class=\"notranslate\">payload/types</code>?</p>",
        "createdAt": "2021-03-11T06:29:09Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">You mean the collection hook types? Absolutely. On it!</p>",
            "createdAt": "2021-03-11T13:10:21Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">This has been merged to master and is awaiting release in the next version (0.4.6). Should be deployed later today.</p>",
            "createdAt": "2021-03-14T17:44:43Z"
          }
        ]
      },
      {
        "author": {
          "name": "richardvanbergen",
          "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
          "url": "https://github.com/richardvanbergen"
        },
        "body": "<p dir=\"auto\">Sorry one more question/bug. I'm altering the filename as suggested. But the URL that's being returned is prepended with /media/images. For example: /media/images/<a href=\"https://brightvision.fra1.digitaloceanspaces.com.cdn.digitaloceanspaces.com/contact-image-10-8.jpg\" rel=\"nofollow\">https://brightvision.fra1.digitaloceanspaces.com.cdn.digitaloceanspaces.com/contact-image-10-8.jpg</a></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const readHook: AfterReadHook = async ({ doc }) =&gt; {\n  try {\n    console.log(doc)\n    return {\n      ...doc,\n      filename: `https://${process.env.SPACES_NAME}.${process.env.SPACES_REGION}.cdn.digitaloceanspaces.com/${doc.filename}`\n    }\n  } catch (e) {\n    return doc;\n  }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">const readHook: AfterReadHook = async ({ doc }) =&gt; {\n  try {\n    console.log(doc)\n    return {\n      ...doc,\n      filename: `https://${process.env.SPACES_NAME}.${process.env.SPACES_REGION}.cdn.digitaloceanspaces.com/${doc.filename}`\n    }\n  } catch (e) {\n    return doc;\n  }\n}\n</code></pre></div>",
        "createdAt": "2021-03-11T07:15:50Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Now this one has stumped me. You are altering filename as suggested? Can you show the code that you are using for that? There might be a bug in that implementation. Might need a bit more info on this one!</p>",
            "createdAt": "2021-03-11T13:34:40Z"
          },
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Sorry I'm confused. Aren't I supposed to be altering and returning the filename using the AfterReadHook as I posted above? That seems to be what the documentation is suggesting.</p>\n<p dir=\"auto\">Should I be altering it elsewhere?</p>",
            "createdAt": "2021-03-12T01:34:09Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">I have no idea why, but I totally did not realize you were providing the hook code. You <em>can</em> alter <code class=\"notranslate\">filename</code> through hooks, and we do mention that in the docs. If you did that though, you would want to make sure to \"un-modify\" it through a <code class=\"notranslate\">beforeChange</code> hook or similar, because the filename will have been \"read-in\" as your modified value, and you may end up with some unintended consequences.</p>\n<p dir=\"auto\">To clarify, every time a document is read, even before it's updated, the hooks are run. So an <code class=\"notranslate\">afterRead</code> hook should be careful to not create a modification \"loop\" or similar.</p>\n<p dir=\"auto\">I would say that personally I would add a different field to your Collection, maybe one that doesn't ever have a value saved to the database and is more considered a \"virtual\". Say...:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  name: 's3URL',\n  type: 'text',\n  admin: {\n    readOnly: true,\n  },\n  hooks: {\n    beforeChange: [\n      () =&gt; null,\n    ],\n    afterRead: [\n      ({ data }) =&gt; `https://${process.env.SPACES_NAME}.${process.env.SPACES_REGION}.cdn.digitaloceanspaces.com/${data.filename}`\n    ]\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'s3URL'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">readOnly</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">afterRead</span>: <span class=\"pl-kos\">[</span>\n      <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> data <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s\">`https://<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">SPACES_NAME</span><span class=\"pl-kos\">}</span></span>.<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">SPACES_REGION</span><span class=\"pl-kos\">}</span></span>.cdn.digitaloceanspaces.com/<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">filename</span><span class=\"pl-kos\">}</span></span>`</span>\n    <span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">That way, this field is never really saved in your database, and you can treat it like a \"virtual\".</p>\n<p dir=\"auto\">What do you think? PS, I'll update the docs to be more descriptive as they are currently only half-accurate.</p>",
            "createdAt": "2021-03-13T18:53:45Z"
          }
        ]
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> I love it. I'd be pumped to add this as a tutorial / guide for Payload. We have had this on our list to write about but haven't gotten to it yet.</p>\n<p dir=\"auto\">Couple answers:</p>\n<blockquote>\n<p dir=\"auto\">Is there any way to inform the use if something goes wrong?</p>\n</blockquote>\n<p dir=\"auto\">Yes, just throw an error and the error's message will bubble up through the API(s). You should be able to then see it in a response. Give it a shot! We have <code class=\"notranslate\">APIError</code> exposed within <code class=\"notranslate\">payload/errors</code> which can be leveraged if you want for status codes, etc. but you could also just throw any error you want.</p>\n<blockquote>\n<p dir=\"auto\">There may be a bug in regards to duplicate filenames, or possibly just a bad implementation on my part. The beforeChange hook doesn't pass the filename that it's going to be saved as. For instance if I upload image.jpg and that filename already exists twice then Payload will save it down as image-2.jpg but only after the beforeChange hook has executed, and data.filename will be image-1.jpg. So it gets saved down in the storage with that name as the key.</p>\n</blockquote>\n<p dir=\"auto\">You're right - the <code class=\"notranslate\">filename</code> gets generated in our <code class=\"notranslate\">create</code> operation <em><strong>after</strong></em> the <code class=\"notranslate\">beforeChange</code> hook is fired, but it doesn't have to be this way. We should be able to modify accordingly <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji>  pretty quickly actually. Would this benefit you?</p>",
        "createdAt": "2021-03-11T13:16:32Z",
        "replies": [
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<blockquote>\n<p dir=\"auto\">Yes, just throw an error and the error's message will bubble up through the API(s).</p>\n</blockquote>\n<p dir=\"auto\">So is it OK to just allow the S3 errors to bubble up then? Cool!</p>\n<blockquote>\n<p dir=\"auto\">We should be able to modify accordingly <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji> pretty quickly actually. Would this benefit you?</p>\n</blockquote>\n<p dir=\"auto\">Unless there's a use case I'm not thinking about - I think it makes more sense.</p>\n<p dir=\"auto\">It should be how it's <strong>going</strong> to be saved onto the file system. As it stands the only accurate way for me to get the filename is use the <code class=\"notranslate\">AfterChangeHook</code> which means that if there's an error in the S3 upload then it still gets saved to the database, meaning we might not be able to fetch it later.</p>\n<blockquote>\n<p dir=\"auto\">I'd be pumped to add this as a tutorial / guide for Payload. We have had this on our list to write about but haven't gotten to it yet.</p>\n</blockquote>\n<p dir=\"auto\">No problem. I was actually thinking about tidying it up, adding some tests and docs and throwing it up on npm. You're also welcome to steal any code you like from me in the meantime. (Though, you might want to fix it before you use it <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">😄</g-emoji> )</p>\n<p dir=\"auto\">Here is my prototype: <a href=\"https://gist.github.com/richardvanbergen/a21c701632a2f24a013d8e17495f3e2c\">https://gist.github.com/richardvanbergen/a21c701632a2f24a013d8e17495f3e2c</a></p>\n<p dir=\"auto\">Used like so:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const s3Hooks = withS3Storage(\n  {\n    endpoint: (new AWS.Endpoint(`${process.env.SPACES_REGION}.digitaloceanspaces.com`)),\n    accessKeyId: process.env.SPACES_KEY,\n    secretAccessKey: process.env.SPACES_SECRET,\n  },\n  {\n    bucket: process.env.SPACES_NAME\n  },\n  {\n    beforeValidate: [\n      // ...\n    ]\n  } // &lt;- combine with other hooks here\n)\"><pre class=\"notranslate\"><code class=\"notranslate\">const s3Hooks = withS3Storage(\n  {\n    endpoint: (new AWS.Endpoint(`${process.env.SPACES_REGION}.digitaloceanspaces.com`)),\n    accessKeyId: process.env.SPACES_KEY,\n    secretAccessKey: process.env.SPACES_SECRET,\n  },\n  {\n    bucket: process.env.SPACES_NAME\n  },\n  {\n    beforeValidate: [\n      // ...\n    ]\n  } // &lt;- combine with other hooks here\n)\n</code></pre></div>",
            "createdAt": "2021-03-12T01:30:04Z"
          },
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">One more question, can I alter the data that's going to be saved in the beforeChange hook? Like adding an extra field? I was thinking about updating the file on S3 based on the MD5 hash, then all the filename problems go away.</p>",
            "createdAt": "2021-03-12T01:33:08Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">We'll get a new version published that offers up the filename into <code class=\"notranslate\">beforeChange</code> hooks exactly how it will be saved to the database. Will get to that in the next few days here. <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>\n<blockquote>\n<p dir=\"auto\">One more question, can I alter the data that's going to be saved in the beforeChange hook? Like adding an extra field? I was thinking about updating the file on S3 based on the MD5 hash, then all the filename problems go away.</p>\n</blockquote>\n<p dir=\"auto\">Yes you absolutely can modify the data in the <code class=\"notranslate\">beforeChange</code> hook. You may be thinking about the same thing I just commented elsewhere on this Discussion:</p>\n<p dir=\"auto\"><a aria-label=\"Discussion #98\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3265250\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/98\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/98/hovercard?comment_id=478772\" href=\"https://github.com/payloadcms/payload/discussions/98#discussioncomment-478772\">#98 (reply in thread)</a></p>\n<p dir=\"auto\">You could create a \"virtual\" field with field hooks and have it be nice and tidy. Is this what you mean?</p>",
            "createdAt": "2021-03-13T19:07:22Z"
          },
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Yes! The virtual field works quite nicely! I'll be looking forward to the <code class=\"notranslate\">beforeChange</code> change too.</p>\n<p dir=\"auto\">I've just had one more thought, what about the admin thumbnails? If the storage is ephemeral you could end up in a situation with the frontend being fine but the admin breaking. Because as far as I can tell, there's no way to specify the thumbnail source?</p>",
            "createdAt": "2021-03-14T13:05:00Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Great call.</p>\n<p dir=\"auto\">Just merged a PR that extends the <code class=\"notranslate\">upload.adminThumbnail</code> property by, in addition to only allowing it to specify a <code class=\"notranslate\">size</code>, it now also allows a function that returns a full URL to use as a thumbnail. Updated the docs as well with these changes. You can use this function to set an <code class=\"notranslate\">adminThumbnail</code> however you'd like.</p>\n<p dir=\"auto\"><a aria-label=\"Pull request #104\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"831244354\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/104\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/104/hovercard\" href=\"https://github.com/payloadcms/payload/pull/104\">#104</a></p>\n<p dir=\"auto\">Keep these thoughts coming! Really appreciate the feedback.</p>",
            "createdAt": "2021-03-14T20:02:33Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">I opened a new discussion specific to integrating file hosting with Payload uploads. <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> if you have an answer for what worked in your case that would be awesome to share. <g-emoji class=\"g-emoji\" alias=\"smiley\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f603.png\">😃</g-emoji><br>\n<a aria-label=\"Discussion #220\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3448550\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/220\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/220/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/220\">#220</a></p>",
            "createdAt": "2021-07-06T20:26:02Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> I love it. I'd be pumped to add this as a tutorial / guide for Payload. We have had this on our list to write about but haven't gotten to it yet.</p>\n<p dir=\"auto\">Couple answers:</p>\n<blockquote>\n<p dir=\"auto\">Is there any way to inform the use if something goes wrong?</p>\n</blockquote>\n<p dir=\"auto\">Yes, just throw an error and the error's message will bubble up through the API(s). You should be able to then see it in a response. Give it a shot! We have <code class=\"notranslate\">APIError</code> exposed within <code class=\"notranslate\">payload/errors</code> which can be leveraged if you want for status codes, etc. but you could also just throw any error you want.</p>\n<blockquote>\n<p dir=\"auto\">There may be a bug in regards to duplicate filenames, or possibly just a bad implementation on my part. The beforeChange hook doesn't pass the filename that it's going to be saved as. For instance if I upload image.jpg and that filename already exists twice then Payload will save it down as image-2.jpg but only after the beforeChange hook has executed, and data.filename will be image-1.jpg. So it gets saved down in the storage with that name as the key.</p>\n</blockquote>\n<p dir=\"auto\">You're right - the <code class=\"notranslate\">filename</code> gets generated in our <code class=\"notranslate\">create</code> operation <em><strong>after</strong></em> the <code class=\"notranslate\">beforeChange</code> hook is fired, but it doesn't have to be this way. We should be able to modify accordingly <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji>  pretty quickly actually. Would this benefit you?</p>",
      "createdAt": "2021-03-11T13:16:32Z",
      "chosenAt": "2021-07-06T20:27:06Z",
      "chosenBy": "DanRibbens",
      "replies": [
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<blockquote>\n<p dir=\"auto\">Yes, just throw an error and the error's message will bubble up through the API(s).</p>\n</blockquote>\n<p dir=\"auto\">So is it OK to just allow the S3 errors to bubble up then? Cool!</p>\n<blockquote>\n<p dir=\"auto\">We should be able to modify accordingly <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji> pretty quickly actually. Would this benefit you?</p>\n</blockquote>\n<p dir=\"auto\">Unless there's a use case I'm not thinking about - I think it makes more sense.</p>\n<p dir=\"auto\">It should be how it's <strong>going</strong> to be saved onto the file system. As it stands the only accurate way for me to get the filename is use the <code class=\"notranslate\">AfterChangeHook</code> which means that if there's an error in the S3 upload then it still gets saved to the database, meaning we might not be able to fetch it later.</p>\n<blockquote>\n<p dir=\"auto\">I'd be pumped to add this as a tutorial / guide for Payload. We have had this on our list to write about but haven't gotten to it yet.</p>\n</blockquote>\n<p dir=\"auto\">No problem. I was actually thinking about tidying it up, adding some tests and docs and throwing it up on npm. You're also welcome to steal any code you like from me in the meantime. (Though, you might want to fix it before you use it <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">😄</g-emoji> )</p>\n<p dir=\"auto\">Here is my prototype: <a href=\"https://gist.github.com/richardvanbergen/a21c701632a2f24a013d8e17495f3e2c\">https://gist.github.com/richardvanbergen/a21c701632a2f24a013d8e17495f3e2c</a></p>\n<p dir=\"auto\">Used like so:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const s3Hooks = withS3Storage(\n  {\n    endpoint: (new AWS.Endpoint(`${process.env.SPACES_REGION}.digitaloceanspaces.com`)),\n    accessKeyId: process.env.SPACES_KEY,\n    secretAccessKey: process.env.SPACES_SECRET,\n  },\n  {\n    bucket: process.env.SPACES_NAME\n  },\n  {\n    beforeValidate: [\n      // ...\n    ]\n  } // &lt;- combine with other hooks here\n)\"><pre class=\"notranslate\"><code class=\"notranslate\">const s3Hooks = withS3Storage(\n  {\n    endpoint: (new AWS.Endpoint(`${process.env.SPACES_REGION}.digitaloceanspaces.com`)),\n    accessKeyId: process.env.SPACES_KEY,\n    secretAccessKey: process.env.SPACES_SECRET,\n  },\n  {\n    bucket: process.env.SPACES_NAME\n  },\n  {\n    beforeValidate: [\n      // ...\n    ]\n  } // &lt;- combine with other hooks here\n)\n</code></pre></div>",
          "createdAt": "2021-03-12T01:30:04Z"
        },
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<p dir=\"auto\">One more question, can I alter the data that's going to be saved in the beforeChange hook? Like adding an extra field? I was thinking about updating the file on S3 based on the MD5 hash, then all the filename problems go away.</p>",
          "createdAt": "2021-03-12T01:33:08Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">We'll get a new version published that offers up the filename into <code class=\"notranslate\">beforeChange</code> hooks exactly how it will be saved to the database. Will get to that in the next few days here. <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>\n<blockquote>\n<p dir=\"auto\">One more question, can I alter the data that's going to be saved in the beforeChange hook? Like adding an extra field? I was thinking about updating the file on S3 based on the MD5 hash, then all the filename problems go away.</p>\n</blockquote>\n<p dir=\"auto\">Yes you absolutely can modify the data in the <code class=\"notranslate\">beforeChange</code> hook. You may be thinking about the same thing I just commented elsewhere on this Discussion:</p>\n<p dir=\"auto\"><a aria-label=\"Discussion #98\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3265250\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/98\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/98/hovercard?comment_id=478772\" href=\"https://github.com/payloadcms/payload/discussions/98#discussioncomment-478772\">#98 (reply in thread)</a></p>\n<p dir=\"auto\">You could create a \"virtual\" field with field hooks and have it be nice and tidy. Is this what you mean?</p>",
          "createdAt": "2021-03-13T19:07:22Z"
        },
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<p dir=\"auto\">Yes! The virtual field works quite nicely! I'll be looking forward to the <code class=\"notranslate\">beforeChange</code> change too.</p>\n<p dir=\"auto\">I've just had one more thought, what about the admin thumbnails? If the storage is ephemeral you could end up in a situation with the frontend being fine but the admin breaking. Because as far as I can tell, there's no way to specify the thumbnail source?</p>",
          "createdAt": "2021-03-14T13:05:00Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Great call.</p>\n<p dir=\"auto\">Just merged a PR that extends the <code class=\"notranslate\">upload.adminThumbnail</code> property by, in addition to only allowing it to specify a <code class=\"notranslate\">size</code>, it now also allows a function that returns a full URL to use as a thumbnail. Updated the docs as well with these changes. You can use this function to set an <code class=\"notranslate\">adminThumbnail</code> however you'd like.</p>\n<p dir=\"auto\"><a aria-label=\"Pull request #104\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"831244354\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/104\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/104/hovercard\" href=\"https://github.com/payloadcms/payload/pull/104\">#104</a></p>\n<p dir=\"auto\">Keep these thoughts coming! Really appreciate the feedback.</p>",
          "createdAt": "2021-03-14T20:02:33Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">I opened a new discussion specific to integrating file hosting with Payload uploads. <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> if you have an answer for what worked in your case that would be awesome to share. <g-emoji class=\"g-emoji\" alias=\"smiley\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f603.png\">😃</g-emoji><br>\n<a aria-label=\"Discussion #220\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3448550\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/220\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/220/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/220\">#220</a></p>",
          "createdAt": "2021-07-06T20:26:02Z"
        }
      ]
    }
  },
  {
    "title": "Problem using library 'basic-ftp'",
    "body": "<p dir=\"auto\">This problem may not for Payload CMS. However, I want to use 'basic-ftp' library for connecting ftp client in payload. But when I am trying to import the library, it gives me the following error.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ERROR in ./node_modules/basic-ftp/dist/Client.js 4:13-26\nModule not found: Error: Can't resolve 'fs' in 'C:\\Users\\BS0493\\OneDrive\\Desktop\\practice-codes\\Bronx server\\node_modules\\basic-ftp\\dist'\n\nERROR in ./node_modules/basic-ftp/dist/Client.js 6:14-28\nModule not found: Error: Can't resolve 'tls' in 'C:\\Users\\BS0493\\OneDrive\\Desktop\\practice-codes\\Bronx server\\node_modules\\basic-ftp\\dist'\n\nERROR in ./node_modules/basic-ftp/dist/FtpContext.js 4:14-28\nModule not found: Error: Can't resolve 'net' in 'C:\\Users\\BS0493\\OneDrive\\Desktop\\practice-codes\\Bronx server\\node_modules\\basic-ftp\\dist'\n\nERROR in ./node_modules/basic-ftp/dist/StringWriter.js 4:17-34\nModule not found: Error: Can't resolve 'stream' in 'C:\\Users\\BS0493\\OneDrive\\Desktop\\practice-codes\\Bronx server\\node_modules\\basic-ftp\\dist'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n        - add a fallback 'resolve.fallback: { &quot;stream&quot;: require.resolve(&quot;stream-browserify&quot;) }'\n        - install 'stream-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n        resolve.fallback: { &quot;stream&quot;: false }\n\nERROR in ./node_modules/basic-ftp/dist/netUtils.js 4:14-28\nModule not found: Error: Can't resolve 'tls' in 'C:\\Users\\BS0493\\OneDrive\\Desktop\\practice-codes\\Bronx server\\node_modules\\basic-ftp\\dist'\n\nERROR in ./node_modules/basic-ftp/dist/transfer.js 5:14-28\nModule not found: Error: Can't resolve 'tls' in 'C:\\Users\\BS0493\\OneDrive\\Desktop\\practice-codes\\Bronx server\\node_modules\\basic-ftp\\dist'\n\nwebpack compiled with 6 errors\"><pre class=\"notranslate\"><code class=\"notranslate\">ERROR in ./node_modules/basic-ftp/dist/Client.js 4:13-26\nModule not found: Error: Can't resolve 'fs' in 'C:\\Users\\BS0493\\OneDrive\\Desktop\\practice-codes\\Bronx server\\node_modules\\basic-ftp\\dist'\n\nERROR in ./node_modules/basic-ftp/dist/Client.js 6:14-28\nModule not found: Error: Can't resolve 'tls' in 'C:\\Users\\BS0493\\OneDrive\\Desktop\\practice-codes\\Bronx server\\node_modules\\basic-ftp\\dist'\n\nERROR in ./node_modules/basic-ftp/dist/FtpContext.js 4:14-28\nModule not found: Error: Can't resolve 'net' in 'C:\\Users\\BS0493\\OneDrive\\Desktop\\practice-codes\\Bronx server\\node_modules\\basic-ftp\\dist'\n\nERROR in ./node_modules/basic-ftp/dist/StringWriter.js 4:17-34\nModule not found: Error: Can't resolve 'stream' in 'C:\\Users\\BS0493\\OneDrive\\Desktop\\practice-codes\\Bronx server\\node_modules\\basic-ftp\\dist'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n        - add a fallback 'resolve.fallback: { \"stream\": require.resolve(\"stream-browserify\") }'\n        - install 'stream-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n        resolve.fallback: { \"stream\": false }\n\nERROR in ./node_modules/basic-ftp/dist/netUtils.js 4:14-28\nModule not found: Error: Can't resolve 'tls' in 'C:\\Users\\BS0493\\OneDrive\\Desktop\\practice-codes\\Bronx server\\node_modules\\basic-ftp\\dist'\n\nERROR in ./node_modules/basic-ftp/dist/transfer.js 5:14-28\nModule not found: Error: Can't resolve 'tls' in 'C:\\Users\\BS0493\\OneDrive\\Desktop\\practice-codes\\Bronx server\\node_modules\\basic-ftp\\dist'\n\nwebpack compiled with 6 errors\n</code></pre></div>\n<p dir=\"auto\">It seems like a problem with webpack config. I found a lot of solutions, but nothing seems to work for me. Can anyone, how can I use 'basic-ftp' in payload cms?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/218",
    "id": "218",
    "createdAt": "2021-07-06T10:03:20Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "aljubaer",
      "avatar": "https://avatars.githubusercontent.com/u/34982629?u=7186a324cd0f1a6ee53beef634ef7805f1e9903b&v=4",
      "url": "https://github.com/aljubaer"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/aljubaer/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aljubaer\">@aljubaer</a> —</p>\n<p dir=\"auto\">This is actually a common problem that has to do with importing non browser-friendly code into browser apps. As the Payload config is shared between the server and the browser, installing server-only modules like <code class=\"notranslate\">basic-ftp</code> will allow the server to work fine, but cause the browser bundle to break.</p>\n<p dir=\"auto\">But - fixing it is easy! See here in the docs:<br>\n<a href=\"https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules\" rel=\"nofollow\">https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules</a></p>\n<p dir=\"auto\">Also, I've written up a bit longer of a response to this type of issue in another discussion here:<br>\n<a aria-label=\"Discussion #205\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3424292\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/205\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/205/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/205\">#205</a></p>\n<p dir=\"auto\">Does this help?</p>",
        "createdAt": "2021-07-06T12:37:19Z",
        "replies": [
          {
            "author": {
              "name": "aljubaer",
              "avatar": "https://avatars.githubusercontent.com/u/34982629?u=7186a324cd0f1a6ee53beef634ef7805f1e9903b&v=4",
              "url": "https://github.com/aljubaer"
            },
            "body": "<p dir=\"auto\">Yes, this works fine. Thank you for your reply.</p>",
            "createdAt": "2021-07-06T13:15:52Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/aljubaer/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aljubaer\">@aljubaer</a> —</p>\n<p dir=\"auto\">This is actually a common problem that has to do with importing non browser-friendly code into browser apps. As the Payload config is shared between the server and the browser, installing server-only modules like <code class=\"notranslate\">basic-ftp</code> will allow the server to work fine, but cause the browser bundle to break.</p>\n<p dir=\"auto\">But - fixing it is easy! See here in the docs:<br>\n<a href=\"https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules\" rel=\"nofollow\">https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules</a></p>\n<p dir=\"auto\">Also, I've written up a bit longer of a response to this type of issue in another discussion here:<br>\n<a aria-label=\"Discussion #205\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3424292\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/discussions/205\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/payloadcms/payload/discussions/205/hovercard\" href=\"https://github.com/payloadcms/payload/discussions/205\">#205</a></p>\n<p dir=\"auto\">Does this help?</p>",
      "createdAt": "2021-07-06T12:37:19Z",
      "chosenAt": "2021-07-06T13:15:57Z",
      "chosenBy": "aljubaer",
      "replies": [
        {
          "author": {
            "name": "aljubaer",
            "avatar": "https://avatars.githubusercontent.com/u/34982629?u=7186a324cd0f1a6ee53beef634ef7805f1e9903b&v=4",
            "url": "https://github.com/aljubaer"
          },
          "body": "<p dir=\"auto\">Yes, this works fine. Thank you for your reply.</p>",
          "createdAt": "2021-07-06T13:15:52Z"
        }
      ]
    }
  },
  {
    "title": "cyclic dependencies between collection - hooks produce endless loop",
    "body": "<p dir=\"auto\">Hello again! I am really loving payload cms so far <g-emoji class=\"g-emoji\" alias=\"raised_hands\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f64c.png\">🙌</g-emoji> We encountered one problem though:</p>\n<p dir=\"auto\">Is there a way to specifically turn off hooks on a CRUD request? Our usecase is that we have a cyclic dependency between let's say categories and meta categories. When saving either of them we wanted to build a hook system, which automagically updates meta categories when saving categories and vice versa.</p>\n<p dir=\"auto\">Now the problem is, that hooks get triggered in a loop, as one collection saves the other and the other way round. This could be mitigated by specifically saving an entity w/o executing it's hooks, or am I wrong?</p>\n<p dir=\"auto\">Have you already encountered this problem? Thanks in advance!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/211",
    "id": "211",
    "createdAt": "2021-06-29T08:04:17Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "zaunermax",
      "avatar": "https://avatars.githubusercontent.com/u/15246773?u=4000ce93e66bec4c2614c297df7da031db6e42de&v=4",
      "url": "https://github.com/zaunermax"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zaunermax/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zaunermax\">@zaunermax</a> — we really appreciate your interest in Payload. Great to hear that you're enjoying working with it. Got a lot more goodness on the way too.</p>\n<p dir=\"auto\">What I'd do in this case, is first <em><strong>check</strong></em> if the <code class=\"notranslate\">metaCategory</code> or <code class=\"notranslate\">category</code> <em>already</em> has the relationship that it needs, before actually updating it in your hooks.</p>\n<p dir=\"auto\">That way, if the proper relationship already exists, you won't update again needlessly, and then the hooks won't re-run. Just need to introduce <em>some</em> type of loop-breaking logic. That's what I'd do.</p>\n<p dir=\"auto\">This is totally a common thing. Need to break the cycle in one way or another.</p>\n<p dir=\"auto\">Does that help?</p>",
        "createdAt": "2021-06-29T13:50:08Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zaunermax/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zaunermax\">@zaunermax</a> — we really appreciate your interest in Payload. Great to hear that you're enjoying working with it. Got a lot more goodness on the way too.</p>\n<p dir=\"auto\">What I'd do in this case, is first <em><strong>check</strong></em> if the <code class=\"notranslate\">metaCategory</code> or <code class=\"notranslate\">category</code> <em>already</em> has the relationship that it needs, before actually updating it in your hooks.</p>\n<p dir=\"auto\">That way, if the proper relationship already exists, you won't update again needlessly, and then the hooks won't re-run. Just need to introduce <em>some</em> type of loop-breaking logic. That's what I'd do.</p>\n<p dir=\"auto\">This is totally a common thing. Need to break the cycle in one way or another.</p>\n<p dir=\"auto\">Does that help?</p>",
      "createdAt": "2021-06-29T13:50:08Z",
      "chosenAt": "2021-06-30T07:05:57Z",
      "chosenBy": "zaunermax",
      "replies": null
    }
  },
  {
    "title": "Collections loaded server + clientside",
    "body": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">we use Algolia to index some of the collection items in payload and our problem is, that the algolia indices are used in some collection hooks. As it turns out, payload uses the config file client AND serverside.</p>\n<p dir=\"auto\">To create/edit/update algolia indices, you need to provide an admin key, which obviously should only be provided serverside. Though payload seems to load the exact same config file clientside as well, which then throws an error as the admin api key only exists serverside.</p>\n<p dir=\"auto\">The problem arises as the indices are imported to the collections (which init algolia on import) and due to the fact that all collections are imported to the payload config file as well makes it so payload tries to init algolia clientside as well.</p>\n<p dir=\"auto\">Is there any workaround for stuff in hooks, that have to be serverside only? I hope my explanation of the problem was sufficient, otherwise hit me up - thanks in advance <g-emoji class=\"g-emoji\" alias=\"raised_hands\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f64c.png\">🙌</g-emoji></p>",
    "url": "https://github.com/payloadcms/payload/discussions/205",
    "id": "205",
    "createdAt": "2021-06-22T10:15:00Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "zaunermax",
      "avatar": "https://avatars.githubusercontent.com/u/15246773?u=4000ce93e66bec4c2614c297df7da031db6e42de&v=4",
      "url": "https://github.com/zaunermax"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zaunermax/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zaunermax\">@zaunermax</a>!</p>\n<p dir=\"auto\">Great question. We have run into this exact issue in the past. The good news is that there is a super easy solution!</p>\n<p dir=\"auto\"><strong>You need to manually prevent Webpack from including your server-only code.</strong></p>\n<p dir=\"auto\">In keeping to Payload's goal of sticking as close to JavaScript as possible, we just expose the Webpack config to you where you can utilize the variety of ways that Webpack allows you to do this.</p>\n<p dir=\"auto\">As Hooks are only executed server-side, we've commonly used Webpack's <code class=\"notranslate\">alias</code> feature to swap out our Hooks with empty modules. Here is an example of a config that does exactly this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import path from 'path';\nimport { buildConfig } from 'payload/config';\nimport Customers from './collections/Customers';\nimport Licenses from './collections/Licenses';\n\nconst mockModulePath = path.resolve(__dirname, './mocks/emptyModule.js');\n\nexport default buildConfig({\n  admin: {\n    webpack: (config) =&gt; ({\n      ...config,\n      resolve: {\n        ...config.resolve,\n        alias: [\n          'fs',\n          path.resolve(__dirname, './collections/Customers/generateForgotPasswordEmail'),\n          path.resolve(__dirname, './collections/Customers/generateVerificationEmail'),\n          path.resolve(__dirname, './collections/Customers/stripe/syncCustomer'),\n          path.resolve(__dirname, './collections/Customers/stripe/updateCustomer'),\n          path.resolve(__dirname, './collections/Licenses/stripe/createSubscription'),\n          path.resolve(__dirname, './collections/Licenses/stripe/changePlan'),\n        ].reduce((alias, path) =&gt; ({\n          ...alias,\n          [path]: mockModulePath,\n        }), config.resolve.alias)\n      }\n    })\n  },\n  collections: [\n    Customers,\n    Licenses,\n  ],\n  serverURL: process.env.PAYLOAD_PUBLIC_SERVER_URL,\n});\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">path</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'path'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">buildConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/config'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Customers</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Customers'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Licenses</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Licenses'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">mockModulePath</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./mocks/emptyModule.js'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-en\">buildConfig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">webpack</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">config</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      ...<span class=\"pl-s1\">config</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">resolve</span>: <span class=\"pl-kos\">{</span>\n        ...<span class=\"pl-s1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolve</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">alias</span>: <span class=\"pl-kos\">[</span>\n          <span class=\"pl-s\">'fs'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./collections/Customers/generateForgotPasswordEmail'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./collections/Customers/generateVerificationEmail'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./collections/Customers/stripe/syncCustomer'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./collections/Customers/stripe/updateCustomer'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./collections/Licenses/stripe/createSubscription'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./collections/Licenses/stripe/changePlan'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reduce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alias</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n          ...<span class=\"pl-s1\">alias</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">[</span><span class=\"pl-s1\">path</span><span class=\"pl-kos\">]</span>: <span class=\"pl-s1\">mockModulePath</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolve</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">alias</span><span class=\"pl-kos\">)</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">collections</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-v\">Customers</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-v\">Licenses</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">serverURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_PUBLIC_SERVER_URL</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">And then the <code class=\"notranslate\">./mocks/emptyModule.js</code> file just looks like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"module.exports = {};\"><pre class=\"notranslate\"><span class=\"pl-smi\">module</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">exports</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Take a look at the Webpack documentation for more info:</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/admin/webpack\" rel=\"nofollow\">https://payloadcms.com/docs/admin/webpack</a></p>\n<p dir=\"auto\">Does this help you out at all?</p>",
        "createdAt": "2021-06-22T11:36:48Z",
        "replies": [
          {
            "author": {
              "name": "zaunermax",
              "avatar": "https://avatars.githubusercontent.com/u/15246773?u=4000ce93e66bec4c2614c297df7da031db6e42de&v=4",
              "url": "https://github.com/zaunermax"
            },
            "body": "<p dir=\"auto\">Thanks for the very elaborate answer, I'm going to try this right away <g-emoji class=\"g-emoji\" alias=\"raised_hands\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f64c.png\">🙌</g-emoji></p>",
            "createdAt": "2021-06-24T08:43:39Z"
          },
          {
            "author": {
              "name": "zaunermax",
              "avatar": "https://avatars.githubusercontent.com/u/15246773?u=4000ce93e66bec4c2614c297df7da031db6e42de&v=4",
              "url": "https://github.com/zaunermax"
            },
            "body": "<p dir=\"auto\">While this solution seems a bit hacky it works haha <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">😄</g-emoji> Thanks for your help! <g-emoji class=\"g-emoji\" alias=\"raised_hands\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f64c.png\">🙌</g-emoji></p>",
            "createdAt": "2021-06-24T09:47:23Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">We considered other options such as having a whitelist or blacklist in the config, but this method ended up winning out. If you think of an alternate solution we'd like to hear it.</p>",
            "createdAt": "2021-06-24T16:19:32Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zaunermax/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zaunermax\">@zaunermax</a>!</p>\n<p dir=\"auto\">Great question. We have run into this exact issue in the past. The good news is that there is a super easy solution!</p>\n<p dir=\"auto\"><strong>You need to manually prevent Webpack from including your server-only code.</strong></p>\n<p dir=\"auto\">In keeping to Payload's goal of sticking as close to JavaScript as possible, we just expose the Webpack config to you where you can utilize the variety of ways that Webpack allows you to do this.</p>\n<p dir=\"auto\">As Hooks are only executed server-side, we've commonly used Webpack's <code class=\"notranslate\">alias</code> feature to swap out our Hooks with empty modules. Here is an example of a config that does exactly this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import path from 'path';\nimport { buildConfig } from 'payload/config';\nimport Customers from './collections/Customers';\nimport Licenses from './collections/Licenses';\n\nconst mockModulePath = path.resolve(__dirname, './mocks/emptyModule.js');\n\nexport default buildConfig({\n  admin: {\n    webpack: (config) =&gt; ({\n      ...config,\n      resolve: {\n        ...config.resolve,\n        alias: [\n          'fs',\n          path.resolve(__dirname, './collections/Customers/generateForgotPasswordEmail'),\n          path.resolve(__dirname, './collections/Customers/generateVerificationEmail'),\n          path.resolve(__dirname, './collections/Customers/stripe/syncCustomer'),\n          path.resolve(__dirname, './collections/Customers/stripe/updateCustomer'),\n          path.resolve(__dirname, './collections/Licenses/stripe/createSubscription'),\n          path.resolve(__dirname, './collections/Licenses/stripe/changePlan'),\n        ].reduce((alias, path) =&gt; ({\n          ...alias,\n          [path]: mockModulePath,\n        }), config.resolve.alias)\n      }\n    })\n  },\n  collections: [\n    Customers,\n    Licenses,\n  ],\n  serverURL: process.env.PAYLOAD_PUBLIC_SERVER_URL,\n});\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">path</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'path'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">buildConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/config'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Customers</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Customers'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">Licenses</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./collections/Licenses'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">mockModulePath</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./mocks/emptyModule.js'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-en\">buildConfig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">webpack</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">config</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      ...<span class=\"pl-s1\">config</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">resolve</span>: <span class=\"pl-kos\">{</span>\n        ...<span class=\"pl-s1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolve</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">alias</span>: <span class=\"pl-kos\">[</span>\n          <span class=\"pl-s\">'fs'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./collections/Customers/generateForgotPasswordEmail'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./collections/Customers/generateVerificationEmail'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./collections/Customers/stripe/syncCustomer'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./collections/Customers/stripe/updateCustomer'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./collections/Licenses/stripe/createSubscription'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s1\">path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./collections/Licenses/stripe/changePlan'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reduce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alias</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">path</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n          ...<span class=\"pl-s1\">alias</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-kos\">[</span><span class=\"pl-s1\">path</span><span class=\"pl-kos\">]</span>: <span class=\"pl-s1\">mockModulePath</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolve</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">alias</span><span class=\"pl-kos\">)</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">collections</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-v\">Customers</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-v\">Licenses</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">serverURL</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PAYLOAD_PUBLIC_SERVER_URL</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">And then the <code class=\"notranslate\">./mocks/emptyModule.js</code> file just looks like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"module.exports = {};\"><pre class=\"notranslate\"><span class=\"pl-smi\">module</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">exports</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Take a look at the Webpack documentation for more info:</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/admin/webpack\" rel=\"nofollow\">https://payloadcms.com/docs/admin/webpack</a></p>\n<p dir=\"auto\">Does this help you out at all?</p>",
      "createdAt": "2021-06-22T11:36:48Z",
      "chosenAt": "2021-06-24T09:47:42Z",
      "chosenBy": "zaunermax",
      "replies": [
        {
          "author": {
            "name": "zaunermax",
            "avatar": "https://avatars.githubusercontent.com/u/15246773?u=4000ce93e66bec4c2614c297df7da031db6e42de&v=4",
            "url": "https://github.com/zaunermax"
          },
          "body": "<p dir=\"auto\">Thanks for the very elaborate answer, I'm going to try this right away <g-emoji class=\"g-emoji\" alias=\"raised_hands\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f64c.png\">🙌</g-emoji></p>",
          "createdAt": "2021-06-24T08:43:39Z"
        },
        {
          "author": {
            "name": "zaunermax",
            "avatar": "https://avatars.githubusercontent.com/u/15246773?u=4000ce93e66bec4c2614c297df7da031db6e42de&v=4",
            "url": "https://github.com/zaunermax"
          },
          "body": "<p dir=\"auto\">While this solution seems a bit hacky it works haha <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">😄</g-emoji> Thanks for your help! <g-emoji class=\"g-emoji\" alias=\"raised_hands\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f64c.png\">🙌</g-emoji></p>",
          "createdAt": "2021-06-24T09:47:23Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">We considered other options such as having a whitelist or blacklist in the config, but this method ended up winning out. If you think of an alternate solution we'd like to hear it.</p>",
          "createdAt": "2021-06-24T16:19:32Z"
        }
      ]
    }
  },
  {
    "title": "Can you use fastify instead of express?",
    "body": "<p dir=\"auto\">Hi there!<br>\nI really like <a href=\"https://www.npmjs.com/package/fastify\" rel=\"nofollow\">fastify</a> and I prefer it over express but it seems that payload expect only express app (according to docs), am I correct? Is there a way to use fastify instead of express?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/194",
    "id": "194",
    "createdAt": "2021-06-02T19:16:30Z",
    "upvotes": 2,
    "commentTotal": 2,
    "author": {
      "name": "GoldStrikeArch",
      "avatar": "https://avatars.githubusercontent.com/u/48799733?v=4",
      "url": "https://github.com/GoldStrikeArch"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey @MihailPertsev — thanks for the thought!</p>\n<p dir=\"auto\">At the moment, we are using many Express-specific middlewares. Each would need to be converted over accordingly to work with Fastify I believe. So this would not be a simple task as far as I know.</p>\n<p dir=\"auto\">If there is enough demand, it's possible that we could support Fastify in the future. We are about to open a public roadmap, which you will be able to vote on new features and enhancements. We'll add \"support other HTTP frameworks\" as a roadmap item, and if it garners enough attention, we would definitely build support for it!</p>",
        "createdAt": "2021-06-02T19:21:58Z",
        "replies": [
          {
            "author": {
              "name": "GoldStrikeArch",
              "avatar": "https://avatars.githubusercontent.com/u/48799733?v=4",
              "url": "https://github.com/GoldStrikeArch"
            },
            "body": "<p dir=\"auto\">I think it should not be that complicated in fastify case, because you can <a href=\"https://www.fastify.io/docs/latest/Middleware/\" rel=\"nofollow\">use express middlewares</a> in fastify via fastify-express plugin.</p>",
            "createdAt": "2021-06-02T19:26:26Z"
          },
          {
            "author": {
              "name": "Ontopic",
              "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
              "url": "https://github.com/Ontopic"
            },
            "body": "<p dir=\"auto\">Would love to hear updates when you're gonna try :)</p>",
            "createdAt": "2021-06-03T10:21:59Z"
          }
        ]
      },
      {
        "author": {
          "name": "yamiteru",
          "avatar": "https://avatars.githubusercontent.com/u/34185465?u=1839e8641845e025c0073322e332c4632887e03f&v=4",
          "url": "https://github.com/yamiteru"
        },
        "body": "<p dir=\"auto\">Why not use uWebSockets? It's much faster than Fastify <g-emoji class=\"g-emoji\" alias=\"thinking\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f914.png\">🤔</g-emoji></p>",
        "createdAt": "2021-06-22T21:01:34Z",
        "replies": [
          {
            "author": {
              "name": "GoldStrikeArch",
              "avatar": "https://avatars.githubusercontent.com/u/48799733?v=4",
              "url": "https://github.com/GoldStrikeArch"
            },
            "body": "<p dir=\"auto\">Yeah, didn't even know about it before your reply!<br>\nIt seems that its indeed a \"blazing fast\" by a large margin (8.5x faster than Fastify). Yet it seems that it lacks an \"ecosystem\" around it, see for example what fastify can <a href=\"https://www.fastify.io/ecosystem/\" rel=\"nofollow\">offer out of the box</a> and you can also use express middlawares as well.</p>\n<p dir=\"auto\">I will play around with uWebSockets.js but what I am afraid of is that this .js project is a just wrapper for \"libuv\", so the main uWebSockets project which written in C++ can communicate with Node js. So, I can imagine that if you hit some \"complexity\" you might need to write some C++ code as well <g-emoji class=\"g-emoji\" alias=\"scream\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f631.png\">😱</g-emoji></p>",
            "createdAt": "2021-06-23T08:06:53Z"
          },
          {
            "author": {
              "name": "yamiteru",
              "avatar": "https://avatars.githubusercontent.com/u/34185465?u=1839e8641845e025c0073322e332c4632887e03f&v=4",
              "url": "https://github.com/yamiteru"
            },
            "body": "<p dir=\"auto\">I've used uWebSockets extensively and never had to touch C++. Thanks to being low-level you can do much more with it than you can with Express/Fastify. Middlewares are just an array of async functions that run before the main request handler <g-emoji class=\"g-emoji\" alias=\"man_shrugging\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f937-2642.png\">🤷‍♂️</g-emoji></p>",
            "createdAt": "2021-06-23T08:31:25Z"
          },
          {
            "author": {
              "name": "GoldStrikeArch",
              "avatar": "https://avatars.githubusercontent.com/u/48799733?v=4",
              "url": "https://github.com/GoldStrikeArch"
            },
            "body": "<blockquote>\n<p dir=\"auto\">I've used uWebSockets extensively and never had to touch C++. Thanks to being low-level you can do much more with it than you can with Express/Fastify. Middlewares are just an array of async functions that run before the main request handler <g-emoji class=\"g-emoji\" alias=\"man_shrugging\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f937-2642.png\">🤷‍♂️</g-emoji></p>\n</blockquote>\n<p dir=\"auto\">Well, I do not feel pretty comfortable to use \"low lvl\" abstractions myself, maybe this is the main reason for me to use express/fastify. Can you please provide some repos examples for uWebSockets? And to be honest I am not even sure for what kind of apps this \"blazing fast\" power would benefit? I mean, I know that any app will be better if your responses would be faster but I just don't know how huge and complex the app should be to see benefits of uWebSockets again Fastify/Express. Also I am not sure about \"Thanks to being low-level you can do much more with it than you can with Express/Fastify.\", can you please clarify it?</p>",
            "createdAt": "2021-06-23T08:44:36Z"
          },
          {
            "author": {
              "name": "yamiteru",
              "avatar": "https://avatars.githubusercontent.com/u/34185465?u=1839e8641845e025c0073322e332c4632887e03f&v=4",
              "url": "https://github.com/yamiteru"
            },
            "body": "<p dir=\"auto\">Here are two articles:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://dev.to/mattkrick/replacing-express-with-uwebsockets-48ph\" rel=\"nofollow\">https://dev.to/mattkrick/replacing-express-with-uwebsockets-48ph</a></li>\n<li><a href=\"https://edisonchee.com/writing/intro-to-%C2%B5websockets.js/\" rel=\"nofollow\">https://edisonchee.com/writing/intro-to-µwebsockets.js/</a></li>\n</ul>\n<p dir=\"auto\">And official examples:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/uNetworking/uWebSockets.js/tree/master/examples\">https://github.com/uNetworking/uWebSockets.js/tree/master/examples</a></li>\n</ul>\n<p dir=\"auto\">Well it benefits all apps obviously. Every app benefits from having a smaller bottleneck in serving requests. The more router logic you have and the bigger number of simultaneous connections the more you're gonna benefit from uWebSockets.</p>\n<p dir=\"auto\">To the last point. From my experience you very often need a plugin of some sort for things like backpressure, middlewares, websockets, etc. and because those plugins are high-level abstractions you never truly know your code and with that a technical debt comes.</p>\n<p dir=\"auto\">Even tho using uWebSockets might seems tedious at first you quickly find out everything is just functions and getters that output raw data and it's up to you what you're gonna do with them.</p>",
            "createdAt": "2021-06-23T09:29:53Z"
          },
          {
            "author": {
              "name": "GoldStrikeArch",
              "avatar": "https://avatars.githubusercontent.com/u/48799733?v=4",
              "url": "https://github.com/GoldStrikeArch"
            },
            "body": "<p dir=\"auto\">Thanks for the articles, I saw official repo examples but I was asking about \"full apps\" examples on uWebSockets with that \"additional stuff that Express/Fastify cannot do (or can do very poorly)\".</p>",
            "createdAt": "2021-06-23T10:48:40Z"
          },
          {
            "author": {
              "name": "yamiteru",
              "avatar": "https://avatars.githubusercontent.com/u/34185465?u=1839e8641845e025c0073322e332c4632887e03f&v=4",
              "url": "https://github.com/yamiteru"
            },
            "body": "<p dir=\"auto\">I guess you're gonna have to look for them since I cannot give you an access to my private repos.</p>",
            "createdAt": "2021-06-23T12:00:12Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey @MihailPertsev — thanks for the thought!</p>\n<p dir=\"auto\">At the moment, we are using many Express-specific middlewares. Each would need to be converted over accordingly to work with Fastify I believe. So this would not be a simple task as far as I know.</p>\n<p dir=\"auto\">If there is enough demand, it's possible that we could support Fastify in the future. We are about to open a public roadmap, which you will be able to vote on new features and enhancements. We'll add \"support other HTTP frameworks\" as a roadmap item, and if it garners enough attention, we would definitely build support for it!</p>",
      "createdAt": "2021-06-02T19:21:58Z",
      "chosenAt": "2021-06-26T11:08:45Z",
      "chosenBy": "denolfe",
      "replies": [
        {
          "author": {
            "name": "GoldStrikeArch",
            "avatar": "https://avatars.githubusercontent.com/u/48799733?v=4",
            "url": "https://github.com/GoldStrikeArch"
          },
          "body": "<p dir=\"auto\">I think it should not be that complicated in fastify case, because you can <a href=\"https://www.fastify.io/docs/latest/Middleware/\" rel=\"nofollow\">use express middlewares</a> in fastify via fastify-express plugin.</p>",
          "createdAt": "2021-06-02T19:26:26Z"
        },
        {
          "author": {
            "name": "Ontopic",
            "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
            "url": "https://github.com/Ontopic"
          },
          "body": "<p dir=\"auto\">Would love to hear updates when you're gonna try :)</p>",
          "createdAt": "2021-06-03T10:21:59Z"
        }
      ]
    }
  },
  {
    "title": "Best way to achieve a dynamic serverURL using environment variables?",
    "body": "<p dir=\"auto\">Howdy, I'm trying to finish a workflow that uses Github Actions to plonk the Payload app and its dependencies all Dockerized onto an Ubuntu box elsewhere. The last thing I seem to be struggling with is making the serverURL dynamic, as it's configured in the <code class=\"notranslate\">payload.config.ts</code> file that is invoked at build-time indirectly by the scripts in the <code class=\"notranslate\">package.json</code>.</p>\n<p dir=\"auto\">The way <code class=\"notranslate\">npx</code> sets things up, the package scripts call eachother. I'm not sure how best to get an env var from a <code class=\"notranslate\">.env</code> file in there. I've tried a few things that didn't quite work (requiring the <code class=\"notranslate\">dotenv</code> package inside of <code class=\"notranslate\">payload.config.ts</code> gave me an error as it used webpack's mock dotenv file). I'm sure there's a multitude of ways, but I wondered if, given you folks wrote the <code class=\"notranslate\">payload build</code> and webpack config stuff, you had a recommendation?</p>\n<p dir=\"auto\">Thanks in advance, could save me more hours of headaches!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/31",
    "id": "31",
    "createdAt": "2021-01-24T18:18:53Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "joshhills",
      "avatar": "https://avatars.githubusercontent.com/u/9080306?u=4fc2780e7ba0b7af376e1adc1c7b65b38cac691e&v=4",
      "url": "https://github.com/joshhills"
    },
    "comments": [
      {
        "author": {
          "name": "joshhills",
          "avatar": "https://avatars.githubusercontent.com/u/9080306?u=4fc2780e7ba0b7af376e1adc1c7b65b38cac691e&v=4",
          "url": "https://github.com/joshhills"
        },
        "body": "<p dir=\"auto\">As I understand, you need to run a <code class=\"notranslate\">build</code> to create the <code class=\"notranslate\">dist</code> folder and then a <code class=\"notranslate\">serve</code> to serve from said folder? But the <code class=\"notranslate\">serve</code> script <em>also</em> uses the Payload config file.</p>",
        "createdAt": "2021-01-24T18:28:33Z",
        "replies": null
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/joshhills/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/joshhills\">@joshhills</a> —</p>\n<p dir=\"auto\">Take a look at this package:</p>\n<p dir=\"auto\"><a href=\"https://github.com/payloadcms/nextjs-custom-server\">https://github.com/payloadcms/nextjs-custom-server</a></p>\n<p dir=\"auto\">It's not quite done yet as of this writing (will be coming out later this week) and it's meant to showcase how Payload can be combined directly with a custom NextJS server which is likely different than your use case, but it shows an example for how you can use an environment variable as your <code class=\"notranslate\">serverURL</code>.</p>\n<p dir=\"auto\"><strong>There are two things to note here:</strong></p>\n<ol dir=\"auto\">\n<li>You <em><strong>can</strong></em> use <code class=\"notranslate\">dotenv</code> in your Payload config! This will make sure that server-side code has access to your environment variables. But, it won't have any effect in the browser as there is no <code class=\"notranslate\">process</code> in the browser. As you mentioned, we mock <code class=\"notranslate\">dotenv</code> for the browser bundle.</li>\n<li>You'll notice how in the example repo, our <code class=\"notranslate\">serverURL</code> environment variable is prefixed with <code class=\"notranslate\">PAYLOAD_PUBLIC_</code>. This tells Payload that its value <em><strong>should</strong></em> be whitetlisted and made available to the Payload browser code. By prefixing <code class=\"notranslate\">PAYLOAD_PUBLIC_</code>, <a href=\"https://payloadcms.com/docs/admin/webpack#admin-environment-vars\" rel=\"nofollow\">your environment variables will be automatically made available</a> to the browser bundled code. You can use this shortcut <em><strong>or</strong></em> you can use Webpack's <code class=\"notranslate\">DefinePlugin</code> to automatically provide your env variables to your bundled admin panel.</li>\n</ol>\n<p dir=\"auto\">Does this give you what you need?</p>",
        "createdAt": "2021-01-24T18:34:09Z",
        "replies": [
          {
            "author": {
              "name": "joshhills",
              "avatar": "https://avatars.githubusercontent.com/u/9080306?u=4fc2780e7ba0b7af376e1adc1c7b65b38cac691e&v=4",
              "url": "https://github.com/joshhills"
            },
            "body": "<p dir=\"auto\">I'll give it a go, cheers!</p>",
            "createdAt": "2021-01-24T18:34:57Z"
          }
        ]
      },
      {
        "author": {
          "name": "joshhills",
          "avatar": "https://avatars.githubusercontent.com/u/9080306?u=4fc2780e7ba0b7af376e1adc1c7b65b38cac691e&v=4",
          "url": "https://github.com/joshhills"
        },
        "body": "<p dir=\"auto\">It worked! Looks like the <code class=\"notranslate\">PAYLOAD_PUBLIC_</code> prefix was the magic I needed, thanks</p>",
        "createdAt": "2021-01-24T19:10:27Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Awesome! Thank you for asking questions here. We hope that over time, Payload's Discussions will become a wealth of knowledge that amasses questions + answers exactly like this.  <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
            "createdAt": "2021-01-24T19:13:36Z"
          },
          {
            "author": {
              "name": "joshhills",
              "avatar": "https://avatars.githubusercontent.com/u/9080306?u=4fc2780e7ba0b7af376e1adc1c7b65b38cac691e&v=4",
              "url": "https://github.com/joshhills"
            },
            "body": "<p dir=\"auto\">Happy to be the ignorant trailblazer in that regard ;-) If you/anyone is interested, I have my <a href=\"https://github.com/joshhills/joshhills-cms\">Payload project</a> and <a href=\"https://github.com/joshhills/joshhills-nginx\">Nginx</a> setup public.</p>\n<p dir=\"auto\">Next on to a standalone React app (I'm opting not to bundle my app with it because I'd like to use the data for multiple different clients)!..</p>",
            "createdAt": "2021-01-24T19:18:35Z"
          },
          {
            "author": {
              "name": "zaunermax",
              "avatar": "https://avatars.githubusercontent.com/u/15246773?u=4000ce93e66bec4c2614c297df7da031db6e42de&v=4",
              "url": "https://github.com/zaunermax"
            },
            "body": "<p dir=\"auto\">note, that this only works, if you access <code class=\"notranslate\">process.env.&lt;YOUR_VAR_NAME&gt;</code> in your payload config file, we had a seperate lib script which would access all env vars and throw an error if the var would not exist - so importing an external script which then accesses <code class=\"notranslate\">process.env</code> did not work for us (payload@0.6.10)</p>",
            "createdAt": "2021-06-22T10:10:43Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/joshhills/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/joshhills\">@joshhills</a> —</p>\n<p dir=\"auto\">Take a look at this package:</p>\n<p dir=\"auto\"><a href=\"https://github.com/payloadcms/nextjs-custom-server\">https://github.com/payloadcms/nextjs-custom-server</a></p>\n<p dir=\"auto\">It's not quite done yet as of this writing (will be coming out later this week) and it's meant to showcase how Payload can be combined directly with a custom NextJS server which is likely different than your use case, but it shows an example for how you can use an environment variable as your <code class=\"notranslate\">serverURL</code>.</p>\n<p dir=\"auto\"><strong>There are two things to note here:</strong></p>\n<ol dir=\"auto\">\n<li>You <em><strong>can</strong></em> use <code class=\"notranslate\">dotenv</code> in your Payload config! This will make sure that server-side code has access to your environment variables. But, it won't have any effect in the browser as there is no <code class=\"notranslate\">process</code> in the browser. As you mentioned, we mock <code class=\"notranslate\">dotenv</code> for the browser bundle.</li>\n<li>You'll notice how in the example repo, our <code class=\"notranslate\">serverURL</code> environment variable is prefixed with <code class=\"notranslate\">PAYLOAD_PUBLIC_</code>. This tells Payload that its value <em><strong>should</strong></em> be whitetlisted and made available to the Payload browser code. By prefixing <code class=\"notranslate\">PAYLOAD_PUBLIC_</code>, <a href=\"https://payloadcms.com/docs/admin/webpack#admin-environment-vars\" rel=\"nofollow\">your environment variables will be automatically made available</a> to the browser bundled code. You can use this shortcut <em><strong>or</strong></em> you can use Webpack's <code class=\"notranslate\">DefinePlugin</code> to automatically provide your env variables to your bundled admin panel.</li>\n</ol>\n<p dir=\"auto\">Does this give you what you need?</p>",
      "createdAt": "2021-01-24T18:34:09Z",
      "chosenAt": "2021-01-24T19:12:33Z",
      "chosenBy": "jmikrut",
      "replies": [
        {
          "author": {
            "name": "joshhills",
            "avatar": "https://avatars.githubusercontent.com/u/9080306?u=4fc2780e7ba0b7af376e1adc1c7b65b38cac691e&v=4",
            "url": "https://github.com/joshhills"
          },
          "body": "<p dir=\"auto\">I'll give it a go, cheers!</p>",
          "createdAt": "2021-01-24T18:34:57Z"
        }
      ]
    }
  },
  {
    "title": "Multiple Payload projects from 1 MongoDB instance",
    "body": "<p dir=\"auto\">First off, thank you so much for releasing Payload to the public. I can see there has been a ton of work and thought that have gone into the project. Keep up the good work! <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">😄</g-emoji> <g-emoji class=\"g-emoji\" alias=\"firecracker\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f9e8.png\">🧨</g-emoji></p>\n<p dir=\"auto\">Having looked at <code class=\"notranslate\">payload.init({...})</code> this looks quite possible to do.<br>\nI've added some examples below supporting</p>\n<p dir=\"auto\">Since each Payload project can point to it's own MongoDB databse, and a MongoDB instance can consist of multiple databases, it seems quite possible to having many Payload projects from 1 MongoDB instance....but is it wise to do so <g-emoji class=\"g-emoji\" alias=\"question\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2753.png\">❓</g-emoji></p>\n<p dir=\"auto\">Here follows some examples configs and <code class=\"notranslate\">.env</code> setups to support this idea</p>\n<h3 dir=\"auto\">Examples</h3>\n<p dir=\"auto\">Project 1 <code class=\"notranslate\">.env</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"MONGO_URL=mongodb://localhost:27017/project1-db\nMONGODB_USER=dbuser1\nMONGODB_PASSWORD=supersecret\"><pre class=\"notranslate\"><code class=\"notranslate\">MONGO_URL=mongodb://localhost:27017/project1-db\nMONGODB_USER=dbuser1\nMONGODB_PASSWORD=supersecret\n</code></pre></div>\n<p dir=\"auto\">Project 2 <code class=\"notranslate\">.env</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"MONGO_URL=mongodb://localhost:27017/project2-db\nMONGODB_USER=dbuser2\nMONGODB_PASSWORD=supersecret\"><pre class=\"notranslate\"><code class=\"notranslate\">MONGO_URL=mongodb://localhost:27017/project2-db\nMONGODB_USER=dbuser2\nMONGODB_PASSWORD=supersecret\n</code></pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">payload.init</code> set in both projects</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"payload.init({\n  license: process.env.PAYLOAD_LICENSE,\n  secret: process.env.PAYLOAD_SECRET_KEY,\n  mongoURL: process.env.MONGO_URL,\n  mongoOptions: {\n    user: process.env.MONGODB_USER,\n    pass: process.env.MONGODB_PASSWORD,\n  },\n  express: server,\n});\"><pre class=\"notranslate\"><code class=\"notranslate\">payload.init({\n  license: process.env.PAYLOAD_LICENSE,\n  secret: process.env.PAYLOAD_SECRET_KEY,\n  mongoURL: process.env.MONGO_URL,\n  mongoOptions: {\n    user: process.env.MONGODB_USER,\n    pass: process.env.MONGODB_PASSWORD,\n  },\n  express: server,\n});\n</code></pre></div>\n<p dir=\"auto\">From what I understand about Payload's pricing each project would have it's own license, right?</p>\n<p dir=\"auto\">What are your thoughts about this, and would you consider a full multitenancy setup for Payload in the future?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/199",
    "id": "199",
    "createdAt": "2021-06-18T09:21:54Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "bjorntheart",
      "avatar": "https://avatars.githubusercontent.com/u/53244?u=688fca2cd4319c5c7c73273f2d5696a48139f682&v=4",
      "url": "https://github.com/bjorntheart"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">Thanks for your appreciation of the project!</p>\n<p dir=\"auto\">As long as you are running each project in a separate node processes then this should work. It is a good idea to keep the databases separate as you showed to keep from having conflicts. Doing it this way, should be fine, MongoDB can run many DBs on one instance and Payload shouldn't have any issue here.</p>\n<blockquote>\n<p dir=\"auto\">From what I understand about Payload's pricing each project would have it's own license, right?</p>\n</blockquote>\n<p dir=\"auto\">Yes, each domain in production needs to have a license.</p>\n<blockquote>\n<p dir=\"auto\">What are your thoughts about this, and would you consider a full multitenancy setup for Payload in the future?</p>\n</blockquote>\n<p dir=\"auto\">What are you looking for specifically for \"multitenancy\"? From a technical standpoint, you're only limited by having to run more node processes to achieve this.</p>\n<p dir=\"auto\">Are there other features you'd like to see to help you along?</p>\n<p dir=\"auto\">I'm happy to help if you run in to anything or have more questions. Let us know how it goes.</p>",
        "createdAt": "2021-06-18T14:08:57Z",
        "replies": [
          {
            "author": {
              "name": "bjorntheart",
              "avatar": "https://avatars.githubusercontent.com/u/53244?u=688fca2cd4319c5c7c73273f2d5696a48139f682&v=4",
              "url": "https://github.com/bjorntheart"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> Thanks for the response.</p>\n<p dir=\"auto\">I haven't thought about running multipe Payload  projects in each own node process <g-emoji class=\"g-emoji\" alias=\"sweat_smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f605.png\">😅</g-emoji> , and I don't exactly know how to do this; how would I go about doing that?</p>",
            "createdAt": "2021-06-18T14:34:10Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">It is probably easiest to run each from its own server, but if you want to run two projects on one host server you'll need to run multiple instances of node and configure the webserver like nginx to route requests to the correct app. The MongoDB instance can either run locally or on a separate host.</p>\n<p dir=\"auto\">Another option would be to use Docker containers and run one app per container or possibly share one container having each app as a different service, though I'm not an expert on docker.</p>",
            "createdAt": "2021-06-18T15:05:52Z"
          },
          {
            "author": {
              "name": "bjorntheart",
              "avatar": "https://avatars.githubusercontent.com/u/53244?u=688fca2cd4319c5c7c73273f2d5696a48139f682&v=4",
              "url": "https://github.com/bjorntheart"
            },
            "body": "<p dir=\"auto\">An yes, that makes sense. Thanks Dan</p>",
            "createdAt": "2021-06-19T04:38:04Z"
          },
          {
            "author": {
              "name": "Ontopic",
              "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
              "url": "https://github.com/Ontopic"
            },
            "body": "<p dir=\"auto\">I use Docker to achieve running multiple Node instances and one MongDB instance, which works like a charm. Without experience with Docker probably not a quick solution though.</p>\n<p dir=\"auto\">If you feel like you just want multiple MongoDB databases from different local test repos I'd like to recommend monogodb-memory-server used by Payload internally as well, see <a href=\"https://github.com/payloadcms/payload/blob/master/src/mongoose/connect.ts\">https://github.com/payloadcms/payload/blob/master/src/mongoose/connect.ts</a>. This is very useful when exploring different approaches to structure your models and want to restart often. I'd recommend this combined with a seed script that fills the temporary MonogDB on boot. Something like below</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  payload.init({\n    secret: payloadSecret,\n    mongoURL: mongodbURI,\n    local: true,\n  })\n\n  const admin = await payload.create({\n    collection: 'admins',\n    data: {\n      email: 'test@test.test',\n      password: 'pass',\n      roles: ['admin'],\n    }\n  })\n  \n  const site = await payload.updateGlobal({\n    slug: 'site',\n    data: {\n      title: 'SiteTitle',\n      domain: 'domain.com',\n      slogan: 'Look at things running',\n    }\n  })\"><pre class=\"notranslate\"><code class=\"notranslate\">  payload.init({\n    secret: payloadSecret,\n    mongoURL: mongodbURI,\n    local: true,\n  })\n\n  const admin = await payload.create({\n    collection: 'admins',\n    data: {\n      email: 'test@test.test',\n      password: 'pass',\n      roles: ['admin'],\n    }\n  })\n  \n  const site = await payload.updateGlobal({\n    slug: 'site',\n    data: {\n      title: 'SiteTitle',\n      domain: 'domain.com',\n      slogan: 'Look at things running',\n    }\n  })\n</code></pre></div>\n<p dir=\"auto\">You'll be restarting a lot, but with a fresh quick start to see the effects of changing things in the Payload structure quickly.</p>",
            "createdAt": "2021-06-20T14:18:29Z"
          }
        ]
      },
      {
        "author": {
          "name": "bjorntheart",
          "avatar": "https://avatars.githubusercontent.com/u/53244?u=688fca2cd4319c5c7c73273f2d5696a48139f682&v=4",
          "url": "https://github.com/bjorntheart"
        },
        "body": "<blockquote>\n<p dir=\"auto\">What are you looking for specifically for \"multitenancy\"? From a technical standpoint, you're only limited by having to run more node processes to achieve this.</p>\n</blockquote>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> to your question: What would be useful is to manage multiple projects from one admin dashboard. Possible one or more admin accounts to rule them all, and then being able to scope users and the roles they have to a project. For example: An editor on 1 project should not necessarily be able to edit content from another project. The one(or, more) admin accounts are typically users who can manage stuff in the dashboard at the 'root' level and assign users, and roles to users, for projects.</p>\n<p dir=\"auto\">I hope that makes sense :-)</p>",
        "createdAt": "2021-06-21T05:58:14Z",
        "replies": [
          {
            "author": {
              "name": "Ontopic",
              "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
              "url": "https://github.com/Ontopic"
            },
            "body": "<p dir=\"auto\">Dan has a nice example about auth, <a href=\"https://github.com/DanRibbens/payload-authentication\">https://github.com/DanRibbens/payload-authentication</a></p>\n<p dir=\"auto\">What you want is for sure possible, but I think you're gonna have to think out the structure for your use-case specifically. A model with a collection for Users with a relation to Projects with a (custom) permission field should be a nice start. Perhaps the upcoming feature in Payload's next release - \"user preference\"  - will be of help as well</p>",
            "createdAt": "2021-06-21T08:40:54Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Oh! I'm surprised to see you link that repo that considering I haven't finished the post I created it for! I am glad you found it useful.</p>\n<p dir=\"auto\">Sounds like <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Ontopic/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Ontopic\">@Ontopic</a> is definitely on the right track. In addition to relating projects to users I would add a role for admins and create an access function so that a user can either be a member of that role or have a relationship to the project. You can see an example of this in the repo as part of the demo. Have a look at the <code class=\"notranslate\">access</code> function and <code class=\"notranslate\">roles</code> field: <a href=\"https://github.com/payloadcms/payload/blob/master/demo/collections/Admin.ts\">https://github.com/payloadcms/payload/blob/master/demo/collections/Admin.ts</a>.</p>\n<p dir=\"auto\">We just released user preferences today <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">😄</g-emoji>. It has some enhancements to the admin experience, though nothing specific to multitenancy.<br>\nOne feature that is coming soon that could be especially helpful here is the ability to save filters on collection lists. You can filter lists by related data now, but you can't save the filter or get back to it with a URL—stay tuned!</p>",
            "createdAt": "2021-06-21T19:04:04Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">Thanks for your appreciation of the project!</p>\n<p dir=\"auto\">As long as you are running each project in a separate node processes then this should work. It is a good idea to keep the databases separate as you showed to keep from having conflicts. Doing it this way, should be fine, MongoDB can run many DBs on one instance and Payload shouldn't have any issue here.</p>\n<blockquote>\n<p dir=\"auto\">From what I understand about Payload's pricing each project would have it's own license, right?</p>\n</blockquote>\n<p dir=\"auto\">Yes, each domain in production needs to have a license.</p>\n<blockquote>\n<p dir=\"auto\">What are your thoughts about this, and would you consider a full multitenancy setup for Payload in the future?</p>\n</blockquote>\n<p dir=\"auto\">What are you looking for specifically for \"multitenancy\"? From a technical standpoint, you're only limited by having to run more node processes to achieve this.</p>\n<p dir=\"auto\">Are there other features you'd like to see to help you along?</p>\n<p dir=\"auto\">I'm happy to help if you run in to anything or have more questions. Let us know how it goes.</p>",
      "createdAt": "2021-06-18T14:08:57Z",
      "chosenAt": "2021-06-19T04:38:09Z",
      "chosenBy": "bjorntheart",
      "replies": [
        {
          "author": {
            "name": "bjorntheart",
            "avatar": "https://avatars.githubusercontent.com/u/53244?u=688fca2cd4319c5c7c73273f2d5696a48139f682&v=4",
            "url": "https://github.com/bjorntheart"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a> Thanks for the response.</p>\n<p dir=\"auto\">I haven't thought about running multipe Payload  projects in each own node process <g-emoji class=\"g-emoji\" alias=\"sweat_smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f605.png\">😅</g-emoji> , and I don't exactly know how to do this; how would I go about doing that?</p>",
          "createdAt": "2021-06-18T14:34:10Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">It is probably easiest to run each from its own server, but if you want to run two projects on one host server you'll need to run multiple instances of node and configure the webserver like nginx to route requests to the correct app. The MongoDB instance can either run locally or on a separate host.</p>\n<p dir=\"auto\">Another option would be to use Docker containers and run one app per container or possibly share one container having each app as a different service, though I'm not an expert on docker.</p>",
          "createdAt": "2021-06-18T15:05:52Z"
        },
        {
          "author": {
            "name": "bjorntheart",
            "avatar": "https://avatars.githubusercontent.com/u/53244?u=688fca2cd4319c5c7c73273f2d5696a48139f682&v=4",
            "url": "https://github.com/bjorntheart"
          },
          "body": "<p dir=\"auto\">An yes, that makes sense. Thanks Dan</p>",
          "createdAt": "2021-06-19T04:38:04Z"
        },
        {
          "author": {
            "name": "Ontopic",
            "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
            "url": "https://github.com/Ontopic"
          },
          "body": "<p dir=\"auto\">I use Docker to achieve running multiple Node instances and one MongDB instance, which works like a charm. Without experience with Docker probably not a quick solution though.</p>\n<p dir=\"auto\">If you feel like you just want multiple MongoDB databases from different local test repos I'd like to recommend monogodb-memory-server used by Payload internally as well, see <a href=\"https://github.com/payloadcms/payload/blob/master/src/mongoose/connect.ts\">https://github.com/payloadcms/payload/blob/master/src/mongoose/connect.ts</a>. This is very useful when exploring different approaches to structure your models and want to restart often. I'd recommend this combined with a seed script that fills the temporary MonogDB on boot. Something like below</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  payload.init({\n    secret: payloadSecret,\n    mongoURL: mongodbURI,\n    local: true,\n  })\n\n  const admin = await payload.create({\n    collection: 'admins',\n    data: {\n      email: 'test@test.test',\n      password: 'pass',\n      roles: ['admin'],\n    }\n  })\n  \n  const site = await payload.updateGlobal({\n    slug: 'site',\n    data: {\n      title: 'SiteTitle',\n      domain: 'domain.com',\n      slogan: 'Look at things running',\n    }\n  })\"><pre class=\"notranslate\"><code class=\"notranslate\">  payload.init({\n    secret: payloadSecret,\n    mongoURL: mongodbURI,\n    local: true,\n  })\n\n  const admin = await payload.create({\n    collection: 'admins',\n    data: {\n      email: 'test@test.test',\n      password: 'pass',\n      roles: ['admin'],\n    }\n  })\n  \n  const site = await payload.updateGlobal({\n    slug: 'site',\n    data: {\n      title: 'SiteTitle',\n      domain: 'domain.com',\n      slogan: 'Look at things running',\n    }\n  })\n</code></pre></div>\n<p dir=\"auto\">You'll be restarting a lot, but with a fresh quick start to see the effects of changing things in the Payload structure quickly.</p>",
          "createdAt": "2021-06-20T14:18:29Z"
        }
      ]
    }
  },
  {
    "title": "How to use hooks to upload file to an ftp server",
    "body": "<p dir=\"auto\">I want to send the uploaded files to an ftp server (using basic-ftp) and receive them from there also. The process has been already mentioned in the doc here:  <a href=\"https://payloadcms.com/docs/production/deployment#file-storage\" rel=\"nofollow\">https://payloadcms.com/docs/production/deployment#file-storage</a> But I am a bit confused about how I can use hooks there?<br>\nFor example here is a collection with upload I put a hook a beforeChange here but it seems like not triggering the hook when hook at time of uploading file:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { CollectionConfig } from 'payload/types';\nconst Media: CollectionConfig = {\n    slug: 'media',\n    access: {\n        read: () =&gt; true,\n    },\n    hooks: {\n        beforeChange: [\n            (operation) =&gt; {\n                if (operation.req.headers.hook === 'beforeChange') {\n                    operation.data.description += '-beforeChangeSuffix';\n                    // Todo: send to ftp\n                }\n                return operation.data;\n            },\n        ],\n    },\n    upload: {\n        staticURL: '/media',\n        staticDir: 'media',\n        imageSizes: [\n            {\n                name: 'thumbnail',\n                width: 400,\n                height: 300,\n                crop: 'centre',\n            },\n            {\n                name: 'card',\n                width: 768,\n                height: 1024,\n                crop: 'centre',\n            },\n        ],\n        adminThumbnail: 'thumbnail'\n    },\n    fields: [],\n};\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">CollectionConfig</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'payload/types'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Media</span>: <span class=\"pl-v\">CollectionConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">slug</span>: <span class=\"pl-s\">'media'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">access</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">read</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">hooks</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span>\n            <span class=\"pl-kos\">(</span><span class=\"pl-s1\">operation</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">operation</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">headers</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">hook</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'beforeChange'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n                    <span class=\"pl-s1\">operation</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">description</span> <span class=\"pl-c1\">+=</span> <span class=\"pl-s\">'-beforeChangeSuffix'</span><span class=\"pl-kos\">;</span>\n                    <span class=\"pl-c\">// Todo: send to ftp</span>\n                <span class=\"pl-kos\">}</span>\n                <span class=\"pl-k\">return</span> <span class=\"pl-s1\">operation</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">data</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">upload</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">staticURL</span>: <span class=\"pl-s\">'/media'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">staticDir</span>: <span class=\"pl-s\">'media'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">imageSizes</span>: <span class=\"pl-kos\">[</span>\n            <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'thumbnail'</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">width</span>: <span class=\"pl-c1\">400</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">height</span>: <span class=\"pl-c1\">300</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">crop</span>: <span class=\"pl-s\">'centre'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'card'</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">width</span>: <span class=\"pl-c1\">768</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">height</span>: <span class=\"pl-c1\">1024</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">crop</span>: <span class=\"pl-s\">'centre'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">adminThumbnail</span>: <span class=\"pl-s\">'thumbnail'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">fields</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/189",
    "id": "189",
    "createdAt": "2021-06-01T14:27:48Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "aljubaer",
      "avatar": "https://avatars.githubusercontent.com/u/34982629?u=7186a324cd0f1a6ee53beef634ef7805f1e9903b&v=4",
      "url": "https://github.com/aljubaer"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/aljubaer/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aljubaer\">@aljubaer</a> —</p>\n<p dir=\"auto\">You're almost there! You have a bug in your hook, though.</p>\n<p dir=\"auto\">Your <code class=\"notranslate\">if</code> statement that is checking if the <code class=\"notranslate\">operation.req.headers.hook</code> is equal to <code class=\"notranslate\">beforeChange</code> is incorrect and unnecessary. Because you are adding a function to the <code class=\"notranslate\">beforeChange</code> hooks array itself, you <em><strong>know</strong></em> that the code will only be running in a <code class=\"notranslate\">beforeChange</code> context.</p>\n<p dir=\"auto\">So basically, right now, code within your <code class=\"notranslate\">if</code> will never fire. Just remove it!</p>\n<p dir=\"auto\"><strong>Pro tip:</strong></p>\n<p dir=\"auto\">You might want to do different actions based on if your <code class=\"notranslate\">beforeChange</code> hook is either running in response to a <code class=\"notranslate\">create</code> or an <code class=\"notranslate\">update</code> operation. You can gain access to which operation is active by destructuring <code class=\"notranslate\">operation</code> out of the hook arguments, like so:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  beforeChange: [\n    ({\n      data, // incoming data to update or create with\n      req, // full express request\n      operation, // name of the operation ie. 'create', 'update'\n      originalDoc, // original document\n    }) =&gt; {\n      console.log(operation) // will be either 'update' or 'create'\n      return data;\n    } \n  ]\n}\"><pre class=\"notranslate\"><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      data<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// incoming data to update or create with</span>\n      req<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// full express request</span>\n      operation<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// name of the operation ie. 'create', 'update'</span>\n      originalDoc<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// original document</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">operation</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// will be either 'update' or 'create'</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span> \n  <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">For example, a <code class=\"notranslate\">create</code> operation will <em>always</em> have a file that needs to be uploaded to FTP. But, <code class=\"notranslate\">update</code> might only need to upload a file if the file is being replaced. So you could extend your hook to do different things based on the operation, and based on if there is a new file present or not.</p>\n<p dir=\"auto\">Take a look at the Hooks documentation for more!</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/hooks/collections#beforechange\" rel=\"nofollow\">https://payloadcms.com/docs/hooks/collections#beforechange</a></p>\n<p dir=\"auto\">Does this answer your question?</p>",
        "createdAt": "2021-06-01T14:36:05Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/aljubaer/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aljubaer\">@aljubaer</a> —</p>\n<p dir=\"auto\">You're almost there! You have a bug in your hook, though.</p>\n<p dir=\"auto\">Your <code class=\"notranslate\">if</code> statement that is checking if the <code class=\"notranslate\">operation.req.headers.hook</code> is equal to <code class=\"notranslate\">beforeChange</code> is incorrect and unnecessary. Because you are adding a function to the <code class=\"notranslate\">beforeChange</code> hooks array itself, you <em><strong>know</strong></em> that the code will only be running in a <code class=\"notranslate\">beforeChange</code> context.</p>\n<p dir=\"auto\">So basically, right now, code within your <code class=\"notranslate\">if</code> will never fire. Just remove it!</p>\n<p dir=\"auto\"><strong>Pro tip:</strong></p>\n<p dir=\"auto\">You might want to do different actions based on if your <code class=\"notranslate\">beforeChange</code> hook is either running in response to a <code class=\"notranslate\">create</code> or an <code class=\"notranslate\">update</code> operation. You can gain access to which operation is active by destructuring <code class=\"notranslate\">operation</code> out of the hook arguments, like so:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  beforeChange: [\n    ({\n      data, // incoming data to update or create with\n      req, // full express request\n      operation, // name of the operation ie. 'create', 'update'\n      originalDoc, // original document\n    }) =&gt; {\n      console.log(operation) // will be either 'update' or 'create'\n      return data;\n    } \n  ]\n}\"><pre class=\"notranslate\"><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">beforeChange</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n      data<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// incoming data to update or create with</span>\n      req<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// full express request</span>\n      operation<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// name of the operation ie. 'create', 'update'</span>\n      originalDoc<span class=\"pl-kos\">,</span> <span class=\"pl-c\">// original document</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">operation</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// will be either 'update' or 'create'</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span> \n  <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">For example, a <code class=\"notranslate\">create</code> operation will <em>always</em> have a file that needs to be uploaded to FTP. But, <code class=\"notranslate\">update</code> might only need to upload a file if the file is being replaced. So you could extend your hook to do different things based on the operation, and based on if there is a new file present or not.</p>\n<p dir=\"auto\">Take a look at the Hooks documentation for more!</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/hooks/collections#beforechange\" rel=\"nofollow\">https://payloadcms.com/docs/hooks/collections#beforechange</a></p>\n<p dir=\"auto\">Does this answer your question?</p>",
      "createdAt": "2021-06-01T14:36:05Z",
      "chosenAt": "2021-06-02T06:47:26Z",
      "chosenBy": "aljubaer",
      "replies": null
    }
  },
  {
    "title": "How to Query relationship field",
    "body": "<p dir=\"auto\">Hello, I have a <code class=\"notranslate\">customer</code> collection with <code class=\"notranslate\">auth: true</code> and a <code class=\"notranslate\">bills</code> collection</p>\n<p dir=\"auto\">When a customer is authenticated, I wanted to be able to query only its own <code class=\"notranslate\">bills</code>. I am however confused - getting empty bills from the api using api key.</p>\n<p dir=\"auto\">I already have entries of bills assigned to specific customer but still empty response.</p>\n<p dir=\"auto\"><code class=\"notranslate\">bills</code> collection fields simplified</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n\taccess: {\n\t\tread: ({req: {user}}) =&gt; {\n            if (user) {\n                return {\n                    customer_id: { \n                        equals: user.id,\n                    },\n                };\n            }\n\n            return false;\n        },\n\t},\n\tfields: [\n           {\n              label: 'Customer',\n              name: 'customer_id',\n              type: 'relationship',\n              relationTo: ['customers'],\n              required: true,\n              index: true,\n            },\n\t],\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n\taccess: {\n\t\tread: ({req: {user}}) =&gt; {\n            if (user) {\n                return {\n                    customer_id: { \n                        equals: user.id,\n                    },\n                };\n            }\n\n            return false;\n        },\n\t},\n\tfields: [\n           {\n              label: 'Customer',\n              name: 'customer_id',\n              type: 'relationship',\n              relationTo: ['customers'],\n              required: true,\n              index: true,\n            },\n\t],\n}\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/187",
    "id": "187",
    "createdAt": "2021-05-23T14:03:31Z",
    "upvotes": 1,
    "commentTotal": 3,
    "author": {
      "name": "jbalatero",
      "avatar": "https://avatars.githubusercontent.com/u/3615746?u=0944ccb5ff7e79b9ebb4536da236715844b47bdc&v=4",
      "url": "https://github.com/jbalatero"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey @eudora-fabia — you're close to being there!</p>\n<p dir=\"auto\">So, your <code class=\"notranslate\">customer_id</code> field is actually set up with an <em>array</em> of relations:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\tfields: [\n           {\n              label: 'Customer',\n              name: 'customer_id',\n              type: 'relationship',\n              relationTo: ['customers'], // set up for MANY relations\n              required: true,\n              index: true,\n            },\n\t],\"><pre class=\"notranslate\">\t<span class=\"pl-s1\">fields</span>: <span class=\"pl-kos\">[</span>\n           <span class=\"pl-kos\">{</span>\n              <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Customer'</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'customer_id'</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'customers'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// set up for MANY relations</span>\n              <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">index</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">Setting your <code class=\"notranslate\">relationTo</code> as an array, as you've done, will create the following field data structure in your database:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"customer_id: {\n  relationTo: 'customers',\n  value: '609490aa305c5c6a913d30bc',\n},\"><pre class=\"notranslate\"><span class=\"pl-s1\">customer_id</span>: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'customers'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">value</span>: <span class=\"pl-s\">'609490aa305c5c6a913d30bc'</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">When you have multiple <code class=\"notranslate\">relationTo</code>s, we also need to store the collection slug that contains the related document to the database. So that means, in your case, to query for all bills that are owned by a specific customer, you'd need to use <code class=\"notranslate\">customer_id.value</code>. Like this, in the REST API:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"?where[customer_id.value][equals]=609490aa305c5c6a913d30bc // notice the `.value`\"><pre class=\"notranslate\"><code class=\"notranslate\">?where[customer_id.value][equals]=609490aa305c5c6a913d30bc // notice the `.value`\n</code></pre></div>\n<p dir=\"auto\">Now, in contrast, I suspect that your <code class=\"notranslate\">customer_id</code> field really only needs one <code class=\"notranslate\">relationTo</code>. If your field was set up to take only ONE <code class=\"notranslate\">relationTo</code>, like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\tfields: [\n           {\n              label: 'Customer',\n              name: 'customer_id',\n              type: 'relationship',\n              relationTo: 'customers', // set up for ONE relation\n              required: true,\n              index: true,\n            },\n\t],\"><pre class=\"notranslate\">\t<span class=\"pl-s1\">fields</span>: <span class=\"pl-kos\">[</span>\n           <span class=\"pl-kos\">{</span>\n              <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Customer'</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'customer_id'</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'customers'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// set up for ONE relation</span>\n              <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">index</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">The data would be saved in a simpler format in the database, because we know that the related collection is <em><strong>always</strong></em> <code class=\"notranslate\">customers</code>:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"customer_id: '609490aa305c5c6a913d30bc',\"><pre class=\"notranslate\"><span class=\"pl-s1\">customer_id</span>: <span class=\"pl-s\">'609490aa305c5c6a913d30bc'</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">So, to query on this data, you'd do:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"?where[customer_id][equals]=609490aa305c5c6a913d30bc\"><pre class=\"notranslate\"><code class=\"notranslate\">?where[customer_id][equals]=609490aa305c5c6a913d30bc\n</code></pre></div>\n<p dir=\"auto\">Does this answer your question?</p>",
        "createdAt": "2021-05-23T15:29:16Z",
        "replies": [
          {
            "author": {
              "name": "jbalatero",
              "avatar": "https://avatars.githubusercontent.com/u/3615746?u=0944ccb5ff7e79b9ebb4536da236715844b47bdc&v=4",
              "url": "https://github.com/jbalatero"
            },
            "body": "<p dir=\"auto\">Wow it worked now! thank you very much.</p>",
            "createdAt": "2021-05-23T15:43:15Z"
          }
        ]
      },
      {
        "author": {
          "name": "richardvanbergen",
          "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
          "url": "https://github.com/richardvanbergen"
        },
        "body": "<blockquote>\n<p dir=\"auto\">Now, in contrast, I suspect that your customer_id field really only needs one relationTo. If your field was set up to take only ONE relationTo, like this:</p>\n</blockquote>\n<p dir=\"auto\">This is something I came upon the other day. Would be nice to make it clearer that there is a significant difference between <code class=\"notranslate\">['relation']</code> and <code class=\"notranslate\">'relation'</code>.</p>",
        "createdAt": "2021-05-24T01:11:16Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Good call. We'll beef up the docs regarding this as I agree it's important and can be missed easily.</p>",
            "createdAt": "2021-05-24T13:01:12Z"
          },
          {
            "author": {
              "name": "Ontopic",
              "avatar": "https://avatars.githubusercontent.com/u/1599991?v=4",
              "url": "https://github.com/Ontopic"
            },
            "body": "<p dir=\"auto\">Same <g-emoji class=\"g-emoji\" alias=\"sweat_smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f605.png\">😅</g-emoji><br>\nI went crawling through my codebase after reading this to see where I used <code class=\"notranslate\">[]</code> in anticipation of maybe adding relationships later, not realising it had an impact</p>",
            "createdAt": "2021-05-25T11:42:22Z"
          }
        ]
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<blockquote>\n<p dir=\"auto\">where I used [] in anticipation of maybe adding relationships later</p>\n</blockquote>\n<p dir=\"auto\">This is actually a great call. If you are ever planning to add more relationships, or even a remote possibility exists that you might, it'll be easier over the longer term to just start out with <code class=\"notranslate\">[ 'collection-name' ]</code> instead. That way you wouldn't need to migrate your data when / if you needed to support more collection relationships.</p>\n<p dir=\"auto\">This is about to go in the docs for sure!</p>",
        "createdAt": "2021-05-25T12:55:37Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey @eudora-fabia — you're close to being there!</p>\n<p dir=\"auto\">So, your <code class=\"notranslate\">customer_id</code> field is actually set up with an <em>array</em> of relations:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\tfields: [\n           {\n              label: 'Customer',\n              name: 'customer_id',\n              type: 'relationship',\n              relationTo: ['customers'], // set up for MANY relations\n              required: true,\n              index: true,\n            },\n\t],\"><pre class=\"notranslate\">\t<span class=\"pl-s1\">fields</span>: <span class=\"pl-kos\">[</span>\n           <span class=\"pl-kos\">{</span>\n              <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Customer'</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'customer_id'</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'customers'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// set up for MANY relations</span>\n              <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">index</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">Setting your <code class=\"notranslate\">relationTo</code> as an array, as you've done, will create the following field data structure in your database:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"customer_id: {\n  relationTo: 'customers',\n  value: '609490aa305c5c6a913d30bc',\n},\"><pre class=\"notranslate\"><span class=\"pl-s1\">customer_id</span>: <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'customers'</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">value</span>: <span class=\"pl-s\">'609490aa305c5c6a913d30bc'</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">When you have multiple <code class=\"notranslate\">relationTo</code>s, we also need to store the collection slug that contains the related document to the database. So that means, in your case, to query for all bills that are owned by a specific customer, you'd need to use <code class=\"notranslate\">customer_id.value</code>. Like this, in the REST API:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"?where[customer_id.value][equals]=609490aa305c5c6a913d30bc // notice the `.value`\"><pre class=\"notranslate\"><code class=\"notranslate\">?where[customer_id.value][equals]=609490aa305c5c6a913d30bc // notice the `.value`\n</code></pre></div>\n<p dir=\"auto\">Now, in contrast, I suspect that your <code class=\"notranslate\">customer_id</code> field really only needs one <code class=\"notranslate\">relationTo</code>. If your field was set up to take only ONE <code class=\"notranslate\">relationTo</code>, like this:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\tfields: [\n           {\n              label: 'Customer',\n              name: 'customer_id',\n              type: 'relationship',\n              relationTo: 'customers', // set up for ONE relation\n              required: true,\n              index: true,\n            },\n\t],\"><pre class=\"notranslate\">\t<span class=\"pl-s1\">fields</span>: <span class=\"pl-kos\">[</span>\n           <span class=\"pl-kos\">{</span>\n              <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Customer'</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'customer_id'</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">relationTo</span>: <span class=\"pl-s\">'customers'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// set up for ONE relation</span>\n              <span class=\"pl-c1\">required</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">index</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n\t<span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">The data would be saved in a simpler format in the database, because we know that the related collection is <em><strong>always</strong></em> <code class=\"notranslate\">customers</code>:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"customer_id: '609490aa305c5c6a913d30bc',\"><pre class=\"notranslate\"><span class=\"pl-s1\">customer_id</span>: <span class=\"pl-s\">'609490aa305c5c6a913d30bc'</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">So, to query on this data, you'd do:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"?where[customer_id][equals]=609490aa305c5c6a913d30bc\"><pre class=\"notranslate\"><code class=\"notranslate\">?where[customer_id][equals]=609490aa305c5c6a913d30bc\n</code></pre></div>\n<p dir=\"auto\">Does this answer your question?</p>",
      "createdAt": "2021-05-23T15:29:16Z",
      "chosenAt": "2021-05-23T15:43:34Z",
      "chosenBy": "jbalatero",
      "replies": [
        {
          "author": {
            "name": "jbalatero",
            "avatar": "https://avatars.githubusercontent.com/u/3615746?u=0944ccb5ff7e79b9ebb4536da236715844b47bdc&v=4",
            "url": "https://github.com/jbalatero"
          },
          "body": "<p dir=\"auto\">Wow it worked now! thank you very much.</p>",
          "createdAt": "2021-05-23T15:43:15Z"
        }
      ]
    }
  },
  {
    "title": "Access Control for a collection when authenticated against specific collection only",
    "body": "<p dir=\"auto\">My apologies about this question, as it may be something that's clearly answered in the docs.</p>\n<p dir=\"auto\">I have two user collections: <code class=\"notranslate\">admins</code> and <code class=\"notranslate\">users</code>, Both of the user collections have lists of users with the intent of different responsibilities. <code class=\"notranslate\">admins</code> should be able to edit everything through the admin panel whereas <code class=\"notranslate\">users</code> will basically have a profile they can edit, and that's it.</p>\n<p dir=\"auto\">I'd like to make it so admins could see the list of all other admins, where standard users shouldn't have this functionality. I see in the docs for <a href=\"https://payloadcms.com/docs/access-control/overview\" rel=\"nofollow\">Access Control</a> it says:</p>\n<blockquote>\n<p dir=\"auto\">Declaring who should have access to what documents is no more complex than writing a simple JavaScript function that either returns a boolean or <strong>a query constraint</strong> to restrict which documents users can interact with.</p>\n</blockquote>\n<p dir=\"auto\">Based on this, I think a query constraint is what I need, however, I get a little lost regarding how to specify a query that says \"show me this collection ONLY if I'm in an admin list.\" As it stands today, I can see the admins collection whether I'm logged in as a standard user or an admin, instead of admin only.</p>\n<p dir=\"auto\">One other thing I tried is to perform a payload.query inside the access control function, but that seemed to cause errors due to the async / promises. Any thoughts on how to achieve this would be greatly appreciated!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/185",
    "id": "185",
    "createdAt": "2021-05-19T19:49:07Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "ryanlanciaux",
      "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
      "url": "https://github.com/ryanlanciaux"
    },
    "comments": [
      {
        "author": {
          "name": "denolfe",
          "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
          "url": "https://github.com/denolfe"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ryanlanciaux/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ryanlanciaux\">@ryanlanciaux</a>, thanks for the question. You were definitely on the right track. We could probably explain this more and add examples of this in the documentation. Here is an example of doing what you describe:</p>\n<p dir=\"auto\">You can see from the code that if the user is in the <code class=\"notranslate\">admins</code> collection it will return <code class=\"notranslate\">true</code>, indicating access to all. However, if the user is in the <code class=\"notranslate\">users</code> collection, a query constraint is returned that will return only documents with that user's <code class=\"notranslate\">id</code>.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const userAccess = ({ req: { user } }) =&gt; {\n  if (user) {\n    if (user.collection === 'admins') {\n      return true;\n    }\n\n    if (user.collection === 'users') {\n      return {\n        id: {\n          equals: user.id,\n        },\n      };\n    }\n  }\n\n  return false;\n};\n\nexport { userAccess };\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">userAccess</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">req</span>: <span class=\"pl-kos\">{</span> user <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">collection</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'admins'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">collection</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'users'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">id</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">equals</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">userAccess</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">If you put that code in a separate file, then import it - you'd use it in your collection like this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"access: {\n    admin: () =&gt; true, // Allow access to admin panel\n    read: userAccess,\n    update: userAccess,\n  },\"><pre class=\"notranslate\"><span class=\"pl-s1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">admin</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// Allow access to admin panel</span>\n    <span class=\"pl-c1\">read</span>: <span class=\"pl-s1\">userAccess</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">update</span>: <span class=\"pl-s1\">userAccess</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">You may also consider having a similar function for <code class=\"notranslate\">create</code> and <code class=\"notranslate\">delete</code> as well.</p>\n<p dir=\"auto\">Hopefully, this helps. Let me know if there are any issues running that code <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
        "createdAt": "2021-05-19T20:33:41Z",
        "replies": [
          {
            "author": {
              "name": "ryanlanciaux",
              "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
              "url": "https://github.com/ryanlanciaux"
            },
            "body": "<p dir=\"auto\">Thanks a ton! This works perfectly for me.</p>",
            "createdAt": "2021-05-20T10:47:09Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "denolfe",
        "avatar": "https://avatars.githubusercontent.com/u/65888?v=4",
        "url": "https://github.com/denolfe"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ryanlanciaux/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ryanlanciaux\">@ryanlanciaux</a>, thanks for the question. You were definitely on the right track. We could probably explain this more and add examples of this in the documentation. Here is an example of doing what you describe:</p>\n<p dir=\"auto\">You can see from the code that if the user is in the <code class=\"notranslate\">admins</code> collection it will return <code class=\"notranslate\">true</code>, indicating access to all. However, if the user is in the <code class=\"notranslate\">users</code> collection, a query constraint is returned that will return only documents with that user's <code class=\"notranslate\">id</code>.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const userAccess = ({ req: { user } }) =&gt; {\n  if (user) {\n    if (user.collection === 'admins') {\n      return true;\n    }\n\n    if (user.collection === 'users') {\n      return {\n        id: {\n          equals: user.id,\n        },\n      };\n    }\n  }\n\n  return false;\n};\n\nexport { userAccess };\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">userAccess</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">req</span>: <span class=\"pl-kos\">{</span> user <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">collection</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'admins'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">collection</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'users'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">id</span>: <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">equals</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">userAccess</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">If you put that code in a separate file, then import it - you'd use it in your collection like this:</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"access: {\n    admin: () =&gt; true, // Allow access to admin panel\n    read: userAccess,\n    update: userAccess,\n  },\"><pre class=\"notranslate\"><span class=\"pl-s1\">access</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">admin</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// Allow access to admin panel</span>\n    <span class=\"pl-c1\">read</span>: <span class=\"pl-s1\">userAccess</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">update</span>: <span class=\"pl-s1\">userAccess</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">You may also consider having a similar function for <code class=\"notranslate\">create</code> and <code class=\"notranslate\">delete</code> as well.</p>\n<p dir=\"auto\">Hopefully, this helps. Let me know if there are any issues running that code <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
      "createdAt": "2021-05-19T20:33:41Z",
      "chosenAt": "2021-05-20T10:46:26Z",
      "chosenBy": "ryanlanciaux",
      "replies": [
        {
          "author": {
            "name": "ryanlanciaux",
            "avatar": "https://avatars.githubusercontent.com/u/85041?u=53886389aa85e7ef996e414831d6a652083ab346&v=4",
            "url": "https://github.com/ryanlanciaux"
          },
          "body": "<p dir=\"auto\">Thanks a ton! This works perfectly for me.</p>",
          "createdAt": "2021-05-20T10:47:09Z"
        }
      ]
    }
  },
  {
    "title": "Is there a way to get the current locale for the page you're editing in preview?",
    "body": "<p dir=\"auto\">Hey guys, pretty simple question I need to know which locale the user is currently editing when creating the preview button. Just wondering if there's an officially supported way of doing this?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/173",
    "id": "173",
    "createdAt": "2021-05-10T08:18:03Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "richardvanbergen",
      "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
      "url": "https://github.com/richardvanbergen"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> — we can pass in the <code class=\"notranslate\">locale</code> to that function for sure. Give us a bit today and we'll deploy a new version with locale added to the <code class=\"notranslate\">generatePreviewURL</code> function.</p>\n<p dir=\"auto\">Good call!</p>",
        "createdAt": "2021-05-10T12:43:30Z",
        "replies": [
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Wonderful that would certainly be a lot less hacky than the way I'm doing it now <g-emoji class=\"g-emoji\" alias=\"laughing\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f606.png\">😆</g-emoji></p>",
            "createdAt": "2021-05-10T13:15:28Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> — we can pass in the <code class=\"notranslate\">locale</code> to that function for sure. Give us a bit today and we'll deploy a new version with locale added to the <code class=\"notranslate\">generatePreviewURL</code> function.</p>\n<p dir=\"auto\">Good call!</p>",
      "createdAt": "2021-05-10T12:43:30Z",
      "chosenAt": "2021-05-10T13:14:56Z",
      "chosenBy": "richardvanbergen",
      "replies": [
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<p dir=\"auto\">Wonderful that would certainly be a lot less hacky than the way I'm doing it now <g-emoji class=\"g-emoji\" alias=\"laughing\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f606.png\">😆</g-emoji></p>",
          "createdAt": "2021-05-10T13:15:28Z"
        }
      ]
    }
  },
  {
    "title": "Webhooks in config?",
    "body": "<p dir=\"auto\">So hi again. I need to use webhooks to re-deploy my repo on vercel and fetch the latest data. I tried to use the afterChange hook in the payload.config file, but unfortunately it did not work.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[22:09:40] INFO (payload): Starting Payload...\n[22:09:42] ERROR (payload): There were 1 errors validating your Payload config\n[22:09:42] ERROR (payload): 1: &quot;hooks.afterChange&quot; is not allowed\n[nodemon] app crashed - waiting for file changes before starting...\"><pre class=\"notranslate\"><code class=\"notranslate\">[22:09:40] INFO (payload): Starting Payload...\n[22:09:42] ERROR (payload): There were 1 errors validating your Payload config\n[22:09:42] ERROR (payload): 1: \"hooks.afterChange\" is not allowed\n[nodemon] app crashed - waiting for file changes before starting...\n</code></pre></div>\n<p dir=\"auto\">The documentation is a bit fuzzy on that one, What can I use? My code looks like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"payload.config.js\n-------------------\n\n...\nconst afterChange = async ({ operation }) =&gt; {\n  console.log(operation);\n};\n...\n\n...\n  hooks: {\n    afterChange: [afterChange]\n  },\n...\"><pre class=\"notranslate\"><code class=\"notranslate\">payload.config.js\n-------------------\n\n...\nconst afterChange = async ({ operation }) =&gt; {\n  console.log(operation);\n};\n...\n\n...\n  hooks: {\n    afterChange: [afterChange]\n  },\n...\n</code></pre></div>\n<p dir=\"auto\">Any ideas or recomendations on how to do that?<br>\nI do think it makes the most sense to have a global hook or something to detect changes.</p>\n<p dir=\"auto\">Have a nice weekend!<br>\nCheers</p>",
    "url": "https://github.com/payloadcms/payload/discussions/172",
    "id": "172",
    "createdAt": "2021-05-07T22:11:23Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "SuddenDev",
      "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
      "url": "https://github.com/SuddenDev"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">That hook is specific to fields, collections, and globals. My suspicion is that you might be applying it to the top level config. Try it on a collection basis?</p>",
        "createdAt": "2021-05-07T22:34:07Z",
        "replies": [
          {
            "author": {
              "name": "SuddenDev",
              "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
              "url": "https://github.com/SuddenDev"
            },
            "body": "<p dir=\"auto\">Oh I see. I just thought instead of adding the same function to all my collections / globals I could just add it once to the global config. What hooks are actually available in the config then? The docs are a bit too vague on that imo.</p>",
            "createdAt": "2021-05-09T09:28:12Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Totally see what you're saying. That <em><strong>could</strong></em> be possible as a future enhancement. Top-level config hooks are not documented right now because there is only 1 at the moment (<code class=\"notranslate\">afterError</code>) which needs a bit more testing before we put it in the docs.</p>\n<p dir=\"auto\">In cases like yours, we suggest writing your hook in a separate file which can then be imported / used in all relevant collections. In our projects, this is typically preferable because you might not <em><strong>need</strong></em> that hook to be run on <em>all</em> collections. For example, if you had a <code class=\"notranslate\">Users</code> or <code class=\"notranslate\">Orders</code> collection which do not need to trigger a frontend rebuild.</p>\n<p dir=\"auto\">If you still would prefer a Payload-wide <code class=\"notranslate\">afterChange</code> hook I am sure we could figure out how to implement it though!</p>",
            "createdAt": "2021-05-09T16:15:59Z"
          },
          {
            "author": {
              "name": "SuddenDev",
              "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
              "url": "https://github.com/SuddenDev"
            },
            "body": "<p dir=\"auto\">Thanks for your quick answers! Most CMS' that I know use like a global setting for hooks, but I do absolutly see your point with your <code class=\"notranslate\">User</code> / <code class=\"notranslate\">Orders</code> collections example.<br>\nFor now I'll just continue with your suggestion, since I just need to do that for a couple of files.</p>\n<p dir=\"auto\">I do think it would be good to improve the docs about the hooks still experimental (or a future feature idea) in the main config.payload.js. Right now it reads like you can just use whatever the other types (collections, globals, fields) accept.<br>\nThanks!</p>",
            "createdAt": "2021-05-09T22:24:17Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Totally. We'll shore up those docs ASAP and we'll likely just go ahead and add some documentation around that one Payload-wide hook we <em>do</em> have now as well.</p>\n<p dir=\"auto\">Thanks for pointing that out!</p>",
            "createdAt": "2021-05-10T01:50:27Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">That hook is specific to fields, collections, and globals. My suspicion is that you might be applying it to the top level config. Try it on a collection basis?</p>",
      "createdAt": "2021-05-07T22:34:07Z",
      "chosenAt": "2021-05-09T22:24:46Z",
      "chosenBy": "SuddenDev",
      "replies": [
        {
          "author": {
            "name": "SuddenDev",
            "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
            "url": "https://github.com/SuddenDev"
          },
          "body": "<p dir=\"auto\">Oh I see. I just thought instead of adding the same function to all my collections / globals I could just add it once to the global config. What hooks are actually available in the config then? The docs are a bit too vague on that imo.</p>",
          "createdAt": "2021-05-09T09:28:12Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Totally see what you're saying. That <em><strong>could</strong></em> be possible as a future enhancement. Top-level config hooks are not documented right now because there is only 1 at the moment (<code class=\"notranslate\">afterError</code>) which needs a bit more testing before we put it in the docs.</p>\n<p dir=\"auto\">In cases like yours, we suggest writing your hook in a separate file which can then be imported / used in all relevant collections. In our projects, this is typically preferable because you might not <em><strong>need</strong></em> that hook to be run on <em>all</em> collections. For example, if you had a <code class=\"notranslate\">Users</code> or <code class=\"notranslate\">Orders</code> collection which do not need to trigger a frontend rebuild.</p>\n<p dir=\"auto\">If you still would prefer a Payload-wide <code class=\"notranslate\">afterChange</code> hook I am sure we could figure out how to implement it though!</p>",
          "createdAt": "2021-05-09T16:15:59Z"
        },
        {
          "author": {
            "name": "SuddenDev",
            "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
            "url": "https://github.com/SuddenDev"
          },
          "body": "<p dir=\"auto\">Thanks for your quick answers! Most CMS' that I know use like a global setting for hooks, but I do absolutly see your point with your <code class=\"notranslate\">User</code> / <code class=\"notranslate\">Orders</code> collections example.<br>\nFor now I'll just continue with your suggestion, since I just need to do that for a couple of files.</p>\n<p dir=\"auto\">I do think it would be good to improve the docs about the hooks still experimental (or a future feature idea) in the main config.payload.js. Right now it reads like you can just use whatever the other types (collections, globals, fields) accept.<br>\nThanks!</p>",
          "createdAt": "2021-05-09T22:24:17Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Totally. We'll shore up those docs ASAP and we'll likely just go ahead and add some documentation around that one Payload-wide hook we <em>do</em> have now as well.</p>\n<p dir=\"auto\">Thanks for pointing that out!</p>",
          "createdAt": "2021-05-10T01:50:27Z"
        }
      ]
    }
  },
  {
    "title": "Problems with deploying with docker",
    "body": "<p dir=\"auto\">Hi Everyone,</p>\n<p dir=\"auto\">I'm trying to deploy payload with docker to a DigitalOcean Droplet. I push it to my gitlab ci/cd runner, which builds the docker image and then saves it to the container registry (also gitlab). I then pull the image on my droplet, which uses caddy 2 as my reverse proxy. I can access the api on my computer, but aparently, the admin panel can not.</p>\n<p dir=\"auto\">This is my .env file on local, that I then override with docker env vars.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"NODE_ENV=dev\nENVIRONMENT=dev\nPORT=3000\nPAYLOAD_PUBLIC_SERVER_URL=http://localhost:3000\n\nMONGODB_URI=&lt;redacted URI&gt;\nPAYLOAD_SECRET=&lt;redacted secret&gt;\nPAYLOAD_LICENCE=&lt;redacted licence&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">NODE_ENV=dev\nENVIRONMENT=dev\nPORT=3000\nPAYLOAD_PUBLIC_SERVER_URL=http://localhost:3000\n\nMONGODB_URI=&lt;redacted URI&gt;\nPAYLOAD_SECRET=&lt;redacted secret&gt;\nPAYLOAD_LICENCE=&lt;redacted licence&gt;\n</code></pre></div>\n<p dir=\"auto\">On production I use the same, except PAYLOAD_PUBLIC_SERVER_URL</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"PAYLOAD_PUBLIC_SERVER_URL=https://cms.dtampe.com\"><pre class=\"notranslate\"><code class=\"notranslate\">PAYLOAD_PUBLIC_SERVER_URL=https://cms.dtampe.com\n</code></pre></div>\n<p dir=\"auto\">When I try to access <code class=\"notranslate\">https://cms.dtampe.com/admin</code>, it stucks at loading and I get the following error:<br>\n<code class=\"notranslate\">Failed to load resource: net::ERR_CONNECTION_REFUSED        http://localhost:3000/api/users/me</code></p>\n<p dir=\"auto\">This works though, so I really don't know where I went wrong. <code class=\"notranslate\">https://cms.dtampe.com/api/pages</code></p>\n<p dir=\"auto\">I did already read through Issues and Discussions, but can't seem to figure it out. I also tried to use the next.js template or this repo here <a href=\"https://github.com/joshhills/joshhills-site\">https://github.com/joshhills/joshhills-site</a>, but to no avail.</p>\n<p dir=\"auto\">My Docker FIle:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Dockerfile\n\n\nFrom node:14-alpine\nWORKDIR ./app\nCOPY package*.json  ./\nRUN npm install\nCOPY . . \nRUN npm run build\n#RUN rm -f .env\nEXPOSE 3000\nCMD [&quot;npm&quot;, &quot;start&quot;]\"><pre class=\"notranslate\"><code class=\"notranslate\">Dockerfile\n\n\nFrom node:14-alpine\nWORKDIR ./app\nCOPY package*.json  ./\nRUN npm install\nCOPY . . \nRUN npm run build\n#RUN rm -f .env\nEXPOSE 3000\nCMD [\"npm\", \"start\"]\n</code></pre></div>\n<p dir=\"auto\">gitlab ci</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\".gitlab-ci.yml\n\n\n# This file is a template, and might need editing before it works on your project.\n# Build a Docker image with CI/CD and push to the GitLab registry.\n# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html\n#\n# This template uses one generic job with conditional builds\n# for the default branch and all other (MR) branches.\ndocker-build:\n  # Use the official docker image.\n  image: docker:latest\n  stage: build\n  environment:\n    name: production\n    url: https://cms.dtampe.com\n  services:\n    - docker:dind\n  before_script:\n    - docker login -u &quot;$CI_REGISTRY_USER&quot; -p &quot;$CI_REGISTRY_PASSWORD&quot; $CI_REGISTRY\n  # Default branch leaves tag empty (= latest tag)\n  # All other branches are tagged with the escaped branch name (commit ref slug)\n  script:\n    - |\n      if [[ &quot;$CI_COMMIT_BRANCH&quot; == &quot;$CI_DEFAULT_BRANCH&quot; ]]; then\n        tag=&quot;&quot;\n        echo &quot;Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'&quot;\n      else\n        tag=&quot;:$CI_COMMIT_REF_SLUG&quot;\n        echo &quot;Running on branch '$CI_COMMIT_BRANCH': tag = $tag&quot;\n      fi\n    - echo &quot;Running now docker build&quot;\n    - echo &quot;$PAYLOAD_PUBLIC_SERVER_URL&quot;\n    - echo &quot;$NODE_ENV&quot;\n    - docker build --pull -t &quot;$CI_REGISTRY_IMAGE${tag}&quot; .\n    - docker push &quot;$CI_REGISTRY_IMAGE${tag}&quot;\n  # Run this job in a branch where a Dockerfile exists\n  rules:\n    - if: $CI_COMMIT_BRANCH\n      exists:\n        - Dockerfile\n\"><pre class=\"notranslate\"><code class=\"notranslate\">.gitlab-ci.yml\n\n\n# This file is a template, and might need editing before it works on your project.\n# Build a Docker image with CI/CD and push to the GitLab registry.\n# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html\n#\n# This template uses one generic job with conditional builds\n# for the default branch and all other (MR) branches.\ndocker-build:\n  # Use the official docker image.\n  image: docker:latest\n  stage: build\n  environment:\n    name: production\n    url: https://cms.dtampe.com\n  services:\n    - docker:dind\n  before_script:\n    - docker login -u \"$CI_REGISTRY_USER\" -p \"$CI_REGISTRY_PASSWORD\" $CI_REGISTRY\n  # Default branch leaves tag empty (= latest tag)\n  # All other branches are tagged with the escaped branch name (commit ref slug)\n  script:\n    - |\n      if [[ \"$CI_COMMIT_BRANCH\" == \"$CI_DEFAULT_BRANCH\" ]]; then\n        tag=\"\"\n        echo \"Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'\"\n      else\n        tag=\":$CI_COMMIT_REF_SLUG\"\n        echo \"Running on branch '$CI_COMMIT_BRANCH': tag = $tag\"\n      fi\n    - echo \"Running now docker build\"\n    - echo \"$PAYLOAD_PUBLIC_SERVER_URL\"\n    - echo \"$NODE_ENV\"\n    - docker build --pull -t \"$CI_REGISTRY_IMAGE${tag}\" .\n    - docker push \"$CI_REGISTRY_IMAGE${tag}\"\n  # Run this job in a branch where a Dockerfile exists\n  rules:\n    - if: $CI_COMMIT_BRANCH\n      exists:\n        - Dockerfile\n\n</code></pre></div>\n<p dir=\"auto\">I'd be greatful for any hints!<br>\nCheers!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/170",
    "id": "170",
    "createdAt": "2021-05-06T21:51:23Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "SuddenDev",
      "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
      "url": "https://github.com/SuddenDev"
    },
    "comments": [
      {
        "author": {
          "name": "SuddenDev",
          "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
          "url": "https://github.com/SuddenDev"
        },
        "body": "<p dir=\"auto\">Okay, so I know I just started this discussion 15 minutes ago, but I finally found the culprit: my local .env file was used for the build process of the admin panel and by that was pointing to localhost instead of my URI. So I just need to figure out how to get the PAYLOAD_PUBLIC_SERVER_URL dynamic in gitlab ci.</p>",
        "createdAt": "2021-05-06T22:06:04Z",
        "replies": [
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Ha I was just writing up a response!</p>\n<p dir=\"auto\">Can you set that ENV variable in a <code class=\"notranslate\">serve</code> NPM script?</p>\n<p dir=\"auto\"><code class=\"notranslate\">package.json</code>:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  &quot;scripts&quot;: {\n    &quot;serve&quot;: &quot;cross-env PAYLOAD_PUBLIC_SERVER_URL=https://site-goes-here.com node server.js&quot;\n  },\"><pre class=\"notranslate\">  <span class=\"pl-s\">\"scripts\"</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s\">\"serve\"</span>: <span class=\"pl-s\">\"cross-env PAYLOAD_PUBLIC_SERVER_URL=https://site-goes-here.com node server.js\"</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">I used <code class=\"notranslate\">cross-env</code> here but you may not need it.</p>\n<p dir=\"auto\">Would this work?</p>",
            "createdAt": "2021-05-06T22:08:12Z"
          },
          {
            "author": {
              "name": "SuddenDev",
              "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
              "url": "https://github.com/SuddenDev"
            },
            "body": "<p dir=\"auto\">Ha, thanks for the swift response!<br>\nI don't think it would, since starting the service and fetching the /api/ route seems to work just fine, but I could not access the admin panel, because of the build process. Setting the SERVER_URL in Docker works fine, but I'm sure this should also work.</p>",
            "createdAt": "2021-05-06T22:30:28Z"
          }
        ]
      },
      {
        "author": {
          "name": "SuddenDev",
          "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
          "url": "https://github.com/SuddenDev"
        },
        "body": "<p dir=\"auto\">Okay, so I did manage to get everything working with Docker. I did already dip my toe into docker-compose, so I think it will follow, but for now I'm just gonna use MongoDB Atlas.</p>\n<p dir=\"auto\">Like described before, the reason it did not work was, that I had to supply the final URL to the payload.config file without hardcoding it in. Using the method bellow works for me and using it dynamic with Docker &amp; Gitlab CI/CD. To make it easier for people to also use docker with the gitlab-ci (or maybe github actions, or any other CI tool) here's the run down:</p>\n<h4 dir=\"auto\">1. Push your code gitlab (if not already done)</h4>\n<h4 dir=\"auto\">2. (Optional: If you want to set the variables in the <code class=\"notranslate\">.gitlab-ci.yml</code> file, you can skip this) <br> Go to your Repo -&gt; Settings -&gt; CI/CD. There find the Variables section and add the ones you need from your .env file. (Recommended is PAYLOAD_PUBLIC_SERVER_URL, since that's the only thing used for building the payload admin). You can add call them however you want. I did set mine to not protected, but I don't know if you need it.</h4>\n<h4 dir=\"auto\">3. In your code base, create a new File <code class=\"notranslate\">.gitlab-ci.yml</code></h4>\n<h4 dir=\"auto\">4. Use this file here or start with the template <code class=\"notranslate\">(docker.gitlab-ci.yml)</code> gitlab provides. I comment the important parts that are different from the template.</h4>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\".gitlab-ci.yml\n----------------\n\ndocker-build:\n  # Use the official docker image.\n  image: docker:18\n  stage: build\n  services:\n    - docker:dind\n  before_script:\n    - docker login -u &quot;$CI_REGISTRY_USER&quot; -p &quot;$CI_REGISTRY_PASSWORD&quot; $CI_REGISTRY\n  # Default branch leaves tag empty (= latest tag)\n  # All other branches are tagged with the escaped branch name (commit ref slug)\n  script:\n    - |\n      if [[ &quot;$CI_COMMIT_BRANCH&quot; == &quot;$CI_DEFAULT_BRANCH&quot; ]]; then\n        tag=&quot;&quot;\n        echo &quot;Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'&quot;\n      else\n        tag=&quot;:$CI_COMMIT_REF_SLUG&quot;\n        echo &quot;Running on branch '$CI_COMMIT_BRANCH': tag = $tag&quot;\n      fi\n    - echo &quot;Running now docker build&quot;\n    - echo $PAYLOAD_PUBLIC_SERVER_URL\n\n    #\n    # The next block is the important one: You have to pass your gitlab variables, \n    # that you can either set here in this file or in the project settings.  \n    # Your environment variables may differ, but you'll need to set at least $PAYLOAD_PUBLIC_SERVER_URL,\n    # since that's where you want to pass your serverUrl that should run on production / staging / whatever.\n    # I recommend also caching from the previous registry image, since that reduces build time a bit.\n    #\n    - &gt;\n      docker build\n      --pull\n      --build-arg payload_public_server_url=$PAYLOAD_PUBLIC_SERVER_URL\n      --cache-from $CI_REGISTRY_IMAGE:latest\n      --tag $CI_REGISTRY_IMAGE${tag}\n      .\n    - docker push &quot;$CI_REGISTRY_IMAGE${tag}&quot;\n  # Run this job in a branch where a Dockerfile exists\n  rules:\n    - if: $CI_COMMIT_BRANCH\n      exists:\n        - Dockerfile\n\"><pre class=\"notranslate\"><code class=\"notranslate\">.gitlab-ci.yml\n----------------\n\ndocker-build:\n  # Use the official docker image.\n  image: docker:18\n  stage: build\n  services:\n    - docker:dind\n  before_script:\n    - docker login -u \"$CI_REGISTRY_USER\" -p \"$CI_REGISTRY_PASSWORD\" $CI_REGISTRY\n  # Default branch leaves tag empty (= latest tag)\n  # All other branches are tagged with the escaped branch name (commit ref slug)\n  script:\n    - |\n      if [[ \"$CI_COMMIT_BRANCH\" == \"$CI_DEFAULT_BRANCH\" ]]; then\n        tag=\"\"\n        echo \"Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'\"\n      else\n        tag=\":$CI_COMMIT_REF_SLUG\"\n        echo \"Running on branch '$CI_COMMIT_BRANCH': tag = $tag\"\n      fi\n    - echo \"Running now docker build\"\n    - echo $PAYLOAD_PUBLIC_SERVER_URL\n\n    #\n    # The next block is the important one: You have to pass your gitlab variables, \n    # that you can either set here in this file or in the project settings.  \n    # Your environment variables may differ, but you'll need to set at least $PAYLOAD_PUBLIC_SERVER_URL,\n    # since that's where you want to pass your serverUrl that should run on production / staging / whatever.\n    # I recommend also caching from the previous registry image, since that reduces build time a bit.\n    #\n    - &gt;\n      docker build\n      --pull\n      --build-arg payload_public_server_url=$PAYLOAD_PUBLIC_SERVER_URL\n      --cache-from $CI_REGISTRY_IMAGE:latest\n      --tag $CI_REGISTRY_IMAGE${tag}\n      .\n    - docker push \"$CI_REGISTRY_IMAGE${tag}\"\n  # Run this job in a branch where a Dockerfile exists\n  rules:\n    - if: $CI_COMMIT_BRANCH\n      exists:\n        - Dockerfile\n\n</code></pre></div>\n<h4 dir=\"auto\">5. After that, add this <code class=\"notranslate\">Dockerfile</code> to your directory root as well</h4>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Dockerfile\n------------\n\nFrom node:14-alpine\n\n# Setting up args to recieve from gitlab ci \n# or just --build-arg\n# adjust to your case\nARG payload_public_server_url\n\n# Mapping the argument to ENV for the build\nENV PAYLOAD_PUBLIC_SERVER_URL=$payload_public_server_url\n\n## Logging\nRUN echo &quot;payload_public_server_url: ${payload_public_server_url}&quot;\n\n## Regular Setup\nWORKDIR ./app\nCOPY package*.json  ./\nRUN npm install\nCOPY . . \n\n## Run the admin build process \nRUN npm run build\nEXPOSE 3000\n\n# Payload Serve (renamed it because 'serve' didn't work)\nCMD [&quot;npm&quot;, &quot;start&quot;]\"><pre class=\"notranslate\"><code class=\"notranslate\">Dockerfile\n------------\n\nFrom node:14-alpine\n\n# Setting up args to recieve from gitlab ci \n# or just --build-arg\n# adjust to your case\nARG payload_public_server_url\n\n# Mapping the argument to ENV for the build\nENV PAYLOAD_PUBLIC_SERVER_URL=$payload_public_server_url\n\n## Logging\nRUN echo \"payload_public_server_url: ${payload_public_server_url}\"\n\n## Regular Setup\nWORKDIR ./app\nCOPY package*.json  ./\nRUN npm install\nCOPY . . \n\n## Run the admin build process \nRUN npm run build\nEXPOSE 3000\n\n# Payload Serve (renamed it because 'serve' didn't work)\nCMD [\"npm\", \"start\"]\n</code></pre></div>\n<h4 dir=\"auto\">6. Push this to your gitlab repository</h4>\n<h4 dir=\"auto\">7. Check the CI/CD Sidepanel and find it in jobs.</h4>\n<h4 dir=\"auto\">8. Everything should go smoothly and you can pull you image from the gitlab container registry</h4>\n<p dir=\"auto\">Bonus: When running your Docker Container, you obviously also need to specify your .env files content.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/22402545/117380391-de8f4680-aed9-11eb-93ba-5c117d8d92cc.png\"><img src=\"https://user-images.githubusercontent.com/22402545/117380391-de8f4680-aed9-11eb-93ba-5c117d8d92cc.png\" alt=\"grafik\" style=\"max-width: 100%;\"></a></p>",
        "createdAt": "2021-05-07T00:19:03Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "SuddenDev",
        "avatar": "https://avatars.githubusercontent.com/u/22402545?u=b0755c37eedbc4397ba86d6aa0c88bdfe5bff613&v=4",
        "url": "https://github.com/SuddenDev"
      },
      "body": "<p dir=\"auto\">Okay, so I did manage to get everything working with Docker. I did already dip my toe into docker-compose, so I think it will follow, but for now I'm just gonna use MongoDB Atlas.</p>\n<p dir=\"auto\">Like described before, the reason it did not work was, that I had to supply the final URL to the payload.config file without hardcoding it in. Using the method bellow works for me and using it dynamic with Docker &amp; Gitlab CI/CD. To make it easier for people to also use docker with the gitlab-ci (or maybe github actions, or any other CI tool) here's the run down:</p>\n<h4 dir=\"auto\">1. Push your code gitlab (if not already done)</h4>\n<h4 dir=\"auto\">2. (Optional: If you want to set the variables in the <code class=\"notranslate\">.gitlab-ci.yml</code> file, you can skip this) <br> Go to your Repo -&gt; Settings -&gt; CI/CD. There find the Variables section and add the ones you need from your .env file. (Recommended is PAYLOAD_PUBLIC_SERVER_URL, since that's the only thing used for building the payload admin). You can add call them however you want. I did set mine to not protected, but I don't know if you need it.</h4>\n<h4 dir=\"auto\">3. In your code base, create a new File <code class=\"notranslate\">.gitlab-ci.yml</code></h4>\n<h4 dir=\"auto\">4. Use this file here or start with the template <code class=\"notranslate\">(docker.gitlab-ci.yml)</code> gitlab provides. I comment the important parts that are different from the template.</h4>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\".gitlab-ci.yml\n----------------\n\ndocker-build:\n  # Use the official docker image.\n  image: docker:18\n  stage: build\n  services:\n    - docker:dind\n  before_script:\n    - docker login -u &quot;$CI_REGISTRY_USER&quot; -p &quot;$CI_REGISTRY_PASSWORD&quot; $CI_REGISTRY\n  # Default branch leaves tag empty (= latest tag)\n  # All other branches are tagged with the escaped branch name (commit ref slug)\n  script:\n    - |\n      if [[ &quot;$CI_COMMIT_BRANCH&quot; == &quot;$CI_DEFAULT_BRANCH&quot; ]]; then\n        tag=&quot;&quot;\n        echo &quot;Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'&quot;\n      else\n        tag=&quot;:$CI_COMMIT_REF_SLUG&quot;\n        echo &quot;Running on branch '$CI_COMMIT_BRANCH': tag = $tag&quot;\n      fi\n    - echo &quot;Running now docker build&quot;\n    - echo $PAYLOAD_PUBLIC_SERVER_URL\n\n    #\n    # The next block is the important one: You have to pass your gitlab variables, \n    # that you can either set here in this file or in the project settings.  \n    # Your environment variables may differ, but you'll need to set at least $PAYLOAD_PUBLIC_SERVER_URL,\n    # since that's where you want to pass your serverUrl that should run on production / staging / whatever.\n    # I recommend also caching from the previous registry image, since that reduces build time a bit.\n    #\n    - &gt;\n      docker build\n      --pull\n      --build-arg payload_public_server_url=$PAYLOAD_PUBLIC_SERVER_URL\n      --cache-from $CI_REGISTRY_IMAGE:latest\n      --tag $CI_REGISTRY_IMAGE${tag}\n      .\n    - docker push &quot;$CI_REGISTRY_IMAGE${tag}&quot;\n  # Run this job in a branch where a Dockerfile exists\n  rules:\n    - if: $CI_COMMIT_BRANCH\n      exists:\n        - Dockerfile\n\"><pre class=\"notranslate\"><code class=\"notranslate\">.gitlab-ci.yml\n----------------\n\ndocker-build:\n  # Use the official docker image.\n  image: docker:18\n  stage: build\n  services:\n    - docker:dind\n  before_script:\n    - docker login -u \"$CI_REGISTRY_USER\" -p \"$CI_REGISTRY_PASSWORD\" $CI_REGISTRY\n  # Default branch leaves tag empty (= latest tag)\n  # All other branches are tagged with the escaped branch name (commit ref slug)\n  script:\n    - |\n      if [[ \"$CI_COMMIT_BRANCH\" == \"$CI_DEFAULT_BRANCH\" ]]; then\n        tag=\"\"\n        echo \"Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'\"\n      else\n        tag=\":$CI_COMMIT_REF_SLUG\"\n        echo \"Running on branch '$CI_COMMIT_BRANCH': tag = $tag\"\n      fi\n    - echo \"Running now docker build\"\n    - echo $PAYLOAD_PUBLIC_SERVER_URL\n\n    #\n    # The next block is the important one: You have to pass your gitlab variables, \n    # that you can either set here in this file or in the project settings.  \n    # Your environment variables may differ, but you'll need to set at least $PAYLOAD_PUBLIC_SERVER_URL,\n    # since that's where you want to pass your serverUrl that should run on production / staging / whatever.\n    # I recommend also caching from the previous registry image, since that reduces build time a bit.\n    #\n    - &gt;\n      docker build\n      --pull\n      --build-arg payload_public_server_url=$PAYLOAD_PUBLIC_SERVER_URL\n      --cache-from $CI_REGISTRY_IMAGE:latest\n      --tag $CI_REGISTRY_IMAGE${tag}\n      .\n    - docker push \"$CI_REGISTRY_IMAGE${tag}\"\n  # Run this job in a branch where a Dockerfile exists\n  rules:\n    - if: $CI_COMMIT_BRANCH\n      exists:\n        - Dockerfile\n\n</code></pre></div>\n<h4 dir=\"auto\">5. After that, add this <code class=\"notranslate\">Dockerfile</code> to your directory root as well</h4>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Dockerfile\n------------\n\nFrom node:14-alpine\n\n# Setting up args to recieve from gitlab ci \n# or just --build-arg\n# adjust to your case\nARG payload_public_server_url\n\n# Mapping the argument to ENV for the build\nENV PAYLOAD_PUBLIC_SERVER_URL=$payload_public_server_url\n\n## Logging\nRUN echo &quot;payload_public_server_url: ${payload_public_server_url}&quot;\n\n## Regular Setup\nWORKDIR ./app\nCOPY package*.json  ./\nRUN npm install\nCOPY . . \n\n## Run the admin build process \nRUN npm run build\nEXPOSE 3000\n\n# Payload Serve (renamed it because 'serve' didn't work)\nCMD [&quot;npm&quot;, &quot;start&quot;]\"><pre class=\"notranslate\"><code class=\"notranslate\">Dockerfile\n------------\n\nFrom node:14-alpine\n\n# Setting up args to recieve from gitlab ci \n# or just --build-arg\n# adjust to your case\nARG payload_public_server_url\n\n# Mapping the argument to ENV for the build\nENV PAYLOAD_PUBLIC_SERVER_URL=$payload_public_server_url\n\n## Logging\nRUN echo \"payload_public_server_url: ${payload_public_server_url}\"\n\n## Regular Setup\nWORKDIR ./app\nCOPY package*.json  ./\nRUN npm install\nCOPY . . \n\n## Run the admin build process \nRUN npm run build\nEXPOSE 3000\n\n# Payload Serve (renamed it because 'serve' didn't work)\nCMD [\"npm\", \"start\"]\n</code></pre></div>\n<h4 dir=\"auto\">6. Push this to your gitlab repository</h4>\n<h4 dir=\"auto\">7. Check the CI/CD Sidepanel and find it in jobs.</h4>\n<h4 dir=\"auto\">8. Everything should go smoothly and you can pull you image from the gitlab container registry</h4>\n<p dir=\"auto\">Bonus: When running your Docker Container, you obviously also need to specify your .env files content.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/22402545/117380391-de8f4680-aed9-11eb-93ba-5c117d8d92cc.png\"><img src=\"https://user-images.githubusercontent.com/22402545/117380391-de8f4680-aed9-11eb-93ba-5c117d8d92cc.png\" alt=\"grafik\" style=\"max-width: 100%;\"></a></p>",
      "createdAt": "2021-05-07T00:19:03Z",
      "chosenAt": "2021-05-07T00:19:08Z",
      "chosenBy": "SuddenDev",
      "replies": null
    }
  },
  {
    "title": "payload:build causing Out Of Memory exception in production",
    "body": "<p dir=\"auto\">I got a slight issue meaning that sometimes the application doesn't build on my DigitalOcean application.</p>\n<p dir=\"auto\">I'm not sure if it's down to DigitalOcean but I've got a 4GB instance so I feel like that should be enough. I was just wondering if there is any way of limiting the amount of memory that payload:build consumes? Can I pass any node options to it?</p>",
    "url": "https://github.com/payloadcms/payload/discussions/150",
    "id": "150",
    "createdAt": "2021-04-22T08:22:11Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "richardvanbergen",
      "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
      "url": "https://github.com/richardvanbergen"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Good question!</p>\n<p dir=\"auto\">I'm actually not sure, but we've seen similar issues with other Webpack projects in the past with DigitalOcean droplets. We solved our issues by using a swapfile:</p>\n<p dir=\"auto\"><a href=\"https://www.digitalocean.com/community/tutorials/how-to-add-swap-space-on-ubuntu-20-04\" rel=\"nofollow\">https://www.digitalocean.com/community/tutorials/how-to-add-swap-space-on-ubuntu-20-04</a></p>\n<p dir=\"auto\">I know they say that swapfiles cause SSD performance degradation, but they are a mainstay of *nix operating systems and I think DigitalOcean just says this in their own best interests. We have them running on most (all?) of our droplets.</p>\n<p dir=\"auto\">Otherwise, it looks like there are a bunch of ways to cap Node's memory usage, but I have never done it before.</p>\n<p dir=\"auto\"><a aria-label=\"Issue #12238\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"146346101\" data-permission-text=\"Title is private\" data-url=\"https://github.com/npm/npm/issues/12238\" data-hovercard-type=\"issue\" data-hovercard-url=\"/npm/npm/issues/12238/hovercard\" href=\"https://github.com/npm/npm/issues/12238\">npm/npm#12238</a></p>\n<p dir=\"auto\">Maybe give some of those ideas a shot? I would be thrilled to hear what works!</p>",
        "createdAt": "2021-04-22T12:12:55Z",
        "replies": [
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Thanks for the reply.</p>\n<p dir=\"auto\">There's a couple of issues with that.</p>\n<p dir=\"auto\">The first is that I'm not on a droplet. I'm using their app platform which is basically a managed droplet.</p>\n<p dir=\"auto\">The second is that I don't know what the underlying command for <code class=\"notranslate\">payload:build</code> would be and how I could pass it parameters. Can I just pass it random node flags?</p>\n<p dir=\"auto\">I guess the other solution is to build the docker container on Github and just pull it down but I'm loathe to waste time on setting up docker registries and CI workflows for that. I was hoping I could just pass a magic --dont-run-out-of-memory-please flag.</p>",
            "createdAt": "2021-04-22T12:58:13Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Would these suggestions work?</p>\n<p dir=\"auto\"><a href=\"https://stackoverflow.com/questions/56982005/where-do-i-set-node-options-max-old-space-size-2048\" rel=\"nofollow\">https://stackoverflow.com/questions/56982005/where-do-i-set-node-options-max-old-space-size-2048</a></p>\n<p dir=\"auto\">Looks like you can do it with an environment variable. Give that a shot?</p>",
            "createdAt": "2021-04-22T13:28:13Z"
          },
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Perfect, I'll give it a shot in the morning. <g-emoji class=\"g-emoji\" alias=\"blush\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png\">😊</g-emoji></p>",
            "createdAt": "2021-04-22T13:56:12Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Good question!</p>\n<p dir=\"auto\">I'm actually not sure, but we've seen similar issues with other Webpack projects in the past with DigitalOcean droplets. We solved our issues by using a swapfile:</p>\n<p dir=\"auto\"><a href=\"https://www.digitalocean.com/community/tutorials/how-to-add-swap-space-on-ubuntu-20-04\" rel=\"nofollow\">https://www.digitalocean.com/community/tutorials/how-to-add-swap-space-on-ubuntu-20-04</a></p>\n<p dir=\"auto\">I know they say that swapfiles cause SSD performance degradation, but they are a mainstay of *nix operating systems and I think DigitalOcean just says this in their own best interests. We have them running on most (all?) of our droplets.</p>\n<p dir=\"auto\">Otherwise, it looks like there are a bunch of ways to cap Node's memory usage, but I have never done it before.</p>\n<p dir=\"auto\"><a aria-label=\"Issue #12238\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"146346101\" data-permission-text=\"Title is private\" data-url=\"https://github.com/npm/npm/issues/12238\" data-hovercard-type=\"issue\" data-hovercard-url=\"/npm/npm/issues/12238/hovercard\" href=\"https://github.com/npm/npm/issues/12238\">npm/npm#12238</a></p>\n<p dir=\"auto\">Maybe give some of those ideas a shot? I would be thrilled to hear what works!</p>",
      "createdAt": "2021-04-22T12:12:55Z",
      "chosenAt": "2022-12-09T16:41:59Z",
      "chosenBy": "zubricks",
      "replies": [
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<p dir=\"auto\">Thanks for the reply.</p>\n<p dir=\"auto\">There's a couple of issues with that.</p>\n<p dir=\"auto\">The first is that I'm not on a droplet. I'm using their app platform which is basically a managed droplet.</p>\n<p dir=\"auto\">The second is that I don't know what the underlying command for <code class=\"notranslate\">payload:build</code> would be and how I could pass it parameters. Can I just pass it random node flags?</p>\n<p dir=\"auto\">I guess the other solution is to build the docker container on Github and just pull it down but I'm loathe to waste time on setting up docker registries and CI workflows for that. I was hoping I could just pass a magic --dont-run-out-of-memory-please flag.</p>",
          "createdAt": "2021-04-22T12:58:13Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Would these suggestions work?</p>\n<p dir=\"auto\"><a href=\"https://stackoverflow.com/questions/56982005/where-do-i-set-node-options-max-old-space-size-2048\" rel=\"nofollow\">https://stackoverflow.com/questions/56982005/where-do-i-set-node-options-max-old-space-size-2048</a></p>\n<p dir=\"auto\">Looks like you can do it with an environment variable. Give that a shot?</p>",
          "createdAt": "2021-04-22T13:28:13Z"
        },
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<p dir=\"auto\">Perfect, I'll give it a shot in the morning. <g-emoji class=\"g-emoji\" alias=\"blush\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png\">😊</g-emoji></p>",
          "createdAt": "2021-04-22T13:56:12Z"
        }
      ]
    }
  },
  {
    "title": "Any way to get *non* localized data from the REST API.",
    "body": "<p dir=\"auto\">Hey guys,</p>\n<p dir=\"auto\">I have a bunch of localized fields but there's one particular query where I need to get <strong>all</strong> available translations. The page <code class=\"notranslate\">slug</code>. The reason being is I need to provide alternate language URLs and allow the user to switch between languages and each document can have multiple languages with independent URLs.</p>\n<p dir=\"auto\">Currently the only way I can see to do that is loop over all available locales and query for each document of that locale to find out if it exists.</p>\n<p dir=\"auto\">Is there any way for me to do that directly via the API? I couldn't see anything in the docs.</p>",
    "url": "https://github.com/payloadcms/payload/discussions/139",
    "id": "139",
    "createdAt": "2021-04-15T13:10:21Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "richardvanbergen",
      "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
      "url": "https://github.com/richardvanbergen"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> —</p>\n<p dir=\"auto\">We do have a way to do this!</p>\n<p dir=\"auto\"><code class=\"notranslate\">?locale=*</code></p>\n<p dir=\"auto\">Somehow that went un-documented. It only works via the REST API for now, because of GraphQL's strongly typed nature. Enabling this in GraphQL would mean that we have to make a whole other set of queries, which is possible, but likely lower on our priorities list.</p>\n<p dir=\"auto\">We will get our docs updated ASAP. Give it a shot!</p>",
        "createdAt": "2021-04-15T13:27:37Z",
        "replies": [
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Thanks! It works quite nicely. <g-emoji class=\"g-emoji\" alias=\"pray\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png\">🙏</g-emoji></p>",
            "createdAt": "2021-04-16T05:37:14Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> —</p>\n<p dir=\"auto\">We do have a way to do this!</p>\n<p dir=\"auto\"><code class=\"notranslate\">?locale=*</code></p>\n<p dir=\"auto\">Somehow that went un-documented. It only works via the REST API for now, because of GraphQL's strongly typed nature. Enabling this in GraphQL would mean that we have to make a whole other set of queries, which is possible, but likely lower on our priorities list.</p>\n<p dir=\"auto\">We will get our docs updated ASAP. Give it a shot!</p>",
      "createdAt": "2021-04-15T13:27:37Z",
      "chosenAt": "2021-04-20T01:28:38Z",
      "chosenBy": "denolfe",
      "replies": [
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<p dir=\"auto\">Thanks! It works quite nicely. <g-emoji class=\"g-emoji\" alias=\"pray\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png\">🙏</g-emoji></p>",
          "createdAt": "2021-04-16T05:37:14Z"
        }
      ]
    }
  },
  {
    "title": "Relationships and SlateJS",
    "body": "<p dir=\"auto\">Hey guys,</p>\n<p dir=\"auto\">I'm looking to create a \"CTA\" block for editors to add buttons into rich text fields and I have a couple of notes/questions:</p>\n<ol dir=\"auto\">\n<li>Is there any way to leverage the existing relationship UI to link to internal documents?</li>\n<li>The purpose of referencing documents <a href=\"https://payloadcms.com/docs/fields/rich-text#relationship-element\" rel=\"nofollow\">as described in the documentation</a> is unclear. Could I use this as a mechanism to add CTA's at the bottom. Or does it have another intended purpose?</li>\n</ol>\n<p dir=\"auto\">Thanks!</p>",
    "url": "https://github.com/payloadcms/payload/discussions/86",
    "id": "86",
    "createdAt": "2021-03-01T20:58:57Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "richardvanbergen",
      "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
      "url": "https://github.com/richardvanbergen"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Yo Richard,</p>\n<p dir=\"auto\">There are a few ways to do what you are looking for!</p>\n<p dir=\"auto\">To answer your first question, yes, you can use Relationships to link to existing documents within the Rich Text field. For this to work, you need to do a few things:</p>\n<ol dir=\"auto\">\n<li>Within the collection that you actually want to reference, set <code class=\"notranslate\">enableRichTextRelationship</code> to <code class=\"notranslate\">true</code> within that collection's <code class=\"notranslate\">admin</code> options - see <a href=\"https://github.com/payloadcms/payload/blob/master/demo/collections/Media.ts#L13\">here</a> for an example in our demo app</li>\n<li>Then, in your actual rich text field(s), specify the <code class=\"notranslate\">'relationship'</code> field type within the rich text field's <code class=\"notranslate\">admin.elements</code> property like this:</li>\n</ol>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"    {\n      name: 'richTextDemo',\n      type: 'richText',\n      label: 'Rich Text Demo',\n      admin: {\n        elements: [\n          'h2',\n          'h3',\n          'relationship', // &lt;- check it out\n        ],\n      },\n    },\"><pre class=\"notranslate\">    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'richTextDemo'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'richText'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Rich Text Demo'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">elements</span>: <span class=\"pl-kos\">[</span>\n          <span class=\"pl-s\">'h2'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s\">'h3'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// &lt;- check it out</span>\n        <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">The above config will give you a new icon in your toolbar that looks like a little \"open in new tab\" icon, that, when clicked, allows you to choose a related document, which will be displayed in the Rich Text editor like this::</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6651896/109560363-cc43f700-7aa9-11eb-80e6-eefb10aa7118.png\"><img src=\"https://user-images.githubusercontent.com/6651896/109560363-cc43f700-7aa9-11eb-80e6-eefb10aa7118.png\" alt=\"Screen Shot 2021-03-01 at 4 16 27 PM\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Alternatively, if you want to get a bit more specific and intentional, you should check out our demo app's <a href=\"https://github.com/payloadcms/payload/blob/master/demo/collections/RichText.ts\">Rich Text collection</a> which actually shows an example for how to add your own custom <code class=\"notranslate\">Button</code> element. This or something similar is typically what we do for this type of application.</p>\n<p dir=\"auto\">What do you think?</p>\n<p dir=\"auto\">PS: we'll definitely improve the docs here because I personally think the above patterns are super cool!</p>",
        "createdAt": "2021-03-01T21:20:49Z",
        "replies": [
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>,</p>\n<p dir=\"auto\">Thank you for pointing me towards the examples. I did see them before but I was looking at the wrong definition of Button so I copied the wrong thing. <g-emoji class=\"g-emoji\" alias=\"hugs\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f917.png\">🤗</g-emoji></p>\n<p dir=\"auto\">I think my point regarding the relationship is that I don't understand what the use-case for it is. When I tried it I didn't see the relationship put out in the data from the REST endpoint I'm using and it always appears at the bottom of the text area so I just don't see what it enables for the editors.</p>\n<p dir=\"auto\">After a bit of shameless copy-pasting - I've now implemented the button and I can start editing it to add some more functionality. A couple of points based on my experience:</p>\n<ol dir=\"auto\">\n<li>Yes, it could use a bit more documentation.</li>\n<li>It would be nice to be a little more abstracted from slate, an (optional) library of UI components to build on top of rather than having to do basic things like define toolbar button styles just to make it look like the rest of the toolbar buttons. Another example might be creating a <code class=\"notranslate\">SlateModalButton</code> rather than wiring up everything manually for common UI patterns?</li>\n</ol>",
            "createdAt": "2021-03-02T07:48:52Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<blockquote>\n<p dir=\"auto\">I think my point regarding the relationship is that I don't understand what the use-case for it is. When I tried it I didn't see the relationship put out in the data from the REST endpoint I'm using and it always appears at the bottom of the text area so I just don't see what it enables for the editors.</p>\n</blockquote>\n<p dir=\"auto\">You should actually be able to place the relationship, and its data, <strong><em>anywhere you want</em></strong> within your Rich Text.</p>\n<p dir=\"auto\">Within the above screenshot, here's what the data looks like:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6651896/109654605-5d5db100-7b30-11eb-8335-648de354e6a3.png\"><img src=\"https://user-images.githubusercontent.com/6651896/109654605-5d5db100-7b30-11eb-8335-648de354e6a3.png\" alt=\"Screen Shot 2021-03-02 at 8 20 44 AM\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">As you can see, the <code class=\"notranslate\">defaultRichText</code> field has three objects in its array:</p>\n<ol dir=\"auto\">\n<li>a blank line</li>\n<li>a relationship to a Media file, in this case</li>\n<li>\"test\" text</li>\n</ol>\n<p dir=\"auto\">Basically, what the Relationship element does is automatically fetches a relationship from another collection and embeds its data into wherever it sits in the relationship field. This is basically the Contentful way of doing things, where something even as simple as a <code class=\"notranslate\">Button</code> would need to be a separate Content Type within Contentful, and you'd just add a Reference to it within your Rich Text editor.</p>\n<p dir=\"auto\">Are you seeing different results?</p>\n<p dir=\"auto\">Also - your note about adding UI components to build on top of - that is <em><strong>absolutely</strong></em> in our plans. Lots more will be announced about that soon but yes, there would be a ton of value in something like that. More on that soon.</p>",
            "createdAt": "2021-03-02T13:25:28Z"
          },
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Hey so I just got back on to this and yes I am seeing the relationship coming back in the data now. I've upgraded so that might be related.</p>\n<p dir=\"auto\">Still one more issue with it though:</p>\n<ol dir=\"auto\">\n<li>Write some text</li>\n<li>Click to beginning of line</li>\n<li>Insert a relationship (or any element with <code class=\"notranslate\">Transform.insertNode</code>)</li>\n<li>Relationship gets inserted at end of the document</li>\n</ol>\n<p dir=\"auto\">This also affects any custom plugins using the example you provide for buttons. The reason is an issue with the current cursor position getting deselected when you click on the toolbar: <a href=\"https://stackoverflow.com/questions/61226933/how-to-add-slate-node-in-particular-empty-space-without-selection\" rel=\"nofollow\">https://stackoverflow.com/questions/61226933/how-to-add-slate-node-in-particular-empty-space-without-selection</a></p>\n<p dir=\"auto\">There is a workaround it seems. However, it's still a problem for any custom plugins because as far as I'm aware, we don't have any direct access to things like the blur events on the editor so I'm unable to implement the workaround myself.</p>",
            "createdAt": "2021-03-24T07:04:23Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> — I am going to look into how this can be accomplished right now. Will report back shortly.</p>\n<p dir=\"auto\">On that note, another thing we are working on improving is <em><strong>how</strong></em> <code class=\"notranslate\">richText</code> relationship documents are populated. Right now, they are only snapshots of the relationship data as it was when the parent document was last saved—but I want to improve that by only saving the <code class=\"notranslate\">slug</code> of the collection and the <code class=\"notranslate\">id</code> of the related document. Then, we could auto-populate related documents on retrieval, ensuring their data is always up to date.</p>\n<p dir=\"auto\">Then, the <code class=\"notranslate\">depth</code> param in REST API would control the population of the related documents, and we'd add a new arg to the the <code class=\"notranslate\">richText</code> GraphQL equivalent.</p>\n<p dir=\"auto\">Obviously this would be a breaking change and would require content migration so if this hits ends up merging in we will make sure to note all repercussions as well as migration strategies.</p>\n<p dir=\"auto\">What do you think about all of this?</p>",
            "createdAt": "2021-03-24T13:18:55Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> — following up. I just opened a PR with a fix from the thread you linked. Had to do a bit more than was mentioned, but it works great! Will do some additional testing tomorrow and then if all goes well, we’ll publish.</p>\n<p dir=\"auto\"><a aria-label=\"Pull request #114\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"840438347\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/114\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/114/hovercard\" href=\"https://github.com/payloadcms/payload/pull/114\">#114</a></p>\n<p dir=\"auto\">Check it out - and let me know what you think about the \"copy\" of relationship data vs. a \"population\"-style approach. That would be next on my list to tackle as I'd rather get a change like that out of the way sooner than later.</p>",
            "createdAt": "2021-03-25T00:58:45Z"
          },
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> thank you very much for the fast response. I do think it should definitely be a population approach. Simply because as a user that's what I was expecting when I see a term like \"relationship\". Also because if you're using typescript and you update a related type you would expect that the data model you're pulling from updated too.</p>\n<p dir=\"auto\">I don't know if this is necessary or if it would be too much work for not much benefit. You could also add an 'embedRichTextRelationship' option to the collection? Again though, I don't see a scenario where I'd rather it was embedded vs populated.</p>\n<blockquote>\n<p dir=\"auto\">I just opened a PR with a fix from the thread you linked.</p>\n</blockquote>\n<p dir=\"auto\">If I'm reading <a aria-label=\"Pull request #114\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"840438347\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/114\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/114/hovercard\" href=\"https://github.com/payloadcms/payload/pull/114\">#114</a> correctly. Does that mean I can get access to <code class=\"notranslate\">editor.blurSection</code> in my custom plugin as well?</p>",
            "createdAt": "2021-03-25T03:39:57Z"
          },
          {
            "author": {
              "name": "jmikrut",
              "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
              "url": "https://github.com/jmikrut"
            },
            "body": "<blockquote>\n<p dir=\"auto\">If I'm reading <a aria-label=\"Pull request #114\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"840438347\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/114\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/114/hovercard\" href=\"https://github.com/payloadcms/payload/pull/114\">#114</a> correctly. Does that mean I can get access to editor.blurSection in my custom plugin as well?</p>\n</blockquote>\n<p dir=\"auto\">Yeah! You can. We will be updating docs with this info today but yes, you have access to it just like as seen in the Button demo. <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
            "createdAt": "2021-03-25T11:31:03Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Yo Richard,</p>\n<p dir=\"auto\">There are a few ways to do what you are looking for!</p>\n<p dir=\"auto\">To answer your first question, yes, you can use Relationships to link to existing documents within the Rich Text field. For this to work, you need to do a few things:</p>\n<ol dir=\"auto\">\n<li>Within the collection that you actually want to reference, set <code class=\"notranslate\">enableRichTextRelationship</code> to <code class=\"notranslate\">true</code> within that collection's <code class=\"notranslate\">admin</code> options - see <a href=\"https://github.com/payloadcms/payload/blob/master/demo/collections/Media.ts#L13\">here</a> for an example in our demo app</li>\n<li>Then, in your actual rich text field(s), specify the <code class=\"notranslate\">'relationship'</code> field type within the rich text field's <code class=\"notranslate\">admin.elements</code> property like this:</li>\n</ol>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"    {\n      name: 'richTextDemo',\n      type: 'richText',\n      label: 'Rich Text Demo',\n      admin: {\n        elements: [\n          'h2',\n          'h3',\n          'relationship', // &lt;- check it out\n        ],\n      },\n    },\"><pre class=\"notranslate\">    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'richTextDemo'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'richText'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">label</span>: <span class=\"pl-s\">'Rich Text Demo'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">admin</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">elements</span>: <span class=\"pl-kos\">[</span>\n          <span class=\"pl-s\">'h2'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s\">'h3'</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-s\">'relationship'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// &lt;- check it out</span>\n        <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span></pre></div>\n<p dir=\"auto\">The above config will give you a new icon in your toolbar that looks like a little \"open in new tab\" icon, that, when clicked, allows you to choose a related document, which will be displayed in the Rich Text editor like this::</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6651896/109560363-cc43f700-7aa9-11eb-80e6-eefb10aa7118.png\"><img src=\"https://user-images.githubusercontent.com/6651896/109560363-cc43f700-7aa9-11eb-80e6-eefb10aa7118.png\" alt=\"Screen Shot 2021-03-01 at 4 16 27 PM\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Alternatively, if you want to get a bit more specific and intentional, you should check out our demo app's <a href=\"https://github.com/payloadcms/payload/blob/master/demo/collections/RichText.ts\">Rich Text collection</a> which actually shows an example for how to add your own custom <code class=\"notranslate\">Button</code> element. This or something similar is typically what we do for this type of application.</p>\n<p dir=\"auto\">What do you think?</p>\n<p dir=\"auto\">PS: we'll definitely improve the docs here because I personally think the above patterns are super cool!</p>",
      "createdAt": "2021-03-01T21:20:49Z",
      "chosenAt": "2021-03-29T05:36:27Z",
      "chosenBy": "richardvanbergen",
      "replies": [
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a>,</p>\n<p dir=\"auto\">Thank you for pointing me towards the examples. I did see them before but I was looking at the wrong definition of Button so I copied the wrong thing. <g-emoji class=\"g-emoji\" alias=\"hugs\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f917.png\">🤗</g-emoji></p>\n<p dir=\"auto\">I think my point regarding the relationship is that I don't understand what the use-case for it is. When I tried it I didn't see the relationship put out in the data from the REST endpoint I'm using and it always appears at the bottom of the text area so I just don't see what it enables for the editors.</p>\n<p dir=\"auto\">After a bit of shameless copy-pasting - I've now implemented the button and I can start editing it to add some more functionality. A couple of points based on my experience:</p>\n<ol dir=\"auto\">\n<li>Yes, it could use a bit more documentation.</li>\n<li>It would be nice to be a little more abstracted from slate, an (optional) library of UI components to build on top of rather than having to do basic things like define toolbar button styles just to make it look like the rest of the toolbar buttons. Another example might be creating a <code class=\"notranslate\">SlateModalButton</code> rather than wiring up everything manually for common UI patterns?</li>\n</ol>",
          "createdAt": "2021-03-02T07:48:52Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<blockquote>\n<p dir=\"auto\">I think my point regarding the relationship is that I don't understand what the use-case for it is. When I tried it I didn't see the relationship put out in the data from the REST endpoint I'm using and it always appears at the bottom of the text area so I just don't see what it enables for the editors.</p>\n</blockquote>\n<p dir=\"auto\">You should actually be able to place the relationship, and its data, <strong><em>anywhere you want</em></strong> within your Rich Text.</p>\n<p dir=\"auto\">Within the above screenshot, here's what the data looks like:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6651896/109654605-5d5db100-7b30-11eb-8335-648de354e6a3.png\"><img src=\"https://user-images.githubusercontent.com/6651896/109654605-5d5db100-7b30-11eb-8335-648de354e6a3.png\" alt=\"Screen Shot 2021-03-02 at 8 20 44 AM\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">As you can see, the <code class=\"notranslate\">defaultRichText</code> field has three objects in its array:</p>\n<ol dir=\"auto\">\n<li>a blank line</li>\n<li>a relationship to a Media file, in this case</li>\n<li>\"test\" text</li>\n</ol>\n<p dir=\"auto\">Basically, what the Relationship element does is automatically fetches a relationship from another collection and embeds its data into wherever it sits in the relationship field. This is basically the Contentful way of doing things, where something even as simple as a <code class=\"notranslate\">Button</code> would need to be a separate Content Type within Contentful, and you'd just add a Reference to it within your Rich Text editor.</p>\n<p dir=\"auto\">Are you seeing different results?</p>\n<p dir=\"auto\">Also - your note about adding UI components to build on top of - that is <em><strong>absolutely</strong></em> in our plans. Lots more will be announced about that soon but yes, there would be a ton of value in something like that. More on that soon.</p>",
          "createdAt": "2021-03-02T13:25:28Z"
        },
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<p dir=\"auto\">Hey so I just got back on to this and yes I am seeing the relationship coming back in the data now. I've upgraded so that might be related.</p>\n<p dir=\"auto\">Still one more issue with it though:</p>\n<ol dir=\"auto\">\n<li>Write some text</li>\n<li>Click to beginning of line</li>\n<li>Insert a relationship (or any element with <code class=\"notranslate\">Transform.insertNode</code>)</li>\n<li>Relationship gets inserted at end of the document</li>\n</ol>\n<p dir=\"auto\">This also affects any custom plugins using the example you provide for buttons. The reason is an issue with the current cursor position getting deselected when you click on the toolbar: <a href=\"https://stackoverflow.com/questions/61226933/how-to-add-slate-node-in-particular-empty-space-without-selection\" rel=\"nofollow\">https://stackoverflow.com/questions/61226933/how-to-add-slate-node-in-particular-empty-space-without-selection</a></p>\n<p dir=\"auto\">There is a workaround it seems. However, it's still a problem for any custom plugins because as far as I'm aware, we don't have any direct access to things like the blur events on the editor so I'm unable to implement the workaround myself.</p>",
          "createdAt": "2021-03-24T07:04:23Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> — I am going to look into how this can be accomplished right now. Will report back shortly.</p>\n<p dir=\"auto\">On that note, another thing we are working on improving is <em><strong>how</strong></em> <code class=\"notranslate\">richText</code> relationship documents are populated. Right now, they are only snapshots of the relationship data as it was when the parent document was last saved—but I want to improve that by only saving the <code class=\"notranslate\">slug</code> of the collection and the <code class=\"notranslate\">id</code> of the related document. Then, we could auto-populate related documents on retrieval, ensuring their data is always up to date.</p>\n<p dir=\"auto\">Then, the <code class=\"notranslate\">depth</code> param in REST API would control the population of the related documents, and we'd add a new arg to the the <code class=\"notranslate\">richText</code> GraphQL equivalent.</p>\n<p dir=\"auto\">Obviously this would be a breaking change and would require content migration so if this hits ends up merging in we will make sure to note all repercussions as well as migration strategies.</p>\n<p dir=\"auto\">What do you think about all of this?</p>",
          "createdAt": "2021-03-24T13:18:55Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> — following up. I just opened a PR with a fix from the thread you linked. Had to do a bit more than was mentioned, but it works great! Will do some additional testing tomorrow and then if all goes well, we’ll publish.</p>\n<p dir=\"auto\"><a aria-label=\"Pull request #114\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"840438347\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/114\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/114/hovercard\" href=\"https://github.com/payloadcms/payload/pull/114\">#114</a></p>\n<p dir=\"auto\">Check it out - and let me know what you think about the \"copy\" of relationship data vs. a \"population\"-style approach. That would be next on my list to tackle as I'd rather get a change like that out of the way sooner than later.</p>",
          "createdAt": "2021-03-25T00:58:45Z"
        },
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jmikrut/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmikrut\">@jmikrut</a> thank you very much for the fast response. I do think it should definitely be a population approach. Simply because as a user that's what I was expecting when I see a term like \"relationship\". Also because if you're using typescript and you update a related type you would expect that the data model you're pulling from updated too.</p>\n<p dir=\"auto\">I don't know if this is necessary or if it would be too much work for not much benefit. You could also add an 'embedRichTextRelationship' option to the collection? Again though, I don't see a scenario where I'd rather it was embedded vs populated.</p>\n<blockquote>\n<p dir=\"auto\">I just opened a PR with a fix from the thread you linked.</p>\n</blockquote>\n<p dir=\"auto\">If I'm reading <a aria-label=\"Pull request #114\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"840438347\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/114\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/114/hovercard\" href=\"https://github.com/payloadcms/payload/pull/114\">#114</a> correctly. Does that mean I can get access to <code class=\"notranslate\">editor.blurSection</code> in my custom plugin as well?</p>",
          "createdAt": "2021-03-25T03:39:57Z"
        },
        {
          "author": {
            "name": "jmikrut",
            "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
            "url": "https://github.com/jmikrut"
          },
          "body": "<blockquote>\n<p dir=\"auto\">If I'm reading <a aria-label=\"Pull request #114\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"840438347\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/114\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/payloadcms/payload/pull/114/hovercard\" href=\"https://github.com/payloadcms/payload/pull/114\">#114</a> correctly. Does that mean I can get access to editor.blurSection in my custom plugin as well?</p>\n</blockquote>\n<p dir=\"auto\">Yeah! You can. We will be updating docs with this info today but yes, you have access to it just like as seen in the Button demo. <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji></p>",
          "createdAt": "2021-03-25T11:31:03Z"
        }
      ]
    }
  },
  {
    "title": "Some fields in collection cannot be update",
    "body": "<p dir=\"auto\">Hi i just start payloadcms with <a href=\"https://payloadcms.com/docs/getting-started/installation\" rel=\"nofollow\">quickstart</a> on my windows10 (local machine).  Pick the blog template, connect to my local mongo <code class=\"notranslate\">mongodb://localhost/payloads</code> then run <code class=\"notranslate\">yarn dev</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ yarn dev\nyarn run v1.22.4\n$ nodemon\n[nodemon] 2.0.7\n[nodemon] to restart at any time, enter `rs`\n[nodemon] watching path(s): *.*\n[nodemon] watching extensions: js,mjs,json\n[nodemon] starting `node server.js`\n[03:39:15] INFO (payload): Starting Payload...\n[03:39:20] INFO (payload): Payload Admin URL: http://localhost:3000/admin\n(node:9384) DeprecationWarning: Listening to events on the Db class has been deprecated and will be removed in the next major version.\n[03:39:20] INFO (payload): Connected to Mongo server successfully!\n[03:39:23] INFO (payload): E-mail configured with mock configuration\n[03:39:23] INFO (payload): Log into mock email provider at https://ethereal.email\n[03:39:23] INFO (payload): Mock email account username: XxxaxXXaxax@ethereal.email\n[03:39:23] INFO (payload): Mock email account password: XMKXaxanxaAXxaxadada\nwebpack built f9b9cf5221b841d38de6 in 34192ms\n\"><pre class=\"notranslate\"><code class=\"notranslate\">$ yarn dev\nyarn run v1.22.4\n$ nodemon\n[nodemon] 2.0.7\n[nodemon] to restart at any time, enter `rs`\n[nodemon] watching path(s): *.*\n[nodemon] watching extensions: js,mjs,json\n[nodemon] starting `node server.js`\n[03:39:15] INFO (payload): Starting Payload...\n[03:39:20] INFO (payload): Payload Admin URL: http://localhost:3000/admin\n(node:9384) DeprecationWarning: Listening to events on the Db class has been deprecated and will be removed in the next major version.\n[03:39:20] INFO (payload): Connected to Mongo server successfully!\n[03:39:23] INFO (payload): E-mail configured with mock configuration\n[03:39:23] INFO (payload): Log into mock email provider at https://ethereal.email\n[03:39:23] INFO (payload): Mock email account username: XxxaxXXaxax@ethereal.email\n[03:39:23] INFO (payload): Mock email account password: XMKXaxanxaAXxaxadada\nwebpack built f9b9cf5221b841d38de6 in 34192ms\n\n</code></pre></div>\n<p dir=\"auto\">I was really impressed by how it looked. Unfortunately I encountered a problem. Some fields in the post collection do not change when edited.</p>\n<p dir=\"auto\">In this case I am trying to change the RichText and Tags fields, click save. Return to the posts collection page, click the content again and the edited field will change back to what it was before editing</p>\n<p dir=\"auto\">I'm not sure if it's a bug, something I missed or something the development edition couldn't do. What do you think?</p>\n<p dir=\"auto\">thanks</p>",
    "url": "https://github.com/payloadcms/payload/discussions/70",
    "id": "70",
    "createdAt": "2021-02-16T04:17:47Z",
    "upvotes": 1,
    "commentTotal": 1,
    "author": {
      "name": "yudyananda",
      "avatar": "https://avatars.githubusercontent.com/u/29258979?v=4",
      "url": "https://github.com/yudyananda"
    },
    "comments": [
      {
        "author": {
          "name": "DanRibbens",
          "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
          "url": "https://github.com/DanRibbens"
        },
        "body": "<p dir=\"auto\">I was able to recreate the bug also!</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6434612/108068858-a1c95700-7030-11eb-9c40-c43c36f0b985.png\"><img src=\"https://user-images.githubusercontent.com/6434612/108068858-a1c95700-7030-11eb-9c40-c43c36f0b985.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">I'm looking in to this issue right now. I assume it has to do with the rich text field. I've opened an issue for the bug here: <a aria-label=\"Issue #71\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"809325793\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/71\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/71/hovercard\" href=\"https://github.com/payloadcms/payload/issues/71\">#71</a></p>",
        "createdAt": "2021-02-16T13:46:59Z",
        "replies": [
          {
            "author": {
              "name": "yudyananda",
              "avatar": "https://avatars.githubusercontent.com/u/29258979?v=4",
              "url": "https://github.com/yudyananda"
            },
            "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a>  thanks. Can you also reproduce in tag field? i mean try remove existing or add new tag in the existing post content</p>",
            "createdAt": "2021-02-17T01:59:15Z"
          },
          {
            "author": {
              "name": "DanRibbens",
              "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
              "url": "https://github.com/DanRibbens"
            },
            "body": "<p dir=\"auto\">Hey, I forgot to follow up in here since we closed <a aria-label=\"Issue #71\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"809325793\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/71\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/71/hovercard\" href=\"https://github.com/payloadcms/payload/issues/71\">#71</a>. I was able to reproduce with other fields along with richText back when you reported it. We made some refactors around localization on fields that came up since closing <a aria-label=\"Issue #71\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"809325793\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/71\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/71/hovercard\" href=\"https://github.com/payloadcms/payload/issues/71\">#71</a>. We also improved our test coverage related to this as well. <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji><br>\nGet the updated payload version and all should be working if you haven't already.</p>",
            "createdAt": "2021-03-02T15:44:22Z"
          }
        ]
      }
    ],
    "answer": {
      "author": {
        "name": "DanRibbens",
        "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
        "url": "https://github.com/DanRibbens"
      },
      "body": "<p dir=\"auto\">I was able to recreate the bug also!</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6434612/108068858-a1c95700-7030-11eb-9c40-c43c36f0b985.png\"><img src=\"https://user-images.githubusercontent.com/6434612/108068858-a1c95700-7030-11eb-9c40-c43c36f0b985.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">I'm looking in to this issue right now. I assume it has to do with the rich text field. I've opened an issue for the bug here: <a aria-label=\"Issue #71\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"809325793\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/71\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/71/hovercard\" href=\"https://github.com/payloadcms/payload/issues/71\">#71</a></p>",
      "createdAt": "2021-02-16T13:46:59Z",
      "chosenAt": "2021-02-17T05:39:17Z",
      "chosenBy": "yudyananda",
      "replies": [
        {
          "author": {
            "name": "yudyananda",
            "avatar": "https://avatars.githubusercontent.com/u/29258979?v=4",
            "url": "https://github.com/yudyananda"
          },
          "body": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DanRibbens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DanRibbens\">@DanRibbens</a>  thanks. Can you also reproduce in tag field? i mean try remove existing or add new tag in the existing post content</p>",
          "createdAt": "2021-02-17T01:59:15Z"
        },
        {
          "author": {
            "name": "DanRibbens",
            "avatar": "https://avatars.githubusercontent.com/u/6434612?u=5f70b3b4db315fb8f3619002d95a752759fb8231&v=4",
            "url": "https://github.com/DanRibbens"
          },
          "body": "<p dir=\"auto\">Hey, I forgot to follow up in here since we closed <a aria-label=\"Issue #71\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"809325793\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/71\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/71/hovercard\" href=\"https://github.com/payloadcms/payload/issues/71\">#71</a>. I was able to reproduce with other fields along with richText back when you reported it. We made some refactors around localization on fields that came up since closing <a aria-label=\"Issue #71\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"809325793\" data-permission-text=\"Title is private\" data-url=\"https://github.com/payloadcms/payload/issues/71\" data-hovercard-type=\"issue\" data-hovercard-url=\"/payloadcms/payload/issues/71/hovercard\" href=\"https://github.com/payloadcms/payload/issues/71\">#71</a>. We also improved our test coverage related to this as well. <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji><br>\nGet the updated payload version and all should be working if you haven't already.</p>",
          "createdAt": "2021-03-02T15:44:22Z"
        }
      ]
    }
  },
  {
    "title": "Access control, uploads and (maybe) setting a bad example.",
    "body": "<h3 dir=\"auto\">Questions</h3>\n<ol dir=\"auto\">\n<li>Should access control be mentioned in the <code class=\"notranslate\">Upload</code> section or should collections with Upload have automatic public read access?</li>\n<li>Does setting <code class=\"notranslate\">access.create () =&gt; true</code> as per a couple of examples in the documentation allow public <code class=\"notranslate\">create</code> permissions and if so, should that be discouraged or noted in the documentation?</li>\n</ol>\n<h3 dir=\"auto\">Context</h3>\n<p dir=\"auto\">I was working with uploads and I couldn't figure out why when I was logged out - my media directory wasn't allowing me to see the static assets I uploaded.</p>\n<p dir=\"auto\">I eventually figured out that it was that I need to allow for read permissions on the collection. Something that I couldn't see noted explicitly in the documentation. (Improvement maybe?)</p>\n<p dir=\"auto\">As I was doing that I noticed an example I copied from the documentation earlier on my main \"Pages\" collection (kind of a page builder setup) and it seems to imply public access to creating pages, see bellow.</p>\n<p dir=\"auto\">I don't have time to check right now but if it always returns <code class=\"notranslate\">true</code> does that mean all access is allowed or does it use the default checking function mentioned here: <a href=\"https://payloadcms.com/docs/access-control/overview#default-settings\" rel=\"nofollow\">https://payloadcms.com/docs/access-control/overview#default-settings</a></p>\n<p dir=\"auto\">If doesn't use the default checking method, could that maybe be exposed so I don't have to write it myself and import it on every project where I don't need fine-grain access control?</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  access: {\n    create: () =&gt; true,\n    read: () =&gt; true,\n    update: () =&gt; true,\n    delete: () =&gt; true,\n  },\"><pre class=\"notranslate\"><code class=\"notranslate\">  access: {\n    create: () =&gt; true,\n    read: () =&gt; true,\n    update: () =&gt; true,\n    delete: () =&gt; true,\n  },\n</code></pre></div>",
    "url": "https://github.com/payloadcms/payload/discussions/36",
    "id": "36",
    "createdAt": "2021-01-25T21:39:59Z",
    "upvotes": 1,
    "commentTotal": 2,
    "author": {
      "name": "richardvanbergen",
      "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
      "url": "https://github.com/richardvanbergen"
    },
    "comments": [
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> — great questions! Here are a few answers for you.</p>\n<p dir=\"auto\">TL;DR:</p>\n<ol dir=\"auto\">\n<li>Yes, we can definitely mention access control in our upload docs. Good call. And I don't think we should necessarily open up access control to uploads by default, only because we think it's better to be secure by default and let end-users open up access control at their own discretion.</li>\n<li>Yes, <code class=\"notranslate\">access.create: () =&gt; true</code> allows public creation of documents in the collection. We can add to our docs to make this more explicit as it should definitely be used only very deliberately.</li>\n</ol>\n<p dir=\"auto\">Now, here's a bit more info.</p>\n<p dir=\"auto\">For safety and security reasons, all access control is set to require that a user is logged in by default to do anything with your API. You need to <em><strong>manually</strong></em> set access control to public for everything, including upload data AND uploaded files, to even be readable by anonymous users.</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/access-control/overview#default-settings\" rel=\"nofollow\">This documentation</a> could be much more bold, or perhaps feature a <code class=\"notranslate\">warning</code> banner to call emphasis to this fact. We could also clearly specify this under the <code class=\"notranslate\">Upload</code> section. Good call!</p>\n<p dir=\"auto\">In many cases, setting <code class=\"notranslate\">access.create: () =&gt; true</code> makes perfect sense for APIs. Here are a few different examples:</p>\n<ol dir=\"auto\">\n<li>Have a <code class=\"notranslate\">Customers</code> auth collection, with <code class=\"notranslate\">access.create: () =&gt; true</code>. This would allow end users of your app to register themselves a Customer account. This collection could be totally separate from an <code class=\"notranslate\">Admins</code> auth collection or similar that gets many more permissions that you define, including maybe being used to access the Payload admin panel, whereas the Customers collection would be restricted.</li>\n<li>Have only one <code class=\"notranslate\">Users</code> auth collection, but add a <code class=\"notranslate\">roles</code> field to the collection that features a <code class=\"notranslate\">create</code> access control function requiring the logged in user to already have a protected role of <code class=\"notranslate\">admin</code> or similar. The pattern can be very powerful. This way, anyone can <em><strong>create</strong></em> a User, but only users with <code class=\"notranslate\">admin</code> role can change or set the <code class=\"notranslate\">roles</code> property on any given user.</li>\n<li>Maybe you wanted to have a collection for <code class=\"notranslate\">FormSubmissions</code> or similar, where anyone could post directly to your API through a contact form. That would be a case where <code class=\"notranslate\">access.create: () =&gt; true</code> would be totally appropriate.</li>\n</ol>\n<p dir=\"auto\">But in any case, public <code class=\"notranslate\">create</code> permissions should be carefully used! We can definitely call this out more in docs.</p>\n<blockquote>\n<p dir=\"auto\">I eventually figured out that it was that I need to allow for read permissions on the collection. Something that I couldn't see noted explicitly in the documentation. (Improvement maybe?)</p>\n</blockquote>\n<p dir=\"auto\">Nailed it. We'll add this to the docs for sure. Good call.</p>\n<blockquote>\n<p dir=\"auto\">I don't have time to check right now but if it always returns true does that mean all access is allowed or does it use the default checking function mentioned here: <a href=\"https://payloadcms.com/docs/access-control/overview#default-settings\" rel=\"nofollow\">https://payloadcms.com/docs/access-control/overview#default-settings</a></p>\n</blockquote>\n<p dir=\"auto\">If the function returns <code class=\"notranslate\">true</code>, that means that anyone can perform the action that the function corresponds to. If you leave the access control property undefined, then the default function will be used.</p>\n<blockquote>\n<p dir=\"auto\">If doesn't use the default checking method, could that maybe be exposed so I don't have to write it myself and import it on every project where I don't need fine-grain access control?</p>\n</blockquote>\n<p dir=\"auto\">The default access control method is quite simple, and is below:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const defaultAccess = ({ req: { user } }) =&gt; Boolean(user);\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">defaultAccess</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">req</span>: <span class=\"pl-kos\">{</span> user <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-v\">Boolean</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">We'll definitely add this to the docs for clarity but there should be no real reason you need to use it - as it's set automatically and used. To make use of it, all you need to do is <em><strong>not</strong></em> set any specific access control property!</p>\n<p dir=\"auto\">Does this clear things up for you? All GREAT questions. We appreciate it!</p>",
        "createdAt": "2021-01-25T22:07:39Z",
        "replies": [
          {
            "author": {
              "name": "richardvanbergen",
              "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
              "url": "https://github.com/richardvanbergen"
            },
            "body": "<p dir=\"auto\">Thank you very much, sorry for taking up so much time with such a thorough answer! <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">😄</g-emoji></p>\n<p dir=\"auto\">One more very quick question (just trying to learn the APIs and I wasn't able to find an answer from scanning the code). If I do the following:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"access: {\n   read: () =&gt; true\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">access: {\n   read: () =&gt; true\n}\n</code></pre></div>\n<p dir=\"auto\">Does that mean all other other operations get the default access handler? I.e. is my configuration merged?</p>\n<p dir=\"auto\">Sorry for the long clarification asking again. I get paranoid when it comes to access control and the like.</p>",
            "createdAt": "2021-01-26T00:02:01Z"
          }
        ]
      },
      {
        "author": {
          "name": "jmikrut",
          "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
          "url": "https://github.com/jmikrut"
        },
        "body": "<p dir=\"auto\">Hey Richard, no worries! I wrote that up pretty quickly. At this point our team is so familiar with this code that it just flows. We'll keep working on improving our docs and your questions help us do that.</p>\n<p dir=\"auto\">Your example will <em><strong>only</strong></em> set the access control for the <code class=\"notranslate\">read</code> operations (find, findByID). So, the others (<code class=\"notranslate\">create</code>, <code class=\"notranslate\">update</code>, <code class=\"notranslate\">delete</code>, etc.) will remain set to the default access control which requires a user to be logged in.</p>\n<p dir=\"auto\">It's a GOOD thing to be paranoid about access control. That's a mark of a good developer.</p>",
        "createdAt": "2021-01-26T00:49:34Z",
        "replies": null
      }
    ],
    "answer": {
      "author": {
        "name": "jmikrut",
        "avatar": "https://avatars.githubusercontent.com/u/6651896?u=6e09e00f94f77c5857f92ec3a135d65386002623&v=4",
        "url": "https://github.com/jmikrut"
      },
      "body": "<p dir=\"auto\">Hey <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/richardvanbergen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/richardvanbergen\">@richardvanbergen</a> — great questions! Here are a few answers for you.</p>\n<p dir=\"auto\">TL;DR:</p>\n<ol dir=\"auto\">\n<li>Yes, we can definitely mention access control in our upload docs. Good call. And I don't think we should necessarily open up access control to uploads by default, only because we think it's better to be secure by default and let end-users open up access control at their own discretion.</li>\n<li>Yes, <code class=\"notranslate\">access.create: () =&gt; true</code> allows public creation of documents in the collection. We can add to our docs to make this more explicit as it should definitely be used only very deliberately.</li>\n</ol>\n<p dir=\"auto\">Now, here's a bit more info.</p>\n<p dir=\"auto\">For safety and security reasons, all access control is set to require that a user is logged in by default to do anything with your API. You need to <em><strong>manually</strong></em> set access control to public for everything, including upload data AND uploaded files, to even be readable by anonymous users.</p>\n<p dir=\"auto\"><a href=\"https://payloadcms.com/docs/access-control/overview#default-settings\" rel=\"nofollow\">This documentation</a> could be much more bold, or perhaps feature a <code class=\"notranslate\">warning</code> banner to call emphasis to this fact. We could also clearly specify this under the <code class=\"notranslate\">Upload</code> section. Good call!</p>\n<p dir=\"auto\">In many cases, setting <code class=\"notranslate\">access.create: () =&gt; true</code> makes perfect sense for APIs. Here are a few different examples:</p>\n<ol dir=\"auto\">\n<li>Have a <code class=\"notranslate\">Customers</code> auth collection, with <code class=\"notranslate\">access.create: () =&gt; true</code>. This would allow end users of your app to register themselves a Customer account. This collection could be totally separate from an <code class=\"notranslate\">Admins</code> auth collection or similar that gets many more permissions that you define, including maybe being used to access the Payload admin panel, whereas the Customers collection would be restricted.</li>\n<li>Have only one <code class=\"notranslate\">Users</code> auth collection, but add a <code class=\"notranslate\">roles</code> field to the collection that features a <code class=\"notranslate\">create</code> access control function requiring the logged in user to already have a protected role of <code class=\"notranslate\">admin</code> or similar. The pattern can be very powerful. This way, anyone can <em><strong>create</strong></em> a User, but only users with <code class=\"notranslate\">admin</code> role can change or set the <code class=\"notranslate\">roles</code> property on any given user.</li>\n<li>Maybe you wanted to have a collection for <code class=\"notranslate\">FormSubmissions</code> or similar, where anyone could post directly to your API through a contact form. That would be a case where <code class=\"notranslate\">access.create: () =&gt; true</code> would be totally appropriate.</li>\n</ol>\n<p dir=\"auto\">But in any case, public <code class=\"notranslate\">create</code> permissions should be carefully used! We can definitely call this out more in docs.</p>\n<blockquote>\n<p dir=\"auto\">I eventually figured out that it was that I need to allow for read permissions on the collection. Something that I couldn't see noted explicitly in the documentation. (Improvement maybe?)</p>\n</blockquote>\n<p dir=\"auto\">Nailed it. We'll add this to the docs for sure. Good call.</p>\n<blockquote>\n<p dir=\"auto\">I don't have time to check right now but if it always returns true does that mean all access is allowed or does it use the default checking function mentioned here: <a href=\"https://payloadcms.com/docs/access-control/overview#default-settings\" rel=\"nofollow\">https://payloadcms.com/docs/access-control/overview#default-settings</a></p>\n</blockquote>\n<p dir=\"auto\">If the function returns <code class=\"notranslate\">true</code>, that means that anyone can perform the action that the function corresponds to. If you leave the access control property undefined, then the default function will be used.</p>\n<blockquote>\n<p dir=\"auto\">If doesn't use the default checking method, could that maybe be exposed so I don't have to write it myself and import it on every project where I don't need fine-grain access control?</p>\n</blockquote>\n<p dir=\"auto\">The default access control method is quite simple, and is below:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const defaultAccess = ({ req: { user } }) =&gt; Boolean(user);\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">defaultAccess</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">req</span>: <span class=\"pl-kos\">{</span> user <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-v\">Boolean</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">We'll definitely add this to the docs for clarity but there should be no real reason you need to use it - as it's set automatically and used. To make use of it, all you need to do is <em><strong>not</strong></em> set any specific access control property!</p>\n<p dir=\"auto\">Does this clear things up for you? All GREAT questions. We appreciate it!</p>",
      "createdAt": "2021-01-25T22:07:39Z",
      "chosenAt": "2021-01-26T00:55:26Z",
      "chosenBy": "richardvanbergen",
      "replies": [
        {
          "author": {
            "name": "richardvanbergen",
            "avatar": "https://avatars.githubusercontent.com/u/3854592?u=ac30a4a90849abe8a90b211b228ee0005c2f714d&v=4",
            "url": "https://github.com/richardvanbergen"
          },
          "body": "<p dir=\"auto\">Thank you very much, sorry for taking up so much time with such a thorough answer! <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">😄</g-emoji></p>\n<p dir=\"auto\">One more very quick question (just trying to learn the APIs and I wasn't able to find an answer from scanning the code). If I do the following:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"access: {\n   read: () =&gt; true\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">access: {\n   read: () =&gt; true\n}\n</code></pre></div>\n<p dir=\"auto\">Does that mean all other other operations get the default access handler? I.e. is my configuration merged?</p>\n<p dir=\"auto\">Sorry for the long clarification asking again. I get paranoid when it comes to access control and the like.</p>",
          "createdAt": "2021-01-26T00:02:01Z"
        }
      ]
    }
  }
]