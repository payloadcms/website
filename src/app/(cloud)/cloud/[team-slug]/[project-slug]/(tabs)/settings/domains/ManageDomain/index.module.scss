@use '@scss/common' as *;

:global([data-theme="light"]) {
  .configureDomain {
    background: var(--theme-elevation-100);
  }

  .pendingDomainAlert {
    color: var(--theme-error-550);
    background: var(--theme-error-100);
  }
}

.pending {
  border-left: 1px solid var(--theme-error-500);
}

.linkedDomain {
  display: flex;
  gap: 10px;
  align-items: center;
  text-decoration: none;
}

.externalLinkIcon {
  height: 22px;
  width: auto;
}

.domainInput {
  margin-bottom: var(--base);
}

.domainTitleName {
  color: var(--theme-text);
}

.record {
  width: 100%;
  background: var(--theme-elevation-50);
  padding: var(--base);

  th,
  td {
    padding-right: calc(var(--base) * .5);
    vertical-align: top;
  }

  th {
    @include label;
    font-weight: normal;
    font-family: var(--font-mono);
    text-align: left;
    padding: calc(var(--base) * .25 ) calc(var(--base) * .5 );
  }

  td {
    font-size: 18px;
    padding: 0 calc(var(--base) * .5 );
    white-space: nowrap;
    color: var(--theme-text);
  }
}

.domainActions {
  display: flex;
  gap: var(--base);
  justify-content: flex-end;
  width: 100%;
  margin-top: var(--base);
  padding-top: var(--base);
  border-top: 1px solid var(--theme-border-color);

  .leftActions {
    margin-right: auto;
  }

  .rightActions {
    display: flex;
    gap: inherit;
  }
}

.modalActions {
  display: flex;
  gap: var(--base);
  justify-content: flex-end;
  width: 100%;
  padding-top: var(--base);
  border-top: 1px solid var(--theme-border-color);
}