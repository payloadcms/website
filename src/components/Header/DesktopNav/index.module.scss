@use '@scss/common.scss' as *;

.desktopNav {
  position: relative;
  width: 100%;
  height: var(--header-height);

  &:local() {
    a {
      text-decoration: none;
    }
  }

  @include mobile-header-break {
    display: none;
    visibility: hidden;
  }
}

.active {
  &:before, &:after {
    content: '';
    display: block;
    position: fixed;
    top: var(--page-padding-top);
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -5;
    transition: opacity var(--trans-default) ease-out;
  }

  &:before {
    background: var(--theme-elevation-800);
    opacity: 0.35;
  }

  .dropdown {
    z-index: 1;
  }
}

.grid {
  height: 100%;

  :local(a) {
    text-decoration: none;
  }
}

.background {
  height: var(--header-height);
  position: absolute;
  z-index: -1;
  width: 100%;
  margin: 0 calc(var(--gutter-h) * -1);
  transition: all var(--trans-default) linear;

  &:before, &:after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    transition: all var(--trans-default) linear;
  }

  &:before {
    background: var(--theme-bg);
    opacity: 0.95;
  }
  
  &:after {
    backdrop-filter: blur(5px);
    opacity: 1;
  }
}

.content {
  display: flex;
  position: relative;
  width: 100%;
}

.authNav {
  display: flex;
  align-items: center;

  & > *:not(:last-child) {
    margin-right: calc(var(--base) * 1);
  }
}

.container {
  position: relative;
}

.logo {
  display: flex;
  height: 100%;

  svg {
    height: auto;
  }
}

.tabs {
  position: relative;
  padding: 0;  
  flex-grow: 1;
  white-space: nowrap;
  display: flex;
  flex-direction: row;
  gap: calc(var(--base) * 1.5);
}

.tab {
  @include btnReset;
  cursor: pointer;
  height: 100%;
}

.underline {
  position: absolute;
  bottom: 0;
  transition: all var(--trans-default) linear;
}

.underlineFill {
  height: 2px;
  background-color: var(--theme-elevation-800);
}

.dropdown {
  position: fixed;
  left: 0;
  width: 100%;
  pointer-events: none;
  z-index: -10;
  padding: calc(var(--base) * 2.5) var(--gutter-h);
}

.dropdownItem, .description {
  text-wrap: wrap;
  padding-right: calc(var(--base) * 2);
  opacity: 0;
  transform: translateY(-15px);

  &:last-child {
    padding-right: 0;
  }
}

.activeTab {
  pointer-events: all;
  opacity: 1;

  .description, .dropdownItem {
    opacity: 1;
    transform: translateY(0);

    @for $i from 1 through 5 {
      &:nth-child(#{$i}n) {
        transition: all var(--trans-default) linear;
        transition-delay: #{($i * 0.1)}s;
      }
    }
  }
}

.dropdownItemLink, .dropdownItemDescription {
  display: flex;
  flex-direction: column;
  gap: calc(var(--base) * 2.5);
}

.dropdownItemLink {
  @include h4;
  margin: 0;
  height: 100%;
  justify-content: space-between;
  transition: opacity var(--trans-default) linear;

  &:hover {
    opacity: 0.8;
  }
}

.dropdownItemDescription {
  font-weight: normal;
  font-size: calc(var(--base) * 0.8);
  letter-spacing: normal;
  line-height: 1.5;
}

.tab, .secondaryNavItems {
  font-size: var(--font-header-size);
}

.secondaryNavItems {
  height: 100%; 
  display: flex;
  justify-content: flex-end;
  align-items: center;
  white-space: nowrap;
  gap: calc(var(--base) * 1.25);
  opacity: 0;
  visibility: hidden;
  transition: all var(--trans-default) linear;
}

.show {
  opacity: 1;
  visibility: visible;
}

.payload {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.icons {
  display: flex;
  align-items: center;
  
  > * {
    margin-right: var(--base);
    
    &:last-child {
      margin-right: 0;
    }
  }
}

.discord {
  display: flex;
}

html[data-theme="dark"] {
  .background {
    &:before {
      opacity: 0.9;
    }
  }
  .active {
    &:before {
      background: var(--theme-elevation-50);
      opacity: 0.85;
    }
  }
}