'use client'
import React, { useEffect, useRef, useState } from 'react'
import { motion, useMotionValue } from 'framer-motion'

import classes from './index.module.scss'

interface Payload3DProps {}

const Payload3D: React.FC<Payload3DProps> = props => {
  const containerRef = useRef<HTMLDivElement>(null)
  const mousePositionX = useMotionValue(0)
  const mousePositionY = useMotionValue(0)

  useEffect(() => {
    let intersectionObserver: IntersectionObserver
    let scheduledAnimationFrame = false

    const updateMousePosition = e => {
      if (containerRef.current) {
        const boundingRect = containerRef.current.getBoundingClientRect()
        const x = e.clientX - boundingRect.left - 140
        const y = e.clientY - boundingRect.top - 370

        mousePositionX.set(x)
        mousePositionY.set(y)
      }
      scheduledAnimationFrame = false
    }

    const handleMouseMovement = e => {
      if (scheduledAnimationFrame) {
        return
      }

      scheduledAnimationFrame = true
      requestAnimationFrame(function (timestamp) {
        updateMousePosition(e)
      })
    }

    if (containerRef.current) {
      intersectionObserver = new IntersectionObserver(
        entries => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              window.addEventListener('mousemove', handleMouseMovement)
            } else {
              window.removeEventListener('mousemove', handleMouseMovement)
            }
          })
        },
        {
          rootMargin: '0px',
        },
      )

      intersectionObserver.observe(containerRef.current)
    }

    return () => {
      if (intersectionObserver) intersectionObserver.disconnect()
      window.removeEventListener('mousemove', handleMouseMovement)
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [containerRef])

  return (
    <div ref={containerRef} className={classes.container} data-theme="light">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="1602"
        height="438"
        viewBox="0 0 1602 438"
        fill="none"
        className={classes.payload}
      >
        <path
          d="M62.5271 349.543H63.0271V349.043V225.175H141.092C180.914 225.175 212.518 216.176 234.175 198.283C255.847 180.377 267.486 153.623 267.486 118.275C267.486 82.9286 255.847 56.0563 234.116 38.0322C212.401 20.0207 180.679 10.9035 140.619 10.9035H1H0.5V11.4035V349.043V349.543H1H62.5271ZM432.625 349.131L432.698 349.543H433.117H491.331H491.938L491.822 348.948C488.044 329.605 487.098 311.199 487.098 288.987V196.302C487.098 164.989 477.716 141.546 460.07 125.94C442.435 110.343 416.622 102.643 383.895 102.643C354.233 102.643 329.269 110.23 311.058 124.323C292.839 138.422 281.418 159.003 278.802 184.902L278.746 185.452H279.299H337.513H337.972L338.011 184.995C338.948 173.997 343.392 164.903 350.853 158.556C358.316 152.206 368.842 148.567 382.002 148.567C395.647 148.567 406.87 152.093 414.677 159.195C422.477 166.29 426.937 177.019 426.937 191.573V202.475L355.442 210.464L355.44 210.464C331.026 213.306 309.272 219.706 293.611 231.487C277.924 243.287 268.387 260.46 268.387 284.731C268.387 306.626 276.967 324.148 291.462 336.187C305.948 348.218 326.303 354.745 349.819 354.745C387.254 354.745 417.181 339.904 429.316 313.575C429.435 324.755 430.409 336.736 432.625 349.131ZM499.085 108.318H498.352L498.619 109L592.259 348.572C585.901 365.007 580.155 375.255 573.005 381.412C565.857 387.567 557.241 389.684 544.993 389.684H544.991C539.798 389.684 536.05 389.684 528.999 388.275L528.401 388.156V388.766V434.636V435.059L528.819 435.129C537.365 436.552 548.751 437.5 556.825 437.5L556.83 437.5C582.231 437.263 601.995 431.33 618.257 417.879C634.505 404.44 647.204 383.539 658.576 353.476L752.286 108.997L752.546 108.318H751.819H691.712H691.357L691.24 108.653L627.937 289.433H627.693L561.081 108.645L560.96 108.318H560.612H499.085ZM830.488 349.543H830.988V349.043V1V0.5H830.488H769.907H769.407V1V349.043V349.543H769.907H830.488ZM1277.62 349.131L1277.7 349.543H1278.12H1336.33H1336.94L1336.82 348.948C1333.04 329.605 1332.1 311.199 1332.1 288.987V196.302C1332.1 164.989 1322.72 141.546 1305.07 125.94C1287.43 110.343 1261.62 102.643 1228.89 102.643C1199.23 102.643 1174.27 110.23 1156.06 124.323C1137.84 138.422 1126.42 159.003 1123.8 184.902L1123.75 185.452H1124.3H1182.51H1182.97L1183.01 184.995C1183.95 173.997 1188.39 164.903 1195.85 158.556C1203.31 152.206 1213.84 148.567 1227 148.567C1240.65 148.567 1251.87 152.093 1259.68 159.195C1267.48 166.29 1271.94 177.019 1271.94 191.573V202.475L1200.44 210.464L1200.44 210.464C1176.03 213.306 1154.27 219.706 1138.61 231.487C1122.92 243.287 1113.39 260.46 1113.39 284.731C1113.39 306.626 1121.97 324.148 1136.46 336.187C1150.95 348.218 1171.3 354.745 1194.82 354.745C1232.25 354.745 1262.18 339.904 1274.32 313.575C1274.43 324.755 1275.41 336.736 1277.62 349.131ZM1540.87 349.043V349.543H1541.37H1601H1601.5V349.043V1V0.5H1601H1540.42H1539.92V1V145.913C1527.95 122.458 1500.8 102.643 1464.22 102.643C1432.6 102.643 1405.96 115.594 1387.22 137.874C1368.5 160.147 1357.7 191.715 1357.7 228.931C1357.7 266.382 1368.5 297.95 1387.22 320.165C1405.96 342.386 1432.6 355.218 1464.22 355.218C1499.9 355.218 1528.4 336.268 1540.87 312.817V349.043ZM135.413 174.995H63.0271V61.5564H135.413C158.552 61.5564 175.809 66.159 187.277 75.5122C198.724 84.8489 204.486 98.9907 204.486 118.275C204.486 137.322 198.725 151.466 187.275 160.862C175.807 170.275 158.549 174.995 135.413 174.995ZM426.937 255.885C426.937 274.655 419.547 288.58 408.307 297.822C397.054 307.074 381.91 311.658 366.384 311.658C354.39 311.658 345.171 308.721 338.959 303.5C332.758 298.289 329.494 290.754 329.494 281.421C329.494 275.22 330.694 270.252 332.865 266.231C335.036 262.211 338.193 259.109 342.154 256.665C350.097 251.763 361.237 249.525 374.017 247.869C374.018 247.869 374.019 247.869 374.02 247.869L426.937 241.786V255.885ZM981.078 355.218C1016.69 355.218 1047.23 343.237 1068.87 321.436C1090.51 299.635 1103.21 268.054 1103.21 228.931C1103.21 190.043 1090.51 158.463 1068.87 136.603C1047.23 114.743 1016.69 102.643 981.078 102.643C945.466 102.643 914.923 114.743 893.283 136.603C871.642 158.463 858.943 190.043 858.943 228.931C858.943 268.054 871.642 299.635 893.283 321.436C914.924 343.237 945.467 355.218 981.078 355.218ZM981.078 309.294C961.58 309.294 946.471 301.792 936.221 288.038C925.954 274.264 920.524 254.168 920.524 228.931C920.524 203.931 925.954 183.834 936.221 170C946.473 156.186 961.583 148.567 981.078 148.567C1000.33 148.567 1015.44 156.185 1025.76 170.001C1036.08 183.836 1041.63 203.933 1041.63 228.931C1041.63 254.166 1036.08 274.262 1025.76 288.037C1015.45 301.793 1000.34 309.294 981.078 309.294ZM1271.94 255.885C1271.94 274.655 1264.55 288.58 1253.31 297.822C1242.05 307.074 1226.91 311.658 1211.38 311.658C1199.39 311.658 1190.17 308.721 1183.96 303.5C1177.76 298.289 1174.49 290.754 1174.49 281.421C1174.49 275.22 1175.69 270.252 1177.86 266.231C1180.03 262.211 1183.19 259.109 1187.15 256.665C1195.1 251.763 1206.24 249.525 1219.02 247.869C1219.02 247.869 1219.02 247.869 1219.02 247.869L1271.94 241.786V255.885ZM1541.34 224.675V233.187C1541.34 256.522 1535.79 275.673 1525.53 288.977C1515.28 302.266 1500.28 309.767 1481.26 309.767C1461.77 309.767 1446.42 301.915 1435.93 287.919C1425.42 273.905 1419.76 253.689 1419.76 228.931C1419.76 204.41 1425.42 184.193 1435.93 170.119C1446.42 156.062 1461.77 148.094 1481.26 148.094C1500.28 148.094 1515.28 155.595 1525.53 168.884C1535.79 182.188 1541.34 201.339 1541.34 224.675Z"
          stroke="#333333"
          strokeOpacity="1"
          strokeWidth="1"
        />
      </svg>

      <div className={classes.mask}>
        <div className={classes.noise} />
        <motion.div
          className={classes.gradient}
          style={{ left: mousePositionX, top: mousePositionY }}
        />
      </div>
    </div>
  )
}

export default Payload3D
