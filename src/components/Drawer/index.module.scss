@use "@scss/common" as *;

.drawer {
  display: flex;
  overflow: hidden;
  position: fixed;
  height: 100vh;
  background-color: transparent;
}

.blurBG {
  @include blur-bg();
  position: absolute;
  z-index: 1;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  opacity: 0;
  transition: all 300ms ease-out;
}

.content {
  opacity: 0;
  transform: translateX(#{calc(var(--base) * 4)});
  position: relative;
  z-index: 2;
  width: 100%;
  transition: all 300ms ease-out;
  overflow: hidden;
  background-color: var(--theme-elevation-50);
}

.contentChildren {
  position: relative;
  z-index: 1;
  overflow: auto;
  height: 100%;
  padding:  calc(var(--base) * 4) calc(var(--base) * 4);

  @include mid-break {
    padding:  calc(var(--base) * 2) var(--base) 0;
  }
}

.isOpen {
  &:local() {
    .content,
    .blurBG,
    .close {
      opacity: 1;
    }

    .close {
      transition: opacity 300ms ease-in-out;
    }

    .content {
      transform: translateX(0);
    }
  }
}

.close {
  position: relative;
  z-index: 2;
  flex-shrink: 0;
  text-indent: -9999px;
  background: rgba(0, 0, 0, 0.08);
  cursor: pointer;
  opacity: 0;
  will-change: opacity;
  transition: none;
  transition-delay: 0ms;
  border: none;
  outline: none;

  &:active,
  &:focus {
    outline: 0;
  }
}

.header {
  display: flex;
  align-items: flex-start;
  margin-bottom: calc(var(--base) * 2);
  width: 100%;
}

.title {
  margin: 0;
  flex-grow: 1;
}

.headerClose {
  border: 0;
  background-color: transparent;
  padding: 0;
  cursor: pointer;
  overflow: hidden;
  position: relative;
  top: 14px;
  
  @include mid-break {
    top: 2px;
  }
}