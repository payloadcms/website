@use '@scss/common.scss' as *;

.homeHero {
  position: relative;
  background: var(--color-base-0);
}

.background {
  position: absolute;
  z-index: 1;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: hidden;

  img {
    object-fit: cover;
    width: 100%;
  }

  @include mid-break {
    display: none;
  }
}

.imagesContainerWrapper {
  position: relative;
  height: 100%;
}

.laptopMedia {
  width: 100%;
  position: absolute;
  bottom: 0;
  z-index: 1;

  @include mid-break {
    left: calc(-1 * var(--base) * 10);
    width: calc(100% + var(--base) * 10);
  }

  @include small-break {
    left: calc(-1 * var(--base) * 6);
    width: calc(100% + var(--base) * 8);
  }
}

.pedestalMaskedImage {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  mask-image: url('/images/pedestal-mask.svg');
  mask-mode: alpha;
  mask-size: cover;
  mask-position: center;
  mask-repeat: no-repeat;
  z-index: 2;

  @include mid-break {
    left: calc(-1 * var(--base) * 10);
    width: calc(100% + var(--base) * 10);
  }

  @include small-break {
    left: calc(-1 * var(--base) * 6);
    width: calc(100% + var(--base) * 8);
  }
}

.featureVideoMask {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  mask-image: url('/images/screen-mask.svg');
  mask-mode: alpha;
  mask-size: cover;
  mask-position: center;
  mask-repeat: no-repeat;
  z-index: 0;

  video {
    transform: rotate(-8deg) skew(-8deg) scale(0.42, 0.455) translate(40%, -38.5%);
  }

  @include mid-break {
    left: calc(-1 * var(--base) * 10);
    width: calc(100% + var(--base) * 10);
  }

  @include small-break {
    left: calc(-1 * var(--base) * 6);
    width: calc(100% + var(--base) * 8);
  }
}

.contentWrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: calc(var(--base) * 8);

  @include large-break {
    gap: calc(var(--base) * 6);
  }

  @include large-mid-break {
    gap: calc(var(--base) * 3);
  }

  @include mid-break {
    gap: unset;
  }
}

.primaryContentWrap {
  display: flex;
  align-items: center;
  min-height: 85vh;

  @include two-extra-large-break {
    min-height: 80vh;
  }

  @include extra-large-break {
    min-height: 60vh;
  }

  @include large-break {
    min-height: 48vh;
  }

  @include large-mid-break {
    min-height: 45vh;
  }

  @include mid-break {
    min-height: unset;
    padding-top: calc(var(--base) * 7.5);
  }

  @include extra-large-break-ht {
    @include two-extra-large-break {
      min-height: 95vh;
    }

    @include extra-large-break {
      min-height: 68vh;
    }

    @include large-break {
      min-height: 55vh;
    }

    @include large-mid-break {
      min-height: 55vh;
    }

    @include mid-break {
      min-height: unset;
    }
  }

  @include large-break-ht {
    @include two-extra-large-break {
      min-height: 110vh;
    }

    @include extra-large-break {
      min-height: 75vh;
    }

    @include large-break {
      min-height: 65vh;
    }

    @include large-mid-break {
      min-height: 60vh;
    }

    @include mid-break {
      min-height: unset;
    }
  }
}

.primaryContent {
  position: relative;
  z-index: 2;
  grid-template-rows: auto min-content;

  @include large-mid-break {
    padding-top: calc(var(--base) * 4);
  }

  @include mid-break {
    padding-top: 0;
  }
}

.secondaryContentWrap {
  position: relative;
  z-index: 2;
  align-items: center;

  @include mid-break {
    margin-top: calc(-1 * (var(--base) * 12));
  }

  @include small-break {
    margin-top: calc(-1 * (var(--base) * 10));
  }

  @include extra-small-break {
    margin-top: calc(-1 * (var(--base) * 8));
  }
}

.mobileSecondaryBackgroundGrid {
  display: none;

  @include mid-break {
    display: grid;
    width: 100%;
    left: 0;
  }
}

.mobileSecondaryBackground {
  display: none;

  @include mid-break {
    display: block;
    position: absolute;
    top: 0;
    left: calc(var(--gutter-h) * -1);
    height: 100%;
    width: calc(100% + (var(--gutter-h) * 2));
    background: linear-gradient(to top, rgba(0, 0, 0) 0%, rgba(0, 0, 0) 90%, rgba(0, 0, 0, 0) 100%);
    z-index: -1;
  }
}

.secondaryContent {
  @include mid-break {
    order: 1;
    z-index: 1;
    margin-top: calc(var(--base) * 2);
  }
}

.logoWrapper {
  @include mid-break {
    order: 0;
  }
}

.richTextHeading {
  margin-bottom: calc(var(--base) * 2);

  @include extra-large-break {
    h1 {
      font-size: calc(var(--base) * 3);
    }
  }

  @include large-break {
    h1 {
      font-size: calc(var(--base) * 3);
    }
  }

  @include mid-break {
    margin-bottom: calc(var(--base) * 1.5);
  }
}

.secondaryRichTextHeading {
  margin-bottom: calc(var(--base) * 1.5);

  h2 {
    @include h3;
  }
}

.richTextHeading, .secondaryRichTextHeading {
  max-width: 75%;

  @include mid-break {
    max-width: 100%;
  }
}

.richTextDescription, .secondaryRichTextDescription {
  max-width: 50%;
  margin-bottom: calc(var(--base) * 2);

  @include mid-break {
    max-width: 100%;
  }
}

.primaryButtons,
.secondaryButtons {
  list-style: none;
  margin: 0;
  padding: 0;
  max-width: 50%;

  @include mid-break {
    max-width: 100%;
  }
}

.primaryButtons {
  @include mid-break {
    margin-bottom: calc(var(--base) * 2);
  }
}

.mobileMediaWrapper {
  display: none;

  @include mid-break {
    display: block;
    position: relative;
    overflow: hidden;
    width: calc(100% + (var(--gutter-h) * 2));
    left: calc(var(--gutter-h) * -1);

    img, video {
      height: 100%;
    }
  }
}

.mobilePedestalBackgroundGrid {
  @include mid-break {
    left: calc(calc(var(--base) * 10) + var(--gutter-h));
    width: calc(calc(100% - var(--base) * 10) - var(--gutter-h) * 2)
  }

  @include small-break {
    left: calc(calc(var(--base) * 6) + var(--gutter-h));
    width: calc(calc(100% - var(--base) * 8) - var(--gutter-h) * 2)
  }
}

// Need to fake this padding so that it doesn't mess with the positioning of the rest of the component
.paddingTopWrapper {
  background: var(--color-base-0);
  padding-top: var(--page-padding-top);

  @include small-break {
    padding-top: 0;
  }
}

.paddingTop {
  position: relative;
  height: calc(var(--wrapper-padding-top));
}

.paddingBottom {
  position: relative;
  background: var(--color-base-1000);
  margin-top: -1px;
  height: var(--wrapper-padding-bottom);
}