@use '@scss/common.scss' as *;

$transCurve: cubic-bezier(0.4, 0, 0.2, 1);

$curve: cubic-bezier(.165, .84, .44, 1);

.button {
  all: unset;
  cursor: pointer;
  box-sizing: border-box;
  display: inline-flex;
  position: relative;
  padding: var(--button-padding);

  --button-padding: calc(var(--base) * 0.5) var(--base);
  height: calc(var(--base) * 2.5); // match input height

  &:focus-visible {
    @include outline;
  }

  &:disabled {
    cursor: not-allowed;
    opacity: .25;
  }
}

.size--pill {
  @include small;
  line-height: calc(var(--base) * 1.25);
  height: unset;
  border-radius: 3px;
  padding: 0 6px;
  font-weight: bold;

  .spacer {
    width: calc(var(--base) * 0.75);
  }

  &.appearance--default {
    background-color: var(--theme-elevation-250);
    color: var(--theme-elevation-1000);
    min-width: unset;
    padding: 0 6px;

    &:focus-visible, &:hover {
      background-color: var(--theme-elevation-200);
      color: var(--theme-elevation-1000);
    }
  }
}


.full-width {
  width: 100%;
}

.mobile-full-width {
  @include mid-break {
    width: 100%;
  }
}

:global([data-theme="light"]) {
  .appearance {
    &--primary {
      &:focus-visible {
        border-color: var(--theme-elevation-950);
      }
    }
  }
}

.appearance {
  &--default {
    display: inline-flex;
    min-width: calc(var(--base) * 12);
    border: 1px solid var(--theme-elevation-250);
    position: relative;
    overflow: hidden;
    padding: unset;
    color: var(--theme-elevation-1000);
    height: unset;
    background-image: linear-gradient(to right, var(--theme-elevation-1000) 50%, var(--theme-elevation-100) 50%);
    background-size: 200% 100%;
    background-position: right bottom;
    transition: background-position 550ms $curve;

    .content {
      padding: calc(var(--base) * 1.5) var(--base);

      .label {
        color: transparent;
        background-image: linear-gradient(to right, var(--theme-elevation-100) 50%, var(--theme-elevation-1000) 50%);
        background-size: 200% 100%;
        background-position: right bottom;
        -webkit-background-clip: text;
        background-clip: text;
        transition: background-position 450ms $curve;
        margin: 0;
      }

      .icon--arrow {
        transition: background-position 550ms $curve, color 550ms $curve;
      }
    }

    &:hover {
      background-position: left bottom;
      color: var(--theme-elevation-100);

      .content {
        .label, .icon--arrow {
          background-position: left bottom;
        }
      }

      .icon--arrow {
        transform: none;
      }
    }
  }

  &--primary {
    border: 1px solid var(--theme-elevation-900);
    color: var(--theme-bg);
    background-color: var(--theme-elevation-950);

    &:focus-visible, &:hover {
      color: var(--theme-bg);
      border-color: currentColor;
      background-color: var(--theme-elevation-700);
    }
  }

  &--secondary {
    border: 1px solid;
    border-color: var(--theme-elevation-500);

    &:focus-visible {
      color: var(--theme-elevation-850);
      background-color: var(--theme-elevation-150);
    }

    &.isHovered {
      border-color: var(--theme-elevation-900);

      @include mid-break {
        border-color: var(--theme-elevation-500);
      }
    }
  }

  &--danger {
    background-color: var(--theme-error-500);
    color: var(--theme-error-50);

    &:focus-visible, &:hover {
      background-color: var(--theme-error-450);
    }
  }

  &--success {
    color: var(--color-success-500);
    border: 1px solid;
    border-color: var(--color-success-500);

    &:focus-visible {
      color: var(--theme-elevation-850);
      background-color: var(--color-success-500);
    }

    &.isHovered {
      color: var(--color-success-250);
      border-color: var(--color-success-250);

      @include mid-break {
        border-color: var(--theme-elevation-500);
      }
    }
  }

  &--warning {
    color: var(--color-warning-500);
    border: 1px solid;
    border-color: var(--color-warning-500);

    &:focus-visible {
      color: var(--theme-elevation-850);
       background-color: var(--color-warning-500);
    }

    &.isHovered {
      border-color: var(--theme-elevation-900);

      @include mid-break {
        border-color: var(--theme-elevation-500);
      }
    }
  }

  &--text {
    display: inline-flex;
    padding: unset;
    height: unset;
    border-radius: 3px;
    border: 1px solid transparent;

    &:focus-visible {
      color: var(--theme-elevation-600);
      background-color: var(--theme-elevation-150);
    }
  }
}

.gradient {
  opacity: 0;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  transition: opacity #{50}ms $transCurve;
}

.isHovered {
  &:local() {
    .icon--arrow {
      transform: translate3d(2px, -2px, 0);

      @include mid-break {
        transform: translate3d(0, 0, 0);
      }
    }
  }
}

.content {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
}

.label {
  width: 100%;
  flex-grow: 1;
  flex-shrink: 1;
  display: flex;
  align-items: center;
}

.size--default .label-mono {
  @include label;
}

.label-centered {
  justify-content: center;
  text-align: center;
}

.spacer {
  width: var(--base);
  height: var(--base);
}

.icon {
  position: relative;
  transition-duration: 50ms;
  transition-timing-function: $transCurve;
  flex-shrink: 0;
  transform: translate3d(0, 0, 0);
}

:global([data-theme="light"]) {
  .appearance {
    &--default {
      background-image: linear-gradient(to right, var(--theme-elevation-900) 50%, var(--theme-elevation-0) 50%);
      color: var(--theme-elevation-900);

      &:hover {
        color: var(--theme-elevation-0);
      }
    }
  }
}
